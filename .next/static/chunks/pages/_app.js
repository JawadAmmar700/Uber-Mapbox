(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/defineProperty.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _defineProperty; }
/* harmony export */ });
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/extends.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _extends; }
/* harmony export */ });
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/objectSpread2.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _objectSpread2; }
/* harmony export */ });
/* harmony import */ var _defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defineProperty.js */ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js");


function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        (0,_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__.default)(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _objectWithoutPropertiesLoose; }
/* harmony export */ });
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

/***/ }),

/***/ "./node_modules/@badrap/bar-of-progress/dist/index.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@badrap/bar-of-progress/dist/index.mjs ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(e){var t=function(e,t){Object.keys(t).forEach(function(o){e[o]=t[o]})},o={size:2,color:"#29e",className:"bar-of-progress",delay:80};e&&t(o,e);var a,i,s={position:"fixed",top:0,left:0,margin:0,padding:0,border:"none",borderRadius:0,backgroundColor:"currentColor",zIndex:1e4,height:"number"==typeof o.size?o.size+"px":o.size,color:o.color,opacity:0,width:"0%"},n={opacity:1,width:"99%",transition:"width 10s cubic-bezier(0.1, 0.05, 0, 1)"},l={opacity:0,width:"100%",transition:"width 0.1s ease-out, opacity 0.5s ease 0.2s"},c={opacity:.4,boxShadow:"3px 0 8px",height:"100%"};this.start=function(){i&&i.parentNode&&i.parentNode.removeChild(i),(i=document.body.appendChild(document.createElement("div"))).className=o.className+" stopped",t(i.style,s);var e=i.appendChild(document.createElement("div"));e.className="glow",t(e.style,c),null!=a&&clearTimeout(a),a=setTimeout(function(){a=null,i.className=o.className+" started",t(i.style,n)},o.delay),i.scrollTop=0},this.finish=function(){null!=a&&(clearTimeout(a),a=null),i&&(i.className=o.className+" finished",t(i.style,l))}}
//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var C_D_J_S_P_React_Next_Next_Mapbox_mapbox_node_modules_next_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty */ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../styles/globals.css */ "./styles/globals.css");
/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _material_tailwind_react_tailwind_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @material-tailwind/react/tailwind.css */ "./node_modules/@material-tailwind/react/tailwind.css");
/* harmony import */ var _material_tailwind_react_tailwind_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_material_tailwind_react_tailwind_css__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var _redux_app_store__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../redux/app/store */ "./redux/app/store.js");
/* harmony import */ var _badrap_bar_of_progress__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @badrap/bar-of-progress */ "./node_modules/@badrap/bar-of-progress/dist/index.mjs");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/router */ "./node_modules/next/router.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_7__);
/* module decorator */ module = __webpack_require__.hmd(module);


var _jsxFileName = "C:\\D_J_S_P\\React,Next\\Next_Mapbox\\mapbox\\pages\\_app.js";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,C_D_J_S_P_React_Next_Next_Mapbox_mapbox_node_modules_next_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }







var progress = new _badrap_bar_of_progress__WEBPACK_IMPORTED_MODULE_6__.default({
  size: 2,
  color: "#38a169",
  className: "bar-of-progress",
  delay: 70
});
next_router__WEBPACK_IMPORTED_MODULE_7___default().events.on("routeChangeStart", progress.start);
next_router__WEBPACK_IMPORTED_MODULE_7___default().events.on("routeChangeComplete", progress.finish);
next_router__WEBPACK_IMPORTED_MODULE_7___default().events.on("routeChangeError", progress.finish);

function MyApp(_ref) {
  var Component = _ref.Component,
      pageProps = _ref.pageProps;
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_redux__WEBPACK_IMPORTED_MODULE_4__.Provider, {
    store: _redux_app_store__WEBPACK_IMPORTED_MODULE_5__.default,
    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(Component, _objectSpread({}, pageProps), void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 22,
      columnNumber: 7
    }, this)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 21,
    columnNumber: 5
  }, this);
}

_c = MyApp;
/* harmony default export */ __webpack_exports__["default"] = (MyApp);

var _c;

$RefreshReg$(_c, "MyApp");

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }


/***/ }),

/***/ "./redux/app/store.js":
/*!****************************!*\
  !*** ./redux/app/store.js ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @reduxjs/toolkit */ "./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js");
/* harmony import */ var _features_UserSlice__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../features/UserSlice */ "./redux/features/UserSlice.js");
/* harmony import */ var _features_todoSlice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../features/todoSlice */ "./redux/features/todoSlice.js");
/* module decorator */ module = __webpack_require__.hmd(module);



/* harmony default export */ __webpack_exports__["default"] = ((0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__.configureStore)({
  reducer: {
    User: _features_UserSlice__WEBPACK_IMPORTED_MODULE_0__.default,
    Todo: _features_todoSlice__WEBPACK_IMPORTED_MODULE_1__.default
  }
}));

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }


/***/ }),

/***/ "./redux/features/UserSlice.js":
/*!*************************************!*\
  !*** ./redux/features/UserSlice.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UserSlice": function() { return /* binding */ UserSlice; },
/* harmony export */   "Add": function() { return /* binding */ Add; },
/* harmony export */   "Remove": function() { return /* binding */ Remove; },
/* harmony export */   "Check": function() { return /* binding */ Check; },
/* harmony export */   "selectUser": function() { return /* binding */ selectUser; }
/* harmony export */ });
/* harmony import */ var C_D_J_S_P_React_Next_Next_Mapbox_mapbox_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/regenerator */ "./node_modules/next/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var C_D_J_S_P_React_Next_Next_Mapbox_mapbox_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(C_D_J_S_P_React_Next_Next_Mapbox_mapbox_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var C_D_J_S_P_React_Next_Next_Mapbox_mapbox_node_modules_next_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @reduxjs/toolkit */ "./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);
/* module decorator */ module = __webpack_require__.hmd(module);




var UserSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.createSlice)({
  name: "User",
  initialState: {
    user: null
  },
  reducers: {
    Add: function Add(state, action) {
      state.user = action.payload;

      var fetch = /*#__PURE__*/function () {
        var _ref = (0,C_D_J_S_P_React_Next_Next_Mapbox_mapbox_node_modules_next_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__.default)( /*#__PURE__*/C_D_J_S_P_React_Next_Next_Mapbox_mapbox_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {
          return C_D_J_S_P_React_Next_Next_Mapbox_mapbox_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _context.next = 2;
                  return axios__WEBPACK_IMPORTED_MODULE_2___default().post("api/createUser", {
                    email: action.payload.email
                  }).then(function (res) {
                    return console.log(res);
                  })["catch"](function (err) {
                    return console.log(err);
                  });

                case 2:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        return function fetch() {
          return _ref.apply(this, arguments);
        };
      }();

      fetch();
    },
    Remove: function Remove(state, action) {
      state.user = null;
    },
    Check: function Check(state, action) {
      state.user = action.payload;
    }
  }
});
var _UserSlice$actions = UserSlice.actions,
    Add = _UserSlice$actions.Add,
    Remove = _UserSlice$actions.Remove,
    Check = _UserSlice$actions.Check; // The function below is called a thunk and allows us to perform async logic. It
// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This
// will call the thunk with the `dispatch` function as the first argument. Async
// code can then be executed and other actions can be dispatched
// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state) => state.counter.value)`


var selectUser = function selectUser(state) {
  return state.User.user;
};
/* harmony default export */ __webpack_exports__["default"] = (UserSlice.reducer);

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }


/***/ }),

/***/ "./redux/features/todoSlice.js":
/*!*************************************!*\
  !*** ./redux/features/todoSlice.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TodoReducer": function() { return /* binding */ TodoReducer; },
/* harmony export */   "SetTodo": function() { return /* binding */ SetTodo; },
/* harmony export */   "selectTodo": function() { return /* binding */ selectTodo; }
/* harmony export */ });
/* harmony import */ var C_D_J_S_P_React_Next_Next_Mapbox_mapbox_node_modules_next_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js");
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @reduxjs/toolkit */ "./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);
/* module decorator */ module = __webpack_require__.hmd(module);



var TodoReducer = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__.createSlice)({
  name: 'Todo',
  initialState: {
    todo: []
  },
  reducers: {
    SetTodo: function SetTodo(state, action) {
      state.todo = (0,C_D_J_S_P_React_Next_Next_Mapbox_mapbox_node_modules_next_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__.default)(action.payload).reverse();
    }
  }
});
var SetTodo = TodoReducer.actions.SetTodo; // The function below is called a thunk and allows us to perform async logic. It
// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This
// will call the thunk with the `dispatch` function as the first argument. Async
// code can then be executed and other actions can be dispatched
// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state) => state.counter.value)`


var selectTodo = function selectTodo(state) {
  return state.Todo.todo;
};
/* harmony default export */ __webpack_exports__["default"] = (TodoReducer.reducer);

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }


/***/ }),

/***/ "./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MiddlewareArray": function() { return /* binding */ MiddlewareArray; },
/* harmony export */   "configureStore": function() { return /* binding */ configureStore; },
/* harmony export */   "createAction": function() { return /* binding */ createAction; },
/* harmony export */   "createAsyncThunk": function() { return /* binding */ createAsyncThunk; },
/* harmony export */   "createDraftSafeSelector": function() { return /* binding */ createDraftSafeSelector; },
/* harmony export */   "createEntityAdapter": function() { return /* binding */ createEntityAdapter; },
/* harmony export */   "createImmutableStateInvariantMiddleware": function() { return /* binding */ createImmutableStateInvariantMiddleware; },
/* harmony export */   "createNextState": function() { return /* reexport safe */ immer__WEBPACK_IMPORTED_MODULE_2__.default; },
/* harmony export */   "createReducer": function() { return /* binding */ createReducer; },
/* harmony export */   "createSelector": function() { return /* reexport safe */ reselect__WEBPACK_IMPORTED_MODULE_1__.createSelector; },
/* harmony export */   "createSerializableStateInvariantMiddleware": function() { return /* binding */ createSerializableStateInvariantMiddleware; },
/* harmony export */   "createSlice": function() { return /* binding */ createSlice; },
/* harmony export */   "current": function() { return /* reexport safe */ immer__WEBPACK_IMPORTED_MODULE_2__.current; },
/* harmony export */   "findNonSerializableValue": function() { return /* binding */ findNonSerializableValue; },
/* harmony export */   "freeze": function() { return /* reexport safe */ immer__WEBPACK_IMPORTED_MODULE_2__.freeze; },
/* harmony export */   "getDefaultMiddleware": function() { return /* binding */ getDefaultMiddleware; },
/* harmony export */   "getType": function() { return /* binding */ getType; },
/* harmony export */   "isAllOf": function() { return /* binding */ isAllOf; },
/* harmony export */   "isAnyOf": function() { return /* binding */ isAnyOf; },
/* harmony export */   "isAsyncThunkAction": function() { return /* binding */ isAsyncThunkAction; },
/* harmony export */   "isDraft": function() { return /* reexport safe */ immer__WEBPACK_IMPORTED_MODULE_2__.isDraft; },
/* harmony export */   "isFulfilled": function() { return /* binding */ isFulfilled; },
/* harmony export */   "isImmutableDefault": function() { return /* binding */ isImmutableDefault; },
/* harmony export */   "isPending": function() { return /* binding */ isPending; },
/* harmony export */   "isPlain": function() { return /* binding */ isPlain; },
/* harmony export */   "isPlainObject": function() { return /* binding */ isPlainObject; },
/* harmony export */   "isRejected": function() { return /* binding */ isRejected; },
/* harmony export */   "isRejectedWithValue": function() { return /* binding */ isRejectedWithValue; },
/* harmony export */   "miniSerializeError": function() { return /* binding */ miniSerializeError; },
/* harmony export */   "nanoid": function() { return /* binding */ nanoid; },
/* harmony export */   "original": function() { return /* reexport safe */ immer__WEBPACK_IMPORTED_MODULE_2__.original; },
/* harmony export */   "unwrapResult": function() { return /* binding */ unwrapResult; }
/* harmony export */ });
/* harmony import */ var immer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! immer */ "./node_modules/immer/dist/immer.esm.js");
/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! redux */ "./node_modules/redux/es/redux.js");
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in redux__WEBPACK_IMPORTED_MODULE_0__) if(["default","MiddlewareArray","configureStore","createAction","createAsyncThunk","createDraftSafeSelector","createEntityAdapter","createImmutableStateInvariantMiddleware","createNextState","createReducer","createSelector","createSerializableStateInvariantMiddleware","createSlice","current","findNonSerializableValue","freeze","getDefaultMiddleware","getType","isAllOf","isAnyOf","isAsyncThunkAction","isDraft","isFulfilled","isImmutableDefault","isPending","isPlain","isPlainObject","isRejected","isRejectedWithValue","miniSerializeError","nanoid","original","unwrapResult"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return redux__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var reselect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! reselect */ "./node_modules/reselect/es/index.js");
/* harmony import */ var redux_thunk__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! redux-thunk */ "./node_modules/redux-thunk/es/index.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = function (obj, key, value) { return key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value: value }) : obj[key] = value; };
var __spreadValues = function (a, b) {
    for (var prop in b || (b = {}))
        if (__hasOwnProp.call(b, prop))
            __defNormalProp(a, prop, b[prop]);
    if (__getOwnPropSymbols)
        for (var _i = 0, _b = __getOwnPropSymbols(b); _i < _b.length; _i++) {
            var prop = _b[_i];
            if (__propIsEnum.call(b, prop))
                __defNormalProp(a, prop, b[prop]);
        }
    return a;
};
var __spreadProps = function (a, b) { return __defProps(a, __getOwnPropDescs(b)); };
var __async = function (__this, __arguments, generator) {
    return new Promise(function (resolve, reject) {
        var fulfilled = function (value) {
            try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            }
        };
        var rejected = function (value) {
            try {
                step(generator.throw(value));
            }
            catch (e) {
                reject(e);
            }
        };
        var step = function (x) { return x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected); };
        step((generator = generator.apply(__this, __arguments)).next());
    });
};
// src/index.ts




// src/createDraftSafeSelector.ts


var createDraftSafeSelector = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var selector = reselect__WEBPACK_IMPORTED_MODULE_1__.createSelector.apply(void 0, args);
    var wrappedSelector = function (value) {
        var rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            rest[_i - 1] = arguments[_i];
        }
        return selector.apply(void 0, __spreadArray([(0,immer__WEBPACK_IMPORTED_MODULE_2__.isDraft)(value) ? (0,immer__WEBPACK_IMPORTED_MODULE_2__.current)(value) : value], rest));
    };
    return wrappedSelector;
};
// src/configureStore.ts

// src/devtoolsExtension.ts

var composeWithDevTools = typeof window !== "undefined" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : function () {
    if (arguments.length === 0)
        return void 0;
    if (typeof arguments[0] === "object")
        return redux__WEBPACK_IMPORTED_MODULE_0__.compose;
    return redux__WEBPACK_IMPORTED_MODULE_0__.compose.apply(null, arguments);
};
var devToolsEnhancer = typeof window !== "undefined" && window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__ : function () {
    return function (noop) {
        return noop;
    };
};
// src/isPlainObject.ts
function isPlainObject(value) {
    if (typeof value !== "object" || value === null)
        return false;
    var proto = value;
    while (Object.getPrototypeOf(proto) !== null) {
        proto = Object.getPrototypeOf(proto);
    }
    return Object.getPrototypeOf(value) === proto;
}
// src/getDefaultMiddleware.ts

// src/utils.ts
function getTimeMeasureUtils(maxDelay, fnName) {
    var elapsed = 0;
    return {
        measureTime: function (fn) {
            var started = Date.now();
            try {
                return fn();
            }
            finally {
                var finished = Date.now();
                elapsed += finished - started;
            }
        },
        warnIfExceeded: function () {
            if (elapsed > maxDelay) {
                console.warn(fnName + " took " + elapsed + "ms, which is more than the warning threshold of " + maxDelay + "ms. \nIf your state or actions are very large, you may want to disable the middleware as it might cause too much of a slowdown in development mode. See https://redux-toolkit.js.org/api/getDefaultMiddleware for instructions.\nIt is disabled in production builds, so you don't need to worry about that.");
            }
        }
    };
}
var MiddlewareArray = /** @class */ (function (_super) {
    __extends(MiddlewareArray, _super);
    function MiddlewareArray() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = _super.apply(this, args) || this;
        Object.setPrototypeOf(_this, MiddlewareArray.prototype);
        return _this;
    }
    Object.defineProperty(MiddlewareArray, Symbol.species, {
        get: function () {
            return MiddlewareArray;
        },
        enumerable: false,
        configurable: true
    });
    MiddlewareArray.prototype.concat = function () {
        var arr = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            arr[_i] = arguments[_i];
        }
        return _super.prototype.concat.apply(this, arr);
    };
    MiddlewareArray.prototype.prepend = function () {
        var arr = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            arr[_i] = arguments[_i];
        }
        if (arr.length === 1 && Array.isArray(arr[0])) {
            return new (MiddlewareArray.bind.apply(MiddlewareArray, __spreadArray([void 0], arr[0].concat(this))))();
        }
        return new (MiddlewareArray.bind.apply(MiddlewareArray, __spreadArray([void 0], arr.concat(this))))();
    };
    return MiddlewareArray;
}(Array));
// src/immutableStateInvariantMiddleware.ts
var isProduction = "development" === "production";
var prefix = "Invariant failed";
function invariant(condition, message) {
    if (condition) {
        return;
    }
    if (isProduction) {
        throw new Error(prefix);
    }
    throw new Error(prefix + ": " + (message || ""));
}
function stringify(obj, serializer, indent, decycler) {
    return JSON.stringify(obj, getSerialize(serializer, decycler), indent);
}
function getSerialize(serializer, decycler) {
    var stack = [], keys = [];
    if (!decycler)
        decycler = function (_, value) {
            if (stack[0] === value)
                return "[Circular ~]";
            return "[Circular ~." + keys.slice(0, stack.indexOf(value)).join(".") + "]";
        };
    return function (key, value) {
        if (stack.length > 0) {
            var thisPos = stack.indexOf(this);
            ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);
            ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);
            if (~stack.indexOf(value))
                value = decycler.call(this, key, value);
        }
        else
            stack.push(value);
        return serializer == null ? value : serializer.call(this, key, value);
    };
}
function isImmutableDefault(value) {
    return typeof value !== "object" || value === null || typeof value === "undefined" || Object.isFrozen(value);
}
function trackForMutations(isImmutable, ignorePaths, obj) {
    var trackedProperties = trackProperties(isImmutable, ignorePaths, obj);
    return {
        detectMutations: function () {
            return detectMutations(isImmutable, ignorePaths, trackedProperties, obj);
        }
    };
}
function trackProperties(isImmutable, ignorePaths, obj, path) {
    if (ignorePaths === void 0) { ignorePaths = []; }
    if (path === void 0) { path = ""; }
    var tracked = { value: obj };
    if (!isImmutable(obj)) {
        tracked.children = {};
        for (var key in obj) {
            var childPath = path ? path + "." + key : key;
            if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {
                continue;
            }
            tracked.children[key] = trackProperties(isImmutable, ignorePaths, obj[key], childPath);
        }
    }
    return tracked;
}
function detectMutations(isImmutable, ignorePaths, trackedProperty, obj, sameParentRef, path) {
    if (ignorePaths === void 0) { ignorePaths = []; }
    if (sameParentRef === void 0) { sameParentRef = false; }
    if (path === void 0) { path = ""; }
    var prevObj = trackedProperty ? trackedProperty.value : void 0;
    var sameRef = prevObj === obj;
    if (sameParentRef && !sameRef && !Number.isNaN(obj)) {
        return { wasMutated: true, path: path };
    }
    if (isImmutable(prevObj) || isImmutable(obj)) {
        return { wasMutated: false };
    }
    var keysToDetect = {};
    for (var key in trackedProperty.children) {
        keysToDetect[key] = true;
    }
    for (var key in obj) {
        keysToDetect[key] = true;
    }
    for (var key in keysToDetect) {
        var childPath = path ? path + "." + key : key;
        if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {
            continue;
        }
        var result = detectMutations(isImmutable, ignorePaths, trackedProperty.children[key], obj[key], sameRef, childPath);
        if (result.wasMutated) {
            return result;
        }
    }
    return { wasMutated: false };
}
function createImmutableStateInvariantMiddleware(options) {
    if (options === void 0) { options = {}; }
    if (false) {}
    var _b = options.isImmutable, isImmutable = _b === void 0 ? isImmutableDefault : _b, ignoredPaths = options.ignoredPaths, _c = options.warnAfter, warnAfter = _c === void 0 ? 32 : _c, ignore = options.ignore;
    ignoredPaths = ignoredPaths || ignore;
    var track = trackForMutations.bind(null, isImmutable, ignoredPaths);
    return function (_b) {
        var getState = _b.getState;
        var state = getState();
        var tracker = track(state);
        var result;
        return function (next) { return function (action) {
            var measureUtils = getTimeMeasureUtils(warnAfter, "ImmutableStateInvariantMiddleware");
            measureUtils.measureTime(function () {
                state = getState();
                result = tracker.detectMutations();
                tracker = track(state);
                invariant(!result.wasMutated, "A state mutation was detected between dispatches, in the path '" + (result.path || "") + "'.  This may cause incorrect behavior. (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)");
            });
            var dispatchedAction = next(action);
            measureUtils.measureTime(function () {
                state = getState();
                result = tracker.detectMutations();
                tracker = track(state);
                result.wasMutated && invariant(!result.wasMutated, "A state mutation was detected inside a dispatch, in the path: " + (result.path || "") + ". Take a look at the reducer(s) handling the action " + stringify(action) + ". (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)");
            });
            measureUtils.warnIfExceeded();
            return dispatchedAction;
        }; };
    };
}
// src/serializableStateInvariantMiddleware.ts
function isPlain(val) {
    var type = typeof val;
    return type === "undefined" || val === null || type === "string" || type === "boolean" || type === "number" || Array.isArray(val) || isPlainObject(val);
}
function findNonSerializableValue(value, path, isSerializable, getEntries, ignoredPaths) {
    if (path === void 0) { path = ""; }
    if (isSerializable === void 0) { isSerializable = isPlain; }
    if (ignoredPaths === void 0) { ignoredPaths = []; }
    var foundNestedSerializable;
    if (!isSerializable(value)) {
        return {
            keyPath: path || "<root>",
            value: value
        };
    }
    if (typeof value !== "object" || value === null) {
        return false;
    }
    var entries = getEntries != null ? getEntries(value) : Object.entries(value);
    var hasIgnoredPaths = ignoredPaths.length > 0;
    for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
        var _b = entries_1[_i], key = _b[0], nestedValue = _b[1];
        var nestedPath = path ? path + "." + key : key;
        if (hasIgnoredPaths && ignoredPaths.indexOf(nestedPath) >= 0) {
            continue;
        }
        if (!isSerializable(nestedValue)) {
            return {
                keyPath: nestedPath,
                value: nestedValue
            };
        }
        if (typeof nestedValue === "object") {
            foundNestedSerializable = findNonSerializableValue(nestedValue, nestedPath, isSerializable, getEntries, ignoredPaths);
            if (foundNestedSerializable) {
                return foundNestedSerializable;
            }
        }
    }
    return false;
}
function createSerializableStateInvariantMiddleware(options) {
    if (options === void 0) { options = {}; }
    if (false) {}
    var _b = options.isSerializable, isSerializable = _b === void 0 ? isPlain : _b, getEntries = options.getEntries, _c = options.ignoredActions, ignoredActions = _c === void 0 ? [] : _c, _d = options.ignoredActionPaths, ignoredActionPaths = _d === void 0 ? ["meta.arg", "meta.baseQueryMeta"] : _d, _e = options.ignoredPaths, ignoredPaths = _e === void 0 ? [] : _e, _f = options.warnAfter, warnAfter = _f === void 0 ? 32 : _f, _g = options.ignoreState, ignoreState = _g === void 0 ? false : _g;
    return function (storeAPI) { return function (next) { return function (action) {
        if (ignoredActions.length && ignoredActions.indexOf(action.type) !== -1) {
            return next(action);
        }
        var measureUtils = getTimeMeasureUtils(warnAfter, "SerializableStateInvariantMiddleware");
        measureUtils.measureTime(function () {
            var foundActionNonSerializableValue = findNonSerializableValue(action, "", isSerializable, getEntries, ignoredActionPaths);
            if (foundActionNonSerializableValue) {
                var keyPath = foundActionNonSerializableValue.keyPath, value = foundActionNonSerializableValue.value;
                console.error("A non-serializable value was detected in an action, in the path: `" + keyPath + "`. Value:", value, "\nTake a look at the logic that dispatched this action: ", action, "\n(See https://redux.js.org/faq/actions#why-should-type-be-a-string-or-at-least-serializable-why-should-my-action-types-be-constants)", "\n(To allow non-serializable values see: https://redux-toolkit.js.org/usage/usage-guide#working-with-non-serializable-data)");
            }
        });
        var result = next(action);
        if (!ignoreState) {
            measureUtils.measureTime(function () {
                var state = storeAPI.getState();
                var foundStateNonSerializableValue = findNonSerializableValue(state, "", isSerializable, getEntries, ignoredPaths);
                if (foundStateNonSerializableValue) {
                    var keyPath = foundStateNonSerializableValue.keyPath, value = foundStateNonSerializableValue.value;
                    console.error("A non-serializable value was detected in the state, in the path: `" + keyPath + "`. Value:", value, "\nTake a look at the reducer(s) handling this action type: " + action.type + ".\n(See https://redux.js.org/faq/organizing-state#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state)");
                }
            });
            measureUtils.warnIfExceeded();
        }
        return result;
    }; }; };
}
// src/getDefaultMiddleware.ts
function isBoolean(x) {
    return typeof x === "boolean";
}
function curryGetDefaultMiddleware() {
    return function curriedGetDefaultMiddleware(options) {
        return getDefaultMiddleware(options);
    };
}
function getDefaultMiddleware(options) {
    if (options === void 0) { options = {}; }
    var _b = options.thunk, thunk = _b === void 0 ? true : _b, _c = options.immutableCheck, immutableCheck = _c === void 0 ? true : _c, _d = options.serializableCheck, serializableCheck = _d === void 0 ? true : _d;
    var middlewareArray = new MiddlewareArray();
    if (thunk) {
        if (isBoolean(thunk)) {
            middlewareArray.push(redux_thunk__WEBPACK_IMPORTED_MODULE_3__.default);
        }
        else {
            middlewareArray.push(redux_thunk__WEBPACK_IMPORTED_MODULE_3__.default.withExtraArgument(thunk.extraArgument));
        }
    }
    if (true) {
        if (immutableCheck) {
            var immutableOptions = {};
            if (!isBoolean(immutableCheck)) {
                immutableOptions = immutableCheck;
            }
            middlewareArray.unshift(createImmutableStateInvariantMiddleware(immutableOptions));
        }
        if (serializableCheck) {
            var serializableOptions = {};
            if (!isBoolean(serializableCheck)) {
                serializableOptions = serializableCheck;
            }
            middlewareArray.push(createSerializableStateInvariantMiddleware(serializableOptions));
        }
    }
    return middlewareArray;
}
// src/configureStore.ts
var IS_PRODUCTION = "development" === "production";
function configureStore(options) {
    var curriedGetDefaultMiddleware = curryGetDefaultMiddleware();
    var _b = options || {}, _c = _b.reducer, reducer = _c === void 0 ? void 0 : _c, _d = _b.middleware, middleware = _d === void 0 ? curriedGetDefaultMiddleware() : _d, _e = _b.devTools, devTools = _e === void 0 ? true : _e, _f = _b.preloadedState, preloadedState = _f === void 0 ? void 0 : _f, _g = _b.enhancers, enhancers = _g === void 0 ? void 0 : _g;
    var rootReducer;
    if (typeof reducer === "function") {
        rootReducer = reducer;
    }
    else if (isPlainObject(reducer)) {
        rootReducer = (0,redux__WEBPACK_IMPORTED_MODULE_0__.combineReducers)(reducer);
    }
    else {
        throw new Error('"reducer" is a required argument, and must be a function or an object of functions that can be passed to combineReducers');
    }
    var finalMiddleware = middleware;
    if (typeof finalMiddleware === "function") {
        finalMiddleware = finalMiddleware(curriedGetDefaultMiddleware);
        if (!IS_PRODUCTION && !Array.isArray(finalMiddleware)) {
            throw new Error("when using a middleware builder function, an array of middleware must be returned");
        }
    }
    if (!IS_PRODUCTION && finalMiddleware.some(function (item) { return typeof item !== "function"; })) {
        throw new Error("each middleware provided to configureStore must be a function");
    }
    var middlewareEnhancer = redux__WEBPACK_IMPORTED_MODULE_0__.applyMiddleware.apply(void 0, finalMiddleware);
    var finalCompose = redux__WEBPACK_IMPORTED_MODULE_0__.compose;
    if (devTools) {
        finalCompose = composeWithDevTools(__spreadValues({
            trace: !IS_PRODUCTION
        }, typeof devTools === "object" && devTools));
    }
    var storeEnhancers = [middlewareEnhancer];
    if (Array.isArray(enhancers)) {
        storeEnhancers = __spreadArray([middlewareEnhancer], enhancers);
    }
    else if (typeof enhancers === "function") {
        storeEnhancers = enhancers(storeEnhancers);
    }
    var composedEnhancer = finalCompose.apply(void 0, storeEnhancers);
    return (0,redux__WEBPACK_IMPORTED_MODULE_0__.createStore)(rootReducer, preloadedState, composedEnhancer);
}
// src/createAction.ts
function createAction(type, prepareAction) {
    function actionCreator() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (prepareAction) {
            var prepared = prepareAction.apply(void 0, args);
            if (!prepared) {
                throw new Error("prepareAction did not return an object");
            }
            return __spreadValues(__spreadValues({
                type: type,
                payload: prepared.payload
            }, "meta" in prepared && { meta: prepared.meta }), "error" in prepared && { error: prepared.error });
        }
        return { type: type, payload: args[0] };
    }
    actionCreator.toString = function () { return "" + type; };
    actionCreator.type = type;
    actionCreator.match = function (action) { return action.type === type; };
    return actionCreator;
}
function isFSA(action) {
    return isPlainObject(action) && typeof action.type === "string" && Object.keys(action).every(isValidKey);
}
function isValidKey(key) {
    return ["type", "payload", "error", "meta"].indexOf(key) > -1;
}
function getType(actionCreator) {
    return "" + actionCreator;
}
// src/createReducer.ts

// src/mapBuilders.ts
function executeReducerBuilderCallback(builderCallback) {
    var actionsMap = {};
    var actionMatchers = [];
    var defaultCaseReducer;
    var builder = {
        addCase: function (typeOrActionCreator, reducer) {
            if (true) {
                if (actionMatchers.length > 0) {
                    throw new Error("`builder.addCase` should only be called before calling `builder.addMatcher`");
                }
                if (defaultCaseReducer) {
                    throw new Error("`builder.addCase` should only be called before calling `builder.addDefaultCase`");
                }
            }
            var type = typeof typeOrActionCreator === "string" ? typeOrActionCreator : typeOrActionCreator.type;
            if (type in actionsMap) {
                throw new Error("addCase cannot be called with two reducers for the same action type");
            }
            actionsMap[type] = reducer;
            return builder;
        },
        addMatcher: function (matcher, reducer) {
            if (true) {
                if (defaultCaseReducer) {
                    throw new Error("`builder.addMatcher` should only be called before calling `builder.addDefaultCase`");
                }
            }
            actionMatchers.push({ matcher: matcher, reducer: reducer });
            return builder;
        },
        addDefaultCase: function (reducer) {
            if (true) {
                if (defaultCaseReducer) {
                    throw new Error("`builder.addDefaultCase` can only be called once");
                }
            }
            defaultCaseReducer = reducer;
            return builder;
        }
    };
    builderCallback(builder);
    return [actionsMap, actionMatchers, defaultCaseReducer];
}
// src/createReducer.ts
function createReducer(initialState, mapOrBuilderCallback, actionMatchers, defaultCaseReducer) {
    if (actionMatchers === void 0) { actionMatchers = []; }
    var _b = typeof mapOrBuilderCallback === "function" ? executeReducerBuilderCallback(mapOrBuilderCallback) : [mapOrBuilderCallback, actionMatchers, defaultCaseReducer], actionsMap = _b[0], finalActionMatchers = _b[1], finalDefaultCaseReducer = _b[2];
    var frozenInitialState = (0,immer__WEBPACK_IMPORTED_MODULE_2__.default)(initialState, function () {
    });
    return function (state, action) {
        if (state === void 0) { state = frozenInitialState; }
        var caseReducers = __spreadArray([
            actionsMap[action.type]
        ], finalActionMatchers.filter(function (_b) {
            var matcher = _b.matcher;
            return matcher(action);
        }).map(function (_b) {
            var reducer = _b.reducer;
            return reducer;
        }));
        if (caseReducers.filter(function (cr) { return !!cr; }).length === 0) {
            caseReducers = [finalDefaultCaseReducer];
        }
        return caseReducers.reduce(function (previousState, caseReducer) {
            if (caseReducer) {
                if ((0,immer__WEBPACK_IMPORTED_MODULE_2__.isDraft)(previousState)) {
                    var draft = previousState;
                    var result = caseReducer(draft, action);
                    if (typeof result === "undefined") {
                        return previousState;
                    }
                    return result;
                }
                else if (!(0,immer__WEBPACK_IMPORTED_MODULE_2__.isDraftable)(previousState)) {
                    var result = caseReducer(previousState, action);
                    if (typeof result === "undefined") {
                        if (previousState === null) {
                            return previousState;
                        }
                        throw Error("A case reducer on a non-draftable value must not return undefined");
                    }
                    return result;
                }
                else {
                    return (0,immer__WEBPACK_IMPORTED_MODULE_2__.default)(previousState, function (draft) {
                        return caseReducer(draft, action);
                    });
                }
            }
            return previousState;
        }, state);
    };
}
// src/createSlice.ts
function getType2(slice, actionKey) {
    return slice + "/" + actionKey;
}
function createSlice(options) {
    var name = options.name, initialState = options.initialState;
    if (!name) {
        throw new Error("`name` is a required option for createSlice");
    }
    var reducers = options.reducers || {};
    var _b = typeof options.extraReducers === "function" ? executeReducerBuilderCallback(options.extraReducers) : [options.extraReducers], _c = _b[0], extraReducers = _c === void 0 ? {} : _c, _d = _b[1], actionMatchers = _d === void 0 ? [] : _d, _e = _b[2], defaultCaseReducer = _e === void 0 ? void 0 : _e;
    var reducerNames = Object.keys(reducers);
    var sliceCaseReducersByName = {};
    var sliceCaseReducersByType = {};
    var actionCreators = {};
    reducerNames.forEach(function (reducerName) {
        var maybeReducerWithPrepare = reducers[reducerName];
        var type = getType2(name, reducerName);
        var caseReducer;
        var prepareCallback;
        if ("reducer" in maybeReducerWithPrepare) {
            caseReducer = maybeReducerWithPrepare.reducer;
            prepareCallback = maybeReducerWithPrepare.prepare;
        }
        else {
            caseReducer = maybeReducerWithPrepare;
        }
        sliceCaseReducersByName[reducerName] = caseReducer;
        sliceCaseReducersByType[type] = caseReducer;
        actionCreators[reducerName] = prepareCallback ? createAction(type, prepareCallback) : createAction(type);
    });
    var finalCaseReducers = __spreadValues(__spreadValues({}, extraReducers), sliceCaseReducersByType);
    var reducer = createReducer(initialState, finalCaseReducers, actionMatchers, defaultCaseReducer);
    return {
        name: name,
        reducer: reducer,
        actions: actionCreators,
        caseReducers: sliceCaseReducersByName
    };
}
// src/entities/entity_state.ts
function getInitialEntityState() {
    return {
        ids: [],
        entities: {}
    };
}
function createInitialStateFactory() {
    function getInitialState(additionalState) {
        if (additionalState === void 0) { additionalState = {}; }
        return Object.assign(getInitialEntityState(), additionalState);
    }
    return { getInitialState: getInitialState };
}
// src/entities/state_selectors.ts
function createSelectorsFactory() {
    function getSelectors(selectState) {
        var selectIds = function (state) { return state.ids; };
        var selectEntities = function (state) { return state.entities; };
        var selectAll = createDraftSafeSelector(selectIds, selectEntities, function (ids, entities) { return ids.map(function (id) { return entities[id]; }); });
        var selectId = function (_, id) { return id; };
        var selectById = function (entities, id) { return entities[id]; };
        var selectTotal = createDraftSafeSelector(selectIds, function (ids) { return ids.length; });
        if (!selectState) {
            return {
                selectIds: selectIds,
                selectEntities: selectEntities,
                selectAll: selectAll,
                selectTotal: selectTotal,
                selectById: createDraftSafeSelector(selectEntities, selectId, selectById)
            };
        }
        var selectGlobalizedEntities = createDraftSafeSelector(selectState, selectEntities);
        return {
            selectIds: createDraftSafeSelector(selectState, selectIds),
            selectEntities: selectGlobalizedEntities,
            selectAll: createDraftSafeSelector(selectState, selectAll),
            selectTotal: createDraftSafeSelector(selectState, selectTotal),
            selectById: createDraftSafeSelector(selectGlobalizedEntities, selectId, selectById)
        };
    }
    return { getSelectors: getSelectors };
}
// src/entities/state_adapter.ts

function createSingleArgumentStateOperator(mutator) {
    var operator = createStateOperator(function (_, state) { return mutator(state); });
    return function operation(state) {
        return operator(state, void 0);
    };
}
function createStateOperator(mutator) {
    return function operation(state, arg) {
        function isPayloadActionArgument(arg2) {
            return isFSA(arg2);
        }
        var runMutator = function (draft) {
            if (isPayloadActionArgument(arg)) {
                mutator(arg.payload, draft);
            }
            else {
                mutator(arg, draft);
            }
        };
        if ((0,immer__WEBPACK_IMPORTED_MODULE_2__.isDraft)(state)) {
            runMutator(state);
            return state;
        }
        else {
            return (0,immer__WEBPACK_IMPORTED_MODULE_2__.default)(state, runMutator);
        }
    };
}
// src/entities/utils.ts
function selectIdValue(entity, selectId) {
    var key = selectId(entity);
    if ( true && key === void 0) {
        console.warn("The entity passed to the `selectId` implementation returned undefined.", "You should probably provide your own `selectId` implementation.", "The entity that was passed:", entity, "The `selectId` implementation:", selectId.toString());
    }
    return key;
}
function ensureEntitiesArray(entities) {
    if (!Array.isArray(entities)) {
        entities = Object.values(entities);
    }
    return entities;
}
function splitAddedUpdatedEntities(newEntities, selectId, state) {
    newEntities = ensureEntitiesArray(newEntities);
    var added = [];
    var updated = [];
    for (var _i = 0, newEntities_1 = newEntities; _i < newEntities_1.length; _i++) {
        var entity = newEntities_1[_i];
        var id = selectIdValue(entity, selectId);
        if (id in state.entities) {
            updated.push({ id: id, changes: entity });
        }
        else {
            added.push(entity);
        }
    }
    return [added, updated];
}
// src/entities/unsorted_state_adapter.ts
function createUnsortedStateAdapter(selectId) {
    function addOneMutably(entity, state) {
        var key = selectIdValue(entity, selectId);
        if (key in state.entities) {
            return;
        }
        state.ids.push(key);
        state.entities[key] = entity;
    }
    function addManyMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        for (var _i = 0, newEntities_2 = newEntities; _i < newEntities_2.length; _i++) {
            var entity = newEntities_2[_i];
            addOneMutably(entity, state);
        }
    }
    function setOneMutably(entity, state) {
        var key = selectIdValue(entity, selectId);
        if (!(key in state.entities)) {
            state.ids.push(key);
        }
        state.entities[key] = entity;
    }
    function setManyMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        for (var _i = 0, newEntities_3 = newEntities; _i < newEntities_3.length; _i++) {
            var entity = newEntities_3[_i];
            setOneMutably(entity, state);
        }
    }
    function setAllMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        state.ids = [];
        state.entities = {};
        addManyMutably(newEntities, state);
    }
    function removeOneMutably(key, state) {
        return removeManyMutably([key], state);
    }
    function removeManyMutably(keys, state) {
        var didMutate = false;
        keys.forEach(function (key) {
            if (key in state.entities) {
                delete state.entities[key];
                didMutate = true;
            }
        });
        if (didMutate) {
            state.ids = state.ids.filter(function (id) { return id in state.entities; });
        }
    }
    function removeAllMutably(state) {
        Object.assign(state, {
            ids: [],
            entities: {}
        });
    }
    function takeNewKey(keys, update, state) {
        var original2 = state.entities[update.id];
        var updated = Object.assign({}, original2, update.changes);
        var newKey = selectIdValue(updated, selectId);
        var hasNewKey = newKey !== update.id;
        if (hasNewKey) {
            keys[update.id] = newKey;
            delete state.entities[update.id];
        }
        state.entities[newKey] = updated;
        return hasNewKey;
    }
    function updateOneMutably(update, state) {
        return updateManyMutably([update], state);
    }
    function updateManyMutably(updates, state) {
        var newKeys = {};
        var updatesPerEntity = {};
        updates.forEach(function (update) {
            if (update.id in state.entities) {
                updatesPerEntity[update.id] = {
                    id: update.id,
                    changes: __spreadValues(__spreadValues({}, updatesPerEntity[update.id] ? updatesPerEntity[update.id].changes : null), update.changes)
                };
            }
        });
        updates = Object.values(updatesPerEntity);
        var didMutateEntities = updates.length > 0;
        if (didMutateEntities) {
            var didMutateIds = updates.filter(function (update) { return takeNewKey(newKeys, update, state); }).length > 0;
            if (didMutateIds) {
                state.ids = state.ids.map(function (id) { return newKeys[id] || id; });
            }
        }
    }
    function upsertOneMutably(entity, state) {
        return upsertManyMutably([entity], state);
    }
    function upsertManyMutably(newEntities, state) {
        var _b = splitAddedUpdatedEntities(newEntities, selectId, state), added = _b[0], updated = _b[1];
        updateManyMutably(updated, state);
        addManyMutably(added, state);
    }
    return {
        removeAll: createSingleArgumentStateOperator(removeAllMutably),
        addOne: createStateOperator(addOneMutably),
        addMany: createStateOperator(addManyMutably),
        setOne: createStateOperator(setOneMutably),
        setMany: createStateOperator(setManyMutably),
        setAll: createStateOperator(setAllMutably),
        updateOne: createStateOperator(updateOneMutably),
        updateMany: createStateOperator(updateManyMutably),
        upsertOne: createStateOperator(upsertOneMutably),
        upsertMany: createStateOperator(upsertManyMutably),
        removeOne: createStateOperator(removeOneMutably),
        removeMany: createStateOperator(removeManyMutably)
    };
}
// src/entities/sorted_state_adapter.ts
function createSortedStateAdapter(selectId, sort) {
    var _b = createUnsortedStateAdapter(selectId), removeOne = _b.removeOne, removeMany = _b.removeMany, removeAll = _b.removeAll;
    function addOneMutably(entity, state) {
        return addManyMutably([entity], state);
    }
    function addManyMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        var models = newEntities.filter(function (model) { return !(selectIdValue(model, selectId) in state.entities); });
        if (models.length !== 0) {
            merge(models, state);
        }
    }
    function setOneMutably(entity, state) {
        return setManyMutably([entity], state);
    }
    function setManyMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        if (newEntities.length !== 0) {
            merge(newEntities, state);
        }
    }
    function setAllMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        state.entities = {};
        state.ids = [];
        addManyMutably(newEntities, state);
    }
    function updateOneMutably(update, state) {
        return updateManyMutably([update], state);
    }
    function takeUpdatedModel(models, update, state) {
        if (!(update.id in state.entities)) {
            return false;
        }
        var original2 = state.entities[update.id];
        var updated = Object.assign({}, original2, update.changes);
        var newKey = selectIdValue(updated, selectId);
        delete state.entities[update.id];
        models.push(updated);
        return newKey !== update.id;
    }
    function updateManyMutably(updates, state) {
        var models = [];
        updates.forEach(function (update) { return takeUpdatedModel(models, update, state); });
        if (models.length !== 0) {
            merge(models, state);
        }
    }
    function upsertOneMutably(entity, state) {
        return upsertManyMutably([entity], state);
    }
    function upsertManyMutably(newEntities, state) {
        var _b = splitAddedUpdatedEntities(newEntities, selectId, state), added = _b[0], updated = _b[1];
        updateManyMutably(updated, state);
        addManyMutably(added, state);
    }
    function areArraysEqual(a, b) {
        if (a.length !== b.length) {
            return false;
        }
        for (var i = 0; i < a.length && i < b.length; i++) {
            if (a[i] === b[i]) {
                continue;
            }
            return false;
        }
        return true;
    }
    function merge(models, state) {
        models.forEach(function (model) {
            state.entities[selectId(model)] = model;
        });
        var allEntities = Object.values(state.entities);
        allEntities.sort(sort);
        var newSortedIds = allEntities.map(selectId);
        var ids = state.ids;
        if (!areArraysEqual(ids, newSortedIds)) {
            state.ids = newSortedIds;
        }
    }
    return {
        removeOne: removeOne,
        removeMany: removeMany,
        removeAll: removeAll,
        addOne: createStateOperator(addOneMutably),
        updateOne: createStateOperator(updateOneMutably),
        upsertOne: createStateOperator(upsertOneMutably),
        setOne: createStateOperator(setOneMutably),
        setMany: createStateOperator(setManyMutably),
        setAll: createStateOperator(setAllMutably),
        addMany: createStateOperator(addManyMutably),
        updateMany: createStateOperator(updateManyMutably),
        upsertMany: createStateOperator(upsertManyMutably)
    };
}
// src/entities/create_adapter.ts
function createEntityAdapter(options) {
    if (options === void 0) { options = {}; }
    var _b = __spreadValues({
        sortComparer: false,
        selectId: function (instance) { return instance.id; }
    }, options), selectId = _b.selectId, sortComparer = _b.sortComparer;
    var stateFactory = createInitialStateFactory();
    var selectorsFactory = createSelectorsFactory();
    var stateAdapter = sortComparer ? createSortedStateAdapter(selectId, sortComparer) : createUnsortedStateAdapter(selectId);
    return __spreadValues(__spreadValues(__spreadValues({
        selectId: selectId,
        sortComparer: sortComparer
    }, stateFactory), selectorsFactory), stateAdapter);
}
// src/nanoid.ts
var urlAlphabet = "ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW";
var nanoid = function (size) {
    if (size === void 0) { size = 21; }
    var id = "";
    var i = size;
    while (i--) {
        id += urlAlphabet[Math.random() * 64 | 0];
    }
    return id;
};
// src/createAsyncThunk.ts
var commonProperties = [
    "name",
    "message",
    "stack",
    "code"
];
var RejectWithValue = /** @class */ (function () {
    function RejectWithValue(payload, meta) {
        this.payload = payload;
        this.meta = meta;
    }
    return RejectWithValue;
}());
var FulfillWithMeta = /** @class */ (function () {
    function FulfillWithMeta(payload, meta) {
        this.payload = payload;
        this.meta = meta;
    }
    return FulfillWithMeta;
}());
var miniSerializeError = function (value) {
    if (typeof value === "object" && value !== null) {
        var simpleError = {};
        for (var _i = 0, commonProperties_1 = commonProperties; _i < commonProperties_1.length; _i++) {
            var property = commonProperties_1[_i];
            if (typeof value[property] === "string") {
                simpleError[property] = value[property];
            }
        }
        return simpleError;
    }
    return { message: String(value) };
};
function createAsyncThunk(typePrefix, payloadCreator, options) {
    var fulfilled = createAction(typePrefix + "/fulfilled", function (payload, requestId, arg, meta) { return ({
        payload: payload,
        meta: __spreadProps(__spreadValues({}, meta || {}), {
            arg: arg,
            requestId: requestId,
            requestStatus: "fulfilled"
        })
    }); });
    var pending = createAction(typePrefix + "/pending", function (requestId, arg, meta) { return ({
        payload: void 0,
        meta: __spreadProps(__spreadValues({}, meta || {}), {
            arg: arg,
            requestId: requestId,
            requestStatus: "pending"
        })
    }); });
    var rejected = createAction(typePrefix + "/rejected", function (error, requestId, arg, payload, meta) { return ({
        payload: payload,
        error: (options && options.serializeError || miniSerializeError)(error || "Rejected"),
        meta: __spreadProps(__spreadValues({}, meta || {}), {
            arg: arg,
            requestId: requestId,
            rejectedWithValue: !!payload,
            requestStatus: "rejected",
            aborted: (error == null ? void 0 : error.name) === "AbortError",
            condition: (error == null ? void 0 : error.name) === "ConditionError"
        })
    }); });
    var displayedWarning = false;
    var AC = typeof AbortController !== "undefined" ? AbortController : /** @class */ (function () {
        function class_1() {
            this.signal = {
                aborted: false,
                addEventListener: function () {
                },
                dispatchEvent: function () {
                    return false;
                },
                onabort: function () {
                },
                removeEventListener: function () {
                }
            };
        }
        class_1.prototype.abort = function () {
            if (true) {
                if (!displayedWarning) {
                    displayedWarning = true;
                    console.info("This platform does not implement AbortController. \nIf you want to use the AbortController to react to `abort` events, please consider importing a polyfill like 'abortcontroller-polyfill/dist/abortcontroller-polyfill-only'.");
                }
            }
        };
        return class_1;
    }());
    function actionCreator(arg) {
        return function (dispatch, getState, extra) {
            var _a;
            var requestId = ((_a = options == null ? void 0 : options.idGenerator) != null ? _a : nanoid)();
            var abortController = new AC();
            var abortReason;
            var abortedPromise = new Promise(function (_, reject) { return abortController.signal.addEventListener("abort", function () { return reject({ name: "AbortError", message: abortReason || "Aborted" }); }); });
            var started = false;
            function abort(reason) {
                if (started) {
                    abortReason = reason;
                    abortController.abort();
                }
            }
            var promise = function () {
                return __async(this, null, function () {
                    var _a2, finalAction, err_1, skipDispatch;
                    return __generator(this, function (_b) {
                        switch (_b.label) {
                            case 0:
                                _b.trys.push([0, 2, , 3]);
                                if (options && options.condition && options.condition(arg, { getState: getState, extra: extra }) === false) {
                                    throw {
                                        name: "ConditionError",
                                        message: "Aborted due to condition callback returning false."
                                    };
                                }
                                started = true;
                                dispatch(pending(requestId, arg, (_a2 = options == null ? void 0 : options.getPendingMeta) == null ? void 0 : _a2.call(options, { requestId: requestId, arg: arg }, { getState: getState, extra: extra })));
                                return [4 /*yield*/, Promise.race([
                                        abortedPromise,
                                        Promise.resolve(payloadCreator(arg, {
                                            dispatch: dispatch,
                                            getState: getState,
                                            extra: extra,
                                            requestId: requestId,
                                            signal: abortController.signal,
                                            rejectWithValue: function (value, meta) {
                                                return new RejectWithValue(value, meta);
                                            },
                                            fulfillWithValue: function (value, meta) {
                                                return new FulfillWithMeta(value, meta);
                                            }
                                        })).then(function (result) {
                                            if (result instanceof RejectWithValue) {
                                                throw result;
                                            }
                                            if (result instanceof FulfillWithMeta) {
                                                return fulfilled(result.payload, requestId, arg, result.meta);
                                            }
                                            return fulfilled(result, requestId, arg);
                                        })
                                    ])];
                            case 1:
                                finalAction = _b.sent();
                                return [3 /*break*/, 3];
                            case 2:
                                err_1 = _b.sent();
                                finalAction = err_1 instanceof RejectWithValue ? rejected(null, requestId, arg, err_1.payload, err_1.meta) : rejected(err_1, requestId, arg);
                                return [3 /*break*/, 3];
                            case 3:
                                skipDispatch = options && !options.dispatchConditionRejection && rejected.match(finalAction) && finalAction.meta.condition;
                                if (!skipDispatch) {
                                    dispatch(finalAction);
                                }
                                return [2 /*return*/, finalAction];
                        }
                    });
                });
            }();
            return Object.assign(promise, {
                abort: abort,
                requestId: requestId,
                arg: arg,
                unwrap: function () {
                    return promise.then(unwrapResult);
                }
            });
        };
    }
    return Object.assign(actionCreator, {
        pending: pending,
        rejected: rejected,
        fulfilled: fulfilled,
        typePrefix: typePrefix
    });
}
function unwrapResult(action) {
    if (action.meta && action.meta.rejectedWithValue) {
        throw action.payload;
    }
    if (action.error) {
        throw action.error;
    }
    return action.payload;
}
// src/tsHelpers.ts
var hasMatchFunction = function (v) {
    return v && typeof v.match === "function";
};
// src/matchers.ts
var matches = function (matcher, action) {
    if (hasMatchFunction(matcher)) {
        return matcher.match(action);
    }
    else {
        return matcher(action);
    }
};
function isAnyOf() {
    var matchers = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        matchers[_i] = arguments[_i];
    }
    return function (action) {
        return matchers.some(function (matcher) { return matches(matcher, action); });
    };
}
function isAllOf() {
    var matchers = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        matchers[_i] = arguments[_i];
    }
    return function (action) {
        return matchers.every(function (matcher) { return matches(matcher, action); });
    };
}
function hasExpectedRequestMetadata(action, validStatus) {
    if (!action || !action.meta)
        return false;
    var hasValidRequestId = typeof action.meta.requestId === "string";
    var hasValidRequestStatus = validStatus.indexOf(action.meta.requestStatus) > -1;
    return hasValidRequestId && hasValidRequestStatus;
}
function isAsyncThunkArray(a) {
    return typeof a[0] === "function" && "pending" in a[0] && "fulfilled" in a[0] && "rejected" in a[0];
}
function isPending() {
    var asyncThunks = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        asyncThunks[_i] = arguments[_i];
    }
    if (asyncThunks.length === 0) {
        return function (action) { return hasExpectedRequestMetadata(action, ["pending"]); };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
        return isPending()(asyncThunks[0]);
    }
    return function (action) {
        var matchers = asyncThunks.map(function (asyncThunk) { return asyncThunk.pending; });
        var combinedMatcher = isAnyOf.apply(void 0, matchers);
        return combinedMatcher(action);
    };
}
function isRejected() {
    var asyncThunks = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        asyncThunks[_i] = arguments[_i];
    }
    if (asyncThunks.length === 0) {
        return function (action) { return hasExpectedRequestMetadata(action, ["rejected"]); };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
        return isRejected()(asyncThunks[0]);
    }
    return function (action) {
        var matchers = asyncThunks.map(function (asyncThunk) { return asyncThunk.rejected; });
        var combinedMatcher = isAnyOf.apply(void 0, matchers);
        return combinedMatcher(action);
    };
}
function isRejectedWithValue() {
    var asyncThunks = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        asyncThunks[_i] = arguments[_i];
    }
    var hasFlag = function (action) {
        return action && action.meta && action.meta.rejectedWithValue;
    };
    if (asyncThunks.length === 0) {
        return function (action) {
            var combinedMatcher = isAllOf(isRejected.apply(void 0, asyncThunks), hasFlag);
            return combinedMatcher(action);
        };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
        return isRejectedWithValue()(asyncThunks[0]);
    }
    return function (action) {
        var combinedMatcher = isAllOf(isRejected.apply(void 0, asyncThunks), hasFlag);
        return combinedMatcher(action);
    };
}
function isFulfilled() {
    var asyncThunks = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        asyncThunks[_i] = arguments[_i];
    }
    if (asyncThunks.length === 0) {
        return function (action) { return hasExpectedRequestMetadata(action, ["fulfilled"]); };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
        return isFulfilled()(asyncThunks[0]);
    }
    return function (action) {
        var matchers = asyncThunks.map(function (asyncThunk) { return asyncThunk.fulfilled; });
        var combinedMatcher = isAnyOf.apply(void 0, matchers);
        return combinedMatcher(action);
    };
}
function isAsyncThunkAction() {
    var asyncThunks = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        asyncThunks[_i] = arguments[_i];
    }
    if (asyncThunks.length === 0) {
        return function (action) { return hasExpectedRequestMetadata(action, ["pending", "fulfilled", "rejected"]); };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
        return isAsyncThunkAction()(asyncThunks[0]);
    }
    return function (action) {
        var matchers = [];
        for (var _i = 0, asyncThunks_1 = asyncThunks; _i < asyncThunks_1.length; _i++) {
            var asyncThunk = asyncThunks_1[_i];
            matchers.push(asyncThunk.pending, asyncThunk.rejected, asyncThunk.fulfilled);
        }
        var combinedMatcher = isAnyOf.apply(void 0, matchers);
        return combinedMatcher(action);
    };
}
// src/index.ts
(0,immer__WEBPACK_IMPORTED_MODULE_2__.enableES5)();

//# sourceMappingURL=module.js.map

/***/ }),

/***/ "./node_modules/axios/index.js":
/*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./lib/axios */ "./node_modules/axios/lib/axios.js");

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var settle = __webpack_require__(/*! ./../core/settle */ "./node_modules/axios/lib/core/settle.js");
var cookies = __webpack_require__(/*! ./../helpers/cookies */ "./node_modules/axios/lib/helpers/cookies.js");
var buildURL = __webpack_require__(/*! ./../helpers/buildURL */ "./node_modules/axios/lib/helpers/buildURL.js");
var buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ "./node_modules/axios/lib/core/buildFullPath.js");
var parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ "./node_modules/axios/lib/helpers/parseHeaders.js");
var isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ "./node_modules/axios/lib/helpers/isURLSameOrigin.js");
var createError = __webpack_require__(/*! ../core/createError */ "./node_modules/axios/lib/core/createError.js");

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request.onreadystatechange = function handleLoad() {
      if (!request || request.readyState !== 4) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(createError('Request aborted', config, 'ECONNABORTED', request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
        cookies.read(config.xsrfCookieName) :
        undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (!requestData) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/axios/lib/utils.js");
var bind = __webpack_require__(/*! ./helpers/bind */ "./node_modules/axios/lib/helpers/bind.js");
var Axios = __webpack_require__(/*! ./core/Axios */ "./node_modules/axios/lib/core/Axios.js");
var mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ "./node_modules/axios/lib/core/mergeConfig.js");
var defaults = __webpack_require__(/*! ./defaults */ "./node_modules/axios/lib/defaults.js");

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(mergeConfig(axios.defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ "./node_modules/axios/lib/cancel/Cancel.js");
axios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ "./node_modules/axios/lib/cancel/CancelToken.js");
axios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ "./node_modules/axios/lib/cancel/isCancel.js");

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(/*! ./helpers/spread */ "./node_modules/axios/lib/helpers/spread.js");

// Expose isAxiosError
axios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ "./node_modules/axios/lib/helpers/isAxiosError.js");

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/Cancel.js":
/*!*************************************************!*\
  !*** ./node_modules/axios/lib/cancel/Cancel.js ***!
  \*************************************************/
/***/ (function(module) {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(/*! ./Cancel */ "./node_modules/axios/lib/cancel/Cancel.js");

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/***/ (function(module) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var buildURL = __webpack_require__(/*! ../helpers/buildURL */ "./node_modules/axios/lib/helpers/buildURL.js");
var InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ "./node_modules/axios/lib/core/InterceptorManager.js");
var dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ "./node_modules/axios/lib/core/dispatchRequest.js");
var mergeConfig = __webpack_require__(/*! ./mergeConfig */ "./node_modules/axios/lib/core/mergeConfig.js");

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = arguments[1] || {};
    config.url = arguments[0];
  } else {
    config = config || {};
  }

  config = mergeConfig(this.defaults, config);

  // Set config.method
  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: (config || {}).data
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),

/***/ "./node_modules/axios/lib/core/buildFullPath.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/buildFullPath.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ "./node_modules/axios/lib/helpers/isAbsoluteURL.js");
var combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ "./node_modules/axios/lib/helpers/combineURLs.js");

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */
module.exports = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
};


/***/ }),

/***/ "./node_modules/axios/lib/core/createError.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/createError.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(/*! ./enhanceError */ "./node_modules/axios/lib/core/enhanceError.js");

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var transformData = __webpack_require__(/*! ./transformData */ "./node_modules/axios/lib/core/transformData.js");
var isCancel = __webpack_require__(/*! ../cancel/isCancel */ "./node_modules/axios/lib/cancel/isCancel.js");
var defaults = __webpack_require__(/*! ../defaults */ "./node_modules/axios/lib/defaults.js");

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/core/enhanceError.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/enhanceError.js ***!
  \*****************************************************/
/***/ (function(module) {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  error.isAxiosError = true;

  error.toJSON = function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code
    };
  };
  return error;
};


/***/ }),

/***/ "./node_modules/axios/lib/core/mergeConfig.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/mergeConfig.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/axios/lib/utils.js");

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */
module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  var valueFromConfig2Keys = ['url', 'method', 'data'];
  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];
  var defaultToConfig2Keys = [
    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',
    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',
    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',
    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',
    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'
  ];
  var directMergeKeys = ['validateStatus'];

  function getMergedValue(target, source) {
    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
      return utils.merge(target, source);
    } else if (utils.isPlainObject(source)) {
      return utils.merge({}, source);
    } else if (utils.isArray(source)) {
      return source.slice();
    }
    return source;
  }

  function mergeDeepProperties(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  }

  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    }
  });

  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);

  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  utils.forEach(directMergeKeys, function merge(prop) {
    if (prop in config2) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (prop in config1) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  var axiosKeys = valueFromConfig2Keys
    .concat(mergeDeepPropertiesKeys)
    .concat(defaultToConfig2Keys)
    .concat(directMergeKeys);

  var otherKeys = Object
    .keys(config1)
    .concat(Object.keys(config2))
    .filter(function filterAxiosKeys(key) {
      return axiosKeys.indexOf(key) === -1;
    });

  utils.forEach(otherKeys, mergeDeepProperties);

  return config;
};


/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(/*! ./createError */ "./node_modules/axios/lib/core/createError.js");

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),

/***/ "./node_modules/axios/lib/defaults.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/defaults.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
/* provided dependency */ var process = __webpack_require__(/*! process */ "./node_modules/process/browser.js");


var utils = __webpack_require__(/*! ./utils */ "./node_modules/axios/lib/utils.js");
var normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ "./node_modules/axios/lib/helpers/normalizeHeaderName.js");

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(/*! ./adapters/xhr */ "./node_modules/axios/lib/adapters/xhr.js");
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = __webpack_require__(/*! ./adapters/http */ "./node_modules/axios/lib/adapters/xhr.js");
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,
  maxBodyLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;


/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/***/ (function(module) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

function encode(val) {
  return encodeURIComponent(val).
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/***/ (function(module) {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
    (function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + '=' + encodeURIComponent(value));

          if (utils.isNumber(expires)) {
            cookie.push('expires=' + new Date(expires).toGMTString());
          }

          if (utils.isString(path)) {
            cookie.push('path=' + path);
          }

          if (utils.isString(domain)) {
            cookie.push('domain=' + domain);
          }

          if (secure === true) {
            cookie.push('secure');
          }

          document.cookie = cookie.join('; ');
        },

        read: function read(name) {
          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
          return (match ? decodeURIComponent(match[3]) : null);
        },

        remove: function remove(name) {
          this.write(name, '', Date.now() - 86400000);
        }
      };
    })() :

  // Non standard browser env (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return {
        write: function write() {},
        read: function read() { return null; },
        remove: function remove() {}
      };
    })()
);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/***/ (function(module) {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAxiosError.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAxiosError.js ***!
  \********************************************************/
/***/ (function(module) {

"use strict";


/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */
module.exports = function isAxiosError(payload) {
  return (typeof payload === 'object') && (payload.isAxiosError === true);
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
    (function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement('a');
      var originURL;

      /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
      function resolveURL(url) {
        var href = url;

        if (msie) {
        // IE needs attribute set twice to normalize properties
          urlParsingNode.setAttribute('href', href);
          href = urlParsingNode.href;
        }

        urlParsingNode.setAttribute('href', href);

        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
            urlParsingNode.pathname :
            '/' + urlParsingNode.pathname
        };
      }

      originURL = resolveURL(window.location.href);

      /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
      return function isURLSameOrigin(requestURL) {
        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
        return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
      };
    })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    })()
);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!***************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/axios/lib/utils.js");

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/***/ (function(module) {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(/*! ./helpers/bind */ "./node_modules/axios/lib/helpers/bind.js");

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a plain Object
 *
 * @param {Object} val The value to test
 * @return {boolean} True if value is a plain Object, otherwise false
 */
function isPlainObject(val) {
  if (toString.call(val) !== '[object Object]') {
    return false;
  }

  var prototype = Object.getPrototypeOf(val);
  return prototype === null || prototype === Object.prototype;
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
                                           navigator.product === 'NativeScript' ||
                                           navigator.product === 'NS')) {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (isPlainObject(result[key]) && isPlainObject(val)) {
      result[key] = merge(result[key], val);
    } else if (isPlainObject(val)) {
      result[key] = merge({}, val);
    } else if (isArray(val)) {
      result[key] = val.slice();
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 * @return {string} content value without BOM
 */
function stripBOM(content) {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }
  return content;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isPlainObject: isPlainObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim,
  stripBOM: stripBOM
};


/***/ }),

/***/ "./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js ***!
  \**********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var reactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  '$$typeof': true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  '$$typeof': true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

function getStatics(component) {
  // React v16.11 and below
  if (reactIs.isMemo(component)) {
    return MEMO_STATICS;
  } // React v16.12 and above


  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== 'string') {
    // don't hoist over string (html) components
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf(sourceComponent);

      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }

    var keys = getOwnPropertyNames(sourceComponent);

    if (getOwnPropertySymbols) {
      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
    }

    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

        try {
          // Avoid failures from read-only properties
          defineProperty(targetComponent, key, descriptor);
        } catch (e) {}
      }
    }
  }

  return targetComponent;
}

module.exports = hoistNonReactStatics;


/***/ }),

/***/ "./node_modules/immer/dist/immer.esm.js":
/*!**********************************************!*\
  !*** ./node_modules/immer/dist/immer.esm.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Immer": function() { return /* binding */ un; },
/* harmony export */   "applyPatches": function() { return /* binding */ pn; },
/* harmony export */   "castDraft": function() { return /* binding */ K; },
/* harmony export */   "castImmutable": function() { return /* binding */ $; },
/* harmony export */   "createDraft": function() { return /* binding */ ln; },
/* harmony export */   "current": function() { return /* binding */ D; },
/* harmony export */   "enableAllPlugins": function() { return /* binding */ J; },
/* harmony export */   "enableES5": function() { return /* binding */ N; },
/* harmony export */   "enableMapSet": function() { return /* binding */ C; },
/* harmony export */   "enablePatches": function() { return /* binding */ T; },
/* harmony export */   "finishDraft": function() { return /* binding */ dn; },
/* harmony export */   "freeze": function() { return /* binding */ d; },
/* harmony export */   "immerable": function() { return /* binding */ L; },
/* harmony export */   "isDraft": function() { return /* binding */ t; },
/* harmony export */   "isDraftable": function() { return /* binding */ r; },
/* harmony export */   "nothing": function() { return /* binding */ H; },
/* harmony export */   "original": function() { return /* binding */ e; },
/* harmony export */   "produce": function() { return /* binding */ fn; },
/* harmony export */   "produceWithPatches": function() { return /* binding */ cn; },
/* harmony export */   "setAutoFreeze": function() { return /* binding */ sn; },
/* harmony export */   "setUseProxies": function() { return /* binding */ vn; }
/* harmony export */ });
function n(n){for(var t=arguments.length,r=Array(t>1?t-1:0),e=1;e<t;e++)r[e-1]=arguments[e];if(true){var i=Y[n],o=i?"function"==typeof i?i.apply(null,r):i:"unknown error nr: "+n;throw Error("[Immer] "+o)}throw Error("[Immer] minified error nr: "+n+(r.length?" "+r.map((function(n){return"'"+n+"'"})).join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function t(n){return!!n&&!!n[Q]}function r(n){return!!n&&(function(n){if(!n||"object"!=typeof n)return!1;var t=Object.getPrototypeOf(n);if(null===t)return!0;var r=Object.hasOwnProperty.call(t,"constructor")&&t.constructor;return r===Object||"function"==typeof r&&Function.toString.call(r)===Z}(n)||Array.isArray(n)||!!n[L]||!!n.constructor[L]||s(n)||v(n))}function e(r){return t(r)||n(23,r),r[Q].t}function i(n,t,r){void 0===r&&(r=!1),0===o(n)?(r?Object.keys:nn)(n).forEach((function(e){r&&"symbol"==typeof e||t(e,n[e],n)})):n.forEach((function(r,e){return t(e,r,n)}))}function o(n){var t=n[Q];return t?t.i>3?t.i-4:t.i:Array.isArray(n)?1:s(n)?2:v(n)?3:0}function u(n,t){return 2===o(n)?n.has(t):Object.prototype.hasOwnProperty.call(n,t)}function a(n,t){return 2===o(n)?n.get(t):n[t]}function f(n,t,r){var e=o(n);2===e?n.set(t,r):3===e?(n.delete(t),n.add(r)):n[t]=r}function c(n,t){return n===t?0!==n||1/n==1/t:n!=n&&t!=t}function s(n){return X&&n instanceof Map}function v(n){return q&&n instanceof Set}function p(n){return n.o||n.t}function l(n){if(Array.isArray(n))return Array.prototype.slice.call(n);var t=tn(n);delete t[Q];for(var r=nn(t),e=0;e<r.length;e++){var i=r[e],o=t[i];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(t[i]={configurable:!0,writable:!0,enumerable:o.enumerable,value:n[i]})}return Object.create(Object.getPrototypeOf(n),t)}function d(n,e){return void 0===e&&(e=!1),y(n)||t(n)||!r(n)?n:(o(n)>1&&(n.set=n.add=n.clear=n.delete=h),Object.freeze(n),e&&i(n,(function(n,t){return d(t,!0)}),!0),n)}function h(){n(2)}function y(n){return null==n||"object"!=typeof n||Object.isFrozen(n)}function b(t){var r=rn[t];return r||n(18,t),r}function m(n,t){rn[n]||(rn[n]=t)}function _(){return false||U||n(0),U}function j(n,t){t&&(b("Patches"),n.u=[],n.s=[],n.v=t)}function O(n){g(n),n.p.forEach(S),n.p=null}function g(n){n===U&&(U=n.l)}function w(n){return U={p:[],l:U,h:n,m:!0,_:0}}function S(n){var t=n[Q];0===t.i||1===t.i?t.j():t.O=!0}function P(t,e){e._=e.p.length;var i=e.p[0],o=void 0!==t&&t!==i;return e.h.g||b("ES5").S(e,t,o),o?(i[Q].P&&(O(e),n(4)),r(t)&&(t=M(e,t),e.l||x(e,t)),e.u&&b("Patches").M(i[Q],t,e.u,e.s)):t=M(e,i,[]),O(e),e.u&&e.v(e.u,e.s),t!==H?t:void 0}function M(n,t,r){if(y(t))return t;var e=t[Q];if(!e)return i(t,(function(i,o){return A(n,e,t,i,o,r)}),!0),t;if(e.A!==n)return t;if(!e.P)return x(n,e.t,!0),e.t;if(!e.I){e.I=!0,e.A._--;var o=4===e.i||5===e.i?e.o=l(e.k):e.o;i(3===e.i?new Set(o):o,(function(t,i){return A(n,e,o,t,i,r)})),x(n,o,!1),r&&n.u&&b("Patches").R(e,r,n.u,n.s)}return e.o}function A(e,i,o,a,c,s){if( true&&c===o&&n(5),t(c)){var v=M(e,c,s&&i&&3!==i.i&&!u(i.D,a)?s.concat(a):void 0);if(f(o,a,v),!t(v))return;e.m=!1}if(r(c)&&!y(c)){if(!e.h.F&&e._<1)return;M(e,c),i&&i.A.l||x(e,c)}}function x(n,t,r){void 0===r&&(r=!1),n.h.F&&n.m&&d(t,r)}function z(n,t){var r=n[Q];return(r?p(r):n)[t]}function I(n,t){if(t in n)for(var r=Object.getPrototypeOf(n);r;){var e=Object.getOwnPropertyDescriptor(r,t);if(e)return e;r=Object.getPrototypeOf(r)}}function k(n){n.P||(n.P=!0,n.l&&k(n.l))}function E(n){n.o||(n.o=l(n.t))}function R(n,t,r){var e=s(t)?b("MapSet").N(t,r):v(t)?b("MapSet").T(t,r):n.g?function(n,t){var r=Array.isArray(n),e={i:r?1:0,A:t?t.A:_(),P:!1,I:!1,D:{},l:t,t:n,k:null,o:null,j:null,C:!1},i=e,o=en;r&&(i=[e],o=on);var u=Proxy.revocable(i,o),a=u.revoke,f=u.proxy;return e.k=f,e.j=a,f}(t,r):b("ES5").J(t,r);return(r?r.A:_()).p.push(e),e}function D(e){return t(e)||n(22,e),function n(t){if(!r(t))return t;var e,u=t[Q],c=o(t);if(u){if(!u.P&&(u.i<4||!b("ES5").K(u)))return u.t;u.I=!0,e=F(t,c),u.I=!1}else e=F(t,c);return i(e,(function(t,r){u&&a(u.t,t)===r||f(e,t,n(r))})),3===c?new Set(e):e}(e)}function F(n,t){switch(t){case 2:return new Map(n);case 3:return Array.from(n)}return l(n)}function N(){function r(n,t){var r=s[n];return r?r.enumerable=t:s[n]=r={configurable:!0,enumerable:t,get:function(){var t=this[Q];return true&&f(t),en.get(t,n)},set:function(t){var r=this[Q]; true&&f(r),en.set(r,n,t)}},r}function e(n){for(var t=n.length-1;t>=0;t--){var r=n[t][Q];if(!r.P)switch(r.i){case 5:a(r)&&k(r);break;case 4:o(r)&&k(r)}}}function o(n){for(var t=n.t,r=n.k,e=nn(r),i=e.length-1;i>=0;i--){var o=e[i];if(o!==Q){var a=t[o];if(void 0===a&&!u(t,o))return!0;var f=r[o],s=f&&f[Q];if(s?s.t!==a:!c(f,a))return!0}}var v=!!t[Q];return e.length!==nn(t).length+(v?0:1)}function a(n){var t=n.k;if(t.length!==n.t.length)return!0;var r=Object.getOwnPropertyDescriptor(t,t.length-1);return!(!r||r.get)}function f(t){t.O&&n(3,JSON.stringify(p(t)))}var s={};m("ES5",{J:function(n,t){var e=Array.isArray(n),i=function(n,t){if(n){for(var e=Array(t.length),i=0;i<t.length;i++)Object.defineProperty(e,""+i,r(i,!0));return e}var o=tn(t);delete o[Q];for(var u=nn(o),a=0;a<u.length;a++){var f=u[a];o[f]=r(f,n||!!o[f].enumerable)}return Object.create(Object.getPrototypeOf(t),o)}(e,n),o={i:e?5:4,A:t?t.A:_(),P:!1,I:!1,D:{},l:t,t:n,k:i,o:null,O:!1,C:!1};return Object.defineProperty(i,Q,{value:o,writable:!0}),i},S:function(n,r,o){o?t(r)&&r[Q].A===n&&e(n.p):(n.u&&function n(t){if(t&&"object"==typeof t){var r=t[Q];if(r){var e=r.t,o=r.k,f=r.D,c=r.i;if(4===c)i(o,(function(t){t!==Q&&(void 0!==e[t]||u(e,t)?f[t]||n(o[t]):(f[t]=!0,k(r)))})),i(e,(function(n){void 0!==o[n]||u(o,n)||(f[n]=!1,k(r))}));else if(5===c){if(a(r)&&(k(r),f.length=!0),o.length<e.length)for(var s=o.length;s<e.length;s++)f[s]=!1;else for(var v=e.length;v<o.length;v++)f[v]=!0;for(var p=Math.min(o.length,e.length),l=0;l<p;l++)void 0===f[l]&&n(o[l])}}}}(n.p[0]),e(n.p))},K:function(n){return 4===n.i?o(n):a(n)}})}function T(){function e(n){if(!r(n))return n;if(Array.isArray(n))return n.map(e);if(s(n))return new Map(Array.from(n.entries()).map((function(n){return[n[0],e(n[1])]})));if(v(n))return new Set(Array.from(n).map(e));var t=Object.create(Object.getPrototypeOf(n));for(var i in n)t[i]=e(n[i]);return u(n,L)&&(t[L]=n[L]),t}function f(n){return t(n)?e(n):n}var c="add";m("Patches",{$:function(t,r){return r.forEach((function(r){for(var i=r.path,u=r.op,f=t,s=0;s<i.length-1;s++){var v=o(f),p=i[s];0!==v&&1!==v||"__proto__"!==p&&"constructor"!==p||n(24),"function"==typeof f&&"prototype"===p&&n(24),"object"!=typeof(f=a(f,p))&&n(15,i.join("/"))}var l=o(f),d=e(r.value),h=i[i.length-1];switch(u){case"replace":switch(l){case 2:return f.set(h,d);case 3:n(16);default:return f[h]=d}case c:switch(l){case 1:return f.splice(h,0,d);case 2:return f.set(h,d);case 3:return f.add(d);default:return f[h]=d}case"remove":switch(l){case 1:return f.splice(h,1);case 2:return f.delete(h);case 3:return f.delete(r.value);default:return delete f[h]}default:n(17,u)}})),t},R:function(n,t,r,e){switch(n.i){case 0:case 4:case 2:return function(n,t,r,e){var o=n.t,s=n.o;i(n.D,(function(n,i){var v=a(o,n),p=a(s,n),l=i?u(o,n)?"replace":c:"remove";if(v!==p||"replace"!==l){var d=t.concat(n);r.push("remove"===l?{op:l,path:d}:{op:l,path:d,value:p}),e.push(l===c?{op:"remove",path:d}:"remove"===l?{op:c,path:d,value:f(v)}:{op:"replace",path:d,value:f(v)})}}))}(n,t,r,e);case 5:case 1:return function(n,t,r,e){var i=n.t,o=n.D,u=n.o;if(u.length<i.length){var a=[u,i];i=a[0],u=a[1];var s=[e,r];r=s[0],e=s[1]}for(var v=0;v<i.length;v++)if(o[v]&&u[v]!==i[v]){var p=t.concat([v]);r.push({op:"replace",path:p,value:f(u[v])}),e.push({op:"replace",path:p,value:f(i[v])})}for(var l=i.length;l<u.length;l++){var d=t.concat([l]);r.push({op:c,path:d,value:f(u[l])})}i.length<u.length&&e.push({op:"replace",path:t.concat(["length"]),value:i.length})}(n,t,r,e);case 3:return function(n,t,r,e){var i=n.t,o=n.o,u=0;i.forEach((function(n){if(!o.has(n)){var i=t.concat([u]);r.push({op:"remove",path:i,value:n}),e.unshift({op:c,path:i,value:n})}u++})),u=0,o.forEach((function(n){if(!i.has(n)){var o=t.concat([u]);r.push({op:c,path:o,value:n}),e.unshift({op:"remove",path:o,value:n})}u++}))}(n,t,r,e)}},M:function(n,t,r,e){r.push({op:"replace",path:[],value:t===H?void 0:t}),e.push({op:"replace",path:[],value:n.t})}})}function C(){function t(n,t){function r(){this.constructor=n}a(n,t),n.prototype=(r.prototype=t.prototype,new r)}function e(n){n.o||(n.D=new Map,n.o=new Map(n.t))}function o(n){n.o||(n.o=new Set,n.t.forEach((function(t){if(r(t)){var e=R(n.A.h,t,n);n.p.set(t,e),n.o.add(e)}else n.o.add(t)})))}function u(t){t.O&&n(3,JSON.stringify(p(t)))}var a=function(n,t){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)t.hasOwnProperty(r)&&(n[r]=t[r])})(n,t)},f=function(){function n(n,t){return this[Q]={i:2,l:t,A:t?t.A:_(),P:!1,I:!1,o:void 0,D:void 0,t:n,k:this,C:!1,O:!1},this}t(n,Map);var o=n.prototype;return Object.defineProperty(o,"size",{get:function(){return p(this[Q]).size}}),o.has=function(n){return p(this[Q]).has(n)},o.set=function(n,t){var r=this[Q];return u(r),p(r).has(n)&&p(r).get(n)===t||(e(r),k(r),r.D.set(n,!0),r.o.set(n,t),r.D.set(n,!0)),this},o.delete=function(n){if(!this.has(n))return!1;var t=this[Q];return u(t),e(t),k(t),t.D.set(n,!1),t.o.delete(n),!0},o.clear=function(){var n=this[Q];u(n),p(n).size&&(e(n),k(n),n.D=new Map,i(n.t,(function(t){n.D.set(t,!1)})),n.o.clear())},o.forEach=function(n,t){var r=this;p(this[Q]).forEach((function(e,i){n.call(t,r.get(i),i,r)}))},o.get=function(n){var t=this[Q];u(t);var i=p(t).get(n);if(t.I||!r(i))return i;if(i!==t.t.get(n))return i;var o=R(t.A.h,i,t);return e(t),t.o.set(n,o),o},o.keys=function(){return p(this[Q]).keys()},o.values=function(){var n,t=this,r=this.keys();return(n={})[V]=function(){return t.values()},n.next=function(){var n=r.next();return n.done?n:{done:!1,value:t.get(n.value)}},n},o.entries=function(){var n,t=this,r=this.keys();return(n={})[V]=function(){return t.entries()},n.next=function(){var n=r.next();if(n.done)return n;var e=t.get(n.value);return{done:!1,value:[n.value,e]}},n},o[V]=function(){return this.entries()},n}(),c=function(){function n(n,t){return this[Q]={i:3,l:t,A:t?t.A:_(),P:!1,I:!1,o:void 0,t:n,k:this,p:new Map,O:!1,C:!1},this}t(n,Set);var r=n.prototype;return Object.defineProperty(r,"size",{get:function(){return p(this[Q]).size}}),r.has=function(n){var t=this[Q];return u(t),t.o?!!t.o.has(n)||!(!t.p.has(n)||!t.o.has(t.p.get(n))):t.t.has(n)},r.add=function(n){var t=this[Q];return u(t),this.has(n)||(o(t),k(t),t.o.add(n)),this},r.delete=function(n){if(!this.has(n))return!1;var t=this[Q];return u(t),o(t),k(t),t.o.delete(n)||!!t.p.has(n)&&t.o.delete(t.p.get(n))},r.clear=function(){var n=this[Q];u(n),p(n).size&&(o(n),k(n),n.o.clear())},r.values=function(){var n=this[Q];return u(n),o(n),n.o.values()},r.entries=function(){var n=this[Q];return u(n),o(n),n.o.entries()},r.keys=function(){return this.values()},r[V]=function(){return this.values()},r.forEach=function(n,t){for(var r=this.values(),e=r.next();!e.done;)n.call(t,e.value,e.value,this),e=r.next()},n}();m("MapSet",{N:function(n,t){return new f(n,t)},T:function(n,t){return new c(n,t)}})}function J(){N(),C(),T()}function K(n){return n}function $(n){return n}var G,U,W="undefined"!=typeof Symbol&&"symbol"==typeof Symbol("x"),X="undefined"!=typeof Map,q="undefined"!=typeof Set,B="undefined"!=typeof Proxy&&void 0!==Proxy.revocable&&"undefined"!=typeof Reflect,H=W?Symbol.for("immer-nothing"):((G={})["immer-nothing"]=!0,G),L=W?Symbol.for("immer-draftable"):"__$immer_draftable",Q=W?Symbol.for("immer-state"):"__$immer_state",V="undefined"!=typeof Symbol&&Symbol.iterator||"@@iterator",Y={0:"Illegal state",1:"Immer drafts cannot have computed properties",2:"This object has been frozen and should not be mutated",3:function(n){return"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? "+n},4:"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.",5:"Immer forbids circular references",6:"The first or second argument to `produce` must be a function",7:"The third argument to `produce` must be a function or undefined",8:"First argument to `createDraft` must be a plain object, an array, or an immerable object",9:"First argument to `finishDraft` must be a draft returned by `createDraft`",10:"The given draft is already finalized",11:"Object.defineProperty() cannot be used on an Immer draft",12:"Object.setPrototypeOf() cannot be used on an Immer draft",13:"Immer only supports deleting array indices",14:"Immer only supports setting array indices and the 'length' property",15:function(n){return"Cannot apply patch, path doesn't resolve: "+n},16:'Sets cannot have "replace" patches.',17:function(n){return"Unsupported patch operation: "+n},18:function(n){return"The plugin for '"+n+"' has not been loaded into Immer. To enable the plugin, import and call `enable"+n+"()` when initializing your application."},20:"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available",21:function(n){return"produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '"+n+"'"},22:function(n){return"'current' expects a draft, got: "+n},23:function(n){return"'original' expects a draft, got: "+n},24:"Patching reserved attributes like __proto__, prototype and constructor is not allowed"},Z=""+Object.prototype.constructor,nn="undefined"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(n){return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n))}:Object.getOwnPropertyNames,tn=Object.getOwnPropertyDescriptors||function(n){var t={};return nn(n).forEach((function(r){t[r]=Object.getOwnPropertyDescriptor(n,r)})),t},rn={},en={get:function(n,t){if(t===Q)return n;var e=p(n);if(!u(e,t))return function(n,t,r){var e,i=I(t,r);return i?"value"in i?i.value:null===(e=i.get)||void 0===e?void 0:e.call(n.k):void 0}(n,e,t);var i=e[t];return n.I||!r(i)?i:i===z(n.t,t)?(E(n),n.o[t]=R(n.A.h,i,n)):i},has:function(n,t){return t in p(n)},ownKeys:function(n){return Reflect.ownKeys(p(n))},set:function(n,t,r){var e=I(p(n),t);if(null==e?void 0:e.set)return e.set.call(n.k,r),!0;if(!n.P){var i=z(p(n),t),o=null==i?void 0:i[Q];if(o&&o.t===r)return n.o[t]=r,n.D[t]=!1,!0;if(c(r,i)&&(void 0!==r||u(n.t,t)))return!0;E(n),k(n)}return n.o[t]===r&&"number"!=typeof r&&(void 0!==r||t in n.o)||(n.o[t]=r,n.D[t]=!0,!0)},deleteProperty:function(n,t){return void 0!==z(n.t,t)||t in n.t?(n.D[t]=!1,E(n),k(n)):delete n.D[t],n.o&&delete n.o[t],!0},getOwnPropertyDescriptor:function(n,t){var r=p(n),e=Reflect.getOwnPropertyDescriptor(r,t);return e?{writable:!0,configurable:1!==n.i||"length"!==t,enumerable:e.enumerable,value:r[t]}:e},defineProperty:function(){n(11)},getPrototypeOf:function(n){return Object.getPrototypeOf(n.t)},setPrototypeOf:function(){n(12)}},on={};i(en,(function(n,t){on[n]=function(){return arguments[0]=arguments[0][0],t.apply(this,arguments)}})),on.deleteProperty=function(t,r){return true&&isNaN(parseInt(r))&&n(13),en.deleteProperty.call(this,t[0],r)},on.set=function(t,r,e){return true&&"length"!==r&&isNaN(parseInt(r))&&n(14),en.set.call(this,t[0],r,e,t[0])};var un=function(){function e(t){var e=this;this.g=B,this.F=!0,this.produce=function(t,i,o){if("function"==typeof t&&"function"!=typeof i){var u=i;i=t;var a=e;return function(n){var t=this;void 0===n&&(n=u);for(var r=arguments.length,e=Array(r>1?r-1:0),o=1;o<r;o++)e[o-1]=arguments[o];return a.produce(n,(function(n){var r;return(r=i).call.apply(r,[t,n].concat(e))}))}}var f;if("function"!=typeof i&&n(6),void 0!==o&&"function"!=typeof o&&n(7),r(t)){var c=w(e),s=R(e,t,void 0),v=!0;try{f=i(s),v=!1}finally{v?O(c):g(c)}return"undefined"!=typeof Promise&&f instanceof Promise?f.then((function(n){return j(c,o),P(n,c)}),(function(n){throw O(c),n})):(j(c,o),P(f,c))}if(!t||"object"!=typeof t){if((f=i(t))===H)return;return void 0===f&&(f=t),e.F&&d(f,!0),f}n(21,t)},this.produceWithPatches=function(n,t){return"function"==typeof n?function(t){for(var r=arguments.length,i=Array(r>1?r-1:0),o=1;o<r;o++)i[o-1]=arguments[o];return e.produceWithPatches(t,(function(t){return n.apply(void 0,[t].concat(i))}))}:[e.produce(n,t,(function(n,t){r=n,i=t})),r,i];var r,i},"boolean"==typeof(null==t?void 0:t.useProxies)&&this.setUseProxies(t.useProxies),"boolean"==typeof(null==t?void 0:t.autoFreeze)&&this.setAutoFreeze(t.autoFreeze)}var i=e.prototype;return i.createDraft=function(e){r(e)||n(8),t(e)&&(e=D(e));var i=w(this),o=R(this,e,void 0);return o[Q].C=!0,g(i),o},i.finishDraft=function(t,r){var e=t&&t[Q]; true&&(e&&e.C||n(9),e.I&&n(10));var i=e.A;return j(i,r),P(void 0,i)},i.setAutoFreeze=function(n){this.F=n},i.setUseProxies=function(t){t&&!B&&n(20),this.g=t},i.applyPatches=function(n,r){var e;for(e=r.length-1;e>=0;e--){var i=r[e];if(0===i.path.length&&"replace"===i.op){n=i.value;break}}var o=b("Patches").$;return t(n)?o(n,r):this.produce(n,(function(n){return o(n,r.slice(e+1))}))},e}(),an=new un,fn=an.produce,cn=an.produceWithPatches.bind(an),sn=an.setAutoFreeze.bind(an),vn=an.setUseProxies.bind(an),pn=an.applyPatches.bind(an),ln=an.createDraft.bind(an),dn=an.finishDraft.bind(an);/* harmony default export */ __webpack_exports__["default"] = (fn);
//# sourceMappingURL=immer.esm.js.map


/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js!":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js! ***!
  \**********************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


    (window.__NEXT_P = window.__NEXT_P || []).push([
      "/_app",
      function () {
        return __webpack_require__(/*! private-next-pages/_app.js */ "./pages/_app.js");
      }
    ]);
  

/***/ }),

/***/ "./node_modules/@material-tailwind/react/tailwind.css":
/*!************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/tailwind.css ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var api = __webpack_require__(/*! !../../next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !!../../next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!../../next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./tailwind.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./node_modules/@material-tailwind/react/tailwind.css");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.id, content, '']];
            }

var options = {};

options.insert = function(element){// These elements should always exist. If they do not,
// this code should fail.
var anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>
// Each style tag should be placed right before our
// anchor. By inserting before and not after, we do not
// need to track the last inserted element.
parentNode.insertBefore(element,anchorElement);};
options.singleton = false;

var update = api(content, options);


if (true) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a,b,isNamedExport){if(!a&&b||a&&!b){return false;}let p;for(p in a){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(a[p]!==b[p]){return false;}}for(p in b){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(!a[p]){return false;}}return true;};
    var oldLocals = content.locals;

    module.hot.accept(
      /*! !!../../next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!../../next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./tailwind.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./node_modules/@material-tailwind/react/tailwind.css",
      function () {
        content = __webpack_require__(/*! !!../../next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!../../next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./tailwind.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./node_modules/@material-tailwind/react/tailwind.css");

              content = content.__esModule ? content.default : content;

              if (typeof content === 'string') {
                content = [[module.id, content, '']];
              }

              if (!isEqualLocals(oldLocals, content.locals)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}

module.exports = content.locals || {};

/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var api = __webpack_require__(/*! !../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !!../node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[1]!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[2]!./globals.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[2]!./styles/globals.css");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.id, content, '']];
            }

var options = {};

options.insert = function(element){// These elements should always exist. If they do not,
// this code should fail.
var anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>
// Each style tag should be placed right before our
// anchor. By inserting before and not after, we do not
// need to track the last inserted element.
parentNode.insertBefore(element,anchorElement);};
options.singleton = false;

var update = api(content, options);


if (true) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a,b,isNamedExport){if(!a&&b||a&&!b){return false;}let p;for(p in a){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(a[p]!==b[p]){return false;}}for(p in b){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(!a[p]){return false;}}return true;};
    var oldLocals = content.locals;

    module.hot.accept(
      /*! !!../node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[1]!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[2]!./globals.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[2]!./styles/globals.css",
      function () {
        content = __webpack_require__(/*! !!../node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[1]!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[2]!./globals.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[2]!./styles/globals.css");

              content = content.__esModule ? content.default : content;

              if (typeof content === 'string') {
                content = [[module.id, content, '']];
              }

              if (!isEqualLocals(oldLocals, content.locals)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}

module.exports = content.locals || {};

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
const isOldIE=function isOldIE(){let memo;return function memorize(){if(typeof memo==='undefined'){// Test for IE <= 9 as proposed by Browserhacks
// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
// Tests for existence of standard globals is to allow style-loader
// to operate correctly into non-standard environments
// @see https://github.com/webpack-contrib/style-loader/issues/177
memo=Boolean(window&&document&&document.all&&!window.atob);}return memo;};}();const getTarget=function getTarget(){const memo={};return function memorize(target){if(typeof memo[target]==='undefined'){let styleTarget=document.querySelector(target);// Special case to return head of iframe instead of iframe itself
if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement){try{// This will throw an exception if access to iframe is blocked
// due to cross-origin restrictions
styleTarget=styleTarget.contentDocument.head;}catch(e){// istanbul ignore next
styleTarget=null;}}memo[target]=styleTarget;}return memo[target];};}();const stylesInDom=[];function getIndexByIdentifier(identifier){let result=-1;for(let i=0;i<stylesInDom.length;i++){if(stylesInDom[i].identifier===identifier){result=i;break;}}return result;}function modulesToDom(list,options){const idCountMap={};const identifiers=[];for(let i=0;i<list.length;i++){const item=list[i];const id=options.base?item[0]+options.base:item[0];const count=idCountMap[id]||0;const identifier=id+' '+count.toString();idCountMap[id]=count+1;const index=getIndexByIdentifier(identifier);const obj={css:item[1],media:item[2],sourceMap:item[3]};if(index!==-1){stylesInDom[index].references++;stylesInDom[index].updater(obj);}else{stylesInDom.push({identifier:identifier,updater:addStyle(obj,options),references:1});}identifiers.push(identifier);}return identifiers;}function insertStyleElement(options){const style=document.createElement('style');const attributes=options.attributes||{};if(typeof attributes.nonce==='undefined'){const nonce=// eslint-disable-next-line no-undef
 true?__webpack_require__.nc:0;if(nonce){attributes.nonce=nonce;}}Object.keys(attributes).forEach(function(key){style.setAttribute(key,attributes[key]);});if(typeof options.insert==='function'){options.insert(style);}else{const target=getTarget(options.insert||'head');if(!target){throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");}target.appendChild(style);}return style;}function removeStyleElement(style){// istanbul ignore if
if(style.parentNode===null){return false;}style.parentNode.removeChild(style);}/* istanbul ignore next  */const replaceText=function replaceText(){const textStore=[];return function replace(index,replacement){textStore[index]=replacement;return textStore.filter(Boolean).join('\n');};}();function applyToSingletonTag(style,index,remove,obj){const css=remove?'':obj.media?'@media '+obj.media+' {'+obj.css+'}':obj.css;// For old IE
/* istanbul ignore if  */if(style.styleSheet){style.styleSheet.cssText=replaceText(index,css);}else{const cssNode=document.createTextNode(css);const childNodes=style.childNodes;if(childNodes[index]){style.removeChild(childNodes[index]);}if(childNodes.length){style.insertBefore(cssNode,childNodes[index]);}else{style.appendChild(cssNode);}}}function applyToTag(style,options,obj){let css=obj.css;const media=obj.media;const sourceMap=obj.sourceMap;if(media){style.setAttribute('media',media);}else{style.removeAttribute('media');}if(sourceMap&&typeof btoa!=='undefined'){css+='\n/*# sourceMappingURL=data:application/json;base64,'+btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))+' */';}// For old IE
/* istanbul ignore if  */if(style.styleSheet){style.styleSheet.cssText=css;}else{while(style.firstChild){style.removeChild(style.firstChild);}style.appendChild(document.createTextNode(css));}}let singleton=null;let singletonCounter=0;function addStyle(obj,options){let style;let update;let remove;if(options.singleton){const styleIndex=singletonCounter++;style=singleton||(singleton=insertStyleElement(options));update=applyToSingletonTag.bind(null,style,styleIndex,false);remove=applyToSingletonTag.bind(null,style,styleIndex,true);}else{style=insertStyleElement(options);update=applyToTag.bind(null,style,options);remove=function(){removeStyleElement(style);};}update(obj);return function updateStyle(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap){return;}update(obj=newObj);}else{remove();}};}module.exports=function(list,options){options=options||{};// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
// tags it will allow on a page
if(!options.singleton&&typeof options.singleton!=='boolean'){options.singleton=isOldIE();}list=list||[];let lastIdentifiers=modulesToDom(list,options);return function update(newList){newList=newList||[];if(Object.prototype.toString.call(newList)!=='[object Array]'){return;}for(let i=0;i<lastIdentifiers.length;i++){const identifier=lastIdentifiers[i];const index=getIndexByIdentifier(identifier);stylesInDom[index].references--;}const newLastIdentifiers=modulesToDom(newList,options);for(let i=0;i<lastIdentifiers.length;i++){const identifier=lastIdentifiers[i];const index=getIndexByIdentifier(identifier);if(stylesInDom[index].references===0){stylesInDom[index].updater();stylesInDom.splice(index,1);}}lastIdentifiers=newLastIdentifiers;};};
//# sourceMappingURL=injectStylesIntoStyleTag.js.map

/***/ }),

/***/ "./node_modules/next/dist/compiled/css-loader/api.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/compiled/css-loader/api.js ***!
  \***********************************************************/
/***/ (function(module) {

var __dirname = "/";
module.exports=function(){"use strict";var n={762:function(n){n.exports=function(n){var t=[];t.toString=function toString(){return this.map(function(t){var r=cssWithMappingToString(t,n);if(t[2]){return"@media ".concat(t[2]," {").concat(r,"}")}return r}).join("")};t.i=function(n,r,o){if(typeof n==="string"){n=[[null,n,""]]}var e={};if(o){for(var a=0;a<this.length;a++){var c=this[a][0];if(c!=null){e[c]=true}}}for(var i=0;i<n.length;i++){var u=[].concat(n[i]);if(o&&e[u[0]]){continue}if(r){if(!u[2]){u[2]=r}else{u[2]="".concat(r," and ").concat(u[2])}}t.push(u)}};return t};function cssWithMappingToString(n,t){var r=n[1]||"";var o=n[3];if(!o){return r}if(t&&typeof btoa==="function"){var e=toComment(o);var a=o.sources.map(function(n){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(n," */")});return[r].concat(a).concat([e]).join("\n")}return[r].join("\n")}function toComment(n){var t=btoa(unescape(encodeURIComponent(JSON.stringify(n))));var r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t);return"/*# ".concat(r," */")}}};var t={};function __nccwpck_require__(r){if(t[r]){return t[r].exports}var o=t[r]={exports:{}};var e=true;try{n[r](o,o.exports,__nccwpck_require__);e=false}finally{if(e)delete t[r]}return o.exports}__nccwpck_require__.ab=__dirname+"/";return __nccwpck_require__(762)}();

/***/ }),

/***/ "./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./node_modules/@material-tailwind/react/tailwind.css":
/*!**************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./node_modules/@material-tailwind/react/tailwind.css ***!
  \**************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../next/dist/compiled/css-loader/api.js */ "./node_modules/next/dist/compiled/css-loader/api.js");
/* harmony import */ var _next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
___CSS_LOADER_EXPORT___.push([module.id, "@import url(https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@100;200;300;400;500;600;700;800;900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap);"]);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".tippy-box[data-placement^=top]>.tippy-svg-arrow{bottom:0}\n.tippy-box[data-placement^=top]>.tippy-svg-arrow:after,.tippy-box[data-placement^=top]>.tippy-svg-arrow>svg{top:16px;transform:rotate(180deg)}\n.tippy-box[data-placement^=bottom]>.tippy-svg-arrow{top:0}\n.tippy-box[data-placement^=bottom]>.tippy-svg-arrow>svg{bottom:16px}\n.tippy-box[data-placement^=left]>.tippy-svg-arrow{right:0}\n.tippy-box[data-placement^=left]>.tippy-svg-arrow:after,.tippy-box[data-placement^=left]>.tippy-svg-arrow>svg{transform:rotate(90deg);top:calc(50% - 3px);left:11px}\n.tippy-box[data-placement^=right]>.tippy-svg-arrow{left:0}\n.tippy-box[data-placement^=right]>.tippy-svg-arrow:after,.tippy-box[data-placement^=right]>.tippy-svg-arrow>svg{transform:rotate(-90deg);top:calc(50% - 3px);right:11px}\n.tippy-svg-arrow{width:16px;height:16px;fill:#333;text-align:initial}\n.tippy-svg-arrow,.tippy-svg-arrow>svg{position:absolute}\n.tippy-box[data-animation=scale][data-placement^=top]{transform-origin:bottom}\n.tippy-box[data-animation=scale][data-placement^=bottom]{transform-origin:top}\n.tippy-box[data-animation=scale][data-placement^=left]{transform-origin:right}\n.tippy-box[data-animation=scale][data-placement^=right]{transform-origin:left}\n.tippy-box[data-animation=scale][data-state=hidden]{transform:scale(.5);opacity:0}\n.tippy-box[data-animation=shift-away][data-state=hidden]{opacity:0}\n.tippy-box[data-animation=shift-away][data-state=hidden][data-placement^=top]{transform:translateY(10px)}\n.tippy-box[data-animation=shift-away][data-state=hidden][data-placement^=bottom]{transform:translateY(-10px)}\n.tippy-box[data-animation=shift-away][data-state=hidden][data-placement^=left]{transform:translateX(10px)}\n.tippy-box[data-animation=shift-away][data-state=hidden][data-placement^=right]{transform:translateX(-10px)}\n/*! tailwindcss v2.1.4 | MIT License | https://tailwindcss.com */\n/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */\n/*\nDocument\n========\n*/\n/**\nUse a better box model (opinionated).\n*/\n*,\n::before,\n::after {\n\tbox-sizing: border-box;\n}\n/**\nUse a more readable tab size (opinionated).\n*/\nhtml {\n\t-moz-tab-size: 4;\n\t-o-tab-size: 4;\n\t   tab-size: 4;\n}\n/**\n1. Correct the line height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n*/\nhtml {\n\tline-height: 1.15; /* 1 */\n\t-webkit-text-size-adjust: 100%; /* 2 */\n}\n/*\nSections\n========\n*/\n/**\nRemove the margin in all browsers.\n*/\nbody {\n\tmargin: 0;\n}\n/**\nImprove consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n*/\nbody {\n\tfont-family:\n\t\tsystem-ui,\n\t\t-apple-system, /* Firefox supports this but not yet `system-ui` */\n\t\t'Segoe UI',\n\t\tRoboto,\n\t\tHelvetica,\n\t\tArial,\n\t\tsans-serif,\n\t\t'Apple Color Emoji',\n\t\t'Segoe UI Emoji';\n}\n/*\nGrouping content\n================\n*/\n/**\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n*/\nhr {\n\theight: 0; /* 1 */\n\tcolor: inherit; /* 2 */\n}\n/*\nText-level semantics\n====================\n*/\n/**\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\nabbr[title] {\n\t-webkit-text-decoration: underline dotted;\n\t        text-decoration: underline dotted;\n}\n/**\nAdd the correct font weight in Edge and Safari.\n*/\nb,\nstrong {\n\tfont-weight: bolder;\n}\n/**\n1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n2. Correct the odd 'em' font sizing in all browsers.\n*/\ncode,\nkbd,\nsamp,\npre {\n\tfont-family:\n\t\tui-monospace,\n\t\tSFMono-Regular,\n\t\tConsolas,\n\t\t'Liberation Mono',\n\t\tMenlo,\n\t\tmonospace; /* 1 */\n\tfont-size: 1em; /* 2 */\n}\n/**\nAdd the correct font size in all browsers.\n*/\nsmall {\n\tfont-size: 80%;\n}\n/**\nPrevent 'sub' and 'sup' elements from affecting the line height in all browsers.\n*/\nsub,\nsup {\n\tfont-size: 75%;\n\tline-height: 0;\n\tposition: relative;\n\tvertical-align: baseline;\n}\nsub {\n\tbottom: -0.25em;\n}\nsup {\n\ttop: -0.5em;\n}\n/*\nTabular data\n============\n*/\n/**\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n*/\ntable {\n\ttext-indent: 0; /* 1 */\n\tborder-color: inherit; /* 2 */\n}\n/*\nForms\n=====\n*/\n/**\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n*/\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n\tfont-family: inherit; /* 1 */\n\tfont-size: 100%; /* 1 */\n\tline-height: 1.15; /* 1 */\n\tmargin: 0; /* 2 */\n}\n/**\nRemove the inheritance of text transform in Edge and Firefox.\n1. Remove the inheritance of text transform in Firefox.\n*/\nbutton,\nselect { /* 1 */\n\ttext-transform: none;\n}\n/**\nCorrect the inability to style clickable types in iOS and Safari.\n*/\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n\t-webkit-appearance: button;\n}\n/**\nRemove the inner border and padding in Firefox.\n*/\n::-moz-focus-inner {\n\tborder-style: none;\n\tpadding: 0;\n}\n/**\nRestore the focus styles unset by the previous rule.\n*/\n:-moz-focusring {\n\toutline: 1px dotted ButtonText;\n}\n/**\nRemove the additional ':invalid' styles in Firefox.\nSee: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737\n*/\n:-moz-ui-invalid {\n\tbox-shadow: none;\n}\n/**\nRemove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.\n*/\nlegend {\n\tpadding: 0;\n}\n/**\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\nprogress {\n\tvertical-align: baseline;\n}\n/**\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n\theight: auto;\n}\n/**\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n[type='search'] {\n\t-webkit-appearance: textfield; /* 1 */\n\toutline-offset: -2px; /* 2 */\n}\n/**\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n::-webkit-search-decoration {\n\t-webkit-appearance: none;\n}\n/**\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to 'inherit' in Safari.\n*/\n::-webkit-file-upload-button {\n\t-webkit-appearance: button; /* 1 */\n\tfont: inherit; /* 2 */\n}\n/*\nInteractive\n===========\n*/\n/*\nAdd the correct display in Chrome and Safari.\n*/\nsummary {\n\tdisplay: list-item;\n}\n/**\n * Manually forked from SUIT CSS Base: https://github.com/suitcss/base\n * A thin layer on top of normalize.css that provides a starting point more\n * suitable for web applications.\n */\n/**\n * Removes the default spacing and border for appropriate elements.\n */\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\nbutton {\n  background-color: transparent;\n  background-image: none;\n}\n/**\n * Work around a Firefox/IE bug where the transparent `button` background\n * results in a loss of the default `button` focus styles.\n */\nbutton:focus {\n  outline: 1px dotted;\n  outline: 5px auto -webkit-focus-ring-color;\n}\nfieldset {\n  margin: 0;\n  padding: 0;\n}\nol,\nul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n/**\n * Tailwind custom reset styles\n */\n/**\n * 1. Use the user's configured `sans` font-family (with Tailwind's default\n *    sans-serif font stack as a fallback) as a sane default.\n * 2. Use Tailwind's default \"normal\" line-height so the user isn't forced\n *    to override it to ensure consistency even when using the default theme.\n */\nhtml {\n  font-family: Roboto, sans-serif; /* 1 */\n  line-height: 1.5; /* 2 */\n}\n/**\n * Inherit font-family and line-height from `html` so users can set them as\n * a class directly on the `html` element.\n */\nbody {\n  font-family: inherit;\n  line-height: inherit;\n}\n/**\n * 1. Prevent padding and border from affecting element width.\n *\n *    We used to set this in the html element and inherit from\n *    the parent element for everything else. This caused issues\n *    in shadow-dom-enhanced elements like <details> where the content\n *    is wrapped by a div with box-sizing set to `content-box`.\n *\n *    https://github.com/mozdevs/cssremedy/issues/4\n *\n *\n * 2. Allow adding a border to an element by just adding a border-width.\n *\n *    By default, the way the browser specifies that an element should have no\n *    border is by setting it's border-style to `none` in the user-agent\n *    stylesheet.\n *\n *    In order to easily add borders to elements by just setting the `border-width`\n *    property, we change the default border-style for all elements to `solid`, and\n *    use border-width to hide them instead. This way our `border` utilities only\n *    need to set the `border-width` property instead of the entire `border`\n *    shorthand, making our border utilities much more straightforward to compose.\n *\n *    https://github.com/tailwindcss/tailwindcss/pull/116\n */\n*,\n::before,\n::after {\n  box-sizing: border-box; /* 1 */\n  border-width: 0; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: #eeeeee; /* 2 */\n}\n/*\n * Ensure horizontal rules are visible by default\n */\nhr {\n  border-top-width: 1px;\n}\n/**\n * Undo the `border-style: none` reset that Normalize applies to images so that\n * our `border-{width}` utilities have the expected effect.\n *\n * The Normalize reset is unnecessary for us since we default the border-width\n * to 0 on all elements.\n *\n * https://github.com/tailwindcss/tailwindcss/issues/362\n */\nimg {\n  border-style: solid;\n}\ntextarea {\n  resize: vertical;\n}\ninput::-moz-placeholder, textarea::-moz-placeholder {\n  opacity: 1;\n  color: #bdbdbd;\n}\ninput:-ms-input-placeholder, textarea:-ms-input-placeholder {\n  opacity: 1;\n  color: #bdbdbd;\n}\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1;\n  color: #bdbdbd;\n}\nbutton,\n[role=\"button\"] {\n  cursor: pointer;\n}\ntable {\n  border-collapse: collapse;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n/**\n * Reset links to optimize for opt-in styling instead of\n * opt-out.\n */\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n/**\n * Reset form element properties that are easy to forget to\n * style explicitly so you don't inadvertently introduce\n * styles that deviate from your design system. These styles\n * supplement a partial reset that is already applied by\n * normalize.css.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  padding: 0;\n  line-height: inherit;\n  color: inherit;\n}\n/**\n * Use the configured 'mono' font family for elements that\n * are expected to be rendered with a monospace font, falling\n * back to the system monospace stack if there is no configured\n * 'mono' font family.\n */\npre,\ncode,\nkbd,\nsamp {\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n}\n/**\n * Make replaced elements `display: block` by default as that's\n * the behavior you want almost all of the time. Inspired by\n * CSS Remedy, with `svg` added as well.\n *\n * https://github.com/mozdevs/cssremedy/issues/14\n */\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block;\n  vertical-align: middle;\n}\n/**\n * Constrain images and videos to the parent width and preserve\n * their intrinsic aspect ratio.\n *\n * https://github.com/mozdevs/cssremedy/issues/14\n */\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n*{--tw-shadow:0 0 #0000;--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(33, 150, 243, 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000}\n.container{width:100%}\n@media (min-width: 640px){\n.container{max-width:640px}}\n@media (min-width: 768px){\n.container{max-width:768px}}\n@media (min-width: 1024px){\n.container{max-width:1024px}}\n@media (min-width: 1280px){\n.container{max-width:1280px}}\n@media (min-width: 1536px){\n.container{max-width:1536px}}\n.pointer-events-none{pointer-events:none}\n.pointer-events-auto{pointer-events:auto}\n.relative{position:relative}\n.absolute{position:absolute}\n.sticky{position:sticky}\n.fixed{position:fixed}\n.inset-0{top:0px;right:0px;bottom:0px;left:0px}\n.right-4{right:1rem}\n.top-1\\/3{top:33.333333%}\n.left-0{left:0px}\n.right-0{right:0px}\n.top-16{top:4rem}\n.-top-1\\.5{top:-0.375rem}\n.-top-0\\.5{top:-0.125rem}\n.-top-1{top:-0.25rem}\n.-top-0{top:0px}\n.top-1\\/4{top:25%}\n.top-1\\/2{top:50%}\n.right-2{right:0.5rem}\n.right-3{right:0.75rem}\n.top-2{top:0.5rem}\n.top-0{top:0px}\n.-bottom-4{bottom:-1rem}\n.-bottom-5{bottom:-1.25rem}\n.z-30{z-index:30}\n.z-20{z-index:20}\n.z-10{z-index:10}\n.z-50{z-index:50}\n.z-40{z-index:40}\n.float-left{float:left}\n.float-right{float:right}\n.mx-auto{margin-left:auto;margin-right:auto}\n.my-16{margin-top:4rem;margin-bottom:4rem}\n.my-4{margin-top:1rem;margin-bottom:1rem}\n.my-6{margin-top:1.5rem;margin-bottom:1.5rem}\n.mx-4{margin-left:1rem;margin-right:1rem}\n.mx-1{margin-left:0.25rem;margin-right:0.25rem}\n.my-8{margin-top:2rem;margin-bottom:2rem}\n.mx-5{margin-left:1.25rem;margin-right:1.25rem}\n.mb-16{margin-bottom:4rem}\n.mt-36{margin-top:9rem}\n.mt-10{margin-top:2.5rem}\n.mt-5{margin-top:1.25rem}\n.mt-16{margin-top:4rem}\n.mt-4{margin-top:1rem}\n.mt-20{margin-top:5rem}\n.mb-10{margin-bottom:2.5rem}\n.mt-8{margin-top:2rem}\n.mt-12{margin-top:3rem}\n.mb-24{margin-bottom:6rem}\n.mt-48{margin-top:12rem}\n.mr-auto{margin-right:auto}\n.ml-auto{margin-left:auto}\n.mb-6{margin-bottom:1.5rem}\n.mr-2{margin-right:0.5rem}\n.mt-2{margin-top:0.5rem}\n.mt-32{margin-top:8rem}\n.mt-6{margin-top:1.5rem}\n.mr-3{margin-right:0.75rem}\n.-mt-64{margin-top:-16rem}\n.mb-5{margin-bottom:1.25rem}\n.mb-12{margin-bottom:3rem}\n.mb-8{margin-bottom:2rem}\n.mb-4{margin-bottom:1rem}\n.mb-2{margin-bottom:0.5rem}\n.-mt-10{margin-top:-2.5rem}\n.-mt-9{margin-top:-2.25rem}\n.mb-1{margin-bottom:0.25rem}\n.ml-1{margin-left:0.25rem}\n.mr-1{margin-right:0.25rem}\n.mt-1{margin-top:0.25rem}\n.mb-0{margin-bottom:0px}\n.mt-3{margin-top:0.75rem}\n.ml-7{margin-left:1.75rem}\n.ml-2{margin-left:0.5rem}\n.mt-0{margin-top:0px}\n.mb-3{margin-bottom:0.75rem}\n.mr-4{margin-right:1rem}\n.-mt-12{margin-top:-3rem}\n.mr-10{margin-right:2.5rem}\n.block{display:block}\n.inline-block{display:inline-block}\n.flex{display:flex}\n.inline-flex{display:inline-flex}\n.grid{display:grid}\n.hidden{display:none}\n.h-16{height:4rem}\n.h-7{height:1.75rem}\n.h-10{height:2.5rem}\n.h-32{height:8rem}\n.h-20{height:5rem}\n.h-12{height:3rem}\n.h-6{height:1.5rem}\n.h-8{height:2rem}\n.h-24{height:6rem}\n.h-28{height:7rem}\n.h-5{height:1.25rem}\n.h-screen{height:100vh}\n.h-auto{height:auto}\n.h-full{height:100%}\n.h-9{height:2.25rem}\n.h-11{height:2.75rem}\n.h-4{height:1rem}\n.h-px{height:1px}\n.h-2{height:0.5rem}\n.w-full{width:100%}\n.w-40{width:10rem}\n.w-72{width:18rem}\n.w-\\[28rem\\]{width:28rem}\n.w-64{width:16rem}\n.w-96{width:24rem}\n.w-48{width:12rem}\n.w-16{width:4rem}\n.w-7{width:1.75rem}\n.w-32{width:8rem}\n.w-12{width:3rem}\n.w-10{width:2.5rem}\n.w-6{width:1.5rem}\n.w-8{width:2rem}\n.w-20{width:5rem}\n.w-24{width:6rem}\n.w-28{width:7rem}\n.w-5{width:1.25rem}\n.w-10\\/12{width:83.333333%}\n.w-4{width:1rem}\n.w-auto{width:auto}\n.w-14{width:3.5rem}\n.min-w-0{min-width:0px}\n.max-w-7xl{max-width:80rem}\n.max-w-full{max-width:100%}\n.max-w-max{max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}\n.max-w-sm{max-width:24rem}\n.max-w-6xl{max-width:72rem}\n.max-w-3xl{max-width:48rem}\n.max-w-xs{max-width:20rem}\n.flex-auto{flex:1 1 auto}\n.flex-1{flex:1 1 0%}\n.flex-none{flex:none}\n.flex-grow{flex-grow:1}\n.transform{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}\n.-translate-y-1\\/3{--tw-translate-y:-33.333333%}\n.-translate-y-1\\/2{--tw-translate-y:-50%}\n.translate-y-0{--tw-translate-y:0px}\n.-translate-y-10{--tw-translate-y:-2.5rem}\n.cursor-pointer{cursor:pointer}\n.cursor-not-allowed{cursor:not-allowed}\n.select-none{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}\n.resize-none{resize:none}\n.list-none{list-style-type:none}\n.flex-col{flex-direction:column}\n.flex-wrap{flex-wrap:wrap}\n.place-items-center{place-items:center}\n.items-center{align-items:center}\n.items-end{align-items:flex-end}\n.items-start{align-items:flex-start}\n.justify-between{justify-content:space-between}\n.justify-center{justify-content:center}\n.justify-start{justify-content:flex-start}\n.justify-end{justify-content:flex-end}\n.gap-8{gap:2rem}\n.gap-10{gap:2.5rem}\n.gap-4{gap:1rem}\n.gap-2{gap:0.5rem}\n.gap-3{gap:0.75rem}\n.gap-1{gap:0.25rem}\n.gap-x-2{-moz-column-gap:0.5rem;column-gap:0.5rem}\n.gap-y-8{row-gap:2rem}\n.gap-x-24{-moz-column-gap:6rem;column-gap:6rem}\n.gap-y-4{row-gap:1rem}\n.gap-x-8{-moz-column-gap:2rem;column-gap:2rem}\n.space-y-4 > :not([hidden]) ~ :not([hidden]){--tw-space-y-reverse:0;margin-top:calc(1rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1rem * var(--tw-space-y-reverse))}\n.overflow-hidden{overflow:hidden}\n.overflow-y-scroll{overflow-y:scroll}\n.overflow-x-hidden{overflow-x:hidden}\n.overflow-y-auto{overflow-y:auto}\n.whitespace-nowrap{white-space:nowrap}\n.break-words{overflow-wrap:break-word}\n.rounded{border-radius:0.25rem}\n.rounded-lg{border-radius:0.5rem}\n.rounded-full{border-radius:9999px}\n.rounded-xl{border-radius:0.75rem}\n.rounded-md{border-radius:0.375rem}\n.rounded-sm{border-radius:0.125rem}\n.rounded-t{border-top-left-radius:0.25rem;border-top-right-radius:0.25rem}\n.border{border-width:1px}\n.border-0{border-width:0px}\n.border-t-0{border-top-width:0px}\n.border-r-0{border-right-width:0px}\n.border-l-0{border-left-width:0px}\n.border-t{border-top-width:1px}\n.border-b{border-bottom-width:1px}\n.border-b-0{border-bottom-width:0px}\n.border-r{border-right-width:1px}\n.border-solid{border-style:solid}\n.border-none{border-style:none}\n.border-blue-gray-50{--tw-border-opacity:1;border-color:rgba(236, 239, 241, var(--tw-border-opacity))}\n.border-gray-200{--tw-border-opacity:1;border-color:rgba(238, 238, 238, var(--tw-border-opacity))}\n.border-gray-300{--tw-border-opacity:1;border-color:rgba(224, 224, 224, var(--tw-border-opacity))}\n.border-blue-gray-500{--tw-border-opacity:1;border-color:rgba(96, 125, 139, var(--tw-border-opacity))}\n.border-gray-500{--tw-border-opacity:1;border-color:rgba(158, 158, 158, var(--tw-border-opacity))}\n.border-brown-500{--tw-border-opacity:1;border-color:rgba(121, 85, 72, var(--tw-border-opacity))}\n.border-deep-orange-500{--tw-border-opacity:1;border-color:rgba(255, 87, 34, var(--tw-border-opacity))}\n.border-orange-500{--tw-border-opacity:1;border-color:rgba(255, 152, 0, var(--tw-border-opacity))}\n.border-amber-500{--tw-border-opacity:1;border-color:rgba(255, 193, 7, var(--tw-border-opacity))}\n.border-yellow-600{--tw-border-opacity:1;border-color:rgba(253, 216, 53, var(--tw-border-opacity))}\n.border-lime-500{--tw-border-opacity:1;border-color:rgba(205, 220, 57, var(--tw-border-opacity))}\n.border-light-green-500{--tw-border-opacity:1;border-color:rgba(139, 195, 74, var(--tw-border-opacity))}\n.border-green-500{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity))}\n.border-teal-500{--tw-border-opacity:1;border-color:rgba(0, 150, 136, var(--tw-border-opacity))}\n.border-cyan-500{--tw-border-opacity:1;border-color:rgba(0, 188, 212, var(--tw-border-opacity))}\n.border-light-blue-500{--tw-border-opacity:1;border-color:rgba(3, 169, 244, var(--tw-border-opacity))}\n.border-blue-500{--tw-border-opacity:1;border-color:rgba(33, 150, 243, var(--tw-border-opacity))}\n.border-indigo-500{--tw-border-opacity:1;border-color:rgba(63, 81, 181, var(--tw-border-opacity))}\n.border-deep-purple-500{--tw-border-opacity:1;border-color:rgba(103, 58, 183, var(--tw-border-opacity))}\n.border-purple-500{--tw-border-opacity:1;border-color:rgba(156, 39, 176, var(--tw-border-opacity))}\n.border-pink-500{--tw-border-opacity:1;border-color:rgba(233, 30, 99, var(--tw-border-opacity))}\n.border-red-500{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity))}\n.border-transparent{border-color:transparent}\n.bg-white{--tw-bg-opacity:1;background-color:rgba(255, 255, 255, var(--tw-bg-opacity))}\n.bg-gray-100{--tw-bg-opacity:1;background-color:rgba(245, 245, 245, var(--tw-bg-opacity))}\n.bg-orange-900{--tw-bg-opacity:1;background-color:rgba(230, 81, 0, var(--tw-bg-opacity))}\n.bg-light-blue-500{--tw-bg-opacity:1;background-color:rgba(3, 169, 244, var(--tw-bg-opacity))}\n.bg-gray-900{--tw-bg-opacity:1;background-color:rgba(33, 33, 33, var(--tw-bg-opacity))}\n.bg-yellow-600{--tw-bg-opacity:1;background-color:rgba(253, 216, 53, var(--tw-bg-opacity))}\n.bg-red-700{--tw-bg-opacity:1;background-color:rgba(211, 47, 47, var(--tw-bg-opacity))}\n.bg-green-500{--tw-bg-opacity:1;background-color:rgba(76, 175, 80, var(--tw-bg-opacity))}\n.bg-blue-gray-800{--tw-bg-opacity:1;background-color:rgba(55, 71, 79, var(--tw-bg-opacity))}\n.bg-blue-gray-500{--tw-bg-opacity:1;background-color:rgba(96, 125, 139, var(--tw-bg-opacity))}\n.bg-gray-500{--tw-bg-opacity:1;background-color:rgba(158, 158, 158, var(--tw-bg-opacity))}\n.bg-brown-500{--tw-bg-opacity:1;background-color:rgba(121, 85, 72, var(--tw-bg-opacity))}\n.bg-deep-orange-500{--tw-bg-opacity:1;background-color:rgba(255, 87, 34, var(--tw-bg-opacity))}\n.bg-orange-500{--tw-bg-opacity:1;background-color:rgba(255, 152, 0, var(--tw-bg-opacity))}\n.bg-amber-500{--tw-bg-opacity:1;background-color:rgba(255, 193, 7, var(--tw-bg-opacity))}\n.bg-lime-500{--tw-bg-opacity:1;background-color:rgba(205, 220, 57, var(--tw-bg-opacity))}\n.bg-light-green-500{--tw-bg-opacity:1;background-color:rgba(139, 195, 74, var(--tw-bg-opacity))}\n.bg-teal-500{--tw-bg-opacity:1;background-color:rgba(0, 150, 136, var(--tw-bg-opacity))}\n.bg-cyan-500{--tw-bg-opacity:1;background-color:rgba(0, 188, 212, var(--tw-bg-opacity))}\n.bg-blue-500{--tw-bg-opacity:1;background-color:rgba(33, 150, 243, var(--tw-bg-opacity))}\n.bg-indigo-500{--tw-bg-opacity:1;background-color:rgba(63, 81, 181, var(--tw-bg-opacity))}\n.bg-deep-purple-500{--tw-bg-opacity:1;background-color:rgba(103, 58, 183, var(--tw-bg-opacity))}\n.bg-purple-500{--tw-bg-opacity:1;background-color:rgba(156, 39, 176, var(--tw-bg-opacity))}\n.bg-pink-500{--tw-bg-opacity:1;background-color:rgba(233, 30, 99, var(--tw-bg-opacity))}\n.bg-red-500{--tw-bg-opacity:1;background-color:rgba(244, 67, 54, var(--tw-bg-opacity))}\n.bg-transparent{background-color:transparent}\n.bg-gray-200{--tw-bg-opacity:1;background-color:rgba(238, 238, 238, var(--tw-bg-opacity))}\n.bg-blue-gray-100{--tw-bg-opacity:1;background-color:rgba(207, 216, 220, var(--tw-bg-opacity))}\n.bg-brown-100{--tw-bg-opacity:1;background-color:rgba(215, 204, 200, var(--tw-bg-opacity))}\n.bg-deep-orange-100{--tw-bg-opacity:1;background-color:rgba(255, 204, 188, var(--tw-bg-opacity))}\n.bg-orange-100{--tw-bg-opacity:1;background-color:rgba(255, 224, 178, var(--tw-bg-opacity))}\n.bg-amber-100{--tw-bg-opacity:1;background-color:rgba(255, 236, 179, var(--tw-bg-opacity))}\n.bg-yellow-100{--tw-bg-opacity:1;background-color:rgba(255, 249, 196, var(--tw-bg-opacity))}\n.bg-lime-100{--tw-bg-opacity:1;background-color:rgba(240, 244, 195, var(--tw-bg-opacity))}\n.bg-light-green-100{--tw-bg-opacity:1;background-color:rgba(220, 237, 200, var(--tw-bg-opacity))}\n.bg-green-100{--tw-bg-opacity:1;background-color:rgba(200, 230, 201, var(--tw-bg-opacity))}\n.bg-teal-100{--tw-bg-opacity:1;background-color:rgba(178, 223, 219, var(--tw-bg-opacity))}\n.bg-cyan-100{--tw-bg-opacity:1;background-color:rgba(178, 235, 242, var(--tw-bg-opacity))}\n.bg-light-blue-100{--tw-bg-opacity:1;background-color:rgba(179, 229, 252, var(--tw-bg-opacity))}\n.bg-blue-100{--tw-bg-opacity:1;background-color:rgba(187, 222, 251, var(--tw-bg-opacity))}\n.bg-indigo-100{--tw-bg-opacity:1;background-color:rgba(197, 202, 233, var(--tw-bg-opacity))}\n.bg-deep-purple-100{--tw-bg-opacity:1;background-color:rgba(209, 196, 233, var(--tw-bg-opacity))}\n.bg-purple-100{--tw-bg-opacity:1;background-color:rgba(225, 190, 231, var(--tw-bg-opacity))}\n.bg-pink-100{--tw-bg-opacity:1;background-color:rgba(248, 187, 208, var(--tw-bg-opacity))}\n.bg-red-100{--tw-bg-opacity:1;background-color:rgba(255, 205, 210, var(--tw-bg-opacity))}\n.bg-blue-gray-900{--tw-bg-opacity:1;background-color:rgba(38, 50, 56, var(--tw-bg-opacity))}\n.bg-brown-900{--tw-bg-opacity:1;background-color:rgba(62, 39, 35, var(--tw-bg-opacity))}\n.bg-deep-orange-900{--tw-bg-opacity:1;background-color:rgba(191, 54, 12, var(--tw-bg-opacity))}\n.bg-amber-900{--tw-bg-opacity:1;background-color:rgba(255, 111, 0, var(--tw-bg-opacity))}\n.bg-yellow-900{--tw-bg-opacity:1;background-color:rgba(245, 127, 23, var(--tw-bg-opacity))}\n.bg-lime-900{--tw-bg-opacity:1;background-color:rgba(130, 119, 23, var(--tw-bg-opacity))}\n.bg-light-green-900{--tw-bg-opacity:1;background-color:rgba(51, 105, 30, var(--tw-bg-opacity))}\n.bg-green-900{--tw-bg-opacity:1;background-color:rgba(27, 94, 32, var(--tw-bg-opacity))}\n.bg-teal-900{--tw-bg-opacity:1;background-color:rgba(0, 77, 64, var(--tw-bg-opacity))}\n.bg-cyan-900{--tw-bg-opacity:1;background-color:rgba(0, 96, 100, var(--tw-bg-opacity))}\n.bg-light-blue-900{--tw-bg-opacity:1;background-color:rgba(1, 87, 155, var(--tw-bg-opacity))}\n.bg-blue-900{--tw-bg-opacity:1;background-color:rgba(13, 71, 161, var(--tw-bg-opacity))}\n.bg-indigo-900{--tw-bg-opacity:1;background-color:rgba(26, 35, 126, var(--tw-bg-opacity))}\n.bg-deep-purple-900{--tw-bg-opacity:1;background-color:rgba(49, 27, 146, var(--tw-bg-opacity))}\n.bg-purple-900{--tw-bg-opacity:1;background-color:rgba(74, 20, 140, var(--tw-bg-opacity))}\n.bg-pink-900{--tw-bg-opacity:1;background-color:rgba(136, 14, 79, var(--tw-bg-opacity))}\n.bg-red-900{--tw-bg-opacity:1;background-color:rgba(183, 28, 28, var(--tw-bg-opacity))}\n.bg-black{--tw-bg-opacity:1;background-color:rgba(0, 0, 0, var(--tw-bg-opacity))}\n.bg-gray-700{--tw-bg-opacity:1;background-color:rgba(97, 97, 97, var(--tw-bg-opacity))}\n.bg-blue-gray-200{--tw-bg-opacity:1;background-color:rgba(176, 190, 197, var(--tw-bg-opacity))}\n.bg-brown-200{--tw-bg-opacity:1;background-color:rgba(188, 170, 164, var(--tw-bg-opacity))}\n.bg-deep-orange-200{--tw-bg-opacity:1;background-color:rgba(255, 171, 145, var(--tw-bg-opacity))}\n.bg-orange-200{--tw-bg-opacity:1;background-color:rgba(255, 204, 128, var(--tw-bg-opacity))}\n.bg-amber-200{--tw-bg-opacity:1;background-color:rgba(255, 224, 130, var(--tw-bg-opacity))}\n.bg-yellow-200{--tw-bg-opacity:1;background-color:rgba(255, 245, 157, var(--tw-bg-opacity))}\n.bg-lime-200{--tw-bg-opacity:1;background-color:rgba(230, 238, 156, var(--tw-bg-opacity))}\n.bg-light-green-200{--tw-bg-opacity:1;background-color:rgba(197, 225, 165, var(--tw-bg-opacity))}\n.bg-green-200{--tw-bg-opacity:1;background-color:rgba(165, 214, 167, var(--tw-bg-opacity))}\n.bg-teal-200{--tw-bg-opacity:1;background-color:rgba(128, 203, 196, var(--tw-bg-opacity))}\n.bg-cyan-200{--tw-bg-opacity:1;background-color:rgba(128, 222, 234, var(--tw-bg-opacity))}\n.bg-light-blue-200{--tw-bg-opacity:1;background-color:rgba(129, 212, 250, var(--tw-bg-opacity))}\n.bg-blue-200{--tw-bg-opacity:1;background-color:rgba(144, 202, 249, var(--tw-bg-opacity))}\n.bg-indigo-200{--tw-bg-opacity:1;background-color:rgba(159, 168, 218, var(--tw-bg-opacity))}\n.bg-deep-purple-200{--tw-bg-opacity:1;background-color:rgba(179, 157, 219, var(--tw-bg-opacity))}\n.bg-purple-200{--tw-bg-opacity:1;background-color:rgba(206, 147, 216, var(--tw-bg-opacity))}\n.bg-pink-200{--tw-bg-opacity:1;background-color:rgba(244, 143, 177, var(--tw-bg-opacity))}\n.bg-red-200{--tw-bg-opacity:1;background-color:rgba(239, 154, 154, var(--tw-bg-opacity))}\n.bg-opacity-20{--tw-bg-opacity:0.2}\n.bg-opacity-80{--tw-bg-opacity:0.8}\n.bg-gradient-to-tr{background-image:linear-gradient(to top right, var(--tw-gradient-stops))}\n.from-blue-gray-500{--tw-gradient-from:#607d8b;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(96, 125, 139, 0))}\n.from-gray-500{--tw-gradient-from:#9e9e9e;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(158, 158, 158, 0))}\n.from-brown-500{--tw-gradient-from:#795548;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(121, 85, 72, 0))}\n.from-deep-orange-500{--tw-gradient-from:#ff5722;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(255, 87, 34, 0))}\n.from-orange-500{--tw-gradient-from:#ff9800;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(255, 152, 0, 0))}\n.from-amber-500{--tw-gradient-from:#ffc107;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(255, 193, 7, 0))}\n.from-yellow-600{--tw-gradient-from:#fdd835;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(253, 216, 53, 0))}\n.from-lime-500{--tw-gradient-from:#cddc39;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(205, 220, 57, 0))}\n.from-light-green-500{--tw-gradient-from:#8bc34a;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(139, 195, 74, 0))}\n.from-green-500{--tw-gradient-from:#4caf50;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(76, 175, 80, 0))}\n.from-teal-500{--tw-gradient-from:#009688;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 150, 136, 0))}\n.from-cyan-500{--tw-gradient-from:#00bcd4;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 188, 212, 0))}\n.from-light-blue-500{--tw-gradient-from:#03a9f4;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(3, 169, 244, 0))}\n.from-blue-500{--tw-gradient-from:#2196f3;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(33, 150, 243, 0))}\n.from-indigo-500{--tw-gradient-from:#3f51b5;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(63, 81, 181, 0))}\n.from-deep-purple-500{--tw-gradient-from:#673ab7;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(103, 58, 183, 0))}\n.from-purple-500{--tw-gradient-from:#9c27b0;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(156, 39, 176, 0))}\n.from-pink-500{--tw-gradient-from:#e91e63;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(233, 30, 99, 0))}\n.from-red-500{--tw-gradient-from:#f44336;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(244, 67, 54, 0))}\n.from-light-blue-700{--tw-gradient-from:#0288d1;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(2, 136, 209, 0))}\n.to-blue-gray-700{--tw-gradient-to:#455a64}\n.to-gray-700{--tw-gradient-to:#616161}\n.to-brown-700{--tw-gradient-to:#5d4037}\n.to-deep-orange-700{--tw-gradient-to:#e64a19}\n.to-orange-700{--tw-gradient-to:#f57c00}\n.to-amber-700{--tw-gradient-to:#ffa000}\n.to-yellow-800{--tw-gradient-to:#f9a825}\n.to-lime-700{--tw-gradient-to:#afb42b}\n.to-light-green-700{--tw-gradient-to:#689f38}\n.to-green-700{--tw-gradient-to:#388e3c}\n.to-teal-700{--tw-gradient-to:#00796b}\n.to-cyan-700{--tw-gradient-to:#0097a7}\n.to-light-blue-700{--tw-gradient-to:#0288d1}\n.to-blue-700{--tw-gradient-to:#1976d2}\n.to-indigo-700{--tw-gradient-to:#303f9f}\n.to-deep-purple-700{--tw-gradient-to:#512da8}\n.to-purple-700{--tw-gradient-to:#7b1fa2}\n.to-pink-700{--tw-gradient-to:#c2185b}\n.to-red-700{--tw-gradient-to:#d32f2f}\n.to-light-blue-500{--tw-gradient-to:#03a9f4}\n.p-4{padding:1rem}\n.p-3{padding:0.75rem}\n.p-8{padding:2rem}\n.p-2{padding:0.5rem}\n.p-0{padding:0px}\n.p-2\\.5{padding:0.625rem}\n.p-6{padding:1.5rem}\n.p-1{padding:0.25rem}\n.p-5{padding:1.25rem}\n.p-10{padding:2.5rem}\n.px-4{padding-left:1rem;padding-right:1rem}\n.py-16{padding-top:4rem;padding-bottom:4rem}\n.py-1{padding-top:0.25rem;padding-bottom:0.25rem}\n.py-8{padding-top:2rem;padding-bottom:2rem}\n.py-28{padding-top:7rem;padding-bottom:7rem}\n.px-12{padding-left:3rem;padding-right:3rem}\n.px-2\\.5{padding-left:0.625rem;padding-right:0.625rem}\n.px-2{padding-left:0.5rem;padding-right:0.5rem}\n.py-2{padding-top:0.5rem;padding-bottom:0.5rem}\n.py-20{padding-top:5rem;padding-bottom:5rem}\n.py-24{padding-top:6rem;padding-bottom:6rem}\n.py-5{padding-top:1.25rem;padding-bottom:1.25rem}\n.py-1\\.5{padding-top:0.375rem;padding-bottom:0.375rem}\n.py-2\\.5{padding-top:0.625rem;padding-bottom:0.625rem}\n.px-6{padding-left:1.5rem;padding-right:1.5rem}\n.py-3{padding-top:0.75rem;padding-bottom:0.75rem}\n.px-7{padding-left:1.75rem;padding-right:1.75rem}\n.py-4{padding-top:1rem;padding-bottom:1rem}\n.px-8{padding-left:2rem;padding-right:2rem}\n.px-9{padding-left:2.25rem;padding-right:2.25rem}\n.px-3{padding-left:0.75rem;padding-right:0.75rem}\n.px-0{padding-left:0px;padding-right:0px}\n.px-5{padding-left:1.25rem;padding-right:1.25rem}\n.px-1\\.5{padding-left:0.375rem;padding-right:0.375rem}\n.px-1{padding-left:0.25rem;padding-right:0.25rem}\n.pt-28{padding-top:7rem}\n.pb-36{padding-bottom:9rem}\n.pt-8{padding-top:2rem}\n.pb-6{padding-bottom:1.5rem}\n.pb-2{padding-bottom:0.5rem}\n.pt-6{padding-top:1.5rem}\n.pb-4{padding-bottom:1rem}\n.pb-20{padding-bottom:5rem}\n.pt-32{padding-top:8rem}\n.pt-48{padding-top:12rem}\n.pt-24{padding-top:6rem}\n.pb-64{padding-bottom:16rem}\n.pb-16{padding-bottom:4rem}\n.pr-12{padding-right:3rem}\n.pl-4{padding-left:1rem}\n.pt-4{padding-top:1rem}\n.pt-9{padding-top:2.25rem}\n.pl-0{padding-left:0px}\n.pt-10{padding-top:2.5rem}\n.pl-5{padding-left:1.25rem}\n.pr-3{padding-right:0.75rem}\n.pl-7{padding-left:1.75rem}\n.pr-5{padding-right:1.25rem}\n.pl-8{padding-left:2rem}\n.pr-6{padding-right:1.5rem}\n.pt-1\\.5{padding-top:0.375rem}\n.pb-0\\.5{padding-bottom:0.125rem}\n.pt-1{padding-top:0.25rem}\n.pb-0{padding-bottom:0px}\n.pt-2\\.5{padding-top:0.625rem}\n.pb-1\\.5{padding-bottom:0.375rem}\n.pt-2{padding-top:0.5rem}\n.pb-1{padding-bottom:0.25rem}\n.pt-3\\.5{padding-top:0.875rem}\n.pb-2\\.5{padding-bottom:0.625rem}\n.pt-3{padding-top:0.75rem}\n.pl-2{padding-left:0.5rem}\n.pr-7{padding-right:1.75rem}\n.pl-3{padding-left:0.75rem}\n.pr-9{padding-right:2.25rem}\n.pr-1{padding-right:0.25rem}\n.pb-10{padding-bottom:2.5rem}\n.pt-16{padding-top:4rem}\n.text-center{text-align:center}\n.text-right{text-align:right}\n.text-left{text-align:left}\n.align-middle{vertical-align:middle}\n.font-serif{font-family:\"Roboto Slab\", serif}\n.text-xl{font-size:1.25rem;line-height:1.75rem}\n.text-sm{font-size:0.875rem;line-height:1.25rem}\n.text-xs{font-size:0.75rem;line-height:1rem}\n.text-6xl{font-size:3.75rem;line-height:1}\n.text-lg{font-size:1.125rem;line-height:1.75rem}\n.text-base{font-size:1rem;line-height:1.5rem}\n.text-2xl{font-size:1.5rem;line-height:2rem}\n.text-4xl{font-size:2.25rem;line-height:2.5rem}\n.text-3xl{font-size:1.875rem;line-height:2.25rem}\n.text-5xl{font-size:3rem;line-height:1}\n.text-7xl{font-size:4.5rem;line-height:1}\n.text-8xl{font-size:6rem;line-height:1}\n.text-9xl{font-size:8rem;line-height:1}\n.font-medium{font-weight:500}\n.font-semibold{font-weight:600}\n.font-bold{font-weight:700}\n.font-light{font-weight:300}\n.font-normal{font-weight:400}\n.uppercase{text-transform:uppercase}\n.capitalize{text-transform:capitalize}\n.leading-relaxed{line-height:1.625}\n.leading-none{line-height:1}\n.leading-normal{line-height:1.5}\n.leading-10{line-height:2.5rem}\n.leading-snug{line-height:1.375}\n.tracking-wider{letter-spacing:0.05em}\n.tracking-wide{letter-spacing:0.025em}\n.text-gray-700{--tw-text-opacity:1;color:rgba(97, 97, 97, var(--tw-text-opacity))}\n.text-blue-gray-700{--tw-text-opacity:1;color:rgba(69, 90, 100, var(--tw-text-opacity))}\n.text-light-blue-500{--tw-text-opacity:1;color:rgba(3, 169, 244, var(--tw-text-opacity))}\n.text-blue-gray-800{--tw-text-opacity:1;color:rgba(55, 71, 79, var(--tw-text-opacity))}\n.text-blue-gray-900{--tw-text-opacity:1;color:rgba(38, 50, 56, var(--tw-text-opacity))}\n.text-blue-gray-200{--tw-text-opacity:1;color:rgba(176, 190, 197, var(--tw-text-opacity))}\n.text-blue-gray-50{--tw-text-opacity:1;color:rgba(236, 239, 241, var(--tw-text-opacity))}\n.text-cyan-600{--tw-text-opacity:1;color:rgba(0, 172, 193, var(--tw-text-opacity))}\n.text-gray-500{--tw-text-opacity:1;color:rgba(158, 158, 158, var(--tw-text-opacity))}\n.text-gray-900{--tw-text-opacity:1;color:rgba(33, 33, 33, var(--tw-text-opacity))}\n.text-blue-600{--tw-text-opacity:1;color:rgba(30, 136, 229, var(--tw-text-opacity))}\n.text-blue-400{--tw-text-opacity:1;color:rgba(66, 165, 245, var(--tw-text-opacity))}\n.text-indigo-500{--tw-text-opacity:1;color:rgba(63, 81, 181, var(--tw-text-opacity))}\n.text-pink-400{--tw-text-opacity:1;color:rgba(236, 64, 122, var(--tw-text-opacity))}\n.text-red-600{--tw-text-opacity:1;color:rgba(229, 57, 53, var(--tw-text-opacity))}\n.text-gray-600{--tw-text-opacity:1;color:rgba(117, 117, 117, var(--tw-text-opacity))}\n.text-white{--tw-text-opacity:1;color:rgba(255, 255, 255, var(--tw-text-opacity))}\n.text-blue-gray-500{--tw-text-opacity:1;color:rgba(96, 125, 139, var(--tw-text-opacity))}\n.text-brown-500{--tw-text-opacity:1;color:rgba(121, 85, 72, var(--tw-text-opacity))}\n.text-deep-orange-500{--tw-text-opacity:1;color:rgba(255, 87, 34, var(--tw-text-opacity))}\n.text-orange-500{--tw-text-opacity:1;color:rgba(255, 152, 0, var(--tw-text-opacity))}\n.text-amber-500{--tw-text-opacity:1;color:rgba(255, 193, 7, var(--tw-text-opacity))}\n.text-yellow-600{--tw-text-opacity:1;color:rgba(253, 216, 53, var(--tw-text-opacity))}\n.text-lime-500{--tw-text-opacity:1;color:rgba(205, 220, 57, var(--tw-text-opacity))}\n.text-light-green-500{--tw-text-opacity:1;color:rgba(139, 195, 74, var(--tw-text-opacity))}\n.text-green-500{--tw-text-opacity:1;color:rgba(76, 175, 80, var(--tw-text-opacity))}\n.text-teal-500{--tw-text-opacity:1;color:rgba(0, 150, 136, var(--tw-text-opacity))}\n.text-cyan-500{--tw-text-opacity:1;color:rgba(0, 188, 212, var(--tw-text-opacity))}\n.text-blue-500{--tw-text-opacity:1;color:rgba(33, 150, 243, var(--tw-text-opacity))}\n.text-deep-purple-500{--tw-text-opacity:1;color:rgba(103, 58, 183, var(--tw-text-opacity))}\n.text-purple-500{--tw-text-opacity:1;color:rgba(156, 39, 176, var(--tw-text-opacity))}\n.text-pink-500{--tw-text-opacity:1;color:rgba(233, 30, 99, var(--tw-text-opacity))}\n.text-red-500{--tw-text-opacity:1;color:rgba(244, 67, 54, var(--tw-text-opacity))}\n.text-gray-400{--tw-text-opacity:1;color:rgba(189, 189, 189, var(--tw-text-opacity))}\n.text-gray-800{--tw-text-opacity:1;color:rgba(66, 66, 66, var(--tw-text-opacity))}\n.text-brown-700{--tw-text-opacity:1;color:rgba(93, 64, 55, var(--tw-text-opacity))}\n.text-deep-orange-700{--tw-text-opacity:1;color:rgba(230, 74, 25, var(--tw-text-opacity))}\n.text-orange-700{--tw-text-opacity:1;color:rgba(245, 124, 0, var(--tw-text-opacity))}\n.text-amber-700{--tw-text-opacity:1;color:rgba(255, 160, 0, var(--tw-text-opacity))}\n.text-yellow-700{--tw-text-opacity:1;color:rgba(251, 192, 45, var(--tw-text-opacity))}\n.text-lime-700{--tw-text-opacity:1;color:rgba(175, 180, 43, var(--tw-text-opacity))}\n.text-light-green-700{--tw-text-opacity:1;color:rgba(104, 159, 56, var(--tw-text-opacity))}\n.text-green-700{--tw-text-opacity:1;color:rgba(56, 142, 60, var(--tw-text-opacity))}\n.text-teal-700{--tw-text-opacity:1;color:rgba(0, 121, 107, var(--tw-text-opacity))}\n.text-cyan-700{--tw-text-opacity:1;color:rgba(0, 151, 167, var(--tw-text-opacity))}\n.text-light-blue-700{--tw-text-opacity:1;color:rgba(2, 136, 209, var(--tw-text-opacity))}\n.text-blue-700{--tw-text-opacity:1;color:rgba(25, 118, 210, var(--tw-text-opacity))}\n.text-indigo-700{--tw-text-opacity:1;color:rgba(48, 63, 159, var(--tw-text-opacity))}\n.text-deep-purple-700{--tw-text-opacity:1;color:rgba(81, 45, 168, var(--tw-text-opacity))}\n.text-purple-700{--tw-text-opacity:1;color:rgba(123, 31, 162, var(--tw-text-opacity))}\n.text-pink-700{--tw-text-opacity:1;color:rgba(194, 24, 91, var(--tw-text-opacity))}\n.text-red-700{--tw-text-opacity:1;color:rgba(211, 47, 47, var(--tw-text-opacity))}\n.text-gray-200{--tw-text-opacity:1;color:rgba(238, 238, 238, var(--tw-text-opacity))}\n.text-brown-800{--tw-text-opacity:1;color:rgba(78, 52, 46, var(--tw-text-opacity))}\n.text-deep-orange-800{--tw-text-opacity:1;color:rgba(216, 67, 21, var(--tw-text-opacity))}\n.text-orange-800{--tw-text-opacity:1;color:rgba(239, 108, 0, var(--tw-text-opacity))}\n.text-amber-800{--tw-text-opacity:1;color:rgba(255, 143, 0, var(--tw-text-opacity))}\n.text-yellow-800{--tw-text-opacity:1;color:rgba(249, 168, 37, var(--tw-text-opacity))}\n.text-lime-800{--tw-text-opacity:1;color:rgba(158, 157, 36, var(--tw-text-opacity))}\n.text-light-green-800{--tw-text-opacity:1;color:rgba(85, 139, 47, var(--tw-text-opacity))}\n.text-green-800{--tw-text-opacity:1;color:rgba(46, 125, 50, var(--tw-text-opacity))}\n.text-teal-800{--tw-text-opacity:1;color:rgba(0, 105, 92, var(--tw-text-opacity))}\n.text-cyan-800{--tw-text-opacity:1;color:rgba(0, 131, 143, var(--tw-text-opacity))}\n.text-light-blue-800{--tw-text-opacity:1;color:rgba(2, 119, 189, var(--tw-text-opacity))}\n.text-blue-800{--tw-text-opacity:1;color:rgba(21, 101, 192, var(--tw-text-opacity))}\n.text-indigo-800{--tw-text-opacity:1;color:rgba(40, 53, 147, var(--tw-text-opacity))}\n.text-deep-purple-800{--tw-text-opacity:1;color:rgba(69, 39, 160, var(--tw-text-opacity))}\n.text-purple-800{--tw-text-opacity:1;color:rgba(106, 27, 154, var(--tw-text-opacity))}\n.text-pink-800{--tw-text-opacity:1;color:rgba(173, 20, 87, var(--tw-text-opacity))}\n.text-red-800{--tw-text-opacity:1;color:rgba(198, 40, 40, var(--tw-text-opacity))}\n.text-black{--tw-text-opacity:1;color:rgba(0, 0, 0, var(--tw-text-opacity))}\n.text-opacity-60{--tw-text-opacity:0.6}\n.no-underline{text-decoration:none}\n.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}\n.placeholder-white::-moz-placeholder{--tw-placeholder-opacity:1;color:rgba(255, 255, 255, var(--tw-placeholder-opacity))}\n.placeholder-white:-ms-input-placeholder{--tw-placeholder-opacity:1;color:rgba(255, 255, 255, var(--tw-placeholder-opacity))}\n.placeholder-white::placeholder{--tw-placeholder-opacity:1;color:rgba(255, 255, 255, var(--tw-placeholder-opacity))}\n.placeholder-opacity-50::-moz-placeholder{--tw-placeholder-opacity:0.5}\n.placeholder-opacity-50:-ms-input-placeholder{--tw-placeholder-opacity:0.5}\n.placeholder-opacity-50::placeholder{--tw-placeholder-opacity:0.5}\n.opacity-50{opacity:0.5}\n.opacity-0{opacity:0}\n.opacity-100{opacity:1}\n.opacity-25{opacity:0.25}\n.opacity-5{opacity:0.05}\n.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-blue-gray{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(96, 125, 139, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-gray{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(158, 158, 158, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-brown{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(121, 85, 72, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-deep-orange{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 87, 36, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-orange{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 152, 0, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-amber{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 193, 7, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-yellow{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 235, 59, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-lime{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(205, 220, 57, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-light-green{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(139, 195, 74, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-green{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(76, 175, 80, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-teal{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(0, 150, 136, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-cyan{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(0, 188, 212, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-light-blue{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(3, 169, 244, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-blue{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(33, 150, 243, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-indigo{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(63, 81, 181, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-deep-purple{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(103, 58, 183, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-purple{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(156, 39, 176, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-pink{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(233, 30, 99, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-red{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(244, 67, 54, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-none{--tw-shadow:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-blue-gray{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(69, 90, 100, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-gray{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(97, 97, 97, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-brown{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(93, 64, 55, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-deep-orange{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(230, 74, 25, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-orange{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(245, 122, 0, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-amber{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(255, 160, 0, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-yellow{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(251, 192, 45, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-lime{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(175, 180, 43, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-light-green{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(104, 159, 56, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-green{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(56, 142, 60, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-teal{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(0, 121, 107, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-cyan{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(0, 151, 167, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-light-blue{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(2, 136, 209, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-blue{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(25, 118, 210, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-indigo{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(48, 63, 159, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-deep-purple{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(81, 45, 168, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-purple{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(123, 31, 162, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-pink{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(194, 24, 91, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-red{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(211, 47, 47, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0, 0, 0, 0.05);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.outline-none{outline:2px solid transparent;outline-offset:2px}\n.transition-all{transition-property:all;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}\n.duration-300{transition-duration:300ms}\n.duration{transition-duration:150ms}\n.duration-500{transition-duration:500ms}\n/* Material Tailwind Input */\n.mt-input + label:after {\n        content: '';\n        pointer-events:none;\n        position:absolute;\n        top:0.125rem;\n        left:0px;\n        height:100%;\n        width:100%;\n        --tw-translate-x:0;\n        --tw-translate-y:0;\n        --tw-rotate:0;\n        --tw-skew-x:0;\n        --tw-skew-y:0;\n        --tw-scale-x:1;\n        --tw-scale-y:1;\n        transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n        --tw-scale-x:0;\n        border-width:1px;\n        border-top-width:0px;\n        border-left-width:0px;\n        border-right-width:0px;\n        border-bottom-width:2px;\n        transition-property:all;\n        transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration:150ms;\n        transition-duration:300ms;\n    }\n.mt-input:focus + label:after{--tw-scale-x:1}\n.mt-input:not(:-moz-placeholder-shown) + label span {\n        top: -14%;\n    }\n.mt-input:not(:-ms-input-placeholder) + label span {\n        top: -14%;\n    }\n.mt-input:focus + label span,\n    .mt-input:not(:placeholder-shown) + label span {\n        top: -14%;\n    }\n.mt-input:not(:-moz-placeholder-shown) + label span{font-size:0.75rem;line-height:1rem;line-height:1.25}\n.mt-input:not(:-ms-input-placeholder) + label span{font-size:0.75rem;line-height:1rem;line-height:1.25}\n.mt-input:focus + label span, .mt-input:not(:placeholder-shown) + label span{font-size:0.75rem;line-height:1rem;line-height:1.25}\n.texterea:not(:-moz-placeholder-shown) + label span {\n        top: -22px !important;\n    }\n.texterea:not(:-ms-input-placeholder) + label span {\n        top: -22px !important;\n    }\n.texterea:focus + label span,\n    .texterea:not(:placeholder-shown) + label span {\n        top: -22px !important;\n    }\n/* Material Tailwind Input Outline */\n.mt-input-outline:not(:-moz-placeholder-shown) {\n        border-top: transparent !important;\n    }\n.mt-input-outline:not(:-ms-input-placeholder) {\n        border-top: transparent !important;\n    }\n.mt-input-outline:focus,\n    .mt-input-outline:not(:placeholder-shown) {\n        border-top: transparent !important;\n    }\n.mt-input-outline + label {\n        line-height: 3.625 !important;\n    }\n.mt-input-outline:not(:-moz-placeholder-shown) + label{font-size:0.75rem !important;line-height:1rem !important;line-height:1.25 !important}\n.mt-input-outline:not(:-ms-input-placeholder) + label{font-size:0.75rem !important;line-height:1rem !important;line-height:1.25 !important}\n.mt-input-outline:focus + label, .mt-input-outline:not(:placeholder-shown) + label{font-size:0.75rem !important;line-height:1rem !important;line-height:1.25 !important}\n.mt-input-outline + label:before,\n    .mt-input-outline + label:after {\n        content: '';pointer-events:none;margin-top:0.375rem;box-sizing:border-box;display:block;height:0.5rem;width:0.625rem;border-width:1px;border-top-width:2px;border-bottom-width:0px;border-left-width:0px;border-right-width:0px;border-color:transparent;\n    }\n.mt-input-outline:not(:-moz-placeholder-shown) + label:before, .mt-input-outline:not(:-moz-placeholder-shown) + label:after{border-top-width:1px;--tw-border-opacity:1;border-color:rgba(224, 224, 224, var(--tw-border-opacity))}\n.mt-input-outline:not(:-ms-input-placeholder) + label:before, .mt-input-outline:not(:-ms-input-placeholder) + label:after{border-top-width:1px;--tw-border-opacity:1;border-color:rgba(224, 224, 224, var(--tw-border-opacity))}\n.mt-input-outline:not(:placeholder-shown) + label:before, .mt-input-outline:not(:placeholder-shown) + label:after{border-top-width:1px;--tw-border-opacity:1;border-color:rgba(224, 224, 224, var(--tw-border-opacity))}\n.mt-input-outline:focus + label::before, .mt-input-outline:focus + label::after{border-top-width:2px}\n.mt-input-outline + label:before{margin-right:0.25rem;border-top-left-radius:0.5rem}\n.mt-input-outline + label:after{margin-left:0.25rem;flex-grow:1;border-top-right-radius:0.5rem}\n/* Material Tailwind Radio Button */\n.mt-radio:checked + label span {\n        box-shadow: 0px 0px 0px 2px white inset;\n        --tw-bg-opacity:1 !important;\n    }\n.mt-radio:checked + label{--tw-text-opacity:1;color:rgba(97, 97, 97, var(--tw-text-opacity))}\n.mt-radio + label span::before {\n        content: '';\n        top: -1.5px;\n        left: -1.5px;\n        transform: scale3d(1, 1, 1);\n        position:absolute;\n        z-index:10;\n        margin:0px;\n        display:block;\n        height:1rem;\n        width:1rem;\n        border-radius:9999px;\n        opacity:0;\n    }\n.mt-radio:checked + label span::before {\n        -webkit-animation: radio-ripple 0.3s linear;\n                animation: radio-ripple 0.3s linear;\n    }\n/* Material Tailwind Checkbox */\n.mt-checkbox:checked + label span{--tw-bg-opacity:1 !important}\n.mt-checkbox:checked + label{--tw-text-opacity:1;color:rgba(97, 97, 97, var(--tw-text-opacity))}\n.mt-checkbox + label span::before {\n        content: '';\n        top: -1px;\n        left: -1.5px;\n        transform: scale3d(2, 2, 1);\n        position:absolute;\n        z-index:10;\n        margin:0px;\n        display:block;\n        height:1.25rem;\n        width:1.25rem;\n        border-radius:9999px;\n        opacity:0;\n    }\n.mt-checkbox + label span::after {\n        content: '';\n        top: 1px;\n        left: 6px;\n        position:absolute;\n        height:0.875rem;\n        width:0.375rem;\n        --tw-translate-x:0;\n        --tw-translate-y:0;\n        --tw-rotate:0;\n        --tw-skew-x:0;\n        --tw-skew-y:0;\n        --tw-scale-x:1;\n        --tw-scale-y:1;\n        transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n        --tw-rotate:45deg;\n        border-bottom-width:2px;\n        border-right-width:2px;\n        border-color:transparent;\n        transition-property:all;\n        transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration:150ms;\n        transition-duration:200ms;\n    }\n.mt-checkbox:checked + label span::before {\n        -webkit-animation: radio-ripple 0.3s linear;\n                animation: radio-ripple 0.3s linear;\n    }\n.mt-checkbox:checked + label span::after{--tw-border-opacity:1;border-color:rgba(255, 255, 255, var(--tw-border-opacity))}\n/* Material Tailwind Input Colors */\n.mt-input-blue-gray-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(96, 125, 139, var(--tw-border-opacity))}\n.mt-input-gray-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(158, 158, 158, var(--tw-border-opacity))}\n.mt-input-orange-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 152, 0, var(--tw-border-opacity))}\n.mt-input-deep-orange-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 87, 34, var(--tw-border-opacity))}\n.mt-input-amber-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 193, 7, var(--tw-border-opacity))}\n.mt-input-yellow-600:focus + label:after{--tw-border-opacity:1;border-color:rgba(253, 216, 53, var(--tw-border-opacity))}\n.mt-input-lime-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(205, 220, 57, var(--tw-border-opacity))}\n.mt-input-light-green-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(139, 195, 74, var(--tw-border-opacity))}\n.mt-input-green-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity))}\n.mt-input-teal-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(0, 150, 136, var(--tw-border-opacity))}\n.mt-input-cyan-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(0, 188, 212, var(--tw-border-opacity))}\n.mt-input-light-blue-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(3, 169, 244, var(--tw-border-opacity))}\n.mt-input-blue-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(33, 150, 243, var(--tw-border-opacity))}\n.mt-input-indigo-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(63, 81, 181, var(--tw-border-opacity))}\n.mt-input-purple-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(156, 39, 176, var(--tw-border-opacity))}\n.mt-input-deep-purple-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(103, 58, 183, var(--tw-border-opacity))}\n.mt-input-pink-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(233, 30, 99, var(--tw-border-opacity))}\n.mt-input-red-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity))}\n/* Material Tailwind Input Outline Colors */\n.mt-input-outline-blue-gray-500:focus, .mt-input-outline-blue-gray-500:focus + label, .mt-input-outline-blue-gray-500:focus + label:before, .mt-input-outline-blue-gray-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(96, 125, 139, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(96, 125, 139, var(--tw-text-opacity))}\n.mt-input-outline-gray-500:focus, .mt-input-outline-gray-500:focus + label, .mt-input-outline-gray-500:focus + label:before, .mt-input-outline-gray-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(158, 158, 158, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(158, 158, 158, var(--tw-text-opacity))}\n.mt-input-outline-orange-500:focus, .mt-input-outline-orange-500:focus + label, .mt-input-outline-orange-500:focus + label:before, .mt-input-outline-orange-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 152, 0, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(255, 152, 0, var(--tw-text-opacity))}\n.mt-input-outline-deep-orange-500:focus, .mt-input-outline-deep-orange-500:focus + label, .mt-input-outline-deep-orange-500:focus + label:before, .mt-input-outline-deep-orange-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 87, 34, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(255, 87, 34, var(--tw-text-opacity))}\n.mt-input-outline-brown-500:focus, .mt-input-outline-brown-500:focus + label, .mt-input-outline-brown-500:focus + label:before, .mt-input-outline-brown-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(121, 85, 72, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(121, 85, 72, var(--tw-text-opacity))}\n.mt-input-outline-amber-500:focus, .mt-input-outline-amber-500:focus + label, .mt-input-outline-amber-500:focus + label:before, .mt-input-outline-amber-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 193, 7, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(255, 193, 7, var(--tw-text-opacity))}\n.mt-input-outline-yellow-600:focus, .mt-input-outline-yellow-600:focus + label, .mt-input-outline-yellow-600:focus + label:before, .mt-input-outline-yellow-600:focus + label:after{--tw-border-opacity:1;border-color:rgba(253, 216, 53, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(253, 216, 53, var(--tw-text-opacity))}\n.mt-input-outline-lime-500:focus, .mt-input-outline-lime-500:focus + label, .mt-input-outline-lime-500:focus + label:before, .mt-input-outline-lime-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(205, 220, 57, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(205, 220, 57, var(--tw-text-opacity))}\n.mt-input-outline-light-green-500:focus, .mt-input-outline-light-green-500:focus + label, .mt-input-outline-light-green-500:focus + label:before, .mt-input-outline-light-green-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(139, 195, 74, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(139, 195, 74, var(--tw-text-opacity))}\n.mt-input-outline-green-500:focus, .mt-input-outline-green-500:focus + label, .mt-input-outline-green-500:focus + label:before, .mt-input-outline-green-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(76, 175, 80, var(--tw-text-opacity))}\n.mt-input-outline-teal-500:focus, .mt-input-outline-teal-500:focus + label, .mt-input-outline-teal-500:focus + label:before, .mt-input-outline-teal-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(0, 150, 136, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(0, 150, 136, var(--tw-text-opacity))}\n.mt-input-outline-cyan-500:focus, .mt-input-outline-cyan-500:focus + label, .mt-input-outline-cyan-500:focus + label:before, .mt-input-outline-cyan-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(0, 188, 212, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(0, 188, 212, var(--tw-text-opacity))}\n.mt-input-outline-light-blue-500:focus, .mt-input-outline-light-blue-500:focus + label, .mt-input-outline-light-blue-500:focus + label:before, .mt-input-outline-light-blue-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(3, 169, 244, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(3, 169, 244, var(--tw-text-opacity))}\n.mt-input-outline-blue-500:focus, .mt-input-outline-blue-500:focus + label, .mt-input-outline-blue-500:focus + label:before, .mt-input-outline-blue-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(33, 150, 243, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(33, 150, 243, var(--tw-text-opacity))}\n.mt-input-outline-indigo-500:focus, .mt-input-outline-indigo-500:focus + label, .mt-input-outline-indigo-500:focus + label:before, .mt-input-outline-indigo-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(63, 81, 181, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(63, 81, 181, var(--tw-text-opacity))}\n.mt-input-outline-purple-500:focus, .mt-input-outline-purple-500:focus + label, .mt-input-outline-purple-500:focus + label:before, .mt-input-outline-purple-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(156, 39, 176, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(156, 39, 176, var(--tw-text-opacity))}\n.mt-input-outline-deep-purple-500:focus, .mt-input-outline-deep-purple-500:focus + label, .mt-input-outline-deep-purple-500:focus + label:before, .mt-input-outline-deep-purple-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(103, 58, 183, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(103, 58, 183, var(--tw-text-opacity))}\n.mt-input-outline-pink-500:focus, .mt-input-outline-pink-500:focus + label, .mt-input-outline-pink-500:focus + label:before, .mt-input-outline-pink-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(233, 30, 99, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(233, 30, 99, var(--tw-text-opacity))}\n.mt-input-outline-red-500:focus, .mt-input-outline-red-500:focus + label, .mt-input-outline-red-500:focus + label:before, .mt-input-outline-red-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(244, 67, 54, var(--tw-text-opacity))}\n.mt-input-outline-error:not(:-moz-placeholder-shown) + label, .mt-input-outline-error:not(:-moz-placeholder-shown) + label:before, .mt-input-outline-error:not(:-moz-placeholder-shown) + label:after{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(244, 67, 54, var(--tw-text-opacity))}\n.mt-input-outline-error:not(:-ms-input-placeholder) + label, .mt-input-outline-error:not(:-ms-input-placeholder) + label:before, .mt-input-outline-error:not(:-ms-input-placeholder) + label:after{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(244, 67, 54, var(--tw-text-opacity))}\n.mt-input-outline-error:not(:placeholder-shown) + label, .mt-input-outline-error:not(:placeholder-shown) + label:before, .mt-input-outline-error:not(:placeholder-shown) + label:after{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(244, 67, 54, var(--tw-text-opacity))}\n.mt-input-outline-success:not(:-moz-placeholder-shown) + label, .mt-input-outline-success:not(:-moz-placeholder-shown) + label:before, .mt-input-outline-success:not(:-moz-placeholder-shown) + label:after{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(76, 175, 80, var(--tw-text-opacity))}\n.mt-input-outline-success:not(:-ms-input-placeholder) + label, .mt-input-outline-success:not(:-ms-input-placeholder) + label:before, .mt-input-outline-success:not(:-ms-input-placeholder) + label:after{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(76, 175, 80, var(--tw-text-opacity))}\n.mt-input-outline-success:not(:placeholder-shown) + label, .mt-input-outline-success:not(:placeholder-shown) + label:before, .mt-input-outline-success:not(:placeholder-shown) + label:after{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(76, 175, 80, var(--tw-text-opacity))}\n/* Material Tailwind Radio Button and Checkbox Colors */\n.mt-radio-blue-gray-500:checked + label span, .mt-radio-blue-gray-500 + label span::before, .mt-checkbox-blue-gray-500:checked + label span, .mt-checkbox-blue-gray-500 + label span::before{--tw-border-opacity:1;border-color:rgba(96, 125, 139, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(96, 125, 139, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-gray-500:checked + label span, .mt-radio-gray-500 + label span::before, .mt-checkbox-gray-500:checked + label span, .mt-checkbox-gray-500 + label span::before{--tw-border-opacity:1;border-color:rgba(158, 158, 158, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(158, 158, 158, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-orange-500:checked + label span, .mt-radio-orange-500 + label span::before, .mt-checkbox-orange-500:checked + label span, .mt-checkbox-orange-500 + label span::before{--tw-border-opacity:1;border-color:rgba(255, 152, 0, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(255, 152, 0, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-deep-orange-500:checked + label span, .mt-radio-deep-orange-500 + label span::before, .mt-checkbox-deep-orange-500:checked + label span, .mt-checkbox-deep-orange-500 + label span::before{--tw-border-opacity:1;border-color:rgba(255, 87, 34, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(255, 87, 34, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-brown-500:checked + label span, .mt-radio-brown-500 + label span::before, .mt-checkbox-brown-500:checked + label span, .mt-checkbox-brown-500 + label span::before{--tw-border-opacity:1;border-color:rgba(121, 85, 72, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(121, 85, 72, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-amber-500:checked + label span, .mt-radio-amber-500 + label span::before, .mt-checkbox-amber-500:checked + label span, .mt-checkbox-amber-500 + label span::before{--tw-border-opacity:1;border-color:rgba(255, 193, 7, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(255, 193, 7, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-yellow-600:checked + label span, .mt-radio-yellow-600 + label span::before, .mt-checkbox-yellow-600:checked + label span, .mt-checkbox-yellow-600 + label span::before{--tw-border-opacity:1;border-color:rgba(253, 216, 53, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(253, 216, 53, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-lime-500:checked + label span, .mt-radio-lime-500 + label span::before, .mt-checkbox-lime-500:checked + label span, .mt-checkbox-lime-500 + label span::before{--tw-border-opacity:1;border-color:rgba(205, 220, 57, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(205, 220, 57, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-light-green-500:checked + label span, .mt-radio-light-green-500 + label span::before, .mt-checkbox-light-green-500:checked + label span, .mt-checkbox-light-green-500 + label span::before{--tw-border-opacity:1;border-color:rgba(139, 195, 74, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(139, 195, 74, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-green-500:checked + label span, .mt-radio-green-500 + label span::before, .mt-checkbox-green-500:checked + label span, .mt-checkbox-green-500 + label span::before{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(76, 175, 80, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-teal-500:checked + label span, .mt-radio-teal-500 + label span::before, .mt-checkbox-teal-500:checked + label span, .mt-checkbox-teal-500 + label span::before{--tw-border-opacity:1;border-color:rgba(0, 150, 136, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(0, 150, 136, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-cyan-500:checked + label span, .mt-radio-cyan-500 + label span::before, .mt-checkbox-cyan-500:checked + label span, .mt-checkbox-cyan-500 + label span::before{--tw-border-opacity:1;border-color:rgba(0, 188, 212, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(0, 188, 212, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-light-blue-500:checked + label span, .mt-radio-light-blue-500 + label span::before, .mt-checkbox-light-blue-500:checked + label span, .mt-checkbox-light-blue-500 + label span::before{--tw-border-opacity:1;border-color:rgba(3, 169, 244, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(3, 169, 244, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-blue-500:checked + label span, .mt-radio-blue-500 + label span::before, .mt-checkbox-blue-500:checked + label span, .mt-checkbox-blue-500 + label span::before{--tw-border-opacity:1;border-color:rgba(33, 150, 243, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(33, 150, 243, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-indigo-500:checked + label span, .mt-radio-indigo-500 + label span::before, .mt-checkbox-indigo-500:checked + label span, .mt-checkbox-indigo-500 + label span::before{--tw-border-opacity:1;border-color:rgba(63, 81, 181, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(63, 81, 181, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-purple-500:checked + label span, .mt-radio-purple-500 + label span::before, .mt-checkbox-purple-500:checked + label span, .mt-checkbox-purple-500 + label span::before{--tw-border-opacity:1;border-color:rgba(156, 39, 176, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(156, 39, 176, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-deep-purple-500:checked + label span, .mt-radio-deep-purple-500 + label span::before, .mt-checkbox-deep-purple-500:checked + label span, .mt-checkbox-deep-purple-500 + label span::before{--tw-border-opacity:1;border-color:rgba(103, 58, 183, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(103, 58, 183, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-pink-500:checked + label span, .mt-radio-pink-500 + label span::before, .mt-checkbox-pink-500:checked + label span, .mt-checkbox-pink-500 + label span::before{--tw-border-opacity:1;border-color:rgba(233, 30, 99, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(233, 30, 99, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-red-500:checked + label span, .mt-radio-red-500 + label span::before, .mt-checkbox-red-500:checked + label span, .mt-checkbox-red-500 + label span::before{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(244, 67, 54, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n/* Tippy Boxx */\n.tippy-box:focus {\n    outline: none;\n}\n/* Tippy Animation */\n.tippy-box[data-animation='scale'] {\n    transform-origin: top left !important;\n}\n/* Tippy Arrow */\n.arrow-light .tippy-svg-arrow {\n    fill: #fff;\n}\n.arrow-dark .tippy-svg-arrow {\n    fill: rgba(0, 0, 0, 0.8);\n}\n/* Material Tailwind Radio Button Ripple Effect Animation */\n@-webkit-keyframes radio-ripple {\n    from {\n        opacity: 0;\n        transform: scale3d(1, 1, 1);\n    }\n    50% {\n        opacity: 1;\n        transform: scale3d(2, 2, 1);\n    }\n    to {\n        opacity: 0;\n        transform: scale3d(3, 3, 1);\n    }\n}\n@keyframes radio-ripple {\n    from {\n        opacity: 0;\n        transform: scale3d(1, 1, 1);\n    }\n    50% {\n        opacity: 1;\n        transform: scale3d(2, 2, 1);\n    }\n    to {\n        opacity: 0;\n        transform: scale3d(3, 3, 1);\n    }\n}\n.last\\:mr-0:last-child{margin-right:0px}\n.hover\\:border-blue-gray-700:hover{--tw-border-opacity:1;border-color:rgba(69, 90, 100, var(--tw-border-opacity))}\n.hover\\:border-gray-700:hover{--tw-border-opacity:1;border-color:rgba(97, 97, 97, var(--tw-border-opacity))}\n.hover\\:border-brown-700:hover{--tw-border-opacity:1;border-color:rgba(93, 64, 55, var(--tw-border-opacity))}\n.hover\\:border-deep-orange-700:hover{--tw-border-opacity:1;border-color:rgba(230, 74, 25, var(--tw-border-opacity))}\n.hover\\:border-orange-700:hover{--tw-border-opacity:1;border-color:rgba(245, 124, 0, var(--tw-border-opacity))}\n.hover\\:border-amber-700:hover{--tw-border-opacity:1;border-color:rgba(255, 160, 0, var(--tw-border-opacity))}\n.hover\\:border-yellow-700:hover{--tw-border-opacity:1;border-color:rgba(251, 192, 45, var(--tw-border-opacity))}\n.hover\\:border-lime-700:hover{--tw-border-opacity:1;border-color:rgba(175, 180, 43, var(--tw-border-opacity))}\n.hover\\:border-light-green-700:hover{--tw-border-opacity:1;border-color:rgba(104, 159, 56, var(--tw-border-opacity))}\n.hover\\:border-green-700:hover{--tw-border-opacity:1;border-color:rgba(56, 142, 60, var(--tw-border-opacity))}\n.hover\\:border-teal-700:hover{--tw-border-opacity:1;border-color:rgba(0, 121, 107, var(--tw-border-opacity))}\n.hover\\:border-cyan-700:hover{--tw-border-opacity:1;border-color:rgba(0, 151, 167, var(--tw-border-opacity))}\n.hover\\:border-light-blue-700:hover{--tw-border-opacity:1;border-color:rgba(2, 136, 209, var(--tw-border-opacity))}\n.hover\\:border-blue-700:hover{--tw-border-opacity:1;border-color:rgba(25, 118, 210, var(--tw-border-opacity))}\n.hover\\:border-indigo-700:hover{--tw-border-opacity:1;border-color:rgba(48, 63, 159, var(--tw-border-opacity))}\n.hover\\:border-deep-purple-700:hover{--tw-border-opacity:1;border-color:rgba(81, 45, 168, var(--tw-border-opacity))}\n.hover\\:border-purple-700:hover{--tw-border-opacity:1;border-color:rgba(123, 31, 162, var(--tw-border-opacity))}\n.hover\\:border-pink-700:hover{--tw-border-opacity:1;border-color:rgba(194, 24, 91, var(--tw-border-opacity))}\n.hover\\:border-red-700:hover{--tw-border-opacity:1;border-color:rgba(211, 47, 47, var(--tw-border-opacity))}\n.hover\\:bg-blue-gray-700:hover{--tw-bg-opacity:1;background-color:rgba(69, 90, 100, var(--tw-bg-opacity))}\n.hover\\:bg-gray-700:hover{--tw-bg-opacity:1;background-color:rgba(97, 97, 97, var(--tw-bg-opacity))}\n.hover\\:bg-brown-700:hover{--tw-bg-opacity:1;background-color:rgba(93, 64, 55, var(--tw-bg-opacity))}\n.hover\\:bg-deep-orange-700:hover{--tw-bg-opacity:1;background-color:rgba(230, 74, 25, var(--tw-bg-opacity))}\n.hover\\:bg-orange-700:hover{--tw-bg-opacity:1;background-color:rgba(245, 124, 0, var(--tw-bg-opacity))}\n.hover\\:bg-amber-700:hover{--tw-bg-opacity:1;background-color:rgba(255, 160, 0, var(--tw-bg-opacity))}\n.hover\\:bg-yellow-700:hover{--tw-bg-opacity:1;background-color:rgba(251, 192, 45, var(--tw-bg-opacity))}\n.hover\\:bg-lime-700:hover{--tw-bg-opacity:1;background-color:rgba(175, 180, 43, var(--tw-bg-opacity))}\n.hover\\:bg-light-green-700:hover{--tw-bg-opacity:1;background-color:rgba(104, 159, 56, var(--tw-bg-opacity))}\n.hover\\:bg-green-700:hover{--tw-bg-opacity:1;background-color:rgba(56, 142, 60, var(--tw-bg-opacity))}\n.hover\\:bg-teal-700:hover{--tw-bg-opacity:1;background-color:rgba(0, 121, 107, var(--tw-bg-opacity))}\n.hover\\:bg-cyan-700:hover{--tw-bg-opacity:1;background-color:rgba(0, 151, 167, var(--tw-bg-opacity))}\n.hover\\:bg-light-blue-700:hover{--tw-bg-opacity:1;background-color:rgba(2, 136, 209, var(--tw-bg-opacity))}\n.hover\\:bg-blue-700:hover{--tw-bg-opacity:1;background-color:rgba(25, 118, 210, var(--tw-bg-opacity))}\n.hover\\:bg-indigo-700:hover{--tw-bg-opacity:1;background-color:rgba(48, 63, 159, var(--tw-bg-opacity))}\n.hover\\:bg-deep-purple-700:hover{--tw-bg-opacity:1;background-color:rgba(81, 45, 168, var(--tw-bg-opacity))}\n.hover\\:bg-purple-700:hover{--tw-bg-opacity:1;background-color:rgba(123, 31, 162, var(--tw-bg-opacity))}\n.hover\\:bg-pink-700:hover{--tw-bg-opacity:1;background-color:rgba(194, 24, 91, var(--tw-bg-opacity))}\n.hover\\:bg-red-700:hover{--tw-bg-opacity:1;background-color:rgba(211, 47, 47, var(--tw-bg-opacity))}\n.hover\\:bg-blue-gray-50:hover{--tw-bg-opacity:1;background-color:rgba(236, 239, 241, var(--tw-bg-opacity))}\n.hover\\:bg-gray-50:hover{--tw-bg-opacity:1;background-color:rgba(250, 250, 250, var(--tw-bg-opacity))}\n.hover\\:bg-brown-50:hover{--tw-bg-opacity:1;background-color:rgba(239, 235, 233, var(--tw-bg-opacity))}\n.hover\\:bg-deep-orange-50:hover{--tw-bg-opacity:1;background-color:rgba(251, 233, 231, var(--tw-bg-opacity))}\n.hover\\:bg-orange-50:hover{--tw-bg-opacity:1;background-color:rgba(255, 243, 224, var(--tw-bg-opacity))}\n.hover\\:bg-amber-50:hover{--tw-bg-opacity:1;background-color:rgba(255, 248, 225, var(--tw-bg-opacity))}\n.hover\\:bg-yellow-50:hover{--tw-bg-opacity:1;background-color:rgba(255, 253, 231, var(--tw-bg-opacity))}\n.hover\\:bg-lime-50:hover{--tw-bg-opacity:1;background-color:rgba(249, 251, 231, var(--tw-bg-opacity))}\n.hover\\:bg-light-green-50:hover{--tw-bg-opacity:1;background-color:rgba(241, 248, 233, var(--tw-bg-opacity))}\n.hover\\:bg-green-50:hover{--tw-bg-opacity:1;background-color:rgba(232, 245, 233, var(--tw-bg-opacity))}\n.hover\\:bg-teal-50:hover{--tw-bg-opacity:1;background-color:rgba(224, 242, 241, var(--tw-bg-opacity))}\n.hover\\:bg-cyan-50:hover{--tw-bg-opacity:1;background-color:rgba(224, 247, 250, var(--tw-bg-opacity))}\n.hover\\:bg-light-blue-50:hover{--tw-bg-opacity:1;background-color:rgba(225, 245, 254, var(--tw-bg-opacity))}\n.hover\\:bg-blue-50:hover{--tw-bg-opacity:1;background-color:rgba(227, 242, 253, var(--tw-bg-opacity))}\n.hover\\:bg-indigo-50:hover{--tw-bg-opacity:1;background-color:rgba(232, 234, 246, var(--tw-bg-opacity))}\n.hover\\:bg-deep-purple-50:hover{--tw-bg-opacity:1;background-color:rgba(237, 231, 246, var(--tw-bg-opacity))}\n.hover\\:bg-purple-50:hover{--tw-bg-opacity:1;background-color:rgba(243, 229, 245, var(--tw-bg-opacity))}\n.hover\\:bg-pink-50:hover{--tw-bg-opacity:1;background-color:rgba(252, 228, 236, var(--tw-bg-opacity))}\n.hover\\:bg-red-50:hover{--tw-bg-opacity:1;background-color:rgba(255, 235, 238, var(--tw-bg-opacity))}\n.hover\\:bg-blue-gray-500:hover{--tw-bg-opacity:1;background-color:rgba(96, 125, 139, var(--tw-bg-opacity))}\n.hover\\:bg-gray-500:hover{--tw-bg-opacity:1;background-color:rgba(158, 158, 158, var(--tw-bg-opacity))}\n.hover\\:bg-brown-500:hover{--tw-bg-opacity:1;background-color:rgba(121, 85, 72, var(--tw-bg-opacity))}\n.hover\\:bg-deep-orange-500:hover{--tw-bg-opacity:1;background-color:rgba(255, 87, 34, var(--tw-bg-opacity))}\n.hover\\:bg-orange-500:hover{--tw-bg-opacity:1;background-color:rgba(255, 152, 0, var(--tw-bg-opacity))}\n.hover\\:bg-amber-500:hover{--tw-bg-opacity:1;background-color:rgba(255, 193, 7, var(--tw-bg-opacity))}\n.hover\\:bg-yellow-600:hover{--tw-bg-opacity:1;background-color:rgba(253, 216, 53, var(--tw-bg-opacity))}\n.hover\\:bg-lime-500:hover{--tw-bg-opacity:1;background-color:rgba(205, 220, 57, var(--tw-bg-opacity))}\n.hover\\:bg-light-green-500:hover{--tw-bg-opacity:1;background-color:rgba(139, 195, 74, var(--tw-bg-opacity))}\n.hover\\:bg-green-500:hover{--tw-bg-opacity:1;background-color:rgba(76, 175, 80, var(--tw-bg-opacity))}\n.hover\\:bg-teal-500:hover{--tw-bg-opacity:1;background-color:rgba(0, 150, 136, var(--tw-bg-opacity))}\n.hover\\:bg-cyan-500:hover{--tw-bg-opacity:1;background-color:rgba(0, 188, 212, var(--tw-bg-opacity))}\n.hover\\:bg-light-blue-500:hover{--tw-bg-opacity:1;background-color:rgba(3, 169, 244, var(--tw-bg-opacity))}\n.hover\\:bg-blue-500:hover{--tw-bg-opacity:1;background-color:rgba(33, 150, 243, var(--tw-bg-opacity))}\n.hover\\:bg-indigo-500:hover{--tw-bg-opacity:1;background-color:rgba(63, 81, 181, var(--tw-bg-opacity))}\n.hover\\:bg-deep-purple-500:hover{--tw-bg-opacity:1;background-color:rgba(103, 58, 183, var(--tw-bg-opacity))}\n.hover\\:bg-purple-500:hover{--tw-bg-opacity:1;background-color:rgba(156, 39, 176, var(--tw-bg-opacity))}\n.hover\\:bg-pink-500:hover{--tw-bg-opacity:1;background-color:rgba(233, 30, 99, var(--tw-bg-opacity))}\n.hover\\:bg-red-500:hover{--tw-bg-opacity:1;background-color:rgba(244, 67, 54, var(--tw-bg-opacity))}\n.hover\\:bg-white:hover{--tw-bg-opacity:1;background-color:rgba(255, 255, 255, var(--tw-bg-opacity))}\n.hover\\:bg-opacity-20:hover{--tw-bg-opacity:0.2}\n.hover\\:text-gray-900:hover{--tw-text-opacity:1;color:rgba(33, 33, 33, var(--tw-text-opacity))}\n.hover\\:text-blue-gray-800:hover{--tw-text-opacity:1;color:rgba(55, 71, 79, var(--tw-text-opacity))}\n.hover\\:text-blue-gray-700:hover{--tw-text-opacity:1;color:rgba(69, 90, 100, var(--tw-text-opacity))}\n.hover\\:text-gray-700:hover{--tw-text-opacity:1;color:rgba(97, 97, 97, var(--tw-text-opacity))}\n.hover\\:text-brown-700:hover{--tw-text-opacity:1;color:rgba(93, 64, 55, var(--tw-text-opacity))}\n.hover\\:text-deep-orange-700:hover{--tw-text-opacity:1;color:rgba(230, 74, 25, var(--tw-text-opacity))}\n.hover\\:text-orange-700:hover{--tw-text-opacity:1;color:rgba(245, 124, 0, var(--tw-text-opacity))}\n.hover\\:text-amber-700:hover{--tw-text-opacity:1;color:rgba(255, 160, 0, var(--tw-text-opacity))}\n.hover\\:text-yellow-700:hover{--tw-text-opacity:1;color:rgba(251, 192, 45, var(--tw-text-opacity))}\n.hover\\:text-lime-700:hover{--tw-text-opacity:1;color:rgba(175, 180, 43, var(--tw-text-opacity))}\n.hover\\:text-light-green-700:hover{--tw-text-opacity:1;color:rgba(104, 159, 56, var(--tw-text-opacity))}\n.hover\\:text-green-700:hover{--tw-text-opacity:1;color:rgba(56, 142, 60, var(--tw-text-opacity))}\n.hover\\:text-teal-700:hover{--tw-text-opacity:1;color:rgba(0, 121, 107, var(--tw-text-opacity))}\n.hover\\:text-cyan-700:hover{--tw-text-opacity:1;color:rgba(0, 151, 167, var(--tw-text-opacity))}\n.hover\\:text-light-blue-700:hover{--tw-text-opacity:1;color:rgba(2, 136, 209, var(--tw-text-opacity))}\n.hover\\:text-blue-700:hover{--tw-text-opacity:1;color:rgba(25, 118, 210, var(--tw-text-opacity))}\n.hover\\:text-indigo-700:hover{--tw-text-opacity:1;color:rgba(48, 63, 159, var(--tw-text-opacity))}\n.hover\\:text-deep-purple-700:hover{--tw-text-opacity:1;color:rgba(81, 45, 168, var(--tw-text-opacity))}\n.hover\\:text-purple-700:hover{--tw-text-opacity:1;color:rgba(123, 31, 162, var(--tw-text-opacity))}\n.hover\\:text-pink-700:hover{--tw-text-opacity:1;color:rgba(194, 24, 91, var(--tw-text-opacity))}\n.hover\\:text-red-700:hover{--tw-text-opacity:1;color:rgba(211, 47, 47, var(--tw-text-opacity))}\n.hover\\:text-white:hover{--tw-text-opacity:1;color:rgba(255, 255, 255, var(--tw-text-opacity))}\n.hover\\:shadow-lg-blue-gray:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(69, 90, 100, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-gray:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(97, 97, 97, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-brown:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(93, 64, 55, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-deep-orange:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(230, 74, 25, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-orange:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(245, 122, 0, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-amber:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(255, 160, 0, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-yellow:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(251, 192, 45, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-lime:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(175, 180, 43, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-light-green:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(104, 159, 56, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-green:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(56, 142, 60, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-teal:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(0, 121, 107, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-cyan:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(0, 151, 167, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-light-blue:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(2, 136, 209, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-blue:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(25, 118, 210, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-indigo:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(48, 63, 159, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-deep-purple:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(81, 45, 168, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-purple:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(123, 31, 162, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-pink:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(194, 24, 91, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-red:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(211, 47, 47, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-blue-gray:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(96, 125, 139, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-gray:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(158, 158, 158, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-brown:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(121, 85, 72, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-deep-orange:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 87, 36, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-orange:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 152, 0, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-amber:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 193, 7, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-yellow:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 235, 59, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-lime:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(205, 220, 57, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-light-green:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(139, 195, 74, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-green:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(76, 175, 80, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-teal:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(0, 150, 136, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-cyan:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(0, 188, 212, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-light-blue:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(3, 169, 244, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-blue:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(33, 150, 243, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-indigo:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(63, 81, 181, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-deep-purple:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(103, 58, 183, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-purple:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(156, 39, 176, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-pink:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(233, 30, 99, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-red:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(244, 67, 54, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.focus\\:border-2:focus{border-width:2px}\n.focus\\:border-blue-gray-500:focus{--tw-border-opacity:1;border-color:rgba(96, 125, 139, var(--tw-border-opacity))}\n.focus\\:border-gray-500:focus{--tw-border-opacity:1;border-color:rgba(158, 158, 158, var(--tw-border-opacity))}\n.focus\\:border-brown-500:focus{--tw-border-opacity:1;border-color:rgba(121, 85, 72, var(--tw-border-opacity))}\n.focus\\:border-deep-orange-500:focus{--tw-border-opacity:1;border-color:rgba(255, 87, 34, var(--tw-border-opacity))}\n.focus\\:border-orange-500:focus{--tw-border-opacity:1;border-color:rgba(255, 152, 0, var(--tw-border-opacity))}\n.focus\\:border-amber-500:focus{--tw-border-opacity:1;border-color:rgba(255, 193, 7, var(--tw-border-opacity))}\n.focus\\:border-yellow-600:focus{--tw-border-opacity:1;border-color:rgba(253, 216, 53, var(--tw-border-opacity))}\n.focus\\:border-lime-500:focus{--tw-border-opacity:1;border-color:rgba(205, 220, 57, var(--tw-border-opacity))}\n.focus\\:border-light-green-500:focus{--tw-border-opacity:1;border-color:rgba(139, 195, 74, var(--tw-border-opacity))}\n.focus\\:border-green-500:focus{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity))}\n.focus\\:border-teal-500:focus{--tw-border-opacity:1;border-color:rgba(0, 150, 136, var(--tw-border-opacity))}\n.focus\\:border-cyan-500:focus{--tw-border-opacity:1;border-color:rgba(0, 188, 212, var(--tw-border-opacity))}\n.focus\\:border-light-blue-500:focus{--tw-border-opacity:1;border-color:rgba(3, 169, 244, var(--tw-border-opacity))}\n.focus\\:border-blue-500:focus{--tw-border-opacity:1;border-color:rgba(33, 150, 243, var(--tw-border-opacity))}\n.focus\\:border-indigo-500:focus{--tw-border-opacity:1;border-color:rgba(63, 81, 181, var(--tw-border-opacity))}\n.focus\\:border-deep-purple-500:focus{--tw-border-opacity:1;border-color:rgba(103, 58, 183, var(--tw-border-opacity))}\n.focus\\:border-purple-500:focus{--tw-border-opacity:1;border-color:rgba(156, 39, 176, var(--tw-border-opacity))}\n.focus\\:border-pink-500:focus{--tw-border-opacity:1;border-color:rgba(233, 30, 99, var(--tw-border-opacity))}\n.focus\\:border-red-500:focus{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity))}\n.focus\\:bg-blue-gray-400:focus{--tw-bg-opacity:1;background-color:rgba(120, 144, 156, var(--tw-bg-opacity))}\n.focus\\:bg-gray-400:focus{--tw-bg-opacity:1;background-color:rgba(189, 189, 189, var(--tw-bg-opacity))}\n.focus\\:bg-brown-400:focus{--tw-bg-opacity:1;background-color:rgba(141, 110, 99, var(--tw-bg-opacity))}\n.focus\\:bg-deep-orange-400:focus{--tw-bg-opacity:1;background-color:rgba(255, 112, 67, var(--tw-bg-opacity))}\n.focus\\:bg-orange-400:focus{--tw-bg-opacity:1;background-color:rgba(255, 167, 38, var(--tw-bg-opacity))}\n.focus\\:bg-amber-400:focus{--tw-bg-opacity:1;background-color:rgba(255, 202, 40, var(--tw-bg-opacity))}\n.focus\\:bg-yellow-500:focus{--tw-bg-opacity:1;background-color:rgba(255, 235, 59, var(--tw-bg-opacity))}\n.focus\\:bg-lime-400:focus{--tw-bg-opacity:1;background-color:rgba(212, 225, 87, var(--tw-bg-opacity))}\n.focus\\:bg-light-green-400:focus{--tw-bg-opacity:1;background-color:rgba(156, 204, 101, var(--tw-bg-opacity))}\n.focus\\:bg-green-400:focus{--tw-bg-opacity:1;background-color:rgba(102, 187, 106, var(--tw-bg-opacity))}\n.focus\\:bg-teal-400:focus{--tw-bg-opacity:1;background-color:rgba(38, 166, 154, var(--tw-bg-opacity))}\n.focus\\:bg-cyan-400:focus{--tw-bg-opacity:1;background-color:rgba(38, 198, 218, var(--tw-bg-opacity))}\n.focus\\:bg-light-blue-400:focus{--tw-bg-opacity:1;background-color:rgba(41, 182, 246, var(--tw-bg-opacity))}\n.focus\\:bg-blue-400:focus{--tw-bg-opacity:1;background-color:rgba(66, 165, 245, var(--tw-bg-opacity))}\n.focus\\:bg-indigo-400:focus{--tw-bg-opacity:1;background-color:rgba(92, 107, 192, var(--tw-bg-opacity))}\n.focus\\:bg-deep-purple-400:focus{--tw-bg-opacity:1;background-color:rgba(126, 87, 194, var(--tw-bg-opacity))}\n.focus\\:bg-purple-400:focus{--tw-bg-opacity:1;background-color:rgba(171, 71, 188, var(--tw-bg-opacity))}\n.focus\\:bg-pink-400:focus{--tw-bg-opacity:1;background-color:rgba(236, 64, 122, var(--tw-bg-opacity))}\n.focus\\:bg-red-400:focus{--tw-bg-opacity:1;background-color:rgba(239, 83, 80, var(--tw-bg-opacity))}\n.focus\\:bg-gray-500:focus{--tw-bg-opacity:1;background-color:rgba(158, 158, 158, var(--tw-bg-opacity))}\n.focus\\:bg-opacity-20:focus{--tw-bg-opacity:0.2}\n.focus\\:text-gray-800:focus{--tw-text-opacity:1;color:rgba(66, 66, 66, var(--tw-text-opacity))}\n.focus\\:shadow-none:focus{--tw-shadow:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}\n.focus\\:ring-0:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)}\n.active\\:bg-blue-gray-800:active{--tw-bg-opacity:1;background-color:rgba(55, 71, 79, var(--tw-bg-opacity))}\n.active\\:bg-gray-800:active{--tw-bg-opacity:1;background-color:rgba(66, 66, 66, var(--tw-bg-opacity))}\n.active\\:bg-brown-800:active{--tw-bg-opacity:1;background-color:rgba(78, 52, 46, var(--tw-bg-opacity))}\n.active\\:bg-deep-orange-800:active{--tw-bg-opacity:1;background-color:rgba(216, 67, 21, var(--tw-bg-opacity))}\n.active\\:bg-orange-800:active{--tw-bg-opacity:1;background-color:rgba(239, 108, 0, var(--tw-bg-opacity))}\n.active\\:bg-amber-800:active{--tw-bg-opacity:1;background-color:rgba(255, 143, 0, var(--tw-bg-opacity))}\n.active\\:bg-yellow-800:active{--tw-bg-opacity:1;background-color:rgba(249, 168, 37, var(--tw-bg-opacity))}\n.active\\:bg-lime-800:active{--tw-bg-opacity:1;background-color:rgba(158, 157, 36, var(--tw-bg-opacity))}\n.active\\:bg-light-green-800:active{--tw-bg-opacity:1;background-color:rgba(85, 139, 47, var(--tw-bg-opacity))}\n.active\\:bg-green-800:active{--tw-bg-opacity:1;background-color:rgba(46, 125, 50, var(--tw-bg-opacity))}\n.active\\:bg-teal-800:active{--tw-bg-opacity:1;background-color:rgba(0, 105, 92, var(--tw-bg-opacity))}\n.active\\:bg-cyan-800:active{--tw-bg-opacity:1;background-color:rgba(0, 131, 143, var(--tw-bg-opacity))}\n.active\\:bg-light-blue-800:active{--tw-bg-opacity:1;background-color:rgba(2, 119, 189, var(--tw-bg-opacity))}\n.active\\:bg-blue-800:active{--tw-bg-opacity:1;background-color:rgba(21, 101, 192, var(--tw-bg-opacity))}\n.active\\:bg-indigo-800:active{--tw-bg-opacity:1;background-color:rgba(40, 53, 147, var(--tw-bg-opacity))}\n.active\\:bg-deep-purple-800:active{--tw-bg-opacity:1;background-color:rgba(69, 39, 160, var(--tw-bg-opacity))}\n.active\\:bg-purple-800:active{--tw-bg-opacity:1;background-color:rgba(106, 27, 154, var(--tw-bg-opacity))}\n.active\\:bg-pink-800:active{--tw-bg-opacity:1;background-color:rgba(173, 20, 87, var(--tw-bg-opacity))}\n.active\\:bg-red-800:active{--tw-bg-opacity:1;background-color:rgba(198, 40, 40, var(--tw-bg-opacity))}\n.active\\:bg-blue-gray-100:active{--tw-bg-opacity:1;background-color:rgba(207, 216, 220, var(--tw-bg-opacity))}\n.active\\:bg-gray-100:active{--tw-bg-opacity:1;background-color:rgba(245, 245, 245, var(--tw-bg-opacity))}\n.active\\:bg-brown-100:active{--tw-bg-opacity:1;background-color:rgba(215, 204, 200, var(--tw-bg-opacity))}\n.active\\:bg-deep-orange-100:active{--tw-bg-opacity:1;background-color:rgba(255, 204, 188, var(--tw-bg-opacity))}\n.active\\:bg-orange-100:active{--tw-bg-opacity:1;background-color:rgba(255, 224, 178, var(--tw-bg-opacity))}\n.active\\:bg-amber-100:active{--tw-bg-opacity:1;background-color:rgba(255, 236, 179, var(--tw-bg-opacity))}\n.active\\:bg-yellow-100:active{--tw-bg-opacity:1;background-color:rgba(255, 249, 196, var(--tw-bg-opacity))}\n.active\\:bg-lime-100:active{--tw-bg-opacity:1;background-color:rgba(240, 244, 195, var(--tw-bg-opacity))}\n.active\\:bg-light-green-100:active{--tw-bg-opacity:1;background-color:rgba(220, 237, 200, var(--tw-bg-opacity))}\n.active\\:bg-green-100:active{--tw-bg-opacity:1;background-color:rgba(200, 230, 201, var(--tw-bg-opacity))}\n.active\\:bg-teal-100:active{--tw-bg-opacity:1;background-color:rgba(178, 223, 219, var(--tw-bg-opacity))}\n.active\\:bg-cyan-100:active{--tw-bg-opacity:1;background-color:rgba(178, 235, 242, var(--tw-bg-opacity))}\n.active\\:bg-light-blue-100:active{--tw-bg-opacity:1;background-color:rgba(179, 229, 252, var(--tw-bg-opacity))}\n.active\\:bg-blue-100:active{--tw-bg-opacity:1;background-color:rgba(187, 222, 251, var(--tw-bg-opacity))}\n.active\\:bg-indigo-100:active{--tw-bg-opacity:1;background-color:rgba(197, 202, 233, var(--tw-bg-opacity))}\n.active\\:bg-deep-purple-100:active{--tw-bg-opacity:1;background-color:rgba(209, 196, 233, var(--tw-bg-opacity))}\n.active\\:bg-purple-100:active{--tw-bg-opacity:1;background-color:rgba(225, 190, 231, var(--tw-bg-opacity))}\n.active\\:bg-pink-100:active{--tw-bg-opacity:1;background-color:rgba(248, 187, 208, var(--tw-bg-opacity))}\n.active\\:bg-red-100:active{--tw-bg-opacity:1;background-color:rgba(255, 205, 210, var(--tw-bg-opacity))}\n.active\\:bg-gray-500:active{--tw-bg-opacity:1;background-color:rgba(158, 158, 158, var(--tw-bg-opacity))}\n.active\\:bg-opacity-40:active{--tw-bg-opacity:0.4}\n@media (min-width: 640px){\n.sm\\:left-auto{left:auto}\n.sm\\:w-full{width:100%}}\n@media (min-width: 768px){\n.md\\:mt-40{margin-top:10rem}\n.md\\:mt-0{margin-top:0px}\n.md\\:mt-64{margin-top:16rem}\n.md\\:mb-0{margin-bottom:0px}\n.md\\:w-9\\/12{width:75%}\n.md\\:w-48{width:12rem}\n.md\\:w-6\\/12{width:50%}\n.md\\:w-4\\/12{width:33.333333%}\n.md\\:w-5\\/12{width:41.666667%}\n.md\\:w-8\\/12{width:66.666667%}\n.md\\:flex-row{flex-direction:row}\n.md\\:justify-start{justify-content:flex-start}\n.md\\:justify-between{justify-content:space-between}\n.md\\:gap-6{gap:1.5rem}\n.md\\:px-8{padding-left:2rem;padding-right:2rem}\n.md\\:px-4{padding-left:1rem;padding-right:1rem}\n.md\\:pr-12{padding-right:3rem}\n.md\\:pt-0{padding-top:0px}}\n@media (min-width: 1024px){\n.lg\\:static{position:static}\n.lg\\:mr-5{margin-right:1.25rem}\n.lg\\:ml-5{margin-left:1.25rem}\n.lg\\:mt-16{margin-top:4rem}\n.lg\\:block{display:block}\n.lg\\:flex{display:flex}\n.lg\\:hidden{display:none}\n.lg\\:w-4\\/12{width:33.333333%}\n.lg\\:w-6\\/12{width:50%}\n.lg\\:w-8\\/12{width:66.666667%}\n.lg\\:w-60{width:15rem}\n.lg\\:w-auto{width:auto}\n.lg\\:flex-row{flex-direction:row}\n.lg\\:items-center{align-items:center}\n.lg\\:justify-between{justify-content:space-between}\n.lg\\:justify-start{justify-content:flex-start}\n.lg\\:px-36{padding-left:9rem;padding-right:9rem}\n.lg\\:text-left{text-align:left}}\n", "",{"version":3,"sources":["webpack://node_modules/@material-tailwind/react/tailwind.css"],"names":[],"mappings":"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","sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@100;200;300;400;500;600;700;800;900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');\n.tippy-box[data-placement^=top]>.tippy-svg-arrow{bottom:0}\n.tippy-box[data-placement^=top]>.tippy-svg-arrow:after,.tippy-box[data-placement^=top]>.tippy-svg-arrow>svg{top:16px;transform:rotate(180deg)}\n.tippy-box[data-placement^=bottom]>.tippy-svg-arrow{top:0}\n.tippy-box[data-placement^=bottom]>.tippy-svg-arrow>svg{bottom:16px}\n.tippy-box[data-placement^=left]>.tippy-svg-arrow{right:0}\n.tippy-box[data-placement^=left]>.tippy-svg-arrow:after,.tippy-box[data-placement^=left]>.tippy-svg-arrow>svg{transform:rotate(90deg);top:calc(50% - 3px);left:11px}\n.tippy-box[data-placement^=right]>.tippy-svg-arrow{left:0}\n.tippy-box[data-placement^=right]>.tippy-svg-arrow:after,.tippy-box[data-placement^=right]>.tippy-svg-arrow>svg{transform:rotate(-90deg);top:calc(50% - 3px);right:11px}\n.tippy-svg-arrow{width:16px;height:16px;fill:#333;text-align:initial}\n.tippy-svg-arrow,.tippy-svg-arrow>svg{position:absolute}\n.tippy-box[data-animation=scale][data-placement^=top]{transform-origin:bottom}\n.tippy-box[data-animation=scale][data-placement^=bottom]{transform-origin:top}\n.tippy-box[data-animation=scale][data-placement^=left]{transform-origin:right}\n.tippy-box[data-animation=scale][data-placement^=right]{transform-origin:left}\n.tippy-box[data-animation=scale][data-state=hidden]{transform:scale(.5);opacity:0}\n.tippy-box[data-animation=shift-away][data-state=hidden]{opacity:0}\n.tippy-box[data-animation=shift-away][data-state=hidden][data-placement^=top]{transform:translateY(10px)}\n.tippy-box[data-animation=shift-away][data-state=hidden][data-placement^=bottom]{transform:translateY(-10px)}\n.tippy-box[data-animation=shift-away][data-state=hidden][data-placement^=left]{transform:translateX(10px)}\n.tippy-box[data-animation=shift-away][data-state=hidden][data-placement^=right]{transform:translateX(-10px)}\n/*! tailwindcss v2.1.4 | MIT License | https://tailwindcss.com */\n/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */\n/*\nDocument\n========\n*/\n/**\nUse a better box model (opinionated).\n*/\n*,\n::before,\n::after {\n\tbox-sizing: border-box;\n}\n/**\nUse a more readable tab size (opinionated).\n*/\nhtml {\n\t-moz-tab-size: 4;\n\t-o-tab-size: 4;\n\t   tab-size: 4;\n}\n/**\n1. Correct the line height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n*/\nhtml {\n\tline-height: 1.15; /* 1 */\n\t-webkit-text-size-adjust: 100%; /* 2 */\n}\n/*\nSections\n========\n*/\n/**\nRemove the margin in all browsers.\n*/\nbody {\n\tmargin: 0;\n}\n/**\nImprove consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n*/\nbody {\n\tfont-family:\n\t\tsystem-ui,\n\t\t-apple-system, /* Firefox supports this but not yet `system-ui` */\n\t\t'Segoe UI',\n\t\tRoboto,\n\t\tHelvetica,\n\t\tArial,\n\t\tsans-serif,\n\t\t'Apple Color Emoji',\n\t\t'Segoe UI Emoji';\n}\n/*\nGrouping content\n================\n*/\n/**\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n*/\nhr {\n\theight: 0; /* 1 */\n\tcolor: inherit; /* 2 */\n}\n/*\nText-level semantics\n====================\n*/\n/**\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\nabbr[title] {\n\t-webkit-text-decoration: underline dotted;\n\t        text-decoration: underline dotted;\n}\n/**\nAdd the correct font weight in Edge and Safari.\n*/\nb,\nstrong {\n\tfont-weight: bolder;\n}\n/**\n1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n2. Correct the odd 'em' font sizing in all browsers.\n*/\ncode,\nkbd,\nsamp,\npre {\n\tfont-family:\n\t\tui-monospace,\n\t\tSFMono-Regular,\n\t\tConsolas,\n\t\t'Liberation Mono',\n\t\tMenlo,\n\t\tmonospace; /* 1 */\n\tfont-size: 1em; /* 2 */\n}\n/**\nAdd the correct font size in all browsers.\n*/\nsmall {\n\tfont-size: 80%;\n}\n/**\nPrevent 'sub' and 'sup' elements from affecting the line height in all browsers.\n*/\nsub,\nsup {\n\tfont-size: 75%;\n\tline-height: 0;\n\tposition: relative;\n\tvertical-align: baseline;\n}\nsub {\n\tbottom: -0.25em;\n}\nsup {\n\ttop: -0.5em;\n}\n/*\nTabular data\n============\n*/\n/**\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n*/\ntable {\n\ttext-indent: 0; /* 1 */\n\tborder-color: inherit; /* 2 */\n}\n/*\nForms\n=====\n*/\n/**\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n*/\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n\tfont-family: inherit; /* 1 */\n\tfont-size: 100%; /* 1 */\n\tline-height: 1.15; /* 1 */\n\tmargin: 0; /* 2 */\n}\n/**\nRemove the inheritance of text transform in Edge and Firefox.\n1. Remove the inheritance of text transform in Firefox.\n*/\nbutton,\nselect { /* 1 */\n\ttext-transform: none;\n}\n/**\nCorrect the inability to style clickable types in iOS and Safari.\n*/\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n\t-webkit-appearance: button;\n}\n/**\nRemove the inner border and padding in Firefox.\n*/\n::-moz-focus-inner {\n\tborder-style: none;\n\tpadding: 0;\n}\n/**\nRestore the focus styles unset by the previous rule.\n*/\n:-moz-focusring {\n\toutline: 1px dotted ButtonText;\n}\n/**\nRemove the additional ':invalid' styles in Firefox.\nSee: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737\n*/\n:-moz-ui-invalid {\n\tbox-shadow: none;\n}\n/**\nRemove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.\n*/\nlegend {\n\tpadding: 0;\n}\n/**\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\nprogress {\n\tvertical-align: baseline;\n}\n/**\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n\theight: auto;\n}\n/**\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n[type='search'] {\n\t-webkit-appearance: textfield; /* 1 */\n\toutline-offset: -2px; /* 2 */\n}\n/**\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n::-webkit-search-decoration {\n\t-webkit-appearance: none;\n}\n/**\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to 'inherit' in Safari.\n*/\n::-webkit-file-upload-button {\n\t-webkit-appearance: button; /* 1 */\n\tfont: inherit; /* 2 */\n}\n/*\nInteractive\n===========\n*/\n/*\nAdd the correct display in Chrome and Safari.\n*/\nsummary {\n\tdisplay: list-item;\n}\n/**\n * Manually forked from SUIT CSS Base: https://github.com/suitcss/base\n * A thin layer on top of normalize.css that provides a starting point more\n * suitable for web applications.\n */\n/**\n * Removes the default spacing and border for appropriate elements.\n */\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\nbutton {\n  background-color: transparent;\n  background-image: none;\n}\n/**\n * Work around a Firefox/IE bug where the transparent `button` background\n * results in a loss of the default `button` focus styles.\n */\nbutton:focus {\n  outline: 1px dotted;\n  outline: 5px auto -webkit-focus-ring-color;\n}\nfieldset {\n  margin: 0;\n  padding: 0;\n}\nol,\nul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n/**\n * Tailwind custom reset styles\n */\n/**\n * 1. Use the user's configured `sans` font-family (with Tailwind's default\n *    sans-serif font stack as a fallback) as a sane default.\n * 2. Use Tailwind's default \"normal\" line-height so the user isn't forced\n *    to override it to ensure consistency even when using the default theme.\n */\nhtml {\n  font-family: Roboto, sans-serif; /* 1 */\n  line-height: 1.5; /* 2 */\n}\n/**\n * Inherit font-family and line-height from `html` so users can set them as\n * a class directly on the `html` element.\n */\nbody {\n  font-family: inherit;\n  line-height: inherit;\n}\n/**\n * 1. Prevent padding and border from affecting element width.\n *\n *    We used to set this in the html element and inherit from\n *    the parent element for everything else. This caused issues\n *    in shadow-dom-enhanced elements like <details> where the content\n *    is wrapped by a div with box-sizing set to `content-box`.\n *\n *    https://github.com/mozdevs/cssremedy/issues/4\n *\n *\n * 2. Allow adding a border to an element by just adding a border-width.\n *\n *    By default, the way the browser specifies that an element should have no\n *    border is by setting it's border-style to `none` in the user-agent\n *    stylesheet.\n *\n *    In order to easily add borders to elements by just setting the `border-width`\n *    property, we change the default border-style for all elements to `solid`, and\n *    use border-width to hide them instead. This way our `border` utilities only\n *    need to set the `border-width` property instead of the entire `border`\n *    shorthand, making our border utilities much more straightforward to compose.\n *\n *    https://github.com/tailwindcss/tailwindcss/pull/116\n */\n*,\n::before,\n::after {\n  box-sizing: border-box; /* 1 */\n  border-width: 0; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: #eeeeee; /* 2 */\n}\n/*\n * Ensure horizontal rules are visible by default\n */\nhr {\n  border-top-width: 1px;\n}\n/**\n * Undo the `border-style: none` reset that Normalize applies to images so that\n * our `border-{width}` utilities have the expected effect.\n *\n * The Normalize reset is unnecessary for us since we default the border-width\n * to 0 on all elements.\n *\n * https://github.com/tailwindcss/tailwindcss/issues/362\n */\nimg {\n  border-style: solid;\n}\ntextarea {\n  resize: vertical;\n}\ninput::-moz-placeholder, textarea::-moz-placeholder {\n  opacity: 1;\n  color: #bdbdbd;\n}\ninput:-ms-input-placeholder, textarea:-ms-input-placeholder {\n  opacity: 1;\n  color: #bdbdbd;\n}\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1;\n  color: #bdbdbd;\n}\nbutton,\n[role=\"button\"] {\n  cursor: pointer;\n}\ntable {\n  border-collapse: collapse;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n/**\n * Reset links to optimize for opt-in styling instead of\n * opt-out.\n */\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n/**\n * Reset form element properties that are easy to forget to\n * style explicitly so you don't inadvertently introduce\n * styles that deviate from your design system. These styles\n * supplement a partial reset that is already applied by\n * normalize.css.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  padding: 0;\n  line-height: inherit;\n  color: inherit;\n}\n/**\n * Use the configured 'mono' font family for elements that\n * are expected to be rendered with a monospace font, falling\n * back to the system monospace stack if there is no configured\n * 'mono' font family.\n */\npre,\ncode,\nkbd,\nsamp {\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n}\n/**\n * Make replaced elements `display: block` by default as that's\n * the behavior you want almost all of the time. Inspired by\n * CSS Remedy, with `svg` added as well.\n *\n * https://github.com/mozdevs/cssremedy/issues/14\n */\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block;\n  vertical-align: middle;\n}\n/**\n * Constrain images and videos to the parent width and preserve\n * their intrinsic aspect ratio.\n *\n * https://github.com/mozdevs/cssremedy/issues/14\n */\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n*{--tw-shadow:0 0 #0000;--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(33, 150, 243, 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000}\n.container{width:100%}\n@media (min-width: 640px){\n.container{max-width:640px}}\n@media (min-width: 768px){\n.container{max-width:768px}}\n@media (min-width: 1024px){\n.container{max-width:1024px}}\n@media (min-width: 1280px){\n.container{max-width:1280px}}\n@media (min-width: 1536px){\n.container{max-width:1536px}}\n.pointer-events-none{pointer-events:none}\n.pointer-events-auto{pointer-events:auto}\n.relative{position:relative}\n.absolute{position:absolute}\n.sticky{position:sticky}\n.fixed{position:fixed}\n.inset-0{top:0px;right:0px;bottom:0px;left:0px}\n.right-4{right:1rem}\n.top-1\\/3{top:33.333333%}\n.left-0{left:0px}\n.right-0{right:0px}\n.top-16{top:4rem}\n.-top-1\\.5{top:-0.375rem}\n.-top-0\\.5{top:-0.125rem}\n.-top-1{top:-0.25rem}\n.-top-0{top:0px}\n.top-1\\/4{top:25%}\n.top-1\\/2{top:50%}\n.right-2{right:0.5rem}\n.right-3{right:0.75rem}\n.top-2{top:0.5rem}\n.top-0{top:0px}\n.-bottom-4{bottom:-1rem}\n.-bottom-5{bottom:-1.25rem}\n.z-30{z-index:30}\n.z-20{z-index:20}\n.z-10{z-index:10}\n.z-50{z-index:50}\n.z-40{z-index:40}\n.float-left{float:left}\n.float-right{float:right}\n.mx-auto{margin-left:auto;margin-right:auto}\n.my-16{margin-top:4rem;margin-bottom:4rem}\n.my-4{margin-top:1rem;margin-bottom:1rem}\n.my-6{margin-top:1.5rem;margin-bottom:1.5rem}\n.mx-4{margin-left:1rem;margin-right:1rem}\n.mx-1{margin-left:0.25rem;margin-right:0.25rem}\n.my-8{margin-top:2rem;margin-bottom:2rem}\n.mx-5{margin-left:1.25rem;margin-right:1.25rem}\n.mb-16{margin-bottom:4rem}\n.mt-36{margin-top:9rem}\n.mt-10{margin-top:2.5rem}\n.mt-5{margin-top:1.25rem}\n.mt-16{margin-top:4rem}\n.mt-4{margin-top:1rem}\n.mt-20{margin-top:5rem}\n.mb-10{margin-bottom:2.5rem}\n.mt-8{margin-top:2rem}\n.mt-12{margin-top:3rem}\n.mb-24{margin-bottom:6rem}\n.mt-48{margin-top:12rem}\n.mr-auto{margin-right:auto}\n.ml-auto{margin-left:auto}\n.mb-6{margin-bottom:1.5rem}\n.mr-2{margin-right:0.5rem}\n.mt-2{margin-top:0.5rem}\n.mt-32{margin-top:8rem}\n.mt-6{margin-top:1.5rem}\n.mr-3{margin-right:0.75rem}\n.-mt-64{margin-top:-16rem}\n.mb-5{margin-bottom:1.25rem}\n.mb-12{margin-bottom:3rem}\n.mb-8{margin-bottom:2rem}\n.mb-4{margin-bottom:1rem}\n.mb-2{margin-bottom:0.5rem}\n.-mt-10{margin-top:-2.5rem}\n.-mt-9{margin-top:-2.25rem}\n.mb-1{margin-bottom:0.25rem}\n.ml-1{margin-left:0.25rem}\n.mr-1{margin-right:0.25rem}\n.mt-1{margin-top:0.25rem}\n.mb-0{margin-bottom:0px}\n.mt-3{margin-top:0.75rem}\n.ml-7{margin-left:1.75rem}\n.ml-2{margin-left:0.5rem}\n.mt-0{margin-top:0px}\n.mb-3{margin-bottom:0.75rem}\n.mr-4{margin-right:1rem}\n.-mt-12{margin-top:-3rem}\n.mr-10{margin-right:2.5rem}\n.block{display:block}\n.inline-block{display:inline-block}\n.flex{display:flex}\n.inline-flex{display:inline-flex}\n.grid{display:grid}\n.hidden{display:none}\n.h-16{height:4rem}\n.h-7{height:1.75rem}\n.h-10{height:2.5rem}\n.h-32{height:8rem}\n.h-20{height:5rem}\n.h-12{height:3rem}\n.h-6{height:1.5rem}\n.h-8{height:2rem}\n.h-24{height:6rem}\n.h-28{height:7rem}\n.h-5{height:1.25rem}\n.h-screen{height:100vh}\n.h-auto{height:auto}\n.h-full{height:100%}\n.h-9{height:2.25rem}\n.h-11{height:2.75rem}\n.h-4{height:1rem}\n.h-px{height:1px}\n.h-2{height:0.5rem}\n.w-full{width:100%}\n.w-40{width:10rem}\n.w-72{width:18rem}\n.w-\\[28rem\\]{width:28rem}\n.w-64{width:16rem}\n.w-96{width:24rem}\n.w-48{width:12rem}\n.w-16{width:4rem}\n.w-7{width:1.75rem}\n.w-32{width:8rem}\n.w-12{width:3rem}\n.w-10{width:2.5rem}\n.w-6{width:1.5rem}\n.w-8{width:2rem}\n.w-20{width:5rem}\n.w-24{width:6rem}\n.w-28{width:7rem}\n.w-5{width:1.25rem}\n.w-10\\/12{width:83.333333%}\n.w-4{width:1rem}\n.w-auto{width:auto}\n.w-14{width:3.5rem}\n.min-w-0{min-width:0px}\n.max-w-7xl{max-width:80rem}\n.max-w-full{max-width:100%}\n.max-w-max{max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}\n.max-w-sm{max-width:24rem}\n.max-w-6xl{max-width:72rem}\n.max-w-3xl{max-width:48rem}\n.max-w-xs{max-width:20rem}\n.flex-auto{flex:1 1 auto}\n.flex-1{flex:1 1 0%}\n.flex-none{flex:none}\n.flex-grow{flex-grow:1}\n.transform{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}\n.-translate-y-1\\/3{--tw-translate-y:-33.333333%}\n.-translate-y-1\\/2{--tw-translate-y:-50%}\n.translate-y-0{--tw-translate-y:0px}\n.-translate-y-10{--tw-translate-y:-2.5rem}\n.cursor-pointer{cursor:pointer}\n.cursor-not-allowed{cursor:not-allowed}\n.select-none{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}\n.resize-none{resize:none}\n.list-none{list-style-type:none}\n.flex-col{flex-direction:column}\n.flex-wrap{flex-wrap:wrap}\n.place-items-center{place-items:center}\n.items-center{align-items:center}\n.items-end{align-items:flex-end}\n.items-start{align-items:flex-start}\n.justify-between{justify-content:space-between}\n.justify-center{justify-content:center}\n.justify-start{justify-content:flex-start}\n.justify-end{justify-content:flex-end}\n.gap-8{gap:2rem}\n.gap-10{gap:2.5rem}\n.gap-4{gap:1rem}\n.gap-2{gap:0.5rem}\n.gap-3{gap:0.75rem}\n.gap-1{gap:0.25rem}\n.gap-x-2{-moz-column-gap:0.5rem;column-gap:0.5rem}\n.gap-y-8{row-gap:2rem}\n.gap-x-24{-moz-column-gap:6rem;column-gap:6rem}\n.gap-y-4{row-gap:1rem}\n.gap-x-8{-moz-column-gap:2rem;column-gap:2rem}\n.space-y-4 > :not([hidden]) ~ :not([hidden]){--tw-space-y-reverse:0;margin-top:calc(1rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1rem * var(--tw-space-y-reverse))}\n.overflow-hidden{overflow:hidden}\n.overflow-y-scroll{overflow-y:scroll}\n.overflow-x-hidden{overflow-x:hidden}\n.overflow-y-auto{overflow-y:auto}\n.whitespace-nowrap{white-space:nowrap}\n.break-words{overflow-wrap:break-word}\n.rounded{border-radius:0.25rem}\n.rounded-lg{border-radius:0.5rem}\n.rounded-full{border-radius:9999px}\n.rounded-xl{border-radius:0.75rem}\n.rounded-md{border-radius:0.375rem}\n.rounded-sm{border-radius:0.125rem}\n.rounded-t{border-top-left-radius:0.25rem;border-top-right-radius:0.25rem}\n.border{border-width:1px}\n.border-0{border-width:0px}\n.border-t-0{border-top-width:0px}\n.border-r-0{border-right-width:0px}\n.border-l-0{border-left-width:0px}\n.border-t{border-top-width:1px}\n.border-b{border-bottom-width:1px}\n.border-b-0{border-bottom-width:0px}\n.border-r{border-right-width:1px}\n.border-solid{border-style:solid}\n.border-none{border-style:none}\n.border-blue-gray-50{--tw-border-opacity:1;border-color:rgba(236, 239, 241, var(--tw-border-opacity))}\n.border-gray-200{--tw-border-opacity:1;border-color:rgba(238, 238, 238, var(--tw-border-opacity))}\n.border-gray-300{--tw-border-opacity:1;border-color:rgba(224, 224, 224, var(--tw-border-opacity))}\n.border-blue-gray-500{--tw-border-opacity:1;border-color:rgba(96, 125, 139, var(--tw-border-opacity))}\n.border-gray-500{--tw-border-opacity:1;border-color:rgba(158, 158, 158, var(--tw-border-opacity))}\n.border-brown-500{--tw-border-opacity:1;border-color:rgba(121, 85, 72, var(--tw-border-opacity))}\n.border-deep-orange-500{--tw-border-opacity:1;border-color:rgba(255, 87, 34, var(--tw-border-opacity))}\n.border-orange-500{--tw-border-opacity:1;border-color:rgba(255, 152, 0, var(--tw-border-opacity))}\n.border-amber-500{--tw-border-opacity:1;border-color:rgba(255, 193, 7, var(--tw-border-opacity))}\n.border-yellow-600{--tw-border-opacity:1;border-color:rgba(253, 216, 53, var(--tw-border-opacity))}\n.border-lime-500{--tw-border-opacity:1;border-color:rgba(205, 220, 57, var(--tw-border-opacity))}\n.border-light-green-500{--tw-border-opacity:1;border-color:rgba(139, 195, 74, var(--tw-border-opacity))}\n.border-green-500{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity))}\n.border-teal-500{--tw-border-opacity:1;border-color:rgba(0, 150, 136, var(--tw-border-opacity))}\n.border-cyan-500{--tw-border-opacity:1;border-color:rgba(0, 188, 212, var(--tw-border-opacity))}\n.border-light-blue-500{--tw-border-opacity:1;border-color:rgba(3, 169, 244, var(--tw-border-opacity))}\n.border-blue-500{--tw-border-opacity:1;border-color:rgba(33, 150, 243, var(--tw-border-opacity))}\n.border-indigo-500{--tw-border-opacity:1;border-color:rgba(63, 81, 181, var(--tw-border-opacity))}\n.border-deep-purple-500{--tw-border-opacity:1;border-color:rgba(103, 58, 183, var(--tw-border-opacity))}\n.border-purple-500{--tw-border-opacity:1;border-color:rgba(156, 39, 176, var(--tw-border-opacity))}\n.border-pink-500{--tw-border-opacity:1;border-color:rgba(233, 30, 99, var(--tw-border-opacity))}\n.border-red-500{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity))}\n.border-transparent{border-color:transparent}\n.bg-white{--tw-bg-opacity:1;background-color:rgba(255, 255, 255, var(--tw-bg-opacity))}\n.bg-gray-100{--tw-bg-opacity:1;background-color:rgba(245, 245, 245, var(--tw-bg-opacity))}\n.bg-orange-900{--tw-bg-opacity:1;background-color:rgba(230, 81, 0, var(--tw-bg-opacity))}\n.bg-light-blue-500{--tw-bg-opacity:1;background-color:rgba(3, 169, 244, var(--tw-bg-opacity))}\n.bg-gray-900{--tw-bg-opacity:1;background-color:rgba(33, 33, 33, var(--tw-bg-opacity))}\n.bg-yellow-600{--tw-bg-opacity:1;background-color:rgba(253, 216, 53, var(--tw-bg-opacity))}\n.bg-red-700{--tw-bg-opacity:1;background-color:rgba(211, 47, 47, var(--tw-bg-opacity))}\n.bg-green-500{--tw-bg-opacity:1;background-color:rgba(76, 175, 80, var(--tw-bg-opacity))}\n.bg-blue-gray-800{--tw-bg-opacity:1;background-color:rgba(55, 71, 79, var(--tw-bg-opacity))}\n.bg-blue-gray-500{--tw-bg-opacity:1;background-color:rgba(96, 125, 139, var(--tw-bg-opacity))}\n.bg-gray-500{--tw-bg-opacity:1;background-color:rgba(158, 158, 158, var(--tw-bg-opacity))}\n.bg-brown-500{--tw-bg-opacity:1;background-color:rgba(121, 85, 72, var(--tw-bg-opacity))}\n.bg-deep-orange-500{--tw-bg-opacity:1;background-color:rgba(255, 87, 34, var(--tw-bg-opacity))}\n.bg-orange-500{--tw-bg-opacity:1;background-color:rgba(255, 152, 0, var(--tw-bg-opacity))}\n.bg-amber-500{--tw-bg-opacity:1;background-color:rgba(255, 193, 7, var(--tw-bg-opacity))}\n.bg-lime-500{--tw-bg-opacity:1;background-color:rgba(205, 220, 57, var(--tw-bg-opacity))}\n.bg-light-green-500{--tw-bg-opacity:1;background-color:rgba(139, 195, 74, var(--tw-bg-opacity))}\n.bg-teal-500{--tw-bg-opacity:1;background-color:rgba(0, 150, 136, var(--tw-bg-opacity))}\n.bg-cyan-500{--tw-bg-opacity:1;background-color:rgba(0, 188, 212, var(--tw-bg-opacity))}\n.bg-blue-500{--tw-bg-opacity:1;background-color:rgba(33, 150, 243, var(--tw-bg-opacity))}\n.bg-indigo-500{--tw-bg-opacity:1;background-color:rgba(63, 81, 181, var(--tw-bg-opacity))}\n.bg-deep-purple-500{--tw-bg-opacity:1;background-color:rgba(103, 58, 183, var(--tw-bg-opacity))}\n.bg-purple-500{--tw-bg-opacity:1;background-color:rgba(156, 39, 176, var(--tw-bg-opacity))}\n.bg-pink-500{--tw-bg-opacity:1;background-color:rgba(233, 30, 99, var(--tw-bg-opacity))}\n.bg-red-500{--tw-bg-opacity:1;background-color:rgba(244, 67, 54, var(--tw-bg-opacity))}\n.bg-transparent{background-color:transparent}\n.bg-gray-200{--tw-bg-opacity:1;background-color:rgba(238, 238, 238, var(--tw-bg-opacity))}\n.bg-blue-gray-100{--tw-bg-opacity:1;background-color:rgba(207, 216, 220, var(--tw-bg-opacity))}\n.bg-brown-100{--tw-bg-opacity:1;background-color:rgba(215, 204, 200, var(--tw-bg-opacity))}\n.bg-deep-orange-100{--tw-bg-opacity:1;background-color:rgba(255, 204, 188, var(--tw-bg-opacity))}\n.bg-orange-100{--tw-bg-opacity:1;background-color:rgba(255, 224, 178, var(--tw-bg-opacity))}\n.bg-amber-100{--tw-bg-opacity:1;background-color:rgba(255, 236, 179, var(--tw-bg-opacity))}\n.bg-yellow-100{--tw-bg-opacity:1;background-color:rgba(255, 249, 196, var(--tw-bg-opacity))}\n.bg-lime-100{--tw-bg-opacity:1;background-color:rgba(240, 244, 195, var(--tw-bg-opacity))}\n.bg-light-green-100{--tw-bg-opacity:1;background-color:rgba(220, 237, 200, var(--tw-bg-opacity))}\n.bg-green-100{--tw-bg-opacity:1;background-color:rgba(200, 230, 201, var(--tw-bg-opacity))}\n.bg-teal-100{--tw-bg-opacity:1;background-color:rgba(178, 223, 219, var(--tw-bg-opacity))}\n.bg-cyan-100{--tw-bg-opacity:1;background-color:rgba(178, 235, 242, var(--tw-bg-opacity))}\n.bg-light-blue-100{--tw-bg-opacity:1;background-color:rgba(179, 229, 252, var(--tw-bg-opacity))}\n.bg-blue-100{--tw-bg-opacity:1;background-color:rgba(187, 222, 251, var(--tw-bg-opacity))}\n.bg-indigo-100{--tw-bg-opacity:1;background-color:rgba(197, 202, 233, var(--tw-bg-opacity))}\n.bg-deep-purple-100{--tw-bg-opacity:1;background-color:rgba(209, 196, 233, var(--tw-bg-opacity))}\n.bg-purple-100{--tw-bg-opacity:1;background-color:rgba(225, 190, 231, var(--tw-bg-opacity))}\n.bg-pink-100{--tw-bg-opacity:1;background-color:rgba(248, 187, 208, var(--tw-bg-opacity))}\n.bg-red-100{--tw-bg-opacity:1;background-color:rgba(255, 205, 210, var(--tw-bg-opacity))}\n.bg-blue-gray-900{--tw-bg-opacity:1;background-color:rgba(38, 50, 56, var(--tw-bg-opacity))}\n.bg-brown-900{--tw-bg-opacity:1;background-color:rgba(62, 39, 35, var(--tw-bg-opacity))}\n.bg-deep-orange-900{--tw-bg-opacity:1;background-color:rgba(191, 54, 12, var(--tw-bg-opacity))}\n.bg-amber-900{--tw-bg-opacity:1;background-color:rgba(255, 111, 0, var(--tw-bg-opacity))}\n.bg-yellow-900{--tw-bg-opacity:1;background-color:rgba(245, 127, 23, var(--tw-bg-opacity))}\n.bg-lime-900{--tw-bg-opacity:1;background-color:rgba(130, 119, 23, var(--tw-bg-opacity))}\n.bg-light-green-900{--tw-bg-opacity:1;background-color:rgba(51, 105, 30, var(--tw-bg-opacity))}\n.bg-green-900{--tw-bg-opacity:1;background-color:rgba(27, 94, 32, var(--tw-bg-opacity))}\n.bg-teal-900{--tw-bg-opacity:1;background-color:rgba(0, 77, 64, var(--tw-bg-opacity))}\n.bg-cyan-900{--tw-bg-opacity:1;background-color:rgba(0, 96, 100, var(--tw-bg-opacity))}\n.bg-light-blue-900{--tw-bg-opacity:1;background-color:rgba(1, 87, 155, var(--tw-bg-opacity))}\n.bg-blue-900{--tw-bg-opacity:1;background-color:rgba(13, 71, 161, var(--tw-bg-opacity))}\n.bg-indigo-900{--tw-bg-opacity:1;background-color:rgba(26, 35, 126, var(--tw-bg-opacity))}\n.bg-deep-purple-900{--tw-bg-opacity:1;background-color:rgba(49, 27, 146, var(--tw-bg-opacity))}\n.bg-purple-900{--tw-bg-opacity:1;background-color:rgba(74, 20, 140, var(--tw-bg-opacity))}\n.bg-pink-900{--tw-bg-opacity:1;background-color:rgba(136, 14, 79, var(--tw-bg-opacity))}\n.bg-red-900{--tw-bg-opacity:1;background-color:rgba(183, 28, 28, var(--tw-bg-opacity))}\n.bg-black{--tw-bg-opacity:1;background-color:rgba(0, 0, 0, var(--tw-bg-opacity))}\n.bg-gray-700{--tw-bg-opacity:1;background-color:rgba(97, 97, 97, var(--tw-bg-opacity))}\n.bg-blue-gray-200{--tw-bg-opacity:1;background-color:rgba(176, 190, 197, var(--tw-bg-opacity))}\n.bg-brown-200{--tw-bg-opacity:1;background-color:rgba(188, 170, 164, var(--tw-bg-opacity))}\n.bg-deep-orange-200{--tw-bg-opacity:1;background-color:rgba(255, 171, 145, var(--tw-bg-opacity))}\n.bg-orange-200{--tw-bg-opacity:1;background-color:rgba(255, 204, 128, var(--tw-bg-opacity))}\n.bg-amber-200{--tw-bg-opacity:1;background-color:rgba(255, 224, 130, var(--tw-bg-opacity))}\n.bg-yellow-200{--tw-bg-opacity:1;background-color:rgba(255, 245, 157, var(--tw-bg-opacity))}\n.bg-lime-200{--tw-bg-opacity:1;background-color:rgba(230, 238, 156, var(--tw-bg-opacity))}\n.bg-light-green-200{--tw-bg-opacity:1;background-color:rgba(197, 225, 165, var(--tw-bg-opacity))}\n.bg-green-200{--tw-bg-opacity:1;background-color:rgba(165, 214, 167, var(--tw-bg-opacity))}\n.bg-teal-200{--tw-bg-opacity:1;background-color:rgba(128, 203, 196, var(--tw-bg-opacity))}\n.bg-cyan-200{--tw-bg-opacity:1;background-color:rgba(128, 222, 234, var(--tw-bg-opacity))}\n.bg-light-blue-200{--tw-bg-opacity:1;background-color:rgba(129, 212, 250, var(--tw-bg-opacity))}\n.bg-blue-200{--tw-bg-opacity:1;background-color:rgba(144, 202, 249, var(--tw-bg-opacity))}\n.bg-indigo-200{--tw-bg-opacity:1;background-color:rgba(159, 168, 218, var(--tw-bg-opacity))}\n.bg-deep-purple-200{--tw-bg-opacity:1;background-color:rgba(179, 157, 219, var(--tw-bg-opacity))}\n.bg-purple-200{--tw-bg-opacity:1;background-color:rgba(206, 147, 216, var(--tw-bg-opacity))}\n.bg-pink-200{--tw-bg-opacity:1;background-color:rgba(244, 143, 177, var(--tw-bg-opacity))}\n.bg-red-200{--tw-bg-opacity:1;background-color:rgba(239, 154, 154, var(--tw-bg-opacity))}\n.bg-opacity-20{--tw-bg-opacity:0.2}\n.bg-opacity-80{--tw-bg-opacity:0.8}\n.bg-gradient-to-tr{background-image:linear-gradient(to top right, var(--tw-gradient-stops))}\n.from-blue-gray-500{--tw-gradient-from:#607d8b;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(96, 125, 139, 0))}\n.from-gray-500{--tw-gradient-from:#9e9e9e;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(158, 158, 158, 0))}\n.from-brown-500{--tw-gradient-from:#795548;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(121, 85, 72, 0))}\n.from-deep-orange-500{--tw-gradient-from:#ff5722;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(255, 87, 34, 0))}\n.from-orange-500{--tw-gradient-from:#ff9800;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(255, 152, 0, 0))}\n.from-amber-500{--tw-gradient-from:#ffc107;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(255, 193, 7, 0))}\n.from-yellow-600{--tw-gradient-from:#fdd835;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(253, 216, 53, 0))}\n.from-lime-500{--tw-gradient-from:#cddc39;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(205, 220, 57, 0))}\n.from-light-green-500{--tw-gradient-from:#8bc34a;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(139, 195, 74, 0))}\n.from-green-500{--tw-gradient-from:#4caf50;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(76, 175, 80, 0))}\n.from-teal-500{--tw-gradient-from:#009688;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 150, 136, 0))}\n.from-cyan-500{--tw-gradient-from:#00bcd4;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 188, 212, 0))}\n.from-light-blue-500{--tw-gradient-from:#03a9f4;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(3, 169, 244, 0))}\n.from-blue-500{--tw-gradient-from:#2196f3;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(33, 150, 243, 0))}\n.from-indigo-500{--tw-gradient-from:#3f51b5;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(63, 81, 181, 0))}\n.from-deep-purple-500{--tw-gradient-from:#673ab7;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(103, 58, 183, 0))}\n.from-purple-500{--tw-gradient-from:#9c27b0;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(156, 39, 176, 0))}\n.from-pink-500{--tw-gradient-from:#e91e63;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(233, 30, 99, 0))}\n.from-red-500{--tw-gradient-from:#f44336;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(244, 67, 54, 0))}\n.from-light-blue-700{--tw-gradient-from:#0288d1;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(2, 136, 209, 0))}\n.to-blue-gray-700{--tw-gradient-to:#455a64}\n.to-gray-700{--tw-gradient-to:#616161}\n.to-brown-700{--tw-gradient-to:#5d4037}\n.to-deep-orange-700{--tw-gradient-to:#e64a19}\n.to-orange-700{--tw-gradient-to:#f57c00}\n.to-amber-700{--tw-gradient-to:#ffa000}\n.to-yellow-800{--tw-gradient-to:#f9a825}\n.to-lime-700{--tw-gradient-to:#afb42b}\n.to-light-green-700{--tw-gradient-to:#689f38}\n.to-green-700{--tw-gradient-to:#388e3c}\n.to-teal-700{--tw-gradient-to:#00796b}\n.to-cyan-700{--tw-gradient-to:#0097a7}\n.to-light-blue-700{--tw-gradient-to:#0288d1}\n.to-blue-700{--tw-gradient-to:#1976d2}\n.to-indigo-700{--tw-gradient-to:#303f9f}\n.to-deep-purple-700{--tw-gradient-to:#512da8}\n.to-purple-700{--tw-gradient-to:#7b1fa2}\n.to-pink-700{--tw-gradient-to:#c2185b}\n.to-red-700{--tw-gradient-to:#d32f2f}\n.to-light-blue-500{--tw-gradient-to:#03a9f4}\n.p-4{padding:1rem}\n.p-3{padding:0.75rem}\n.p-8{padding:2rem}\n.p-2{padding:0.5rem}\n.p-0{padding:0px}\n.p-2\\.5{padding:0.625rem}\n.p-6{padding:1.5rem}\n.p-1{padding:0.25rem}\n.p-5{padding:1.25rem}\n.p-10{padding:2.5rem}\n.px-4{padding-left:1rem;padding-right:1rem}\n.py-16{padding-top:4rem;padding-bottom:4rem}\n.py-1{padding-top:0.25rem;padding-bottom:0.25rem}\n.py-8{padding-top:2rem;padding-bottom:2rem}\n.py-28{padding-top:7rem;padding-bottom:7rem}\n.px-12{padding-left:3rem;padding-right:3rem}\n.px-2\\.5{padding-left:0.625rem;padding-right:0.625rem}\n.px-2{padding-left:0.5rem;padding-right:0.5rem}\n.py-2{padding-top:0.5rem;padding-bottom:0.5rem}\n.py-20{padding-top:5rem;padding-bottom:5rem}\n.py-24{padding-top:6rem;padding-bottom:6rem}\n.py-5{padding-top:1.25rem;padding-bottom:1.25rem}\n.py-1\\.5{padding-top:0.375rem;padding-bottom:0.375rem}\n.py-2\\.5{padding-top:0.625rem;padding-bottom:0.625rem}\n.px-6{padding-left:1.5rem;padding-right:1.5rem}\n.py-3{padding-top:0.75rem;padding-bottom:0.75rem}\n.px-7{padding-left:1.75rem;padding-right:1.75rem}\n.py-4{padding-top:1rem;padding-bottom:1rem}\n.px-8{padding-left:2rem;padding-right:2rem}\n.px-9{padding-left:2.25rem;padding-right:2.25rem}\n.px-3{padding-left:0.75rem;padding-right:0.75rem}\n.px-0{padding-left:0px;padding-right:0px}\n.px-5{padding-left:1.25rem;padding-right:1.25rem}\n.px-1\\.5{padding-left:0.375rem;padding-right:0.375rem}\n.px-1{padding-left:0.25rem;padding-right:0.25rem}\n.pt-28{padding-top:7rem}\n.pb-36{padding-bottom:9rem}\n.pt-8{padding-top:2rem}\n.pb-6{padding-bottom:1.5rem}\n.pb-2{padding-bottom:0.5rem}\n.pt-6{padding-top:1.5rem}\n.pb-4{padding-bottom:1rem}\n.pb-20{padding-bottom:5rem}\n.pt-32{padding-top:8rem}\n.pt-48{padding-top:12rem}\n.pt-24{padding-top:6rem}\n.pb-64{padding-bottom:16rem}\n.pb-16{padding-bottom:4rem}\n.pr-12{padding-right:3rem}\n.pl-4{padding-left:1rem}\n.pt-4{padding-top:1rem}\n.pt-9{padding-top:2.25rem}\n.pl-0{padding-left:0px}\n.pt-10{padding-top:2.5rem}\n.pl-5{padding-left:1.25rem}\n.pr-3{padding-right:0.75rem}\n.pl-7{padding-left:1.75rem}\n.pr-5{padding-right:1.25rem}\n.pl-8{padding-left:2rem}\n.pr-6{padding-right:1.5rem}\n.pt-1\\.5{padding-top:0.375rem}\n.pb-0\\.5{padding-bottom:0.125rem}\n.pt-1{padding-top:0.25rem}\n.pb-0{padding-bottom:0px}\n.pt-2\\.5{padding-top:0.625rem}\n.pb-1\\.5{padding-bottom:0.375rem}\n.pt-2{padding-top:0.5rem}\n.pb-1{padding-bottom:0.25rem}\n.pt-3\\.5{padding-top:0.875rem}\n.pb-2\\.5{padding-bottom:0.625rem}\n.pt-3{padding-top:0.75rem}\n.pl-2{padding-left:0.5rem}\n.pr-7{padding-right:1.75rem}\n.pl-3{padding-left:0.75rem}\n.pr-9{padding-right:2.25rem}\n.pr-1{padding-right:0.25rem}\n.pb-10{padding-bottom:2.5rem}\n.pt-16{padding-top:4rem}\n.text-center{text-align:center}\n.text-right{text-align:right}\n.text-left{text-align:left}\n.align-middle{vertical-align:middle}\n.font-serif{font-family:\"Roboto Slab\", serif}\n.text-xl{font-size:1.25rem;line-height:1.75rem}\n.text-sm{font-size:0.875rem;line-height:1.25rem}\n.text-xs{font-size:0.75rem;line-height:1rem}\n.text-6xl{font-size:3.75rem;line-height:1}\n.text-lg{font-size:1.125rem;line-height:1.75rem}\n.text-base{font-size:1rem;line-height:1.5rem}\n.text-2xl{font-size:1.5rem;line-height:2rem}\n.text-4xl{font-size:2.25rem;line-height:2.5rem}\n.text-3xl{font-size:1.875rem;line-height:2.25rem}\n.text-5xl{font-size:3rem;line-height:1}\n.text-7xl{font-size:4.5rem;line-height:1}\n.text-8xl{font-size:6rem;line-height:1}\n.text-9xl{font-size:8rem;line-height:1}\n.font-medium{font-weight:500}\n.font-semibold{font-weight:600}\n.font-bold{font-weight:700}\n.font-light{font-weight:300}\n.font-normal{font-weight:400}\n.uppercase{text-transform:uppercase}\n.capitalize{text-transform:capitalize}\n.leading-relaxed{line-height:1.625}\n.leading-none{line-height:1}\n.leading-normal{line-height:1.5}\n.leading-10{line-height:2.5rem}\n.leading-snug{line-height:1.375}\n.tracking-wider{letter-spacing:0.05em}\n.tracking-wide{letter-spacing:0.025em}\n.text-gray-700{--tw-text-opacity:1;color:rgba(97, 97, 97, var(--tw-text-opacity))}\n.text-blue-gray-700{--tw-text-opacity:1;color:rgba(69, 90, 100, var(--tw-text-opacity))}\n.text-light-blue-500{--tw-text-opacity:1;color:rgba(3, 169, 244, var(--tw-text-opacity))}\n.text-blue-gray-800{--tw-text-opacity:1;color:rgba(55, 71, 79, var(--tw-text-opacity))}\n.text-blue-gray-900{--tw-text-opacity:1;color:rgba(38, 50, 56, var(--tw-text-opacity))}\n.text-blue-gray-200{--tw-text-opacity:1;color:rgba(176, 190, 197, var(--tw-text-opacity))}\n.text-blue-gray-50{--tw-text-opacity:1;color:rgba(236, 239, 241, var(--tw-text-opacity))}\n.text-cyan-600{--tw-text-opacity:1;color:rgba(0, 172, 193, var(--tw-text-opacity))}\n.text-gray-500{--tw-text-opacity:1;color:rgba(158, 158, 158, var(--tw-text-opacity))}\n.text-gray-900{--tw-text-opacity:1;color:rgba(33, 33, 33, var(--tw-text-opacity))}\n.text-blue-600{--tw-text-opacity:1;color:rgba(30, 136, 229, var(--tw-text-opacity))}\n.text-blue-400{--tw-text-opacity:1;color:rgba(66, 165, 245, var(--tw-text-opacity))}\n.text-indigo-500{--tw-text-opacity:1;color:rgba(63, 81, 181, var(--tw-text-opacity))}\n.text-pink-400{--tw-text-opacity:1;color:rgba(236, 64, 122, var(--tw-text-opacity))}\n.text-red-600{--tw-text-opacity:1;color:rgba(229, 57, 53, var(--tw-text-opacity))}\n.text-gray-600{--tw-text-opacity:1;color:rgba(117, 117, 117, var(--tw-text-opacity))}\n.text-white{--tw-text-opacity:1;color:rgba(255, 255, 255, var(--tw-text-opacity))}\n.text-blue-gray-500{--tw-text-opacity:1;color:rgba(96, 125, 139, var(--tw-text-opacity))}\n.text-brown-500{--tw-text-opacity:1;color:rgba(121, 85, 72, var(--tw-text-opacity))}\n.text-deep-orange-500{--tw-text-opacity:1;color:rgba(255, 87, 34, var(--tw-text-opacity))}\n.text-orange-500{--tw-text-opacity:1;color:rgba(255, 152, 0, var(--tw-text-opacity))}\n.text-amber-500{--tw-text-opacity:1;color:rgba(255, 193, 7, var(--tw-text-opacity))}\n.text-yellow-600{--tw-text-opacity:1;color:rgba(253, 216, 53, var(--tw-text-opacity))}\n.text-lime-500{--tw-text-opacity:1;color:rgba(205, 220, 57, var(--tw-text-opacity))}\n.text-light-green-500{--tw-text-opacity:1;color:rgba(139, 195, 74, var(--tw-text-opacity))}\n.text-green-500{--tw-text-opacity:1;color:rgba(76, 175, 80, var(--tw-text-opacity))}\n.text-teal-500{--tw-text-opacity:1;color:rgba(0, 150, 136, var(--tw-text-opacity))}\n.text-cyan-500{--tw-text-opacity:1;color:rgba(0, 188, 212, var(--tw-text-opacity))}\n.text-blue-500{--tw-text-opacity:1;color:rgba(33, 150, 243, var(--tw-text-opacity))}\n.text-deep-purple-500{--tw-text-opacity:1;color:rgba(103, 58, 183, var(--tw-text-opacity))}\n.text-purple-500{--tw-text-opacity:1;color:rgba(156, 39, 176, var(--tw-text-opacity))}\n.text-pink-500{--tw-text-opacity:1;color:rgba(233, 30, 99, var(--tw-text-opacity))}\n.text-red-500{--tw-text-opacity:1;color:rgba(244, 67, 54, var(--tw-text-opacity))}\n.text-gray-400{--tw-text-opacity:1;color:rgba(189, 189, 189, var(--tw-text-opacity))}\n.text-gray-800{--tw-text-opacity:1;color:rgba(66, 66, 66, var(--tw-text-opacity))}\n.text-brown-700{--tw-text-opacity:1;color:rgba(93, 64, 55, var(--tw-text-opacity))}\n.text-deep-orange-700{--tw-text-opacity:1;color:rgba(230, 74, 25, var(--tw-text-opacity))}\n.text-orange-700{--tw-text-opacity:1;color:rgba(245, 124, 0, var(--tw-text-opacity))}\n.text-amber-700{--tw-text-opacity:1;color:rgba(255, 160, 0, var(--tw-text-opacity))}\n.text-yellow-700{--tw-text-opacity:1;color:rgba(251, 192, 45, var(--tw-text-opacity))}\n.text-lime-700{--tw-text-opacity:1;color:rgba(175, 180, 43, var(--tw-text-opacity))}\n.text-light-green-700{--tw-text-opacity:1;color:rgba(104, 159, 56, var(--tw-text-opacity))}\n.text-green-700{--tw-text-opacity:1;color:rgba(56, 142, 60, var(--tw-text-opacity))}\n.text-teal-700{--tw-text-opacity:1;color:rgba(0, 121, 107, var(--tw-text-opacity))}\n.text-cyan-700{--tw-text-opacity:1;color:rgba(0, 151, 167, var(--tw-text-opacity))}\n.text-light-blue-700{--tw-text-opacity:1;color:rgba(2, 136, 209, var(--tw-text-opacity))}\n.text-blue-700{--tw-text-opacity:1;color:rgba(25, 118, 210, var(--tw-text-opacity))}\n.text-indigo-700{--tw-text-opacity:1;color:rgba(48, 63, 159, var(--tw-text-opacity))}\n.text-deep-purple-700{--tw-text-opacity:1;color:rgba(81, 45, 168, var(--tw-text-opacity))}\n.text-purple-700{--tw-text-opacity:1;color:rgba(123, 31, 162, var(--tw-text-opacity))}\n.text-pink-700{--tw-text-opacity:1;color:rgba(194, 24, 91, var(--tw-text-opacity))}\n.text-red-700{--tw-text-opacity:1;color:rgba(211, 47, 47, var(--tw-text-opacity))}\n.text-gray-200{--tw-text-opacity:1;color:rgba(238, 238, 238, var(--tw-text-opacity))}\n.text-brown-800{--tw-text-opacity:1;color:rgba(78, 52, 46, var(--tw-text-opacity))}\n.text-deep-orange-800{--tw-text-opacity:1;color:rgba(216, 67, 21, var(--tw-text-opacity))}\n.text-orange-800{--tw-text-opacity:1;color:rgba(239, 108, 0, var(--tw-text-opacity))}\n.text-amber-800{--tw-text-opacity:1;color:rgba(255, 143, 0, var(--tw-text-opacity))}\n.text-yellow-800{--tw-text-opacity:1;color:rgba(249, 168, 37, var(--tw-text-opacity))}\n.text-lime-800{--tw-text-opacity:1;color:rgba(158, 157, 36, var(--tw-text-opacity))}\n.text-light-green-800{--tw-text-opacity:1;color:rgba(85, 139, 47, var(--tw-text-opacity))}\n.text-green-800{--tw-text-opacity:1;color:rgba(46, 125, 50, var(--tw-text-opacity))}\n.text-teal-800{--tw-text-opacity:1;color:rgba(0, 105, 92, var(--tw-text-opacity))}\n.text-cyan-800{--tw-text-opacity:1;color:rgba(0, 131, 143, var(--tw-text-opacity))}\n.text-light-blue-800{--tw-text-opacity:1;color:rgba(2, 119, 189, var(--tw-text-opacity))}\n.text-blue-800{--tw-text-opacity:1;color:rgba(21, 101, 192, var(--tw-text-opacity))}\n.text-indigo-800{--tw-text-opacity:1;color:rgba(40, 53, 147, var(--tw-text-opacity))}\n.text-deep-purple-800{--tw-text-opacity:1;color:rgba(69, 39, 160, var(--tw-text-opacity))}\n.text-purple-800{--tw-text-opacity:1;color:rgba(106, 27, 154, var(--tw-text-opacity))}\n.text-pink-800{--tw-text-opacity:1;color:rgba(173, 20, 87, var(--tw-text-opacity))}\n.text-red-800{--tw-text-opacity:1;color:rgba(198, 40, 40, var(--tw-text-opacity))}\n.text-black{--tw-text-opacity:1;color:rgba(0, 0, 0, var(--tw-text-opacity))}\n.text-opacity-60{--tw-text-opacity:0.6}\n.no-underline{text-decoration:none}\n.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}\n.placeholder-white::-moz-placeholder{--tw-placeholder-opacity:1;color:rgba(255, 255, 255, var(--tw-placeholder-opacity))}\n.placeholder-white:-ms-input-placeholder{--tw-placeholder-opacity:1;color:rgba(255, 255, 255, var(--tw-placeholder-opacity))}\n.placeholder-white::placeholder{--tw-placeholder-opacity:1;color:rgba(255, 255, 255, var(--tw-placeholder-opacity))}\n.placeholder-opacity-50::-moz-placeholder{--tw-placeholder-opacity:0.5}\n.placeholder-opacity-50:-ms-input-placeholder{--tw-placeholder-opacity:0.5}\n.placeholder-opacity-50::placeholder{--tw-placeholder-opacity:0.5}\n.opacity-50{opacity:0.5}\n.opacity-0{opacity:0}\n.opacity-100{opacity:1}\n.opacity-25{opacity:0.25}\n.opacity-5{opacity:0.05}\n.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-blue-gray{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(96, 125, 139, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-gray{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(158, 158, 158, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-brown{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(121, 85, 72, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-deep-orange{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 87, 36, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-orange{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 152, 0, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-amber{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 193, 7, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-yellow{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 235, 59, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-lime{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(205, 220, 57, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-light-green{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(139, 195, 74, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-green{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(76, 175, 80, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-teal{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(0, 150, 136, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-cyan{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(0, 188, 212, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-light-blue{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(3, 169, 244, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-blue{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(33, 150, 243, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-indigo{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(63, 81, 181, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-deep-purple{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(103, 58, 183, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-purple{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(156, 39, 176, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-pink{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(233, 30, 99, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-red{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(244, 67, 54, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-none{--tw-shadow:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-blue-gray{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(69, 90, 100, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-gray{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(97, 97, 97, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-brown{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(93, 64, 55, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-deep-orange{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(230, 74, 25, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-orange{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(245, 122, 0, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-amber{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(255, 160, 0, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-yellow{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(251, 192, 45, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-lime{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(175, 180, 43, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-light-green{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(104, 159, 56, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-green{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(56, 142, 60, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-teal{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(0, 121, 107, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-cyan{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(0, 151, 167, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-light-blue{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(2, 136, 209, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-blue{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(25, 118, 210, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-indigo{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(48, 63, 159, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-deep-purple{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(81, 45, 168, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-purple{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(123, 31, 162, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-pink{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(194, 24, 91, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-red{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(211, 47, 47, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0, 0, 0, 0.05);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.outline-none{outline:2px solid transparent;outline-offset:2px}\n.transition-all{transition-property:all;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}\n.duration-300{transition-duration:300ms}\n.duration{transition-duration:150ms}\n.duration-500{transition-duration:500ms}\n/* Material Tailwind Input */\n.mt-input + label:after {\n        content: '';\n        pointer-events:none;\n        position:absolute;\n        top:0.125rem;\n        left:0px;\n        height:100%;\n        width:100%;\n        --tw-translate-x:0;\n        --tw-translate-y:0;\n        --tw-rotate:0;\n        --tw-skew-x:0;\n        --tw-skew-y:0;\n        --tw-scale-x:1;\n        --tw-scale-y:1;\n        transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n        --tw-scale-x:0;\n        border-width:1px;\n        border-top-width:0px;\n        border-left-width:0px;\n        border-right-width:0px;\n        border-bottom-width:2px;\n        transition-property:all;\n        transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration:150ms;\n        transition-duration:300ms;\n    }\n.mt-input:focus + label:after{--tw-scale-x:1}\n.mt-input:not(:-moz-placeholder-shown) + label span {\n        top: -14%;\n    }\n.mt-input:not(:-ms-input-placeholder) + label span {\n        top: -14%;\n    }\n.mt-input:focus + label span,\n    .mt-input:not(:placeholder-shown) + label span {\n        top: -14%;\n    }\n.mt-input:not(:-moz-placeholder-shown) + label span{font-size:0.75rem;line-height:1rem;line-height:1.25}\n.mt-input:not(:-ms-input-placeholder) + label span{font-size:0.75rem;line-height:1rem;line-height:1.25}\n.mt-input:focus + label span, .mt-input:not(:placeholder-shown) + label span{font-size:0.75rem;line-height:1rem;line-height:1.25}\n.texterea:not(:-moz-placeholder-shown) + label span {\n        top: -22px !important;\n    }\n.texterea:not(:-ms-input-placeholder) + label span {\n        top: -22px !important;\n    }\n.texterea:focus + label span,\n    .texterea:not(:placeholder-shown) + label span {\n        top: -22px !important;\n    }\n/* Material Tailwind Input Outline */\n.mt-input-outline:not(:-moz-placeholder-shown) {\n        border-top: transparent !important;\n    }\n.mt-input-outline:not(:-ms-input-placeholder) {\n        border-top: transparent !important;\n    }\n.mt-input-outline:focus,\n    .mt-input-outline:not(:placeholder-shown) {\n        border-top: transparent !important;\n    }\n.mt-input-outline + label {\n        line-height: 3.625 !important;\n    }\n.mt-input-outline:not(:-moz-placeholder-shown) + label{font-size:0.75rem !important;line-height:1rem !important;line-height:1.25 !important}\n.mt-input-outline:not(:-ms-input-placeholder) + label{font-size:0.75rem !important;line-height:1rem !important;line-height:1.25 !important}\n.mt-input-outline:focus + label, .mt-input-outline:not(:placeholder-shown) + label{font-size:0.75rem !important;line-height:1rem !important;line-height:1.25 !important}\n.mt-input-outline + label:before,\n    .mt-input-outline + label:after {\n        content: '';\n    }\n.mt-input-outline + label:before, .mt-input-outline + label:after{pointer-events:none;margin-top:0.375rem;box-sizing:border-box;display:block;height:0.5rem;width:0.625rem;border-width:1px;border-top-width:2px;border-bottom-width:0px;border-left-width:0px;border-right-width:0px;border-color:transparent}\n.mt-input-outline:not(:-moz-placeholder-shown) + label:before, .mt-input-outline:not(:-moz-placeholder-shown) + label:after{border-top-width:1px;--tw-border-opacity:1;border-color:rgba(224, 224, 224, var(--tw-border-opacity))}\n.mt-input-outline:not(:-ms-input-placeholder) + label:before, .mt-input-outline:not(:-ms-input-placeholder) + label:after{border-top-width:1px;--tw-border-opacity:1;border-color:rgba(224, 224, 224, var(--tw-border-opacity))}\n.mt-input-outline:not(:placeholder-shown) + label:before, .mt-input-outline:not(:placeholder-shown) + label:after{border-top-width:1px;--tw-border-opacity:1;border-color:rgba(224, 224, 224, var(--tw-border-opacity))}\n.mt-input-outline:focus + label::before, .mt-input-outline:focus + label::after{border-top-width:2px}\n.mt-input-outline + label:before{margin-right:0.25rem;border-top-left-radius:0.5rem}\n.mt-input-outline + label:after{margin-left:0.25rem;flex-grow:1;border-top-right-radius:0.5rem}\n/* Material Tailwind Radio Button */\n.mt-radio:checked + label span {\n        box-shadow: 0px 0px 0px 2px white inset;\n        --tw-bg-opacity:1 !important;\n    }\n.mt-radio:checked + label{--tw-text-opacity:1;color:rgba(97, 97, 97, var(--tw-text-opacity))}\n.mt-radio + label span::before {\n        content: '';\n        top: -1.5px;\n        left: -1.5px;\n        transform: scale3d(1, 1, 1);\n        position:absolute;\n        z-index:10;\n        margin:0px;\n        display:block;\n        height:1rem;\n        width:1rem;\n        border-radius:9999px;\n        opacity:0;\n    }\n.mt-radio:checked + label span::before {\n        -webkit-animation: radio-ripple 0.3s linear;\n                animation: radio-ripple 0.3s linear;\n    }\n/* Material Tailwind Checkbox */\n.mt-checkbox:checked + label span{--tw-bg-opacity:1 !important}\n.mt-checkbox:checked + label{--tw-text-opacity:1;color:rgba(97, 97, 97, var(--tw-text-opacity))}\n.mt-checkbox + label span::before {\n        content: '';\n        top: -1px;\n        left: -1.5px;\n        transform: scale3d(2, 2, 1);\n        position:absolute;\n        z-index:10;\n        margin:0px;\n        display:block;\n        height:1.25rem;\n        width:1.25rem;\n        border-radius:9999px;\n        opacity:0;\n    }\n.mt-checkbox + label span::after {\n        content: '';\n        top: 1px;\n        left: 6px;\n        position:absolute;\n        height:0.875rem;\n        width:0.375rem;\n        --tw-translate-x:0;\n        --tw-translate-y:0;\n        --tw-rotate:0;\n        --tw-skew-x:0;\n        --tw-skew-y:0;\n        --tw-scale-x:1;\n        --tw-scale-y:1;\n        transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n        --tw-rotate:45deg;\n        border-bottom-width:2px;\n        border-right-width:2px;\n        border-color:transparent;\n        transition-property:all;\n        transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration:150ms;\n        transition-duration:200ms;\n    }\n.mt-checkbox:checked + label span::before {\n        -webkit-animation: radio-ripple 0.3s linear;\n                animation: radio-ripple 0.3s linear;\n    }\n.mt-checkbox:checked + label span::after{--tw-border-opacity:1;border-color:rgba(255, 255, 255, var(--tw-border-opacity))}\n/* Material Tailwind Input Colors */\n.mt-input-blue-gray-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(96, 125, 139, var(--tw-border-opacity))}\n.mt-input-gray-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(158, 158, 158, var(--tw-border-opacity))}\n.mt-input-orange-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 152, 0, var(--tw-border-opacity))}\n.mt-input-deep-orange-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 87, 34, var(--tw-border-opacity))}\n.mt-input-amber-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 193, 7, var(--tw-border-opacity))}\n.mt-input-yellow-600:focus + label:after{--tw-border-opacity:1;border-color:rgba(253, 216, 53, var(--tw-border-opacity))}\n.mt-input-lime-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(205, 220, 57, var(--tw-border-opacity))}\n.mt-input-light-green-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(139, 195, 74, var(--tw-border-opacity))}\n.mt-input-green-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity))}\n.mt-input-teal-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(0, 150, 136, var(--tw-border-opacity))}\n.mt-input-cyan-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(0, 188, 212, var(--tw-border-opacity))}\n.mt-input-light-blue-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(3, 169, 244, var(--tw-border-opacity))}\n.mt-input-blue-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(33, 150, 243, var(--tw-border-opacity))}\n.mt-input-indigo-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(63, 81, 181, var(--tw-border-opacity))}\n.mt-input-purple-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(156, 39, 176, var(--tw-border-opacity))}\n.mt-input-deep-purple-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(103, 58, 183, var(--tw-border-opacity))}\n.mt-input-pink-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(233, 30, 99, var(--tw-border-opacity))}\n.mt-input-red-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity))}\n/* Material Tailwind Input Outline Colors */\n.mt-input-outline-blue-gray-500:focus, .mt-input-outline-blue-gray-500:focus + label, .mt-input-outline-blue-gray-500:focus + label:before, .mt-input-outline-blue-gray-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(96, 125, 139, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(96, 125, 139, var(--tw-text-opacity))}\n.mt-input-outline-gray-500:focus, .mt-input-outline-gray-500:focus + label, .mt-input-outline-gray-500:focus + label:before, .mt-input-outline-gray-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(158, 158, 158, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(158, 158, 158, var(--tw-text-opacity))}\n.mt-input-outline-orange-500:focus, .mt-input-outline-orange-500:focus + label, .mt-input-outline-orange-500:focus + label:before, .mt-input-outline-orange-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 152, 0, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(255, 152, 0, var(--tw-text-opacity))}\n.mt-input-outline-deep-orange-500:focus, .mt-input-outline-deep-orange-500:focus + label, .mt-input-outline-deep-orange-500:focus + label:before, .mt-input-outline-deep-orange-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 87, 34, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(255, 87, 34, var(--tw-text-opacity))}\n.mt-input-outline-brown-500:focus, .mt-input-outline-brown-500:focus + label, .mt-input-outline-brown-500:focus + label:before, .mt-input-outline-brown-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(121, 85, 72, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(121, 85, 72, var(--tw-text-opacity))}\n.mt-input-outline-amber-500:focus, .mt-input-outline-amber-500:focus + label, .mt-input-outline-amber-500:focus + label:before, .mt-input-outline-amber-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 193, 7, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(255, 193, 7, var(--tw-text-opacity))}\n.mt-input-outline-yellow-600:focus, .mt-input-outline-yellow-600:focus + label, .mt-input-outline-yellow-600:focus + label:before, .mt-input-outline-yellow-600:focus + label:after{--tw-border-opacity:1;border-color:rgba(253, 216, 53, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(253, 216, 53, var(--tw-text-opacity))}\n.mt-input-outline-lime-500:focus, .mt-input-outline-lime-500:focus + label, .mt-input-outline-lime-500:focus + label:before, .mt-input-outline-lime-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(205, 220, 57, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(205, 220, 57, var(--tw-text-opacity))}\n.mt-input-outline-light-green-500:focus, .mt-input-outline-light-green-500:focus + label, .mt-input-outline-light-green-500:focus + label:before, .mt-input-outline-light-green-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(139, 195, 74, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(139, 195, 74, var(--tw-text-opacity))}\n.mt-input-outline-green-500:focus, .mt-input-outline-green-500:focus + label, .mt-input-outline-green-500:focus + label:before, .mt-input-outline-green-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(76, 175, 80, var(--tw-text-opacity))}\n.mt-input-outline-teal-500:focus, .mt-input-outline-teal-500:focus + label, .mt-input-outline-teal-500:focus + label:before, .mt-input-outline-teal-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(0, 150, 136, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(0, 150, 136, var(--tw-text-opacity))}\n.mt-input-outline-cyan-500:focus, .mt-input-outline-cyan-500:focus + label, .mt-input-outline-cyan-500:focus + label:before, .mt-input-outline-cyan-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(0, 188, 212, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(0, 188, 212, var(--tw-text-opacity))}\n.mt-input-outline-light-blue-500:focus, .mt-input-outline-light-blue-500:focus + label, .mt-input-outline-light-blue-500:focus + label:before, .mt-input-outline-light-blue-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(3, 169, 244, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(3, 169, 244, var(--tw-text-opacity))}\n.mt-input-outline-blue-500:focus, .mt-input-outline-blue-500:focus + label, .mt-input-outline-blue-500:focus + label:before, .mt-input-outline-blue-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(33, 150, 243, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(33, 150, 243, var(--tw-text-opacity))}\n.mt-input-outline-indigo-500:focus, .mt-input-outline-indigo-500:focus + label, .mt-input-outline-indigo-500:focus + label:before, .mt-input-outline-indigo-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(63, 81, 181, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(63, 81, 181, var(--tw-text-opacity))}\n.mt-input-outline-purple-500:focus, .mt-input-outline-purple-500:focus + label, .mt-input-outline-purple-500:focus + label:before, .mt-input-outline-purple-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(156, 39, 176, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(156, 39, 176, var(--tw-text-opacity))}\n.mt-input-outline-deep-purple-500:focus, .mt-input-outline-deep-purple-500:focus + label, .mt-input-outline-deep-purple-500:focus + label:before, .mt-input-outline-deep-purple-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(103, 58, 183, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(103, 58, 183, var(--tw-text-opacity))}\n.mt-input-outline-pink-500:focus, .mt-input-outline-pink-500:focus + label, .mt-input-outline-pink-500:focus + label:before, .mt-input-outline-pink-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(233, 30, 99, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(233, 30, 99, var(--tw-text-opacity))}\n.mt-input-outline-red-500:focus, .mt-input-outline-red-500:focus + label, .mt-input-outline-red-500:focus + label:before, .mt-input-outline-red-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(244, 67, 54, var(--tw-text-opacity))}\n.mt-input-outline-error:not(:-moz-placeholder-shown) + label, .mt-input-outline-error:not(:-moz-placeholder-shown) + label:before, .mt-input-outline-error:not(:-moz-placeholder-shown) + label:after{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(244, 67, 54, var(--tw-text-opacity))}\n.mt-input-outline-error:not(:-ms-input-placeholder) + label, .mt-input-outline-error:not(:-ms-input-placeholder) + label:before, .mt-input-outline-error:not(:-ms-input-placeholder) + label:after{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(244, 67, 54, var(--tw-text-opacity))}\n.mt-input-outline-error:not(:placeholder-shown) + label, .mt-input-outline-error:not(:placeholder-shown) + label:before, .mt-input-outline-error:not(:placeholder-shown) + label:after{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(244, 67, 54, var(--tw-text-opacity))}\n.mt-input-outline-success:not(:-moz-placeholder-shown) + label, .mt-input-outline-success:not(:-moz-placeholder-shown) + label:before, .mt-input-outline-success:not(:-moz-placeholder-shown) + label:after{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(76, 175, 80, var(--tw-text-opacity))}\n.mt-input-outline-success:not(:-ms-input-placeholder) + label, .mt-input-outline-success:not(:-ms-input-placeholder) + label:before, .mt-input-outline-success:not(:-ms-input-placeholder) + label:after{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(76, 175, 80, var(--tw-text-opacity))}\n.mt-input-outline-success:not(:placeholder-shown) + label, .mt-input-outline-success:not(:placeholder-shown) + label:before, .mt-input-outline-success:not(:placeholder-shown) + label:after{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(76, 175, 80, var(--tw-text-opacity))}\n/* Material Tailwind Radio Button and Checkbox Colors */\n.mt-radio-blue-gray-500:checked + label span, .mt-radio-blue-gray-500 + label span::before, .mt-checkbox-blue-gray-500:checked + label span, .mt-checkbox-blue-gray-500 + label span::before{--tw-border-opacity:1;border-color:rgba(96, 125, 139, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(96, 125, 139, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-gray-500:checked + label span, .mt-radio-gray-500 + label span::before, .mt-checkbox-gray-500:checked + label span, .mt-checkbox-gray-500 + label span::before{--tw-border-opacity:1;border-color:rgba(158, 158, 158, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(158, 158, 158, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-orange-500:checked + label span, .mt-radio-orange-500 + label span::before, .mt-checkbox-orange-500:checked + label span, .mt-checkbox-orange-500 + label span::before{--tw-border-opacity:1;border-color:rgba(255, 152, 0, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(255, 152, 0, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-deep-orange-500:checked + label span, .mt-radio-deep-orange-500 + label span::before, .mt-checkbox-deep-orange-500:checked + label span, .mt-checkbox-deep-orange-500 + label span::before{--tw-border-opacity:1;border-color:rgba(255, 87, 34, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(255, 87, 34, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-brown-500:checked + label span, .mt-radio-brown-500 + label span::before, .mt-checkbox-brown-500:checked + label span, .mt-checkbox-brown-500 + label span::before{--tw-border-opacity:1;border-color:rgba(121, 85, 72, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(121, 85, 72, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-amber-500:checked + label span, .mt-radio-amber-500 + label span::before, .mt-checkbox-amber-500:checked + label span, .mt-checkbox-amber-500 + label span::before{--tw-border-opacity:1;border-color:rgba(255, 193, 7, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(255, 193, 7, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-yellow-600:checked + label span, .mt-radio-yellow-600 + label span::before, .mt-checkbox-yellow-600:checked + label span, .mt-checkbox-yellow-600 + label span::before{--tw-border-opacity:1;border-color:rgba(253, 216, 53, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(253, 216, 53, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-lime-500:checked + label span, .mt-radio-lime-500 + label span::before, .mt-checkbox-lime-500:checked + label span, .mt-checkbox-lime-500 + label span::before{--tw-border-opacity:1;border-color:rgba(205, 220, 57, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(205, 220, 57, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-light-green-500:checked + label span, .mt-radio-light-green-500 + label span::before, .mt-checkbox-light-green-500:checked + label span, .mt-checkbox-light-green-500 + label span::before{--tw-border-opacity:1;border-color:rgba(139, 195, 74, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(139, 195, 74, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-green-500:checked + label span, .mt-radio-green-500 + label span::before, .mt-checkbox-green-500:checked + label span, .mt-checkbox-green-500 + label span::before{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(76, 175, 80, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-teal-500:checked + label span, .mt-radio-teal-500 + label span::before, .mt-checkbox-teal-500:checked + label span, .mt-checkbox-teal-500 + label span::before{--tw-border-opacity:1;border-color:rgba(0, 150, 136, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(0, 150, 136, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-cyan-500:checked + label span, .mt-radio-cyan-500 + label span::before, .mt-checkbox-cyan-500:checked + label span, .mt-checkbox-cyan-500 + label span::before{--tw-border-opacity:1;border-color:rgba(0, 188, 212, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(0, 188, 212, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-light-blue-500:checked + label span, .mt-radio-light-blue-500 + label span::before, .mt-checkbox-light-blue-500:checked + label span, .mt-checkbox-light-blue-500 + label span::before{--tw-border-opacity:1;border-color:rgba(3, 169, 244, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(3, 169, 244, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-blue-500:checked + label span, .mt-radio-blue-500 + label span::before, .mt-checkbox-blue-500:checked + label span, .mt-checkbox-blue-500 + label span::before{--tw-border-opacity:1;border-color:rgba(33, 150, 243, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(33, 150, 243, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-indigo-500:checked + label span, .mt-radio-indigo-500 + label span::before, .mt-checkbox-indigo-500:checked + label span, .mt-checkbox-indigo-500 + label span::before{--tw-border-opacity:1;border-color:rgba(63, 81, 181, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(63, 81, 181, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-purple-500:checked + label span, .mt-radio-purple-500 + label span::before, .mt-checkbox-purple-500:checked + label span, .mt-checkbox-purple-500 + label span::before{--tw-border-opacity:1;border-color:rgba(156, 39, 176, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(156, 39, 176, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-deep-purple-500:checked + label span, .mt-radio-deep-purple-500 + label span::before, .mt-checkbox-deep-purple-500:checked + label span, .mt-checkbox-deep-purple-500 + label span::before{--tw-border-opacity:1;border-color:rgba(103, 58, 183, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(103, 58, 183, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-pink-500:checked + label span, .mt-radio-pink-500 + label span::before, .mt-checkbox-pink-500:checked + label span, .mt-checkbox-pink-500 + label span::before{--tw-border-opacity:1;border-color:rgba(233, 30, 99, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(233, 30, 99, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-red-500:checked + label span, .mt-radio-red-500 + label span::before, .mt-checkbox-red-500:checked + label span, .mt-checkbox-red-500 + label span::before{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(244, 67, 54, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n/* Tippy Boxx */\n.tippy-box:focus {\n    outline: none;\n}\n/* Tippy Animation */\n.tippy-box[data-animation='scale'] {\n    transform-origin: top left !important;\n}\n/* Tippy Arrow */\n.arrow-light .tippy-svg-arrow {\n    fill: #fff;\n}\n.arrow-dark .tippy-svg-arrow {\n    fill: rgba(0, 0, 0, 0.8);\n}\n/* Material Tailwind Radio Button Ripple Effect Animation */\n@-webkit-keyframes radio-ripple {\n    from {\n        opacity: 0;\n        transform: scale3d(1, 1, 1);\n    }\n    50% {\n        opacity: 1;\n        transform: scale3d(2, 2, 1);\n    }\n    to {\n        opacity: 0;\n        transform: scale3d(3, 3, 1);\n    }\n}\n@keyframes radio-ripple {\n    from {\n        opacity: 0;\n        transform: scale3d(1, 1, 1);\n    }\n    50% {\n        opacity: 1;\n        transform: scale3d(2, 2, 1);\n    }\n    to {\n        opacity: 0;\n        transform: scale3d(3, 3, 1);\n    }\n}\n.last\\:mr-0:last-child{margin-right:0px}\n.hover\\:border-blue-gray-700:hover{--tw-border-opacity:1;border-color:rgba(69, 90, 100, var(--tw-border-opacity))}\n.hover\\:border-gray-700:hover{--tw-border-opacity:1;border-color:rgba(97, 97, 97, var(--tw-border-opacity))}\n.hover\\:border-brown-700:hover{--tw-border-opacity:1;border-color:rgba(93, 64, 55, var(--tw-border-opacity))}\n.hover\\:border-deep-orange-700:hover{--tw-border-opacity:1;border-color:rgba(230, 74, 25, var(--tw-border-opacity))}\n.hover\\:border-orange-700:hover{--tw-border-opacity:1;border-color:rgba(245, 124, 0, var(--tw-border-opacity))}\n.hover\\:border-amber-700:hover{--tw-border-opacity:1;border-color:rgba(255, 160, 0, var(--tw-border-opacity))}\n.hover\\:border-yellow-700:hover{--tw-border-opacity:1;border-color:rgba(251, 192, 45, var(--tw-border-opacity))}\n.hover\\:border-lime-700:hover{--tw-border-opacity:1;border-color:rgba(175, 180, 43, var(--tw-border-opacity))}\n.hover\\:border-light-green-700:hover{--tw-border-opacity:1;border-color:rgba(104, 159, 56, var(--tw-border-opacity))}\n.hover\\:border-green-700:hover{--tw-border-opacity:1;border-color:rgba(56, 142, 60, var(--tw-border-opacity))}\n.hover\\:border-teal-700:hover{--tw-border-opacity:1;border-color:rgba(0, 121, 107, var(--tw-border-opacity))}\n.hover\\:border-cyan-700:hover{--tw-border-opacity:1;border-color:rgba(0, 151, 167, var(--tw-border-opacity))}\n.hover\\:border-light-blue-700:hover{--tw-border-opacity:1;border-color:rgba(2, 136, 209, var(--tw-border-opacity))}\n.hover\\:border-blue-700:hover{--tw-border-opacity:1;border-color:rgba(25, 118, 210, var(--tw-border-opacity))}\n.hover\\:border-indigo-700:hover{--tw-border-opacity:1;border-color:rgba(48, 63, 159, var(--tw-border-opacity))}\n.hover\\:border-deep-purple-700:hover{--tw-border-opacity:1;border-color:rgba(81, 45, 168, var(--tw-border-opacity))}\n.hover\\:border-purple-700:hover{--tw-border-opacity:1;border-color:rgba(123, 31, 162, var(--tw-border-opacity))}\n.hover\\:border-pink-700:hover{--tw-border-opacity:1;border-color:rgba(194, 24, 91, var(--tw-border-opacity))}\n.hover\\:border-red-700:hover{--tw-border-opacity:1;border-color:rgba(211, 47, 47, var(--tw-border-opacity))}\n.hover\\:bg-blue-gray-700:hover{--tw-bg-opacity:1;background-color:rgba(69, 90, 100, var(--tw-bg-opacity))}\n.hover\\:bg-gray-700:hover{--tw-bg-opacity:1;background-color:rgba(97, 97, 97, var(--tw-bg-opacity))}\n.hover\\:bg-brown-700:hover{--tw-bg-opacity:1;background-color:rgba(93, 64, 55, var(--tw-bg-opacity))}\n.hover\\:bg-deep-orange-700:hover{--tw-bg-opacity:1;background-color:rgba(230, 74, 25, var(--tw-bg-opacity))}\n.hover\\:bg-orange-700:hover{--tw-bg-opacity:1;background-color:rgba(245, 124, 0, var(--tw-bg-opacity))}\n.hover\\:bg-amber-700:hover{--tw-bg-opacity:1;background-color:rgba(255, 160, 0, var(--tw-bg-opacity))}\n.hover\\:bg-yellow-700:hover{--tw-bg-opacity:1;background-color:rgba(251, 192, 45, var(--tw-bg-opacity))}\n.hover\\:bg-lime-700:hover{--tw-bg-opacity:1;background-color:rgba(175, 180, 43, var(--tw-bg-opacity))}\n.hover\\:bg-light-green-700:hover{--tw-bg-opacity:1;background-color:rgba(104, 159, 56, var(--tw-bg-opacity))}\n.hover\\:bg-green-700:hover{--tw-bg-opacity:1;background-color:rgba(56, 142, 60, var(--tw-bg-opacity))}\n.hover\\:bg-teal-700:hover{--tw-bg-opacity:1;background-color:rgba(0, 121, 107, var(--tw-bg-opacity))}\n.hover\\:bg-cyan-700:hover{--tw-bg-opacity:1;background-color:rgba(0, 151, 167, var(--tw-bg-opacity))}\n.hover\\:bg-light-blue-700:hover{--tw-bg-opacity:1;background-color:rgba(2, 136, 209, var(--tw-bg-opacity))}\n.hover\\:bg-blue-700:hover{--tw-bg-opacity:1;background-color:rgba(25, 118, 210, var(--tw-bg-opacity))}\n.hover\\:bg-indigo-700:hover{--tw-bg-opacity:1;background-color:rgba(48, 63, 159, var(--tw-bg-opacity))}\n.hover\\:bg-deep-purple-700:hover{--tw-bg-opacity:1;background-color:rgba(81, 45, 168, var(--tw-bg-opacity))}\n.hover\\:bg-purple-700:hover{--tw-bg-opacity:1;background-color:rgba(123, 31, 162, var(--tw-bg-opacity))}\n.hover\\:bg-pink-700:hover{--tw-bg-opacity:1;background-color:rgba(194, 24, 91, var(--tw-bg-opacity))}\n.hover\\:bg-red-700:hover{--tw-bg-opacity:1;background-color:rgba(211, 47, 47, var(--tw-bg-opacity))}\n.hover\\:bg-blue-gray-50:hover{--tw-bg-opacity:1;background-color:rgba(236, 239, 241, var(--tw-bg-opacity))}\n.hover\\:bg-gray-50:hover{--tw-bg-opacity:1;background-color:rgba(250, 250, 250, var(--tw-bg-opacity))}\n.hover\\:bg-brown-50:hover{--tw-bg-opacity:1;background-color:rgba(239, 235, 233, var(--tw-bg-opacity))}\n.hover\\:bg-deep-orange-50:hover{--tw-bg-opacity:1;background-color:rgba(251, 233, 231, var(--tw-bg-opacity))}\n.hover\\:bg-orange-50:hover{--tw-bg-opacity:1;background-color:rgba(255, 243, 224, var(--tw-bg-opacity))}\n.hover\\:bg-amber-50:hover{--tw-bg-opacity:1;background-color:rgba(255, 248, 225, var(--tw-bg-opacity))}\n.hover\\:bg-yellow-50:hover{--tw-bg-opacity:1;background-color:rgba(255, 253, 231, var(--tw-bg-opacity))}\n.hover\\:bg-lime-50:hover{--tw-bg-opacity:1;background-color:rgba(249, 251, 231, var(--tw-bg-opacity))}\n.hover\\:bg-light-green-50:hover{--tw-bg-opacity:1;background-color:rgba(241, 248, 233, var(--tw-bg-opacity))}\n.hover\\:bg-green-50:hover{--tw-bg-opacity:1;background-color:rgba(232, 245, 233, var(--tw-bg-opacity))}\n.hover\\:bg-teal-50:hover{--tw-bg-opacity:1;background-color:rgba(224, 242, 241, var(--tw-bg-opacity))}\n.hover\\:bg-cyan-50:hover{--tw-bg-opacity:1;background-color:rgba(224, 247, 250, var(--tw-bg-opacity))}\n.hover\\:bg-light-blue-50:hover{--tw-bg-opacity:1;background-color:rgba(225, 245, 254, var(--tw-bg-opacity))}\n.hover\\:bg-blue-50:hover{--tw-bg-opacity:1;background-color:rgba(227, 242, 253, var(--tw-bg-opacity))}\n.hover\\:bg-indigo-50:hover{--tw-bg-opacity:1;background-color:rgba(232, 234, 246, var(--tw-bg-opacity))}\n.hover\\:bg-deep-purple-50:hover{--tw-bg-opacity:1;background-color:rgba(237, 231, 246, var(--tw-bg-opacity))}\n.hover\\:bg-purple-50:hover{--tw-bg-opacity:1;background-color:rgba(243, 229, 245, var(--tw-bg-opacity))}\n.hover\\:bg-pink-50:hover{--tw-bg-opacity:1;background-color:rgba(252, 228, 236, var(--tw-bg-opacity))}\n.hover\\:bg-red-50:hover{--tw-bg-opacity:1;background-color:rgba(255, 235, 238, var(--tw-bg-opacity))}\n.hover\\:bg-blue-gray-500:hover{--tw-bg-opacity:1;background-color:rgba(96, 125, 139, var(--tw-bg-opacity))}\n.hover\\:bg-gray-500:hover{--tw-bg-opacity:1;background-color:rgba(158, 158, 158, var(--tw-bg-opacity))}\n.hover\\:bg-brown-500:hover{--tw-bg-opacity:1;background-color:rgba(121, 85, 72, var(--tw-bg-opacity))}\n.hover\\:bg-deep-orange-500:hover{--tw-bg-opacity:1;background-color:rgba(255, 87, 34, var(--tw-bg-opacity))}\n.hover\\:bg-orange-500:hover{--tw-bg-opacity:1;background-color:rgba(255, 152, 0, var(--tw-bg-opacity))}\n.hover\\:bg-amber-500:hover{--tw-bg-opacity:1;background-color:rgba(255, 193, 7, var(--tw-bg-opacity))}\n.hover\\:bg-yellow-600:hover{--tw-bg-opacity:1;background-color:rgba(253, 216, 53, var(--tw-bg-opacity))}\n.hover\\:bg-lime-500:hover{--tw-bg-opacity:1;background-color:rgba(205, 220, 57, var(--tw-bg-opacity))}\n.hover\\:bg-light-green-500:hover{--tw-bg-opacity:1;background-color:rgba(139, 195, 74, var(--tw-bg-opacity))}\n.hover\\:bg-green-500:hover{--tw-bg-opacity:1;background-color:rgba(76, 175, 80, var(--tw-bg-opacity))}\n.hover\\:bg-teal-500:hover{--tw-bg-opacity:1;background-color:rgba(0, 150, 136, var(--tw-bg-opacity))}\n.hover\\:bg-cyan-500:hover{--tw-bg-opacity:1;background-color:rgba(0, 188, 212, var(--tw-bg-opacity))}\n.hover\\:bg-light-blue-500:hover{--tw-bg-opacity:1;background-color:rgba(3, 169, 244, var(--tw-bg-opacity))}\n.hover\\:bg-blue-500:hover{--tw-bg-opacity:1;background-color:rgba(33, 150, 243, var(--tw-bg-opacity))}\n.hover\\:bg-indigo-500:hover{--tw-bg-opacity:1;background-color:rgba(63, 81, 181, var(--tw-bg-opacity))}\n.hover\\:bg-deep-purple-500:hover{--tw-bg-opacity:1;background-color:rgba(103, 58, 183, var(--tw-bg-opacity))}\n.hover\\:bg-purple-500:hover{--tw-bg-opacity:1;background-color:rgba(156, 39, 176, var(--tw-bg-opacity))}\n.hover\\:bg-pink-500:hover{--tw-bg-opacity:1;background-color:rgba(233, 30, 99, var(--tw-bg-opacity))}\n.hover\\:bg-red-500:hover{--tw-bg-opacity:1;background-color:rgba(244, 67, 54, var(--tw-bg-opacity))}\n.hover\\:bg-white:hover{--tw-bg-opacity:1;background-color:rgba(255, 255, 255, var(--tw-bg-opacity))}\n.hover\\:bg-opacity-20:hover{--tw-bg-opacity:0.2}\n.hover\\:text-gray-900:hover{--tw-text-opacity:1;color:rgba(33, 33, 33, var(--tw-text-opacity))}\n.hover\\:text-blue-gray-800:hover{--tw-text-opacity:1;color:rgba(55, 71, 79, var(--tw-text-opacity))}\n.hover\\:text-blue-gray-700:hover{--tw-text-opacity:1;color:rgba(69, 90, 100, var(--tw-text-opacity))}\n.hover\\:text-gray-700:hover{--tw-text-opacity:1;color:rgba(97, 97, 97, var(--tw-text-opacity))}\n.hover\\:text-brown-700:hover{--tw-text-opacity:1;color:rgba(93, 64, 55, var(--tw-text-opacity))}\n.hover\\:text-deep-orange-700:hover{--tw-text-opacity:1;color:rgba(230, 74, 25, var(--tw-text-opacity))}\n.hover\\:text-orange-700:hover{--tw-text-opacity:1;color:rgba(245, 124, 0, var(--tw-text-opacity))}\n.hover\\:text-amber-700:hover{--tw-text-opacity:1;color:rgba(255, 160, 0, var(--tw-text-opacity))}\n.hover\\:text-yellow-700:hover{--tw-text-opacity:1;color:rgba(251, 192, 45, var(--tw-text-opacity))}\n.hover\\:text-lime-700:hover{--tw-text-opacity:1;color:rgba(175, 180, 43, var(--tw-text-opacity))}\n.hover\\:text-light-green-700:hover{--tw-text-opacity:1;color:rgba(104, 159, 56, var(--tw-text-opacity))}\n.hover\\:text-green-700:hover{--tw-text-opacity:1;color:rgba(56, 142, 60, var(--tw-text-opacity))}\n.hover\\:text-teal-700:hover{--tw-text-opacity:1;color:rgba(0, 121, 107, var(--tw-text-opacity))}\n.hover\\:text-cyan-700:hover{--tw-text-opacity:1;color:rgba(0, 151, 167, var(--tw-text-opacity))}\n.hover\\:text-light-blue-700:hover{--tw-text-opacity:1;color:rgba(2, 136, 209, var(--tw-text-opacity))}\n.hover\\:text-blue-700:hover{--tw-text-opacity:1;color:rgba(25, 118, 210, var(--tw-text-opacity))}\n.hover\\:text-indigo-700:hover{--tw-text-opacity:1;color:rgba(48, 63, 159, var(--tw-text-opacity))}\n.hover\\:text-deep-purple-700:hover{--tw-text-opacity:1;color:rgba(81, 45, 168, var(--tw-text-opacity))}\n.hover\\:text-purple-700:hover{--tw-text-opacity:1;color:rgba(123, 31, 162, var(--tw-text-opacity))}\n.hover\\:text-pink-700:hover{--tw-text-opacity:1;color:rgba(194, 24, 91, var(--tw-text-opacity))}\n.hover\\:text-red-700:hover{--tw-text-opacity:1;color:rgba(211, 47, 47, var(--tw-text-opacity))}\n.hover\\:text-white:hover{--tw-text-opacity:1;color:rgba(255, 255, 255, var(--tw-text-opacity))}\n.hover\\:shadow-lg-blue-gray:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(69, 90, 100, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-gray:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(97, 97, 97, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-brown:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(93, 64, 55, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-deep-orange:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(230, 74, 25, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-orange:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(245, 122, 0, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-amber:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(255, 160, 0, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-yellow:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(251, 192, 45, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-lime:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(175, 180, 43, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-light-green:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(104, 159, 56, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-green:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(56, 142, 60, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-teal:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(0, 121, 107, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-cyan:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(0, 151, 167, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-light-blue:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(2, 136, 209, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-blue:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(25, 118, 210, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-indigo:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(48, 63, 159, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-deep-purple:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(81, 45, 168, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-purple:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(123, 31, 162, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-pink:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(194, 24, 91, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-red:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(211, 47, 47, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-blue-gray:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(96, 125, 139, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-gray:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(158, 158, 158, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-brown:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(121, 85, 72, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-deep-orange:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 87, 36, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-orange:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 152, 0, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-amber:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 193, 7, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-yellow:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 235, 59, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-lime:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(205, 220, 57, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-light-green:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(139, 195, 74, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-green:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(76, 175, 80, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-teal:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(0, 150, 136, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-cyan:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(0, 188, 212, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-light-blue:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(3, 169, 244, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-blue:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(33, 150, 243, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-indigo:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(63, 81, 181, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-deep-purple:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(103, 58, 183, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-purple:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(156, 39, 176, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-pink:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(233, 30, 99, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-red:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(244, 67, 54, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.focus\\:border-2:focus{border-width:2px}\n.focus\\:border-blue-gray-500:focus{--tw-border-opacity:1;border-color:rgba(96, 125, 139, var(--tw-border-opacity))}\n.focus\\:border-gray-500:focus{--tw-border-opacity:1;border-color:rgba(158, 158, 158, var(--tw-border-opacity))}\n.focus\\:border-brown-500:focus{--tw-border-opacity:1;border-color:rgba(121, 85, 72, var(--tw-border-opacity))}\n.focus\\:border-deep-orange-500:focus{--tw-border-opacity:1;border-color:rgba(255, 87, 34, var(--tw-border-opacity))}\n.focus\\:border-orange-500:focus{--tw-border-opacity:1;border-color:rgba(255, 152, 0, var(--tw-border-opacity))}\n.focus\\:border-amber-500:focus{--tw-border-opacity:1;border-color:rgba(255, 193, 7, var(--tw-border-opacity))}\n.focus\\:border-yellow-600:focus{--tw-border-opacity:1;border-color:rgba(253, 216, 53, var(--tw-border-opacity))}\n.focus\\:border-lime-500:focus{--tw-border-opacity:1;border-color:rgba(205, 220, 57, var(--tw-border-opacity))}\n.focus\\:border-light-green-500:focus{--tw-border-opacity:1;border-color:rgba(139, 195, 74, var(--tw-border-opacity))}\n.focus\\:border-green-500:focus{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity))}\n.focus\\:border-teal-500:focus{--tw-border-opacity:1;border-color:rgba(0, 150, 136, var(--tw-border-opacity))}\n.focus\\:border-cyan-500:focus{--tw-border-opacity:1;border-color:rgba(0, 188, 212, var(--tw-border-opacity))}\n.focus\\:border-light-blue-500:focus{--tw-border-opacity:1;border-color:rgba(3, 169, 244, var(--tw-border-opacity))}\n.focus\\:border-blue-500:focus{--tw-border-opacity:1;border-color:rgba(33, 150, 243, var(--tw-border-opacity))}\n.focus\\:border-indigo-500:focus{--tw-border-opacity:1;border-color:rgba(63, 81, 181, var(--tw-border-opacity))}\n.focus\\:border-deep-purple-500:focus{--tw-border-opacity:1;border-color:rgba(103, 58, 183, var(--tw-border-opacity))}\n.focus\\:border-purple-500:focus{--tw-border-opacity:1;border-color:rgba(156, 39, 176, var(--tw-border-opacity))}\n.focus\\:border-pink-500:focus{--tw-border-opacity:1;border-color:rgba(233, 30, 99, var(--tw-border-opacity))}\n.focus\\:border-red-500:focus{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity))}\n.focus\\:bg-blue-gray-400:focus{--tw-bg-opacity:1;background-color:rgba(120, 144, 156, var(--tw-bg-opacity))}\n.focus\\:bg-gray-400:focus{--tw-bg-opacity:1;background-color:rgba(189, 189, 189, var(--tw-bg-opacity))}\n.focus\\:bg-brown-400:focus{--tw-bg-opacity:1;background-color:rgba(141, 110, 99, var(--tw-bg-opacity))}\n.focus\\:bg-deep-orange-400:focus{--tw-bg-opacity:1;background-color:rgba(255, 112, 67, var(--tw-bg-opacity))}\n.focus\\:bg-orange-400:focus{--tw-bg-opacity:1;background-color:rgba(255, 167, 38, var(--tw-bg-opacity))}\n.focus\\:bg-amber-400:focus{--tw-bg-opacity:1;background-color:rgba(255, 202, 40, var(--tw-bg-opacity))}\n.focus\\:bg-yellow-500:focus{--tw-bg-opacity:1;background-color:rgba(255, 235, 59, var(--tw-bg-opacity))}\n.focus\\:bg-lime-400:focus{--tw-bg-opacity:1;background-color:rgba(212, 225, 87, var(--tw-bg-opacity))}\n.focus\\:bg-light-green-400:focus{--tw-bg-opacity:1;background-color:rgba(156, 204, 101, var(--tw-bg-opacity))}\n.focus\\:bg-green-400:focus{--tw-bg-opacity:1;background-color:rgba(102, 187, 106, var(--tw-bg-opacity))}\n.focus\\:bg-teal-400:focus{--tw-bg-opacity:1;background-color:rgba(38, 166, 154, var(--tw-bg-opacity))}\n.focus\\:bg-cyan-400:focus{--tw-bg-opacity:1;background-color:rgba(38, 198, 218, var(--tw-bg-opacity))}\n.focus\\:bg-light-blue-400:focus{--tw-bg-opacity:1;background-color:rgba(41, 182, 246, var(--tw-bg-opacity))}\n.focus\\:bg-blue-400:focus{--tw-bg-opacity:1;background-color:rgba(66, 165, 245, var(--tw-bg-opacity))}\n.focus\\:bg-indigo-400:focus{--tw-bg-opacity:1;background-color:rgba(92, 107, 192, var(--tw-bg-opacity))}\n.focus\\:bg-deep-purple-400:focus{--tw-bg-opacity:1;background-color:rgba(126, 87, 194, var(--tw-bg-opacity))}\n.focus\\:bg-purple-400:focus{--tw-bg-opacity:1;background-color:rgba(171, 71, 188, var(--tw-bg-opacity))}\n.focus\\:bg-pink-400:focus{--tw-bg-opacity:1;background-color:rgba(236, 64, 122, var(--tw-bg-opacity))}\n.focus\\:bg-red-400:focus{--tw-bg-opacity:1;background-color:rgba(239, 83, 80, var(--tw-bg-opacity))}\n.focus\\:bg-gray-500:focus{--tw-bg-opacity:1;background-color:rgba(158, 158, 158, var(--tw-bg-opacity))}\n.focus\\:bg-opacity-20:focus{--tw-bg-opacity:0.2}\n.focus\\:text-gray-800:focus{--tw-text-opacity:1;color:rgba(66, 66, 66, var(--tw-text-opacity))}\n.focus\\:shadow-none:focus{--tw-shadow:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}\n.focus\\:ring-0:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)}\n.active\\:bg-blue-gray-800:active{--tw-bg-opacity:1;background-color:rgba(55, 71, 79, var(--tw-bg-opacity))}\n.active\\:bg-gray-800:active{--tw-bg-opacity:1;background-color:rgba(66, 66, 66, var(--tw-bg-opacity))}\n.active\\:bg-brown-800:active{--tw-bg-opacity:1;background-color:rgba(78, 52, 46, var(--tw-bg-opacity))}\n.active\\:bg-deep-orange-800:active{--tw-bg-opacity:1;background-color:rgba(216, 67, 21, var(--tw-bg-opacity))}\n.active\\:bg-orange-800:active{--tw-bg-opacity:1;background-color:rgba(239, 108, 0, var(--tw-bg-opacity))}\n.active\\:bg-amber-800:active{--tw-bg-opacity:1;background-color:rgba(255, 143, 0, var(--tw-bg-opacity))}\n.active\\:bg-yellow-800:active{--tw-bg-opacity:1;background-color:rgba(249, 168, 37, var(--tw-bg-opacity))}\n.active\\:bg-lime-800:active{--tw-bg-opacity:1;background-color:rgba(158, 157, 36, var(--tw-bg-opacity))}\n.active\\:bg-light-green-800:active{--tw-bg-opacity:1;background-color:rgba(85, 139, 47, var(--tw-bg-opacity))}\n.active\\:bg-green-800:active{--tw-bg-opacity:1;background-color:rgba(46, 125, 50, var(--tw-bg-opacity))}\n.active\\:bg-teal-800:active{--tw-bg-opacity:1;background-color:rgba(0, 105, 92, var(--tw-bg-opacity))}\n.active\\:bg-cyan-800:active{--tw-bg-opacity:1;background-color:rgba(0, 131, 143, var(--tw-bg-opacity))}\n.active\\:bg-light-blue-800:active{--tw-bg-opacity:1;background-color:rgba(2, 119, 189, var(--tw-bg-opacity))}\n.active\\:bg-blue-800:active{--tw-bg-opacity:1;background-color:rgba(21, 101, 192, var(--tw-bg-opacity))}\n.active\\:bg-indigo-800:active{--tw-bg-opacity:1;background-color:rgba(40, 53, 147, var(--tw-bg-opacity))}\n.active\\:bg-deep-purple-800:active{--tw-bg-opacity:1;background-color:rgba(69, 39, 160, var(--tw-bg-opacity))}\n.active\\:bg-purple-800:active{--tw-bg-opacity:1;background-color:rgba(106, 27, 154, var(--tw-bg-opacity))}\n.active\\:bg-pink-800:active{--tw-bg-opacity:1;background-color:rgba(173, 20, 87, var(--tw-bg-opacity))}\n.active\\:bg-red-800:active{--tw-bg-opacity:1;background-color:rgba(198, 40, 40, var(--tw-bg-opacity))}\n.active\\:bg-blue-gray-100:active{--tw-bg-opacity:1;background-color:rgba(207, 216, 220, var(--tw-bg-opacity))}\n.active\\:bg-gray-100:active{--tw-bg-opacity:1;background-color:rgba(245, 245, 245, var(--tw-bg-opacity))}\n.active\\:bg-brown-100:active{--tw-bg-opacity:1;background-color:rgba(215, 204, 200, var(--tw-bg-opacity))}\n.active\\:bg-deep-orange-100:active{--tw-bg-opacity:1;background-color:rgba(255, 204, 188, var(--tw-bg-opacity))}\n.active\\:bg-orange-100:active{--tw-bg-opacity:1;background-color:rgba(255, 224, 178, var(--tw-bg-opacity))}\n.active\\:bg-amber-100:active{--tw-bg-opacity:1;background-color:rgba(255, 236, 179, var(--tw-bg-opacity))}\n.active\\:bg-yellow-100:active{--tw-bg-opacity:1;background-color:rgba(255, 249, 196, var(--tw-bg-opacity))}\n.active\\:bg-lime-100:active{--tw-bg-opacity:1;background-color:rgba(240, 244, 195, var(--tw-bg-opacity))}\n.active\\:bg-light-green-100:active{--tw-bg-opacity:1;background-color:rgba(220, 237, 200, var(--tw-bg-opacity))}\n.active\\:bg-green-100:active{--tw-bg-opacity:1;background-color:rgba(200, 230, 201, var(--tw-bg-opacity))}\n.active\\:bg-teal-100:active{--tw-bg-opacity:1;background-color:rgba(178, 223, 219, var(--tw-bg-opacity))}\n.active\\:bg-cyan-100:active{--tw-bg-opacity:1;background-color:rgba(178, 235, 242, var(--tw-bg-opacity))}\n.active\\:bg-light-blue-100:active{--tw-bg-opacity:1;background-color:rgba(179, 229, 252, var(--tw-bg-opacity))}\n.active\\:bg-blue-100:active{--tw-bg-opacity:1;background-color:rgba(187, 222, 251, var(--tw-bg-opacity))}\n.active\\:bg-indigo-100:active{--tw-bg-opacity:1;background-color:rgba(197, 202, 233, var(--tw-bg-opacity))}\n.active\\:bg-deep-purple-100:active{--tw-bg-opacity:1;background-color:rgba(209, 196, 233, var(--tw-bg-opacity))}\n.active\\:bg-purple-100:active{--tw-bg-opacity:1;background-color:rgba(225, 190, 231, var(--tw-bg-opacity))}\n.active\\:bg-pink-100:active{--tw-bg-opacity:1;background-color:rgba(248, 187, 208, var(--tw-bg-opacity))}\n.active\\:bg-red-100:active{--tw-bg-opacity:1;background-color:rgba(255, 205, 210, var(--tw-bg-opacity))}\n.active\\:bg-gray-500:active{--tw-bg-opacity:1;background-color:rgba(158, 158, 158, var(--tw-bg-opacity))}\n.active\\:bg-opacity-40:active{--tw-bg-opacity:0.4}\n@media (min-width: 640px){\n.sm\\:left-auto{left:auto}\n.sm\\:w-full{width:100%}}\n@media (min-width: 768px){\n.md\\:mt-40{margin-top:10rem}\n.md\\:mt-0{margin-top:0px}\n.md\\:mt-64{margin-top:16rem}\n.md\\:mb-0{margin-bottom:0px}\n.md\\:w-9\\/12{width:75%}\n.md\\:w-48{width:12rem}\n.md\\:w-6\\/12{width:50%}\n.md\\:w-4\\/12{width:33.333333%}\n.md\\:w-5\\/12{width:41.666667%}\n.md\\:w-8\\/12{width:66.666667%}\n.md\\:flex-row{flex-direction:row}\n.md\\:justify-start{justify-content:flex-start}\n.md\\:justify-between{justify-content:space-between}\n.md\\:gap-6{gap:1.5rem}\n.md\\:px-8{padding-left:2rem;padding-right:2rem}\n.md\\:px-4{padding-left:1rem;padding-right:1rem}\n.md\\:pr-12{padding-right:3rem}\n.md\\:pt-0{padding-top:0px}}\n@media (min-width: 1024px){\n.lg\\:static{position:static}\n.lg\\:mr-5{margin-right:1.25rem}\n.lg\\:ml-5{margin-left:1.25rem}\n.lg\\:mt-16{margin-top:4rem}\n.lg\\:block{display:block}\n.lg\\:flex{display:flex}\n.lg\\:hidden{display:none}\n.lg\\:w-4\\/12{width:33.333333%}\n.lg\\:w-6\\/12{width:50%}\n.lg\\:w-8\\/12{width:66.666667%}\n.lg\\:w-60{width:15rem}\n.lg\\:w-auto{width:auto}\n.lg\\:flex-row{flex-direction:row}\n.lg\\:items-center{align-items:center}\n.lg\\:justify-between{justify-content:space-between}\n.lg\\:justify-start{justify-content:flex-start}\n.lg\\:px-36{padding-left:9rem;padding-right:9rem}\n.lg\\:text-left{text-align:left}}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[2]!./styles/globals.css":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[2]!./styles/globals.css ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/next/dist/compiled/css-loader/api.js */ "./node_modules/next/dist/compiled/css-loader/api.js");
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "html,\nbody {\n  padding: 0;\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\n    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n}\n\na {\n  color: inherit;\n  text-decoration: none;\n}\n\n* {\n  box-sizing: border-box;\n}\n\n/*! tailwindcss v2.2.7 | MIT License | https://tailwindcss.com */\n\n/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */\n\n/*\nDocument\n========\n*/\n\n/**\nUse a better box model (opinionated).\n*/\n\n*,\n::before,\n::after {\n\tbox-sizing: border-box;\n}\n\n/**\nUse a more readable tab size (opinionated).\n*/\n\nhtml {\n\t-moz-tab-size: 4;\n\t-o-tab-size: 4;\n\t   tab-size: 4;\n}\n\n/**\n1. Correct the line height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n*/\n\nhtml {\n\tline-height: 1.15; /* 1 */\n\t-webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/*\nSections\n========\n*/\n\n/**\nRemove the margin in all browsers.\n*/\n\nbody {\n\tmargin: 0;\n}\n\n/**\nImprove consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n*/\n\nbody {\n\tfont-family:\n\t\tsystem-ui,\n\t\t-apple-system, /* Firefox supports this but not yet `system-ui` */\n\t\t'Segoe UI',\n\t\tRoboto,\n\t\tHelvetica,\n\t\tArial,\n\t\tsans-serif,\n\t\t'Apple Color Emoji',\n\t\t'Segoe UI Emoji';\n}\n\n/*\nGrouping content\n================\n*/\n\n/**\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n*/\n\nhr {\n\theight: 0; /* 1 */\n\tcolor: inherit; /* 2 */\n}\n\n/*\nText-level semantics\n====================\n*/\n\n/**\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\nabbr[title] {\n\t-webkit-text-decoration: underline dotted;\n\t        text-decoration: underline dotted;\n}\n\n/**\nAdd the correct font weight in Edge and Safari.\n*/\n\nb,\nstrong {\n\tfont-weight: bolder;\n}\n\n/**\n1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n2. Correct the odd 'em' font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n\tfont-family:\n\t\tui-monospace,\n\t\tSFMono-Regular,\n\t\tConsolas,\n\t\t'Liberation Mono',\n\t\tMenlo,\n\t\tmonospace; /* 1 */\n\tfont-size: 1em; /* 2 */\n}\n\n/**\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n\tfont-size: 80%;\n}\n\n/**\nPrevent 'sub' and 'sup' elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n\tfont-size: 75%;\n\tline-height: 0;\n\tposition: relative;\n\tvertical-align: baseline;\n}\n\nsub {\n\tbottom: -0.25em;\n}\n\nsup {\n\ttop: -0.5em;\n}\n\n/*\nTabular data\n============\n*/\n\n/**\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n*/\n\ntable {\n\ttext-indent: 0; /* 1 */\n\tborder-color: inherit; /* 2 */\n}\n\n/*\nForms\n=====\n*/\n\n/**\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n\tfont-family: inherit; /* 1 */\n\tfont-size: 100%; /* 1 */\n\tline-height: 1.15; /* 1 */\n\tmargin: 0; /* 2 */\n}\n\n/**\nRemove the inheritance of text transform in Edge and Firefox.\n1. Remove the inheritance of text transform in Firefox.\n*/\n\nbutton,\nselect { /* 1 */\n\ttext-transform: none;\n}\n\n/**\nCorrect the inability to style clickable types in iOS and Safari.\n*/\n\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n\t-webkit-appearance: button;\n}\n\n/**\nRemove the inner border and padding in Firefox.\n*/\n\n::-moz-focus-inner {\n\tborder-style: none;\n\tpadding: 0;\n}\n\n/**\nRestore the focus styles unset by the previous rule.\n*/\n\n:-moz-focusring {\n\toutline: 1px dotted ButtonText;\n}\n\n/**\nRemove the additional ':invalid' styles in Firefox.\nSee: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737\n*/\n\n:-moz-ui-invalid {\n\tbox-shadow: none;\n}\n\n/**\nRemove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.\n*/\n\nlegend {\n\tpadding: 0;\n}\n\n/**\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n\tvertical-align: baseline;\n}\n\n/**\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n\theight: auto;\n}\n\n/**\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type='search'] {\n\t-webkit-appearance: textfield; /* 1 */\n\toutline-offset: -2px; /* 2 */\n}\n\n/**\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n\t-webkit-appearance: none;\n}\n\n/**\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to 'inherit' in Safari.\n*/\n\n::-webkit-file-upload-button {\n\t-webkit-appearance: button; /* 1 */\n\tfont: inherit; /* 2 */\n}\n\n/*\nInteractive\n===========\n*/\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n\tdisplay: list-item;\n}\n\n/**\n * Manually forked from SUIT CSS Base: https://github.com/suitcss/base\n * A thin layer on top of normalize.css that provides a starting point more\n * suitable for web applications.\n */\n\n/**\n * Removes the default spacing and border for appropriate elements.\n */\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nbutton {\n  background-color: transparent;\n  background-image: none;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nol,\nul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/**\n * Tailwind custom reset styles\n */\n\n/**\n * 1. Use the user's configured `sans` font-family (with Tailwind's default\n *    sans-serif font stack as a fallback) as a sane default.\n * 2. Use Tailwind's default \"normal\" line-height so the user isn't forced\n *    to override it to ensure consistency even when using the default theme.\n */\n\nhtml {\n  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; /* 1 */\n  line-height: 1.5; /* 2 */\n}\n\n/**\n * Inherit font-family and line-height from `html` so users can set them as\n * a class directly on the `html` element.\n */\n\nbody {\n  font-family: inherit;\n  line-height: inherit;\n}\n\n/**\n * 1. Prevent padding and border from affecting element width.\n *\n *    We used to set this in the html element and inherit from\n *    the parent element for everything else. This caused issues\n *    in shadow-dom-enhanced elements like <details> where the content\n *    is wrapped by a div with box-sizing set to `content-box`.\n *\n *    https://github.com/mozdevs/cssremedy/issues/4\n *\n *\n * 2. Allow adding a border to an element by just adding a border-width.\n *\n *    By default, the way the browser specifies that an element should have no\n *    border is by setting it's border-style to `none` in the user-agent\n *    stylesheet.\n *\n *    In order to easily add borders to elements by just setting the `border-width`\n *    property, we change the default border-style for all elements to `solid`, and\n *    use border-width to hide them instead. This way our `border` utilities only\n *    need to set the `border-width` property instead of the entire `border`\n *    shorthand, making our border utilities much more straightforward to compose.\n *\n *    https://github.com/tailwindcss/tailwindcss/pull/116\n */\n\n*,\n::before,\n::after {\n  box-sizing: border-box; /* 1 */\n  border-width: 0; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: currentColor; /* 2 */\n}\n\n/*\n * Ensure horizontal rules are visible by default\n */\n\nhr {\n  border-top-width: 1px;\n}\n\n/**\n * Undo the `border-style: none` reset that Normalize applies to images so that\n * our `border-{width}` utilities have the expected effect.\n *\n * The Normalize reset is unnecessary for us since we default the border-width\n * to 0 on all elements.\n *\n * https://github.com/tailwindcss/tailwindcss/issues/362\n */\n\nimg {\n  border-style: solid;\n}\n\ntextarea {\n  resize: vertical;\n}\n\ninput::-moz-placeholder, textarea::-moz-placeholder {\n  opacity: 1;\n  color: #9ca3af;\n}\n\ninput:-ms-input-placeholder, textarea:-ms-input-placeholder {\n  opacity: 1;\n  color: #9ca3af;\n}\n\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1;\n  color: #9ca3af;\n}\n\nbutton,\n[role=\"button\"] {\n  cursor: pointer;\n}\n\ntable {\n  border-collapse: collapse;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/**\n * Reset links to optimize for opt-in styling instead of\n * opt-out.\n */\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\n/**\n * Reset form element properties that are easy to forget to\n * style explicitly so you don't inadvertently introduce\n * styles that deviate from your design system. These styles\n * supplement a partial reset that is already applied by\n * normalize.css.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  padding: 0;\n  line-height: inherit;\n  color: inherit;\n}\n\n/**\n * Use the configured 'mono' font family for elements that\n * are expected to be rendered with a monospace font, falling\n * back to the system monospace stack if there is no configured\n * 'mono' font family.\n */\n\npre,\ncode,\nkbd,\nsamp {\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n}\n\n/**\n * 1. Make replaced elements `display: block` by default as that's\n *    the behavior you want almost all of the time. Inspired by\n *    CSS Remedy, with `svg` added as well.\n *\n *    https://github.com/mozdevs/cssremedy/issues/14\n * \n * 2. Add `vertical-align: middle` to align replaced elements more\n *    sensibly by default when overriding `display` by adding a\n *    utility like `inline`.\n *\n *    This can trigger a poorly considered linting error in some\n *    tools but is included by design.\n * \n *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210\n */\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block; /* 1 */\n  vertical-align: middle; /* 2 */\n}\n\n/**\n * Constrain images and videos to the parent width and preserve\n * their intrinsic aspect ratio.\n *\n * https://github.com/mozdevs/cssremedy/issues/14\n */\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\n/**\n * Ensure the default browser behavior of the `hidden` attribute.\n */\n\n[hidden] {\n  display: none;\n}\n\n*, ::before, ::after {\n  --tw-translate-x: 0;\n  --tw-translate-y: 0;\n  --tw-rotate: 0;\n  --tw-skew-x: 0;\n  --tw-skew-y: 0;\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  --tw-transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n}\n.absolute {\n  position: absolute;\n}\n.top-4 {\n  top: 1rem;\n}\n.right-4 {\n  right: 1rem;\n}\n.left-8 {\n  left: 2rem;\n}\n.top-\\[52px\\] {\n  top: 52px;\n}\n.left-\\[10px\\] {\n  left: 10px;\n}\n.z-10 {\n  z-index: 10;\n}\n.mr-4 {\n  margin-right: 1rem;\n}\n.mt-4 {\n  margin-top: 1rem;\n}\n.mb-8 {\n  margin-bottom: 2rem;\n}\n.block {\n  display: block;\n}\n.flex {\n  display: flex;\n}\n.h-screen {\n  height: 100vh;\n}\n.h-\\[50px\\] {\n  height: 50px;\n}\n.h-\\[300px\\] {\n  height: 300px;\n}\n.w-full {\n  width: 100%;\n}\n.w-\\[300px\\] {\n  width: 300px;\n}\n.w-\\[290px\\] {\n  width: 290px;\n}\n.w-\\[240px\\] {\n  width: 240px;\n}\n.w-\\[80\\%\\] {\n  width: 80%;\n}\n.w-\\[400px\\] {\n  width: 400px;\n}\n.scale-75 {\n  --tw-scale-x: .75;\n  --tw-scale-y: .75;\n  transform: var(--tw-transform);\n}\n.cursor-pointer {\n  cursor: pointer;\n}\n.flex-col {\n  flex-direction: column;\n}\n.items-center {\n  align-items: center;\n}\n.justify-center {\n  justify-content: center;\n}\n.justify-between {\n  justify-content: space-between;\n}\n.space-x-4 > :not([hidden]) ~ :not([hidden]) {\n  --tw-space-x-reverse: 0;\n  margin-right: calc(1rem * var(--tw-space-x-reverse));\n  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));\n}\n.space-y-5 > :not([hidden]) ~ :not([hidden]) {\n  --tw-space-y-reverse: 0;\n  margin-top: calc(1.25rem * calc(1 - var(--tw-space-y-reverse)));\n  margin-bottom: calc(1.25rem * var(--tw-space-y-reverse));\n}\n.rounded {\n  border-radius: 0.25rem;\n}\n.bg-gray-300 {\n  --tw-bg-opacity: 1;\n  background-color: rgba(209, 213, 219, var(--tw-bg-opacity));\n}\n.bg-pink-400 {\n  --tw-bg-opacity: 1;\n  background-color: rgba(244, 114, 182, var(--tw-bg-opacity));\n}\n.bg-white {\n  --tw-bg-opacity: 1;\n  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));\n}\n.bg-blue-400 {\n  --tw-bg-opacity: 1;\n  background-color: rgba(96, 165, 250, var(--tw-bg-opacity));\n}\n.p-4 {\n  padding: 1rem;\n}\n.p-2 {\n  padding: 0.5rem;\n}\n.px-4 {\n  padding-left: 1rem;\n  padding-right: 1rem;\n}\n.text-3xl {\n  font-size: 1.875rem;\n  line-height: 2.25rem;\n}\n.text-blue-400 {\n  --tw-text-opacity: 1;\n  color: rgba(96, 165, 250, var(--tw-text-opacity));\n}\n.text-gray-700 {\n  --tw-text-opacity: 1;\n  color: rgba(55, 65, 81, var(--tw-text-opacity));\n}\n.hover\\:scale-100:hover {\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  transform: var(--tw-transform);\n}\n.hover\\:bg-blue-300:hover {\n  --tw-bg-opacity: 1;\n  background-color: rgba(147, 197, 253, var(--tw-bg-opacity));\n}\n", "",{"version":3,"sources":["webpack://styles/globals.css","webpack://styles/%3Cinput%20css%20xgWb15%3E","webpack://styles/%3Cinput%20css%20xOoE_P%3E","<no source>"],"names":[],"mappings":"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","sourcesContent":["html,\nbody {\n  padding: 0;\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\n    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n}\n\na {\n  color: inherit;\n  text-decoration: none;\n}\n\n* {\n  box-sizing: border-box;\n}\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n","/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */\n\n/*\nDocument\n========\n*/\n\n/**\nUse a better box model (opinionated).\n*/\n\n*,\n::before,\n::after {\n\tbox-sizing: border-box;\n}\n\n/**\nUse a more readable tab size (opinionated).\n*/\n\nhtml {\n\t-moz-tab-size: 4;\n\ttab-size: 4;\n}\n\n/**\n1. Correct the line height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n*/\n\nhtml {\n\tline-height: 1.15; /* 1 */\n\t-webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/*\nSections\n========\n*/\n\n/**\nRemove the margin in all browsers.\n*/\n\nbody {\n\tmargin: 0;\n}\n\n/**\nImprove consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n*/\n\nbody {\n\tfont-family:\n\t\tsystem-ui,\n\t\t-apple-system, /* Firefox supports this but not yet `system-ui` */\n\t\t'Segoe UI',\n\t\tRoboto,\n\t\tHelvetica,\n\t\tArial,\n\t\tsans-serif,\n\t\t'Apple Color Emoji',\n\t\t'Segoe UI Emoji';\n}\n\n/*\nGrouping content\n================\n*/\n\n/**\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n*/\n\nhr {\n\theight: 0; /* 1 */\n\tcolor: inherit; /* 2 */\n}\n\n/*\nText-level semantics\n====================\n*/\n\n/**\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\nabbr[title] {\n\ttext-decoration: underline dotted;\n}\n\n/**\nAdd the correct font weight in Edge and Safari.\n*/\n\nb,\nstrong {\n\tfont-weight: bolder;\n}\n\n/**\n1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n2. Correct the odd 'em' font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n\tfont-family:\n\t\tui-monospace,\n\t\tSFMono-Regular,\n\t\tConsolas,\n\t\t'Liberation Mono',\n\t\tMenlo,\n\t\tmonospace; /* 1 */\n\tfont-size: 1em; /* 2 */\n}\n\n/**\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n\tfont-size: 80%;\n}\n\n/**\nPrevent 'sub' and 'sup' elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n\tfont-size: 75%;\n\tline-height: 0;\n\tposition: relative;\n\tvertical-align: baseline;\n}\n\nsub {\n\tbottom: -0.25em;\n}\n\nsup {\n\ttop: -0.5em;\n}\n\n/*\nTabular data\n============\n*/\n\n/**\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n*/\n\ntable {\n\ttext-indent: 0; /* 1 */\n\tborder-color: inherit; /* 2 */\n}\n\n/*\nForms\n=====\n*/\n\n/**\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n\tfont-family: inherit; /* 1 */\n\tfont-size: 100%; /* 1 */\n\tline-height: 1.15; /* 1 */\n\tmargin: 0; /* 2 */\n}\n\n/**\nRemove the inheritance of text transform in Edge and Firefox.\n1. Remove the inheritance of text transform in Firefox.\n*/\n\nbutton,\nselect { /* 1 */\n\ttext-transform: none;\n}\n\n/**\nCorrect the inability to style clickable types in iOS and Safari.\n*/\n\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n\t-webkit-appearance: button;\n}\n\n/**\nRemove the inner border and padding in Firefox.\n*/\n\n::-moz-focus-inner {\n\tborder-style: none;\n\tpadding: 0;\n}\n\n/**\nRestore the focus styles unset by the previous rule.\n*/\n\n:-moz-focusring {\n\toutline: 1px dotted ButtonText;\n}\n\n/**\nRemove the additional ':invalid' styles in Firefox.\nSee: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737\n*/\n\n:-moz-ui-invalid {\n\tbox-shadow: none;\n}\n\n/**\nRemove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.\n*/\n\nlegend {\n\tpadding: 0;\n}\n\n/**\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n\tvertical-align: baseline;\n}\n\n/**\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n\theight: auto;\n}\n\n/**\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type='search'] {\n\t-webkit-appearance: textfield; /* 1 */\n\toutline-offset: -2px; /* 2 */\n}\n\n/**\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n\t-webkit-appearance: none;\n}\n\n/**\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to 'inherit' in Safari.\n*/\n\n::-webkit-file-upload-button {\n\t-webkit-appearance: button; /* 1 */\n\tfont: inherit; /* 2 */\n}\n\n/*\nInteractive\n===========\n*/\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n\tdisplay: list-item;\n}\n","/**\n * Manually forked from SUIT CSS Base: https://github.com/suitcss/base\n * A thin layer on top of normalize.css that provides a starting point more\n * suitable for web applications.\n */\n\n/**\n * Removes the default spacing and border for appropriate elements.\n */\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nbutton {\n  background-color: transparent;\n  background-image: none;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nol,\nul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/**\n * Tailwind custom reset styles\n */\n\n/**\n * 1. Use the user's configured `sans` font-family (with Tailwind's default\n *    sans-serif font stack as a fallback) as a sane default.\n * 2. Use Tailwind's default \"normal\" line-height so the user isn't forced\n *    to override it to ensure consistency even when using the default theme.\n */\n\nhtml {\n  font-family: theme('fontFamily.sans', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"); /* 1 */\n  line-height: 1.5; /* 2 */\n}\n\n\n/**\n * Inherit font-family and line-height from `html` so users can set them as\n * a class directly on the `html` element.\n */\n\nbody {\n  font-family: inherit;\n  line-height: inherit;\n}\n\n/**\n * 1. Prevent padding and border from affecting element width.\n *\n *    We used to set this in the html element and inherit from\n *    the parent element for everything else. This caused issues\n *    in shadow-dom-enhanced elements like <details> where the content\n *    is wrapped by a div with box-sizing set to `content-box`.\n *\n *    https://github.com/mozdevs/cssremedy/issues/4\n *\n *\n * 2. Allow adding a border to an element by just adding a border-width.\n *\n *    By default, the way the browser specifies that an element should have no\n *    border is by setting it's border-style to `none` in the user-agent\n *    stylesheet.\n *\n *    In order to easily add borders to elements by just setting the `border-width`\n *    property, we change the default border-style for all elements to `solid`, and\n *    use border-width to hide them instead. This way our `border` utilities only\n *    need to set the `border-width` property instead of the entire `border`\n *    shorthand, making our border utilities much more straightforward to compose.\n *\n *    https://github.com/tailwindcss/tailwindcss/pull/116\n */\n\n*,\n::before,\n::after {\n  box-sizing: border-box; /* 1 */\n  border-width: 0; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: currentColor; /* 2 */\n}\n\n/*\n * Ensure horizontal rules are visible by default\n */\n\nhr {\n  border-top-width: 1px;\n}\n\n/**\n * Undo the `border-style: none` reset that Normalize applies to images so that\n * our `border-{width}` utilities have the expected effect.\n *\n * The Normalize reset is unnecessary for us since we default the border-width\n * to 0 on all elements.\n *\n * https://github.com/tailwindcss/tailwindcss/issues/362\n */\n\nimg {\n  border-style: solid;\n}\n\ntextarea {\n  resize: vertical;\n}\n\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1;\n  color: theme('colors.gray.400', #a1a1aa);\n}\n\nbutton,\n[role=\"button\"] {\n  cursor: pointer;\n}\n\ntable {\n  border-collapse: collapse;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/**\n * Reset links to optimize for opt-in styling instead of\n * opt-out.\n */\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\n/**\n * Reset form element properties that are easy to forget to\n * style explicitly so you don't inadvertently introduce\n * styles that deviate from your design system. These styles\n * supplement a partial reset that is already applied by\n * normalize.css.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  padding: 0;\n  line-height: inherit;\n  color: inherit;\n}\n\n/**\n * Use the configured 'mono' font family for elements that\n * are expected to be rendered with a monospace font, falling\n * back to the system monospace stack if there is no configured\n * 'mono' font family.\n */\n\npre,\ncode,\nkbd,\nsamp {\n  font-family: theme('fontFamily.mono', ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace);\n}\n\n/**\n * 1. Make replaced elements `display: block` by default as that's\n *    the behavior you want almost all of the time. Inspired by\n *    CSS Remedy, with `svg` added as well.\n *\n *    https://github.com/mozdevs/cssremedy/issues/14\n * \n * 2. Add `vertical-align: middle` to align replaced elements more\n *    sensibly by default when overriding `display` by adding a\n *    utility like `inline`.\n *\n *    This can trigger a poorly considered linting error in some\n *    tools but is included by design.\n * \n *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210\n */\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block; /* 1 */\n  vertical-align: middle; /* 2 */\n}\n\n/**\n * Constrain images and videos to the parent width and preserve\n * their intrinsic aspect ratio.\n *\n * https://github.com/mozdevs/cssremedy/issues/14\n */\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\n/**\n * Ensure the default browser behavior of the `hidden` attribute.\n */\n\n[hidden] {\n  display: none;\n}\n",null],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _arrayLikeToArray; }
/* harmony export */ });
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _arrayWithoutHoles; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/arrayLikeToArray */ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js");

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return (0,_babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__.default)(arr);
}

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _asyncToGenerator; }
/* harmony export */ });
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _defineProperty; }
/* harmony export */ });
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/iterableToArray.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/esm/iterableToArray.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _iterableToArray; }
/* harmony export */ });
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _nonIterableSpread; }
/* harmony export */ });
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _toConsumableArray; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_arrayWithoutHoles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/arrayWithoutHoles */ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js");
/* harmony import */ var _babel_runtime_helpers_esm_iterableToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/iterableToArray */ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/iterableToArray.js");
/* harmony import */ var _babel_runtime_helpers_esm_unsupportedIterableToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/unsupportedIterableToArray */ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js");
/* harmony import */ var _babel_runtime_helpers_esm_nonIterableSpread__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/nonIterableSpread */ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js");




function _toConsumableArray(arr) {
  return (0,_babel_runtime_helpers_esm_arrayWithoutHoles__WEBPACK_IMPORTED_MODULE_0__.default)(arr) || (0,_babel_runtime_helpers_esm_iterableToArray__WEBPACK_IMPORTED_MODULE_1__.default)(arr) || (0,_babel_runtime_helpers_esm_unsupportedIterableToArray__WEBPACK_IMPORTED_MODULE_2__.default)(arr) || (0,_babel_runtime_helpers_esm_nonIterableSpread__WEBPACK_IMPORTED_MODULE_3__.default)();
}

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _unsupportedIterableToArray; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/arrayLikeToArray */ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js");

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return (0,_babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__.default)(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0,_babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__.default)(o, minLen);
}

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/***/ (function(module) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning = function() {};

if (true) {
  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");
  var loggedTypeFailures = {};
  var has = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (true) {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
  if (true) {
    loggedTypeFailures = {};
  }
}

module.exports = checkPropTypes;


/***/ }),

/***/ "./node_modules/prop-types/factoryWithTypeCheckers.js":
/*!************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");
var assign = __webpack_require__(/*! object-assign */ "./node_modules/next/dist/build/polyfills/object-assign.js");

var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");
var checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js");

var has = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning = function() {};

if (true) {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (true) {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if ( true && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (true) {
        if (arguments.length > 1) {
          printWarning(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),

/***/ "./node_modules/prop-types/index.js":
/*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (true) {
  var ReactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ "./node_modules/prop-types/factoryWithTypeCheckers.js")(ReactIs.isElement, throwOnDirectAccess);
} else {}


/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/***/ (function(module) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),

/***/ "./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
exports.isValidElementType = isValidElementType;
exports.typeOf = typeOf;
  })();
}


/***/ }),

/***/ "./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ "./node_modules/react-is/cjs/react-is.development.js");
}


/***/ }),

/***/ "./node_modules/react-redux/es/components/Context.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-redux/es/components/Context.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ReactReduxContext": function() { return /* binding */ ReactReduxContext; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

var ReactReduxContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);

if (true) {
  ReactReduxContext.displayName = 'ReactRedux';
}

/* harmony default export */ __webpack_exports__["default"] = (ReactReduxContext);

/***/ }),

/***/ "./node_modules/react-redux/es/components/Provider.js":
/*!************************************************************!*\
  !*** ./node_modules/react-redux/es/components/Provider.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Context */ "./node_modules/react-redux/es/components/Context.js");
/* harmony import */ var _utils_Subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Subscription */ "./node_modules/react-redux/es/utils/Subscription.js");
/* harmony import */ var _utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/useIsomorphicLayoutEffect */ "./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js");






function Provider(_ref) {
  var store = _ref.store,
      context = _ref.context,
      children = _ref.children;
  var contextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {
    var subscription = new _utils_Subscription__WEBPACK_IMPORTED_MODULE_3__.default(store);
    subscription.onStateChange = subscription.notifyNestedSubs;
    return {
      store: store,
      subscription: subscription
    };
  }, [store]);
  var previousState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {
    return store.getState();
  }, [store]);
  (0,_utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_4__.useIsomorphicLayoutEffect)(function () {
    var subscription = contextValue.subscription;
    subscription.trySubscribe();

    if (previousState !== store.getState()) {
      subscription.notifyNestedSubs();
    }

    return function () {
      subscription.tryUnsubscribe();
      subscription.onStateChange = null;
    };
  }, [contextValue, previousState]);
  var Context = context || _Context__WEBPACK_IMPORTED_MODULE_2__.ReactReduxContext;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Context.Provider, {
    value: contextValue
  }, children);
}

if (true) {
  Provider.propTypes = {
    store: prop_types__WEBPACK_IMPORTED_MODULE_1___default().shape({
      subscribe: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().func.isRequired),
      dispatch: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().func.isRequired),
      getState: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().func.isRequired)
    }),
    context: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().object),
    children: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().any)
  };
}

/* harmony default export */ __webpack_exports__["default"] = (Provider);

/***/ }),

/***/ "./node_modules/react-redux/es/components/connectAdvanced.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-redux/es/components/connectAdvanced.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ connectAdvanced; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hoist-non-react-statics */ "./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js");
/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");
/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_is__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _utils_Subscription__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Subscription */ "./node_modules/react-redux/es/utils/Subscription.js");
/* harmony import */ var _utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/useIsomorphicLayoutEffect */ "./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js");
/* harmony import */ var _Context__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Context */ "./node_modules/react-redux/es/components/Context.js");







 // Define some constant arrays just to avoid re-creating these

var EMPTY_ARRAY = [];
var NO_SUBSCRIPTION_ARRAY = [null, null];

var stringifyComponent = function stringifyComponent(Comp) {
  try {
    return JSON.stringify(Comp);
  } catch (err) {
    return String(Comp);
  }
};

function storeStateUpdatesReducer(state, action) {
  var updateCount = state[1];
  return [action.payload, updateCount + 1];
}

function useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {
  (0,_utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_6__.useIsomorphicLayoutEffect)(function () {
    return effectFunc.apply(void 0, effectArgs);
  }, dependencies);
}

function captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, actualChildProps, childPropsFromStoreUpdate, notifyNestedSubs) {
  // We want to capture the wrapper props and child props we used for later comparisons
  lastWrapperProps.current = wrapperProps;
  lastChildProps.current = actualChildProps;
  renderIsScheduled.current = false; // If the render was from a store update, clear out that reference and cascade the subscriber update

  if (childPropsFromStoreUpdate.current) {
    childPropsFromStoreUpdate.current = null;
    notifyNestedSubs();
  }
}

function subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, childPropsFromStoreUpdate, notifyNestedSubs, forceComponentUpdateDispatch) {
  // If we're not subscribed to the store, nothing to do here
  if (!shouldHandleStateChanges) return; // Capture values for checking if and when this component unmounts

  var didUnsubscribe = false;
  var lastThrownError = null; // We'll run this callback every time a store subscription update propagates to this component

  var checkForUpdates = function checkForUpdates() {
    if (didUnsubscribe) {
      // Don't run stale listeners.
      // Redux doesn't guarantee unsubscriptions happen until next dispatch.
      return;
    }

    var latestStoreState = store.getState();
    var newChildProps, error;

    try {
      // Actually run the selector with the most recent store state and wrapper props
      // to determine what the child props should be
      newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);
    } catch (e) {
      error = e;
      lastThrownError = e;
    }

    if (!error) {
      lastThrownError = null;
    } // If the child props haven't changed, nothing to do here - cascade the subscription update


    if (newChildProps === lastChildProps.current) {
      if (!renderIsScheduled.current) {
        notifyNestedSubs();
      }
    } else {
      // Save references to the new child props.  Note that we track the "child props from store update"
      // as a ref instead of a useState/useReducer because we need a way to determine if that value has
      // been processed.  If this went into useState/useReducer, we couldn't clear out the value without
      // forcing another re-render, which we don't want.
      lastChildProps.current = newChildProps;
      childPropsFromStoreUpdate.current = newChildProps;
      renderIsScheduled.current = true; // If the child props _did_ change (or we caught an error), this wrapper component needs to re-render

      forceComponentUpdateDispatch({
        type: 'STORE_UPDATED',
        payload: {
          error: error
        }
      });
    }
  }; // Actually subscribe to the nearest connected ancestor (or store)


  subscription.onStateChange = checkForUpdates;
  subscription.trySubscribe(); // Pull data from the store after first render in case the store has
  // changed since we began.

  checkForUpdates();

  var unsubscribeWrapper = function unsubscribeWrapper() {
    didUnsubscribe = true;
    subscription.tryUnsubscribe();
    subscription.onStateChange = null;

    if (lastThrownError) {
      // It's possible that we caught an error due to a bad mapState function, but the
      // parent re-rendered without this component and we're about to unmount.
      // This shouldn't happen as long as we do top-down subscriptions correctly, but
      // if we ever do those wrong, this throw will surface the error in our tests.
      // In that case, throw the error from here so it doesn't get lost.
      throw lastThrownError;
    }
  };

  return unsubscribeWrapper;
}

var initStateUpdates = function initStateUpdates() {
  return [null, 0];
};

function connectAdvanced(
/*
  selectorFactory is a func that is responsible for returning the selector function used to
  compute new props from state, props, and dispatch. For example:
      export default connectAdvanced((dispatch, options) => (state, props) => ({
      thing: state.things[props.thingId],
      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
    }))(YourComponent)
    Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
    Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
  props. Do not use connectAdvanced directly without memoizing results between calls to your
  selector, otherwise the Connect component will re-render on every state or props change.
*/
selectorFactory, // options object:
_ref) {
  if (_ref === void 0) {
    _ref = {};
  }

  var _ref2 = _ref,
      _ref2$getDisplayName = _ref2.getDisplayName,
      getDisplayName = _ref2$getDisplayName === void 0 ? function (name) {
    return "ConnectAdvanced(" + name + ")";
  } : _ref2$getDisplayName,
      _ref2$methodName = _ref2.methodName,
      methodName = _ref2$methodName === void 0 ? 'connectAdvanced' : _ref2$methodName,
      _ref2$renderCountProp = _ref2.renderCountProp,
      renderCountProp = _ref2$renderCountProp === void 0 ? undefined : _ref2$renderCountProp,
      _ref2$shouldHandleSta = _ref2.shouldHandleStateChanges,
      shouldHandleStateChanges = _ref2$shouldHandleSta === void 0 ? true : _ref2$shouldHandleSta,
      _ref2$storeKey = _ref2.storeKey,
      storeKey = _ref2$storeKey === void 0 ? 'store' : _ref2$storeKey,
      _ref2$withRef = _ref2.withRef,
      withRef = _ref2$withRef === void 0 ? false : _ref2$withRef,
      _ref2$forwardRef = _ref2.forwardRef,
      forwardRef = _ref2$forwardRef === void 0 ? false : _ref2$forwardRef,
      _ref2$context = _ref2.context,
      context = _ref2$context === void 0 ? _Context__WEBPACK_IMPORTED_MODULE_7__.ReactReduxContext : _ref2$context,
      connectOptions = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(_ref2, ["getDisplayName", "methodName", "renderCountProp", "shouldHandleStateChanges", "storeKey", "withRef", "forwardRef", "context"]);

  if (true) {
    if (renderCountProp !== undefined) {
      throw new Error("renderCountProp is removed. render counting is built into the latest React Dev Tools profiling extension");
    }

    if (withRef) {
      throw new Error('withRef is removed. To access the wrapped instance, use a ref on the connected component');
    }

    var customStoreWarningMessage = 'To use a custom Redux store for specific components, create a custom React context with ' + "React.createContext(), and pass the context object to React Redux's Provider and specific components" + ' like: <Provider context={MyContext}><ConnectedComponent context={MyContext} /></Provider>. ' + 'You may also pass a {context : MyContext} option to connect';

    if (storeKey !== 'store') {
      throw new Error('storeKey has been removed and does not do anything. ' + customStoreWarningMessage);
    }
  }

  var Context = context;
  return function wrapWithConnect(WrappedComponent) {
    if ( true && !(0,react_is__WEBPACK_IMPORTED_MODULE_4__.isValidElementType)(WrappedComponent)) {
      throw new Error("You must pass a component to the function returned by " + (methodName + ". Instead received " + stringifyComponent(WrappedComponent)));
    }

    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
    var displayName = getDisplayName(wrappedComponentName);

    var selectorFactoryOptions = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, connectOptions, {
      getDisplayName: getDisplayName,
      methodName: methodName,
      renderCountProp: renderCountProp,
      shouldHandleStateChanges: shouldHandleStateChanges,
      storeKey: storeKey,
      displayName: displayName,
      wrappedComponentName: wrappedComponentName,
      WrappedComponent: WrappedComponent
    });

    var pure = connectOptions.pure;

    function createChildSelector(store) {
      return selectorFactory(store.dispatch, selectorFactoryOptions);
    } // If we aren't running in "pure" mode, we don't want to memoize values.
    // To avoid conditionally calling hooks, we fall back to a tiny wrapper
    // that just executes the given callback immediately.


    var usePureOnlyMemo = pure ? react__WEBPACK_IMPORTED_MODULE_3__.useMemo : function (callback) {
      return callback();
    };

    function ConnectFunction(props) {
      var _useMemo = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(function () {
        // Distinguish between actual "data" props that were passed to the wrapper component,
        // and values needed to control behavior (forwarded refs, alternate context instances).
        // To maintain the wrapperProps object reference, memoize this destructuring.
        var reactReduxForwardedRef = props.reactReduxForwardedRef,
            wrapperProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(props, ["reactReduxForwardedRef"]);

        return [props.context, reactReduxForwardedRef, wrapperProps];
      }, [props]),
          propsContext = _useMemo[0],
          reactReduxForwardedRef = _useMemo[1],
          wrapperProps = _useMemo[2];

      var ContextToUse = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(function () {
        // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.
        // Memoize the check that determines which context instance we should use.
        return propsContext && propsContext.Consumer && (0,react_is__WEBPACK_IMPORTED_MODULE_4__.isContextConsumer)( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(propsContext.Consumer, null)) ? propsContext : Context;
      }, [propsContext, Context]); // Retrieve the store and ancestor subscription via context, if available

      var contextValue = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(ContextToUse); // The store _must_ exist as either a prop or in context.
      // We'll check to see if it _looks_ like a Redux store first.
      // This allows us to pass through a `store` prop that is just a plain value.

      var didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);
      var didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);

      if ( true && !didStoreComeFromProps && !didStoreComeFromContext) {
        throw new Error("Could not find \"store\" in the context of " + ("\"" + displayName + "\". Either wrap the root component in a <Provider>, ") + "or pass a custom React context provider to <Provider> and the corresponding " + ("React context consumer to " + displayName + " in connect options."));
      } // Based on the previous check, one of these must be true


      var store = didStoreComeFromProps ? props.store : contextValue.store;
      var childPropsSelector = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(function () {
        // The child props selector needs the store reference as an input.
        // Re-create this selector whenever the store changes.
        return createChildSelector(store);
      }, [store]);

      var _useMemo2 = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(function () {
        if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY; // This Subscription's source should match where store came from: props vs. context. A component
        // connected to the store via props shouldn't use subscription from context, or vice versa.

        var subscription = new _utils_Subscription__WEBPACK_IMPORTED_MODULE_5__.default(store, didStoreComeFromProps ? null : contextValue.subscription); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in
        // the middle of the notification loop, where `subscription` will then be null. This can
        // probably be avoided if Subscription's listeners logic is changed to not call listeners
        // that have been unsubscribed in the  middle of the notification loop.

        var notifyNestedSubs = subscription.notifyNestedSubs.bind(subscription);
        return [subscription, notifyNestedSubs];
      }, [store, didStoreComeFromProps, contextValue]),
          subscription = _useMemo2[0],
          notifyNestedSubs = _useMemo2[1]; // Determine what {store, subscription} value should be put into nested context, if necessary,
      // and memoize that value to avoid unnecessary context updates.


      var overriddenContextValue = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(function () {
        if (didStoreComeFromProps) {
          // This component is directly subscribed to a store from props.
          // We don't want descendants reading from this store - pass down whatever
          // the existing context value is from the nearest connected ancestor.
          return contextValue;
        } // Otherwise, put this component's subscription instance into context, so that
        // connected descendants won't update until after this component is done


        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, contextValue, {
          subscription: subscription
        });
      }, [didStoreComeFromProps, contextValue, subscription]); // We need to force this wrapper component to re-render whenever a Redux store update
      // causes a change to the calculated child component props (or we caught an error in mapState)

      var _useReducer = (0,react__WEBPACK_IMPORTED_MODULE_3__.useReducer)(storeStateUpdatesReducer, EMPTY_ARRAY, initStateUpdates),
          _useReducer$ = _useReducer[0],
          previousStateUpdateResult = _useReducer$[0],
          forceComponentUpdateDispatch = _useReducer[1]; // Propagate any mapState/mapDispatch errors upwards


      if (previousStateUpdateResult && previousStateUpdateResult.error) {
        throw previousStateUpdateResult.error;
      } // Set up refs to coordinate values between the subscription effect and the render logic


      var lastChildProps = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)();
      var lastWrapperProps = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(wrapperProps);
      var childPropsFromStoreUpdate = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)();
      var renderIsScheduled = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(false);
      var actualChildProps = usePureOnlyMemo(function () {
        // Tricky logic here:
        // - This render may have been triggered by a Redux store update that produced new child props
        // - However, we may have gotten new wrapper props after that
        // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.
        // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.
        // So, we'll use the child props from store update only if the wrapper props are the same as last time.
        if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {
          return childPropsFromStoreUpdate.current;
        } // TODO We're reading the store directly in render() here. Bad idea?
        // This will likely cause Bad Things (TM) to happen in Concurrent Mode.
        // Note that we do this because on renders _not_ caused by store updates, we need the latest store state
        // to determine what the child props should be.


        return childPropsSelector(store.getState(), wrapperProps);
      }, [store, previousStateUpdateResult, wrapperProps]); // We need this to execute synchronously every time we re-render. However, React warns
      // about useLayoutEffect in SSR, so we try to detect environment and fall back to
      // just useEffect instead to avoid the warning, since neither will run anyway.

      useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, actualChildProps, childPropsFromStoreUpdate, notifyNestedSubs]); // Our re-subscribe logic only runs when the store/subscription setup changes

      useIsomorphicLayoutEffectWithArgs(subscribeUpdates, [shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, childPropsFromStoreUpdate, notifyNestedSubs, forceComponentUpdateDispatch], [store, subscription, childPropsSelector]); // Now that all that's done, we can finally try to actually render the child component.
      // We memoize the elements for the rendered child component as an optimization.

      var renderedWrappedComponent = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(function () {
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(WrappedComponent, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, actualChildProps, {
          ref: reactReduxForwardedRef
        }));
      }, [reactReduxForwardedRef, WrappedComponent, actualChildProps]); // If React sees the exact same element reference as last time, it bails out of re-rendering
      // that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.

      var renderedChild = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(function () {
        if (shouldHandleStateChanges) {
          // If this component is subscribed to store updates, we need to pass its own
          // subscription instance down to our descendants. That means rendering the same
          // Context instance, and putting a different value into the context.
          return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(ContextToUse.Provider, {
            value: overriddenContextValue
          }, renderedWrappedComponent);
        }

        return renderedWrappedComponent;
      }, [ContextToUse, renderedWrappedComponent, overriddenContextValue]);
      return renderedChild;
    } // If we're in "pure" mode, ensure our wrapper component only re-renders when incoming props have changed.


    var Connect = pure ? react__WEBPACK_IMPORTED_MODULE_3___default().memo(ConnectFunction) : ConnectFunction;
    Connect.WrappedComponent = WrappedComponent;
    Connect.displayName = ConnectFunction.displayName = displayName;

    if (forwardRef) {
      var forwarded = react__WEBPACK_IMPORTED_MODULE_3___default().forwardRef(function forwardConnectRef(props, ref) {
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(Connect, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, props, {
          reactReduxForwardedRef: ref
        }));
      });
      forwarded.displayName = displayName;
      forwarded.WrappedComponent = WrappedComponent;
      return hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2___default()(forwarded, WrappedComponent);
    }

    return hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2___default()(Connect, WrappedComponent);
  };
}

/***/ }),

/***/ "./node_modules/react-redux/es/connect/connect.js":
/*!********************************************************!*\
  !*** ./node_modules/react-redux/es/connect/connect.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createConnect": function() { return /* binding */ createConnect; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _components_connectAdvanced__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/connectAdvanced */ "./node_modules/react-redux/es/components/connectAdvanced.js");
/* harmony import */ var _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/shallowEqual */ "./node_modules/react-redux/es/utils/shallowEqual.js");
/* harmony import */ var _mapDispatchToProps__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mapDispatchToProps */ "./node_modules/react-redux/es/connect/mapDispatchToProps.js");
/* harmony import */ var _mapStateToProps__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mapStateToProps */ "./node_modules/react-redux/es/connect/mapStateToProps.js");
/* harmony import */ var _mergeProps__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./mergeProps */ "./node_modules/react-redux/es/connect/mergeProps.js");
/* harmony import */ var _selectorFactory__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./selectorFactory */ "./node_modules/react-redux/es/connect/selectorFactory.js");








/*
  connect is a facade over connectAdvanced. It turns its args into a compatible
  selectorFactory, which has the signature:

    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
  
  connect passes its args to connectAdvanced as options, which will in turn pass them to
  selectorFactory each time a Connect component instance is instantiated or hot reloaded.

  selectorFactory returns a final props selector from its mapStateToProps,
  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
  mergePropsFactories, and pure args.

  The resulting final props selector is called by the Connect component instance whenever
  it receives new props or store state.
 */

function match(arg, factories, name) {
  for (var i = factories.length - 1; i >= 0; i--) {
    var result = factories[i](arg);
    if (result) return result;
  }

  return function (dispatch, options) {
    throw new Error("Invalid value of type " + typeof arg + " for " + name + " argument when connecting component " + options.wrappedComponentName + ".");
  };
}

function strictEqual(a, b) {
  return a === b;
} // createConnect with default args builds the 'official' connect behavior. Calling it with
// different options opens up some testing and extensibility scenarios


function createConnect(_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$connectHOC = _ref.connectHOC,
      connectHOC = _ref$connectHOC === void 0 ? _components_connectAdvanced__WEBPACK_IMPORTED_MODULE_2__.default : _ref$connectHOC,
      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
      mapStateToPropsFactories = _ref$mapStateToPropsF === void 0 ? _mapStateToProps__WEBPACK_IMPORTED_MODULE_5__.default : _ref$mapStateToPropsF,
      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
      mapDispatchToPropsFactories = _ref$mapDispatchToPro === void 0 ? _mapDispatchToProps__WEBPACK_IMPORTED_MODULE_4__.default : _ref$mapDispatchToPro,
      _ref$mergePropsFactor = _ref.mergePropsFactories,
      mergePropsFactories = _ref$mergePropsFactor === void 0 ? _mergeProps__WEBPACK_IMPORTED_MODULE_6__.default : _ref$mergePropsFactor,
      _ref$selectorFactory = _ref.selectorFactory,
      selectorFactory = _ref$selectorFactory === void 0 ? _selectorFactory__WEBPACK_IMPORTED_MODULE_7__.default : _ref$selectorFactory;

  return function connect(mapStateToProps, mapDispatchToProps, mergeProps, _ref2) {
    if (_ref2 === void 0) {
      _ref2 = {};
    }

    var _ref3 = _ref2,
        _ref3$pure = _ref3.pure,
        pure = _ref3$pure === void 0 ? true : _ref3$pure,
        _ref3$areStatesEqual = _ref3.areStatesEqual,
        areStatesEqual = _ref3$areStatesEqual === void 0 ? strictEqual : _ref3$areStatesEqual,
        _ref3$areOwnPropsEqua = _ref3.areOwnPropsEqual,
        areOwnPropsEqual = _ref3$areOwnPropsEqua === void 0 ? _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_3__.default : _ref3$areOwnPropsEqua,
        _ref3$areStatePropsEq = _ref3.areStatePropsEqual,
        areStatePropsEqual = _ref3$areStatePropsEq === void 0 ? _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_3__.default : _ref3$areStatePropsEq,
        _ref3$areMergedPropsE = _ref3.areMergedPropsEqual,
        areMergedPropsEqual = _ref3$areMergedPropsE === void 0 ? _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_3__.default : _ref3$areMergedPropsE,
        extraOptions = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(_ref3, ["pure", "areStatesEqual", "areOwnPropsEqual", "areStatePropsEqual", "areMergedPropsEqual"]);

    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');
    return connectHOC(selectorFactory, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({
      // used in error messages
      methodName: 'connect',
      // used to compute Connect's displayName from the wrapped component's displayName.
      getDisplayName: function getDisplayName(name) {
        return "Connect(" + name + ")";
      },
      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
      shouldHandleStateChanges: Boolean(mapStateToProps),
      // passed through to selectorFactory
      initMapStateToProps: initMapStateToProps,
      initMapDispatchToProps: initMapDispatchToProps,
      initMergeProps: initMergeProps,
      pure: pure,
      areStatesEqual: areStatesEqual,
      areOwnPropsEqual: areOwnPropsEqual,
      areStatePropsEqual: areStatePropsEqual,
      areMergedPropsEqual: areMergedPropsEqual
    }, extraOptions));
  };
}
/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/createConnect());

/***/ }),

/***/ "./node_modules/react-redux/es/connect/mapDispatchToProps.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/mapDispatchToProps.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "whenMapDispatchToPropsIsFunction": function() { return /* binding */ whenMapDispatchToPropsIsFunction; },
/* harmony export */   "whenMapDispatchToPropsIsMissing": function() { return /* binding */ whenMapDispatchToPropsIsMissing; },
/* harmony export */   "whenMapDispatchToPropsIsObject": function() { return /* binding */ whenMapDispatchToPropsIsObject; }
/* harmony export */ });
/* harmony import */ var _utils_bindActionCreators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/bindActionCreators */ "./node_modules/react-redux/es/utils/bindActionCreators.js");
/* harmony import */ var _wrapMapToProps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wrapMapToProps */ "./node_modules/react-redux/es/connect/wrapMapToProps.js");


function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
  return typeof mapDispatchToProps === 'function' ? (0,_wrapMapToProps__WEBPACK_IMPORTED_MODULE_1__.wrapMapToPropsFunc)(mapDispatchToProps, 'mapDispatchToProps') : undefined;
}
function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
  return !mapDispatchToProps ? (0,_wrapMapToProps__WEBPACK_IMPORTED_MODULE_1__.wrapMapToPropsConstant)(function (dispatch) {
    return {
      dispatch: dispatch
    };
  }) : undefined;
}
function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? (0,_wrapMapToProps__WEBPACK_IMPORTED_MODULE_1__.wrapMapToPropsConstant)(function (dispatch) {
    return (0,_utils_bindActionCreators__WEBPACK_IMPORTED_MODULE_0__.default)(mapDispatchToProps, dispatch);
  }) : undefined;
}
/* harmony default export */ __webpack_exports__["default"] = ([whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject]);

/***/ }),

/***/ "./node_modules/react-redux/es/connect/mapStateToProps.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/mapStateToProps.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "whenMapStateToPropsIsFunction": function() { return /* binding */ whenMapStateToPropsIsFunction; },
/* harmony export */   "whenMapStateToPropsIsMissing": function() { return /* binding */ whenMapStateToPropsIsMissing; }
/* harmony export */ });
/* harmony import */ var _wrapMapToProps__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wrapMapToProps */ "./node_modules/react-redux/es/connect/wrapMapToProps.js");

function whenMapStateToPropsIsFunction(mapStateToProps) {
  return typeof mapStateToProps === 'function' ? (0,_wrapMapToProps__WEBPACK_IMPORTED_MODULE_0__.wrapMapToPropsFunc)(mapStateToProps, 'mapStateToProps') : undefined;
}
function whenMapStateToPropsIsMissing(mapStateToProps) {
  return !mapStateToProps ? (0,_wrapMapToProps__WEBPACK_IMPORTED_MODULE_0__.wrapMapToPropsConstant)(function () {
    return {};
  }) : undefined;
}
/* harmony default export */ __webpack_exports__["default"] = ([whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing]);

/***/ }),

/***/ "./node_modules/react-redux/es/connect/mergeProps.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-redux/es/connect/mergeProps.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "defaultMergeProps": function() { return /* binding */ defaultMergeProps; },
/* harmony export */   "wrapMergePropsFunc": function() { return /* binding */ wrapMergePropsFunc; },
/* harmony export */   "whenMergePropsIsFunction": function() { return /* binding */ whenMergePropsIsFunction; },
/* harmony export */   "whenMergePropsIsOmitted": function() { return /* binding */ whenMergePropsIsOmitted; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _utils_verifyPlainObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/verifyPlainObject */ "./node_modules/react-redux/es/utils/verifyPlainObject.js");


function defaultMergeProps(stateProps, dispatchProps, ownProps) {
  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, ownProps, stateProps, dispatchProps);
}
function wrapMergePropsFunc(mergeProps) {
  return function initMergePropsProxy(dispatch, _ref) {
    var displayName = _ref.displayName,
        pure = _ref.pure,
        areMergedPropsEqual = _ref.areMergedPropsEqual;
    var hasRunOnce = false;
    var mergedProps;
    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);

      if (hasRunOnce) {
        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
      } else {
        hasRunOnce = true;
        mergedProps = nextMergedProps;
        if (true) (0,_utils_verifyPlainObject__WEBPACK_IMPORTED_MODULE_1__.default)(mergedProps, displayName, 'mergeProps');
      }

      return mergedProps;
    };
  };
}
function whenMergePropsIsFunction(mergeProps) {
  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
}
function whenMergePropsIsOmitted(mergeProps) {
  return !mergeProps ? function () {
    return defaultMergeProps;
  } : undefined;
}
/* harmony default export */ __webpack_exports__["default"] = ([whenMergePropsIsFunction, whenMergePropsIsOmitted]);

/***/ }),

/***/ "./node_modules/react-redux/es/connect/selectorFactory.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/selectorFactory.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "impureFinalPropsSelectorFactory": function() { return /* binding */ impureFinalPropsSelectorFactory; },
/* harmony export */   "pureFinalPropsSelectorFactory": function() { return /* binding */ pureFinalPropsSelectorFactory; },
/* harmony export */   "default": function() { return /* binding */ finalPropsSelectorFactory; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _verifySubselectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./verifySubselectors */ "./node_modules/react-redux/es/connect/verifySubselectors.js");


function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
  return function impureFinalPropsSelector(state, ownProps) {
    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
  };
}
function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
  var areStatesEqual = _ref.areStatesEqual,
      areOwnPropsEqual = _ref.areOwnPropsEqual,
      areStatePropsEqual = _ref.areStatePropsEqual;
  var hasRunAtLeastOnce = false;
  var state;
  var ownProps;
  var stateProps;
  var dispatchProps;
  var mergedProps;

  function handleFirstCall(firstState, firstOwnProps) {
    state = firstState;
    ownProps = firstOwnProps;
    stateProps = mapStateToProps(state, ownProps);
    dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    hasRunAtLeastOnce = true;
    return mergedProps;
  }

  function handleNewPropsAndNewState() {
    stateProps = mapStateToProps(state, ownProps);
    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewProps() {
    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);
    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewState() {
    var nextStateProps = mapStateToProps(state, ownProps);
    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
    stateProps = nextStateProps;
    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleSubsequentCalls(nextState, nextOwnProps) {
    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
    var stateChanged = !areStatesEqual(nextState, state);
    state = nextState;
    ownProps = nextOwnProps;
    if (propsChanged && stateChanged) return handleNewPropsAndNewState();
    if (propsChanged) return handleNewProps();
    if (stateChanged) return handleNewState();
    return mergedProps;
  }

  return function pureFinalPropsSelector(nextState, nextOwnProps) {
    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
  };
} // TODO: Add more comments
// If pure is true, the selector returned by selectorFactory will memoize its results,
// allowing connectAdvanced's shouldComponentUpdate to return false if final
// props have not changed. If false, the selector will always return a new
// object and shouldComponentUpdate will always return true.

function finalPropsSelectorFactory(dispatch, _ref2) {
  var initMapStateToProps = _ref2.initMapStateToProps,
      initMapDispatchToProps = _ref2.initMapDispatchToProps,
      initMergeProps = _ref2.initMergeProps,
      options = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_ref2, ["initMapStateToProps", "initMapDispatchToProps", "initMergeProps"]);

  var mapStateToProps = initMapStateToProps(dispatch, options);
  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
  var mergeProps = initMergeProps(dispatch, options);

  if (true) {
    (0,_verifySubselectors__WEBPACK_IMPORTED_MODULE_1__.default)(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
  }

  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;
  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
}

/***/ }),

/***/ "./node_modules/react-redux/es/connect/verifySubselectors.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/verifySubselectors.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ verifySubselectors; }
/* harmony export */ });
/* harmony import */ var _utils_warning__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/warning */ "./node_modules/react-redux/es/utils/warning.js");


function verify(selector, methodName, displayName) {
  if (!selector) {
    throw new Error("Unexpected value for " + methodName + " in " + displayName + ".");
  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
    if (!Object.prototype.hasOwnProperty.call(selector, 'dependsOnOwnProps')) {
      (0,_utils_warning__WEBPACK_IMPORTED_MODULE_0__.default)("The selector for " + methodName + " of " + displayName + " did not specify a value for dependsOnOwnProps.");
    }
  }
}

function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
  verify(mapStateToProps, 'mapStateToProps', displayName);
  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
  verify(mergeProps, 'mergeProps', displayName);
}

/***/ }),

/***/ "./node_modules/react-redux/es/connect/wrapMapToProps.js":
/*!***************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/wrapMapToProps.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "wrapMapToPropsConstant": function() { return /* binding */ wrapMapToPropsConstant; },
/* harmony export */   "getDependsOnOwnProps": function() { return /* binding */ getDependsOnOwnProps; },
/* harmony export */   "wrapMapToPropsFunc": function() { return /* binding */ wrapMapToPropsFunc; }
/* harmony export */ });
/* harmony import */ var _utils_verifyPlainObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/verifyPlainObject */ "./node_modules/react-redux/es/utils/verifyPlainObject.js");

function wrapMapToPropsConstant(getConstant) {
  return function initConstantSelector(dispatch, options) {
    var constant = getConstant(dispatch, options);

    function constantSelector() {
      return constant;
    }

    constantSelector.dependsOnOwnProps = false;
    return constantSelector;
  };
} // dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
// whether mapToProps needs to be invoked when props have changed.
//
// A length of one signals that mapToProps does not depend on props from the parent component.
// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
// therefore not reporting its length accurately..

function getDependsOnOwnProps(mapToProps) {
  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
} // Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
// this function wraps mapToProps in a proxy function which does several things:
//
//  * Detects whether the mapToProps function being called depends on props, which
//    is used by selectorFactory to decide if it should reinvoke on props changes.
//
//  * On first call, handles mapToProps if returns another function, and treats that
//    new function as the true mapToProps for subsequent calls.
//
//  * On first call, verifies the first result is a plain object, in order to warn
//    the developer that their mapToProps function is not returning a valid result.
//

function wrapMapToPropsFunc(mapToProps, methodName) {
  return function initProxySelector(dispatch, _ref) {
    var displayName = _ref.displayName;

    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
    }; // allow detectFactoryAndVerify to get ownProps


    proxy.dependsOnOwnProps = true;

    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
      proxy.mapToProps = mapToProps;
      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
      var props = proxy(stateOrDispatch, ownProps);

      if (typeof props === 'function') {
        proxy.mapToProps = props;
        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
        props = proxy(stateOrDispatch, ownProps);
      }

      if (true) (0,_utils_verifyPlainObject__WEBPACK_IMPORTED_MODULE_0__.default)(props, displayName, methodName);
      return props;
    };

    return proxy;
  };
}

/***/ }),

/***/ "./node_modules/react-redux/es/hooks/useDispatch.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-redux/es/hooks/useDispatch.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createDispatchHook": function() { return /* binding */ createDispatchHook; },
/* harmony export */   "useDispatch": function() { return /* binding */ useDispatch; }
/* harmony export */ });
/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/Context */ "./node_modules/react-redux/es/components/Context.js");
/* harmony import */ var _useStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useStore */ "./node_modules/react-redux/es/hooks/useStore.js");


/**
 * Hook factory, which creates a `useDispatch` hook bound to a given context.
 *
 * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useDispatch` hook bound to the specified context.
 */

function createDispatchHook(context) {
  if (context === void 0) {
    context = _components_Context__WEBPACK_IMPORTED_MODULE_0__.ReactReduxContext;
  }

  var useStore = context === _components_Context__WEBPACK_IMPORTED_MODULE_0__.ReactReduxContext ? _useStore__WEBPACK_IMPORTED_MODULE_1__.useStore : (0,_useStore__WEBPACK_IMPORTED_MODULE_1__.createStoreHook)(context);
  return function useDispatch() {
    var store = useStore();
    return store.dispatch;
  };
}
/**
 * A hook to access the redux `dispatch` function.
 *
 * @returns {any|function} redux store's `dispatch` function
 *
 * @example
 *
 * import React, { useCallback } from 'react'
 * import { useDispatch } from 'react-redux'
 *
 * export const CounterComponent = ({ value }) => {
 *   const dispatch = useDispatch()
 *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])
 *   return (
 *     <div>
 *       <span>{value}</span>
 *       <button onClick={increaseCounter}>Increase counter</button>
 *     </div>
 *   )
 * }
 */

var useDispatch = /*#__PURE__*/createDispatchHook();

/***/ }),

/***/ "./node_modules/react-redux/es/hooks/useReduxContext.js":
/*!**************************************************************!*\
  !*** ./node_modules/react-redux/es/hooks/useReduxContext.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useReduxContext": function() { return /* binding */ useReduxContext; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/Context */ "./node_modules/react-redux/es/components/Context.js");


/**
 * A hook to access the value of the `ReactReduxContext`. This is a low-level
 * hook that you should usually not need to call directly.
 *
 * @returns {any} the value of the `ReactReduxContext`
 *
 * @example
 *
 * import React from 'react'
 * import { useReduxContext } from 'react-redux'
 *
 * export const CounterComponent = ({ value }) => {
 *   const { store } = useReduxContext()
 *   return <div>{store.getState()}</div>
 * }
 */

function useReduxContext() {
  var contextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_components_Context__WEBPACK_IMPORTED_MODULE_1__.ReactReduxContext);

  if ( true && !contextValue) {
    throw new Error('could not find react-redux context value; please ensure the component is wrapped in a <Provider>');
  }

  return contextValue;
}

/***/ }),

/***/ "./node_modules/react-redux/es/hooks/useSelector.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-redux/es/hooks/useSelector.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createSelectorHook": function() { return /* binding */ createSelectorHook; },
/* harmony export */   "useSelector": function() { return /* binding */ useSelector; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _useReduxContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useReduxContext */ "./node_modules/react-redux/es/hooks/useReduxContext.js");
/* harmony import */ var _utils_Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Subscription */ "./node_modules/react-redux/es/utils/Subscription.js");
/* harmony import */ var _utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/useIsomorphicLayoutEffect */ "./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js");
/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/Context */ "./node_modules/react-redux/es/components/Context.js");






var refEquality = function refEquality(a, b) {
  return a === b;
};

function useSelectorWithStoreAndSubscription(selector, equalityFn, store, contextSub) {
  var _useReducer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(function (s) {
    return s + 1;
  }, 0),
      forceRender = _useReducer[1];

  var subscription = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {
    return new _utils_Subscription__WEBPACK_IMPORTED_MODULE_2__.default(store, contextSub);
  }, [store, contextSub]);
  var latestSubscriptionCallbackError = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();
  var latestSelector = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();
  var latestStoreState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();
  var latestSelectedState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();
  var storeState = store.getState();
  var selectedState;

  try {
    if (selector !== latestSelector.current || storeState !== latestStoreState.current || latestSubscriptionCallbackError.current) {
      var newSelectedState = selector(storeState); // ensure latest selected state is reused so that a custom equality function can result in identical references

      if (latestSelectedState.current === undefined || !equalityFn(newSelectedState, latestSelectedState.current)) {
        selectedState = newSelectedState;
      } else {
        selectedState = latestSelectedState.current;
      }
    } else {
      selectedState = latestSelectedState.current;
    }
  } catch (err) {
    if (latestSubscriptionCallbackError.current) {
      err.message += "\nThe error may be correlated with this previous error:\n" + latestSubscriptionCallbackError.current.stack + "\n\n";
    }

    throw err;
  }

  (0,_utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect)(function () {
    latestSelector.current = selector;
    latestStoreState.current = storeState;
    latestSelectedState.current = selectedState;
    latestSubscriptionCallbackError.current = undefined;
  });
  (0,_utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect)(function () {
    function checkForUpdates() {
      try {
        var newStoreState = store.getState();

        var _newSelectedState = latestSelector.current(newStoreState);

        if (equalityFn(_newSelectedState, latestSelectedState.current)) {
          return;
        }

        latestSelectedState.current = _newSelectedState;
        latestStoreState.current = newStoreState;
      } catch (err) {
        // we ignore all errors here, since when the component
        // is re-rendered, the selectors are called again, and
        // will throw again, if neither props nor store state
        // changed
        latestSubscriptionCallbackError.current = err;
      }

      forceRender();
    }

    subscription.onStateChange = checkForUpdates;
    subscription.trySubscribe();
    checkForUpdates();
    return function () {
      return subscription.tryUnsubscribe();
    };
  }, [store, subscription]);
  return selectedState;
}
/**
 * Hook factory, which creates a `useSelector` hook bound to a given context.
 *
 * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useSelector` hook bound to the specified context.
 */


function createSelectorHook(context) {
  if (context === void 0) {
    context = _components_Context__WEBPACK_IMPORTED_MODULE_4__.ReactReduxContext;
  }

  var useReduxContext = context === _components_Context__WEBPACK_IMPORTED_MODULE_4__.ReactReduxContext ? _useReduxContext__WEBPACK_IMPORTED_MODULE_1__.useReduxContext : function () {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(context);
  };
  return function useSelector(selector, equalityFn) {
    if (equalityFn === void 0) {
      equalityFn = refEquality;
    }

    if (true) {
      if (!selector) {
        throw new Error("You must pass a selector to useSelector");
      }

      if (typeof selector !== 'function') {
        throw new Error("You must pass a function as a selector to useSelector");
      }

      if (typeof equalityFn !== 'function') {
        throw new Error("You must pass a function as an equality function to useSelector");
      }
    }

    var _useReduxContext = useReduxContext(),
        store = _useReduxContext.store,
        contextSub = _useReduxContext.subscription;

    var selectedState = useSelectorWithStoreAndSubscription(selector, equalityFn, store, contextSub);
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(selectedState);
    return selectedState;
  };
}
/**
 * A hook to access the redux store's state. This hook takes a selector function
 * as an argument. The selector is called with the store state.
 *
 * This hook takes an optional equality comparison function as the second parameter
 * that allows you to customize the way the selected state is compared to determine
 * whether the component needs to be re-rendered.
 *
 * @param {Function} selector the selector function
 * @param {Function=} equalityFn the function that will be used to determine equality
 *
 * @returns {any} the selected state
 *
 * @example
 *
 * import React from 'react'
 * import { useSelector } from 'react-redux'
 *
 * export const CounterComponent = () => {
 *   const counter = useSelector(state => state.counter)
 *   return <div>{counter}</div>
 * }
 */

var useSelector = /*#__PURE__*/createSelectorHook();

/***/ }),

/***/ "./node_modules/react-redux/es/hooks/useStore.js":
/*!*******************************************************!*\
  !*** ./node_modules/react-redux/es/hooks/useStore.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createStoreHook": function() { return /* binding */ createStoreHook; },
/* harmony export */   "useStore": function() { return /* binding */ useStore; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/Context */ "./node_modules/react-redux/es/components/Context.js");
/* harmony import */ var _useReduxContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useReduxContext */ "./node_modules/react-redux/es/hooks/useReduxContext.js");



/**
 * Hook factory, which creates a `useStore` hook bound to a given context.
 *
 * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useStore` hook bound to the specified context.
 */

function createStoreHook(context) {
  if (context === void 0) {
    context = _components_Context__WEBPACK_IMPORTED_MODULE_1__.ReactReduxContext;
  }

  var useReduxContext = context === _components_Context__WEBPACK_IMPORTED_MODULE_1__.ReactReduxContext ? _useReduxContext__WEBPACK_IMPORTED_MODULE_2__.useReduxContext : function () {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(context);
  };
  return function useStore() {
    var _useReduxContext = useReduxContext(),
        store = _useReduxContext.store;

    return store;
  };
}
/**
 * A hook to access the redux store.
 *
 * @returns {any} the redux store
 *
 * @example
 *
 * import React from 'react'
 * import { useStore } from 'react-redux'
 *
 * export const ExampleComponent = () => {
 *   const store = useStore()
 *   return <div>{store.getState()}</div>
 * }
 */

var useStore = /*#__PURE__*/createStoreHook();

/***/ }),

/***/ "./node_modules/react-redux/es/index.js":
/*!**********************************************!*\
  !*** ./node_modules/react-redux/es/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Provider": function() { return /* reexport safe */ _components_Provider__WEBPACK_IMPORTED_MODULE_0__.default; },
/* harmony export */   "connectAdvanced": function() { return /* reexport safe */ _components_connectAdvanced__WEBPACK_IMPORTED_MODULE_1__.default; },
/* harmony export */   "ReactReduxContext": function() { return /* reexport safe */ _components_Context__WEBPACK_IMPORTED_MODULE_2__.ReactReduxContext; },
/* harmony export */   "connect": function() { return /* reexport safe */ _connect_connect__WEBPACK_IMPORTED_MODULE_3__.default; },
/* harmony export */   "batch": function() { return /* reexport safe */ _utils_reactBatchedUpdates__WEBPACK_IMPORTED_MODULE_8__.unstable_batchedUpdates; },
/* harmony export */   "useDispatch": function() { return /* reexport safe */ _hooks_useDispatch__WEBPACK_IMPORTED_MODULE_4__.useDispatch; },
/* harmony export */   "createDispatchHook": function() { return /* reexport safe */ _hooks_useDispatch__WEBPACK_IMPORTED_MODULE_4__.createDispatchHook; },
/* harmony export */   "useSelector": function() { return /* reexport safe */ _hooks_useSelector__WEBPACK_IMPORTED_MODULE_5__.useSelector; },
/* harmony export */   "createSelectorHook": function() { return /* reexport safe */ _hooks_useSelector__WEBPACK_IMPORTED_MODULE_5__.createSelectorHook; },
/* harmony export */   "useStore": function() { return /* reexport safe */ _hooks_useStore__WEBPACK_IMPORTED_MODULE_6__.useStore; },
/* harmony export */   "createStoreHook": function() { return /* reexport safe */ _hooks_useStore__WEBPACK_IMPORTED_MODULE_6__.createStoreHook; },
/* harmony export */   "shallowEqual": function() { return /* reexport safe */ _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_9__.default; }
/* harmony export */ });
/* harmony import */ var _components_Provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/Provider */ "./node_modules/react-redux/es/components/Provider.js");
/* harmony import */ var _components_connectAdvanced__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/connectAdvanced */ "./node_modules/react-redux/es/components/connectAdvanced.js");
/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/Context */ "./node_modules/react-redux/es/components/Context.js");
/* harmony import */ var _connect_connect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./connect/connect */ "./node_modules/react-redux/es/connect/connect.js");
/* harmony import */ var _hooks_useDispatch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hooks/useDispatch */ "./node_modules/react-redux/es/hooks/useDispatch.js");
/* harmony import */ var _hooks_useSelector__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hooks/useSelector */ "./node_modules/react-redux/es/hooks/useSelector.js");
/* harmony import */ var _hooks_useStore__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./hooks/useStore */ "./node_modules/react-redux/es/hooks/useStore.js");
/* harmony import */ var _utils_batch__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/batch */ "./node_modules/react-redux/es/utils/batch.js");
/* harmony import */ var _utils_reactBatchedUpdates__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/reactBatchedUpdates */ "./node_modules/react-redux/es/utils/reactBatchedUpdates.js");
/* harmony import */ var _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/shallowEqual */ "./node_modules/react-redux/es/utils/shallowEqual.js");










(0,_utils_batch__WEBPACK_IMPORTED_MODULE_7__.setBatch)(_utils_reactBatchedUpdates__WEBPACK_IMPORTED_MODULE_8__.unstable_batchedUpdates);


/***/ }),

/***/ "./node_modules/react-redux/es/utils/Subscription.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-redux/es/utils/Subscription.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ Subscription; }
/* harmony export */ });
/* harmony import */ var _batch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./batch */ "./node_modules/react-redux/es/utils/batch.js");
 // encapsulates the subscription logic for connecting a component to the redux store, as
// well as nesting subscriptions of descendant components, so that we can ensure the
// ancestor components re-render before descendants

var nullListeners = {
  notify: function notify() {}
};

function createListenerCollection() {
  var batch = (0,_batch__WEBPACK_IMPORTED_MODULE_0__.getBatch)();
  var first = null;
  var last = null;
  return {
    clear: function clear() {
      first = null;
      last = null;
    },
    notify: function notify() {
      batch(function () {
        var listener = first;

        while (listener) {
          listener.callback();
          listener = listener.next;
        }
      });
    },
    get: function get() {
      var listeners = [];
      var listener = first;

      while (listener) {
        listeners.push(listener);
        listener = listener.next;
      }

      return listeners;
    },
    subscribe: function subscribe(callback) {
      var isSubscribed = true;
      var listener = last = {
        callback: callback,
        next: null,
        prev: last
      };

      if (listener.prev) {
        listener.prev.next = listener;
      } else {
        first = listener;
      }

      return function unsubscribe() {
        if (!isSubscribed || first === null) return;
        isSubscribed = false;

        if (listener.next) {
          listener.next.prev = listener.prev;
        } else {
          last = listener.prev;
        }

        if (listener.prev) {
          listener.prev.next = listener.next;
        } else {
          first = listener.next;
        }
      };
    }
  };
}

var Subscription = /*#__PURE__*/function () {
  function Subscription(store, parentSub) {
    this.store = store;
    this.parentSub = parentSub;
    this.unsubscribe = null;
    this.listeners = nullListeners;
    this.handleChangeWrapper = this.handleChangeWrapper.bind(this);
  }

  var _proto = Subscription.prototype;

  _proto.addNestedSub = function addNestedSub(listener) {
    this.trySubscribe();
    return this.listeners.subscribe(listener);
  };

  _proto.notifyNestedSubs = function notifyNestedSubs() {
    this.listeners.notify();
  };

  _proto.handleChangeWrapper = function handleChangeWrapper() {
    if (this.onStateChange) {
      this.onStateChange();
    }
  };

  _proto.isSubscribed = function isSubscribed() {
    return Boolean(this.unsubscribe);
  };

  _proto.trySubscribe = function trySubscribe() {
    if (!this.unsubscribe) {
      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.handleChangeWrapper) : this.store.subscribe(this.handleChangeWrapper);
      this.listeners = createListenerCollection();
    }
  };

  _proto.tryUnsubscribe = function tryUnsubscribe() {
    if (this.unsubscribe) {
      this.unsubscribe();
      this.unsubscribe = null;
      this.listeners.clear();
      this.listeners = nullListeners;
    }
  };

  return Subscription;
}();



/***/ }),

/***/ "./node_modules/react-redux/es/utils/batch.js":
/*!****************************************************!*\
  !*** ./node_modules/react-redux/es/utils/batch.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setBatch": function() { return /* binding */ setBatch; },
/* harmony export */   "getBatch": function() { return /* binding */ getBatch; }
/* harmony export */ });
// Default to a dummy "batch" implementation that just runs the callback
function defaultNoopBatch(callback) {
  callback();
}

var batch = defaultNoopBatch; // Allow injecting another batching function later

var setBatch = function setBatch(newBatch) {
  return batch = newBatch;
}; // Supply a getter just to skip dealing with ESM bindings

var getBatch = function getBatch() {
  return batch;
};

/***/ }),

/***/ "./node_modules/react-redux/es/utils/bindActionCreators.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/bindActionCreators.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ bindActionCreators; }
/* harmony export */ });
function bindActionCreators(actionCreators, dispatch) {
  var boundActionCreators = {};

  var _loop = function _loop(key) {
    var actionCreator = actionCreators[key];

    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = function () {
        return dispatch(actionCreator.apply(void 0, arguments));
      };
    }
  };

  for (var key in actionCreators) {
    _loop(key);
  }

  return boundActionCreators;
}

/***/ }),

/***/ "./node_modules/react-redux/es/utils/isPlainObject.js":
/*!************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/isPlainObject.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ isPlainObject; }
/* harmony export */ });
/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */
function isPlainObject(obj) {
  if (typeof obj !== 'object' || obj === null) return false;
  var proto = Object.getPrototypeOf(obj);
  if (proto === null) return true;
  var baseProto = proto;

  while (Object.getPrototypeOf(baseProto) !== null) {
    baseProto = Object.getPrototypeOf(baseProto);
  }

  return proto === baseProto;
}

/***/ }),

/***/ "./node_modules/react-redux/es/utils/reactBatchedUpdates.js":
/*!******************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/reactBatchedUpdates.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "unstable_batchedUpdates": function() { return /* reexport safe */ react_dom__WEBPACK_IMPORTED_MODULE_0__.unstable_batchedUpdates; }
/* harmony export */ });
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_0__);
/* eslint-disable import/no-unresolved */


/***/ }),

/***/ "./node_modules/react-redux/es/utils/shallowEqual.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-redux/es/utils/shallowEqual.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ shallowEqual; }
/* harmony export */ });
function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual(objA, objB) {
  if (is(objA, objB)) return true;

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);
  if (keysA.length !== keysB.length) return false;

  for (var i = 0; i < keysA.length; i++) {
    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

/***/ }),

/***/ "./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js":
/*!************************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useIsomorphicLayoutEffect": function() { return /* binding */ useIsomorphicLayoutEffect; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
 // React currently throws a warning when using useLayoutEffect on the server.
// To get around it, we can conditionally useEffect on the server (no-op) and
// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store
// subscription callback always has the selector from the latest render commit
// available, otherwise a store update may happen between render and the effect,
// which may cause missed updates; we also must ensure the store subscription
// is created synchronously, otherwise a store update may occur before the
// subscription is created and an inconsistent state may be observed

var useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;

/***/ }),

/***/ "./node_modules/react-redux/es/utils/verifyPlainObject.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/verifyPlainObject.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ verifyPlainObject; }
/* harmony export */ });
/* harmony import */ var _isPlainObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isPlainObject */ "./node_modules/react-redux/es/utils/isPlainObject.js");
/* harmony import */ var _warning__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./warning */ "./node_modules/react-redux/es/utils/warning.js");


function verifyPlainObject(value, displayName, methodName) {
  if (!(0,_isPlainObject__WEBPACK_IMPORTED_MODULE_0__.default)(value)) {
    (0,_warning__WEBPACK_IMPORTED_MODULE_1__.default)(methodName + "() in " + displayName + " must return a plain object. Instead received " + value + ".");
  }
}

/***/ }),

/***/ "./node_modules/react-redux/es/utils/warning.js":
/*!******************************************************!*\
  !*** ./node_modules/react-redux/es/utils/warning.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ warning; }
/* harmony export */ });
/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function warning(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */


  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
    /* eslint-disable no-empty */
  } catch (e) {}
  /* eslint-enable no-empty */

}

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
/** @license React v17.0.2
 * react-jsx-dev-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (true) {
  (function() {
'use strict';

var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _assign = __webpack_require__(/*! object-assign */ "./node_modules/next/dist/build/polyfills/object-assign.js");

// ATTENTION
// When adding new symbols to this file,
// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var REACT_ELEMENT_TYPE = 0xeac7;
var REACT_PORTAL_TYPE = 0xeaca;
exports.Fragment = 0xeacb;
var REACT_STRICT_MODE_TYPE = 0xeacc;
var REACT_PROFILER_TYPE = 0xead2;
var REACT_PROVIDER_TYPE = 0xeacd;
var REACT_CONTEXT_TYPE = 0xeace;
var REACT_FORWARD_REF_TYPE = 0xead0;
var REACT_SUSPENSE_TYPE = 0xead1;
var REACT_SUSPENSE_LIST_TYPE = 0xead8;
var REACT_MEMO_TYPE = 0xead3;
var REACT_LAZY_TYPE = 0xead4;
var REACT_BLOCK_TYPE = 0xead9;
var REACT_SERVER_BLOCK_TYPE = 0xeada;
var REACT_FUNDAMENTAL_TYPE = 0xead5;
var REACT_SCOPE_TYPE = 0xead7;
var REACT_OPAQUE_ID_TYPE = 0xeae0;
var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
var REACT_OFFSCREEN_TYPE = 0xeae2;
var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;

if (typeof Symbol === 'function' && Symbol.for) {
  var symbolFor = Symbol.for;
  REACT_ELEMENT_TYPE = symbolFor('react.element');
  REACT_PORTAL_TYPE = symbolFor('react.portal');
  exports.Fragment = symbolFor('react.fragment');
  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');
  REACT_PROFILER_TYPE = symbolFor('react.profiler');
  REACT_PROVIDER_TYPE = symbolFor('react.provider');
  REACT_CONTEXT_TYPE = symbolFor('react.context');
  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');
  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
  REACT_MEMO_TYPE = symbolFor('react.memo');
  REACT_LAZY_TYPE = symbolFor('react.lazy');
  REACT_BLOCK_TYPE = symbolFor('react.block');
  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
  REACT_SCOPE_TYPE = symbolFor('react.scope');
  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');
  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
}

var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

function error(format) {
  {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }

    printWarning('error', format, args);
  }
}

function printWarning(level, format, args) {
  // When changing this logic, you might want to also
  // update consoleWithStackDev.www.js as well.
  {
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();

    if (stack !== '') {
      format += '%s';
      args = args.concat([stack]);
    }

    var argsWithFormat = args.map(function (item) {
      return '' + item;
    }); // Careful: RN currently depends on this prefix

    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
    // breaks IE9: https://github.com/facebook/react/issues/13610
    // eslint-disable-next-line react-internal/no-production-logging

    Function.prototype.apply.call(console[level], console, argsWithFormat);
  }
}

// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.

var enableScopeAPI = false; // Experimental Create Event Handle API.

function isValidElementType(type) {
  if (typeof type === 'string' || typeof type === 'function') {
    return true;
  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).


  if (type === exports.Fragment || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {
    return true;
  }

  if (typeof type === 'object' && type !== null) {
    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {
      return true;
    }
  }

  return false;
}

function getWrappedName(outerType, innerType, wrapperName) {
  var functionName = innerType.displayName || innerType.name || '';
  return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
}

function getContextName(type) {
  return type.displayName || 'Context';
}

function getComponentName(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case exports.Fragment:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return 'Profiler';

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        var context = type;
        return getContextName(context) + '.Consumer';

      case REACT_PROVIDER_TYPE:
        var provider = type;
        return getContextName(provider._context) + '.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_BLOCK_TYPE:
        return getComponentName(type._render);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            return getComponentName(init(payload));
          } catch (x) {
            return null;
          }
        }
    }
  }

  return null;
}

// Helpers to patch console.logs to avoid logging during side-effect free
// replaying on render function. This currently only patches the object
// lazily which won't cover if the log function was extracted eagerly.
// We could also eagerly patch the method.
var disabledDepth = 0;
var prevLog;
var prevInfo;
var prevWarn;
var prevError;
var prevGroup;
var prevGroupCollapsed;
var prevGroupEnd;

function disabledLog() {}

disabledLog.__reactDisabledLog = true;
function disableLogs() {
  {
    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      prevLog = console.log;
      prevInfo = console.info;
      prevWarn = console.warn;
      prevError = console.error;
      prevGroup = console.group;
      prevGroupCollapsed = console.groupCollapsed;
      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

      var props = {
        configurable: true,
        enumerable: true,
        value: disabledLog,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        info: props,
        log: props,
        warn: props,
        error: props,
        group: props,
        groupCollapsed: props,
        groupEnd: props
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    disabledDepth++;
  }
}
function reenableLogs() {
  {
    disabledDepth--;

    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      var props = {
        configurable: true,
        enumerable: true,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        log: _assign({}, props, {
          value: prevLog
        }),
        info: _assign({}, props, {
          value: prevInfo
        }),
        warn: _assign({}, props, {
          value: prevWarn
        }),
        error: _assign({}, props, {
          value: prevError
        }),
        group: _assign({}, props, {
          value: prevGroup
        }),
        groupCollapsed: _assign({}, props, {
          value: prevGroupCollapsed
        }),
        groupEnd: _assign({}, props, {
          value: prevGroupEnd
        })
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    if (disabledDepth < 0) {
      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
    }
  }
}

var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
var prefix;
function describeBuiltInComponentFrame(name, source, ownerFn) {
  {
    if (prefix === undefined) {
      // Extract the VM specific prefix used by each line.
      try {
        throw Error();
      } catch (x) {
        var match = x.stack.trim().match(/\n( *(at )?)/);
        prefix = match && match[1] || '';
      }
    } // We use the prefix to ensure our stacks line up with native stack frames.


    return '\n' + prefix + name;
  }
}
var reentry = false;
var componentFrameCache;

{
  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
  componentFrameCache = new PossiblyWeakMap();
}

function describeNativeComponentFrame(fn, construct) {
  // If something asked for a stack inside a fake render, it should get ignored.
  if (!fn || reentry) {
    return '';
  }

  {
    var frame = componentFrameCache.get(fn);

    if (frame !== undefined) {
      return frame;
    }
  }

  var control;
  reentry = true;
  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

  Error.prepareStackTrace = undefined;
  var previousDispatcher;

  {
    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
    // for warnings.

    ReactCurrentDispatcher.current = null;
    disableLogs();
  }

  try {
    // This should throw.
    if (construct) {
      // Something should be setting the props in the constructor.
      var Fake = function () {
        throw Error();
      }; // $FlowFixMe


      Object.defineProperty(Fake.prototype, 'props', {
        set: function () {
          // We use a throwing setter instead of frozen or non-writable props
          // because that won't throw in a non-strict mode function.
          throw Error();
        }
      });

      if (typeof Reflect === 'object' && Reflect.construct) {
        // We construct a different control for this case to include any extra
        // frames added by the construct call.
        try {
          Reflect.construct(Fake, []);
        } catch (x) {
          control = x;
        }

        Reflect.construct(fn, [], Fake);
      } else {
        try {
          Fake.call();
        } catch (x) {
          control = x;
        }

        fn.call(Fake.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (x) {
        control = x;
      }

      fn();
    }
  } catch (sample) {
    // This is inlined manually because closure doesn't do it for us.
    if (sample && control && typeof sample.stack === 'string') {
      // This extracts the first frame from the sample that isn't also in the control.
      // Skipping one frame that we assume is the frame that calls the two.
      var sampleLines = sample.stack.split('\n');
      var controlLines = control.stack.split('\n');
      var s = sampleLines.length - 1;
      var c = controlLines.length - 1;

      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
        // We expect at least one stack frame to be shared.
        // Typically this will be the root most one. However, stack frames may be
        // cut off due to maximum stack limits. In this case, one maybe cut off
        // earlier than the other. We assume that the sample is longer or the same
        // and there for cut off earlier. So we should find the root most frame in
        // the sample somewhere in the control.
        c--;
      }

      for (; s >= 1 && c >= 0; s--, c--) {
        // Next we find the first one that isn't the same which should be the
        // frame that called our sample function and the control.
        if (sampleLines[s] !== controlLines[c]) {
          // In V8, the first line is describing the message but other VMs don't.
          // If we're about to return the first line, and the control is also on the same
          // line, that's a pretty good indicator that our sample threw at same line as
          // the control. I.e. before we entered the sample frame. So we ignore this result.
          // This can happen if you passed a class to function component, or non-function.
          if (s !== 1 || c !== 1) {
            do {
              s--;
              c--; // We may still have similar intermediate frames from the construct call.
              // The next one that isn't the same should be our match though.

              if (c < 0 || sampleLines[s] !== controlLines[c]) {
                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at ');

                {
                  if (typeof fn === 'function') {
                    componentFrameCache.set(fn, _frame);
                  }
                } // Return the line we found.


                return _frame;
              }
            } while (s >= 1 && c >= 0);
          }

          break;
        }
      }
    }
  } finally {
    reentry = false;

    {
      ReactCurrentDispatcher.current = previousDispatcher;
      reenableLogs();
    }

    Error.prepareStackTrace = previousPrepareStackTrace;
  } // Fallback to just using the name if we couldn't make it throw.


  var name = fn ? fn.displayName || fn.name : '';
  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';

  {
    if (typeof fn === 'function') {
      componentFrameCache.set(fn, syntheticFrame);
    }
  }

  return syntheticFrame;
}
function describeFunctionComponentFrame(fn, source, ownerFn) {
  {
    return describeNativeComponentFrame(fn, false);
  }
}

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {

  if (type == null) {
    return '';
  }

  if (typeof type === 'function') {
    {
      return describeNativeComponentFrame(type, shouldConstruct(type));
    }
  }

  if (typeof type === 'string') {
    return describeBuiltInComponentFrame(type);
  }

  switch (type) {
    case REACT_SUSPENSE_TYPE:
      return describeBuiltInComponentFrame('Suspense');

    case REACT_SUSPENSE_LIST_TYPE:
      return describeBuiltInComponentFrame('SuspenseList');
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        return describeFunctionComponentFrame(type.render);

      case REACT_MEMO_TYPE:
        // Memo may contain any component type so we recursively resolve it.
        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

      case REACT_BLOCK_TYPE:
        return describeFunctionComponentFrame(type._render);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            // Lazy may contain any component type so we recursively resolve it.
            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
          } catch (x) {}
        }
    }
  }

  return '';
}

var loggedTypeFailures = {};
var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame.setExtraStackFrame(null);
    }
  }
}

function checkPropTypes(typeSpecs, values, location, componentName, element) {
  {
    // $FlowFixMe This is okay but Flow doesn't know it.
    var has = Function.call.bind(Object.prototype.hasOwnProperty);

    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.

        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
        } catch (ex) {
          error$1 = ex;
        }

        if (error$1 && !(error$1 instanceof Error)) {
          setCurrentlyValidatingElement(element);

          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);

          setCurrentlyValidatingElement(null);
        }

        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error$1.message] = true;
          setCurrentlyValidatingElement(element);

          error('Failed %s type: %s', location, error$1.message);

          setCurrentlyValidatingElement(null);
        }
      }
    }
  }
}

var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};
var specialPropKeyWarningShown;
var specialPropRefWarningShown;
var didWarnAboutStringRefs;

{
  didWarnAboutStringRefs = {};
}

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.key !== undefined;
}

function warnIfStringRefCannotBeAutoConverted(config, self) {
  {
    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
      var componentName = getComponentName(ReactCurrentOwner.current.type);

      if (!didWarnAboutStringRefs[componentName]) {
        error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);

        didWarnAboutStringRefs[componentName] = true;
      }
    }
  }
}

function defineKeyPropWarningGetter(props, displayName) {
  {
    var warnAboutAccessingKey = function () {
      if (!specialPropKeyWarningShown) {
        specialPropKeyWarningShown = true;

        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    };

    warnAboutAccessingKey.isReactWarning = true;
    Object.defineProperty(props, 'key', {
      get: warnAboutAccessingKey,
      configurable: true
    });
  }
}

function defineRefPropWarningGetter(props, displayName) {
  {
    var warnAboutAccessingRef = function () {
      if (!specialPropRefWarningShown) {
        specialPropRefWarningShown = true;

        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    };

    warnAboutAccessingRef.isReactWarning = true;
    Object.defineProperty(props, 'ref', {
      get: warnAboutAccessingRef,
      configurable: true
    });
  }
}
/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */


var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,
    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,
    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.

    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    }); // self and source are DEV only properties.

    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    }); // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.

    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });

    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};
/**
 * https://github.com/reactjs/rfcs/pull/107
 * @param {*} type
 * @param {object} props
 * @param {string} key
 */

function jsxDEV(type, config, maybeKey, source, self) {
  {
    var propName; // Reserved names are extracted

    var props = {};
    var key = null;
    var ref = null; // Currently, key can be spread in as a prop. This causes a potential
    // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
    // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
    // but as an intermediary step, we will use jsxDEV for everything except
    // <div {...props} key="Hi" />, because we aren't currently able to tell if
    // key is explicitly declared to be undefined or not.

    if (maybeKey !== undefined) {
      key = '' + maybeKey;
    }

    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    if (hasValidRef(config)) {
      ref = config.ref;
      warnIfStringRefCannotBeAutoConverted(config, self);
    } // Remaining properties are added to a new props object


    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    } // Resolve default props


    if (type && type.defaultProps) {
      var defaultProps = type.defaultProps;

      for (propName in defaultProps) {
        if (props[propName] === undefined) {
          props[propName] = defaultProps[propName];
        }
      }
    }

    if (key || ref) {
      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

      if (key) {
        defineKeyPropWarningGetter(props, displayName);
      }

      if (ref) {
        defineRefPropWarningGetter(props, displayName);
      }
    }

    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
  }
}

var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement$1(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
  }
}

var propTypesMisspellWarningShown;

{
  propTypesMisspellWarningShown = false;
}
/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */

function isValidElement(object) {
  {
    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
  }
}

function getDeclarationErrorAddendum() {
  {
    if (ReactCurrentOwner$1.current) {
      var name = getComponentName(ReactCurrentOwner$1.current.type);

      if (name) {
        return '\n\nCheck the render method of `' + name + '`.';
      }
    }

    return '';
  }
}

function getSourceInfoErrorAddendum(source) {
  {
    if (source !== undefined) {
      var fileName = source.fileName.replace(/^.*[\\\/]/, '');
      var lineNumber = source.lineNumber;
      return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
    }

    return '';
  }
}
/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */


var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  {
    var info = getDeclarationErrorAddendum();

    if (!info) {
      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

      if (parentName) {
        info = "\n\nCheck the top-level render call using <" + parentName + ">.";
      }
    }

    return info;
  }
}
/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */


function validateExplicitKey(element, parentType) {
  {
    if (!element._store || element._store.validated || element.key != null) {
      return;
    }

    element._store.validated = true;
    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
      return;
    }

    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
    // property, it may be the creator of the child that's responsible for
    // assigning it a key.

    var childOwner = '';

    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
      // Give the component that originally created this child.
      childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
    }

    setCurrentlyValidatingElement$1(element);

    error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);

    setCurrentlyValidatingElement$1(null);
  }
}
/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */


function validateChildKeys(node, parentType) {
  {
    if (typeof node !== 'object') {
      return;
    }

    if (Array.isArray(node)) {
      for (var i = 0; i < node.length; i++) {
        var child = node[i];

        if (isValidElement(child)) {
          validateExplicitKey(child, parentType);
        }
      }
    } else if (isValidElement(node)) {
      // This element was passed in a valid location.
      if (node._store) {
        node._store.validated = true;
      }
    } else if (node) {
      var iteratorFn = getIteratorFn(node);

      if (typeof iteratorFn === 'function') {
        // Entry iterators used to provide implicit keys,
        // but now we print a separate warning for them later.
        if (iteratorFn !== node.entries) {
          var iterator = iteratorFn.call(node);
          var step;

          while (!(step = iterator.next()).done) {
            if (isValidElement(step.value)) {
              validateExplicitKey(step.value, parentType);
            }
          }
        }
      }
    }
  }
}
/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */


function validatePropTypes(element) {
  {
    var type = element.type;

    if (type === null || type === undefined || typeof type === 'string') {
      return;
    }

    var propTypes;

    if (typeof type === 'function') {
      propTypes = type.propTypes;
    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
    // Inner props are checked in the reconciler.
    type.$$typeof === REACT_MEMO_TYPE)) {
      propTypes = type.propTypes;
    } else {
      return;
    }

    if (propTypes) {
      // Intentionally inside to avoid triggering lazy initializers:
      var name = getComponentName(type);
      checkPropTypes(propTypes, element.props, 'prop', name, element);
    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:

      var _name = getComponentName(type);

      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
    }

    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
    }
  }
}
/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */


function validateFragmentProps(fragment) {
  {
    var keys = Object.keys(fragment.props);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];

      if (key !== 'children' && key !== 'key') {
        setCurrentlyValidatingElement$1(fragment);

        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);

        setCurrentlyValidatingElement$1(null);
        break;
      }
    }

    if (fragment.ref !== null) {
      setCurrentlyValidatingElement$1(fragment);

      error('Invalid attribute `ref` supplied to `React.Fragment`.');

      setCurrentlyValidatingElement$1(null);
    }
  }
}

function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
  {
    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.

    if (!validType) {
      var info = '';

      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
        info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
      }

      var sourceInfo = getSourceInfoErrorAddendum(source);

      if (sourceInfo) {
        info += sourceInfo;
      } else {
        info += getDeclarationErrorAddendum();
      }

      var typeString;

      if (type === null) {
        typeString = 'null';
      } else if (Array.isArray(type)) {
        typeString = 'array';
      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
        typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
        info = ' Did you accidentally export a JSX literal instead of a component?';
      } else {
        typeString = typeof type;
      }

      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
    }

    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.

    if (element == null) {
      return element;
    } // Skip key warning if the type isn't valid since our key validation logic
    // doesn't expect a non-string/function type and can throw confusing errors.
    // We don't want exception behavior to differ between dev and prod.
    // (Rendering will throw with a helpful message and as soon as the type is
    // fixed, the key warnings will appear.)


    if (validType) {
      var children = props.children;

      if (children !== undefined) {
        if (isStaticChildren) {
          if (Array.isArray(children)) {
            for (var i = 0; i < children.length; i++) {
              validateChildKeys(children[i], type);
            }

            if (Object.freeze) {
              Object.freeze(children);
            }
          } else {
            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');
          }
        } else {
          validateChildKeys(children, type);
        }
      }
    }

    if (type === exports.Fragment) {
      validateFragmentProps(element);
    } else {
      validatePropTypes(element);
    }

    return element;
  }
} // These two functions exist to still get child warnings in dev

var jsxDEV$1 =  jsxWithValidation ;

exports.jsxDEV = jsxDEV$1;
  })();
}


/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js");
}


/***/ }),

/***/ "./node_modules/redux-thunk/es/index.js":
/*!**********************************************!*\
  !*** ./node_modules/redux-thunk/es/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function createThunkMiddleware(extraArgument) {
  return function (_ref) {
    var dispatch = _ref.dispatch,
        getState = _ref.getState;
    return function (next) {
      return function (action) {
        if (typeof action === 'function') {
          return action(dispatch, getState, extraArgument);
        }

        return next(action);
      };
    };
  };
}

var thunk = createThunkMiddleware();
thunk.withExtraArgument = createThunkMiddleware;

/* harmony default export */ __webpack_exports__["default"] = (thunk);

/***/ }),

/***/ "./node_modules/redux/es/redux.js":
/*!****************************************!*\
  !*** ./node_modules/redux/es/redux.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__DO_NOT_USE__ActionTypes": function() { return /* binding */ ActionTypes; },
/* harmony export */   "applyMiddleware": function() { return /* binding */ applyMiddleware; },
/* harmony export */   "bindActionCreators": function() { return /* binding */ bindActionCreators; },
/* harmony export */   "combineReducers": function() { return /* binding */ combineReducers; },
/* harmony export */   "compose": function() { return /* binding */ compose; },
/* harmony export */   "createStore": function() { return /* binding */ createStore; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectSpread2 */ "./node_modules/@babel/runtime/helpers/esm/objectSpread2.js");


/**
 * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js
 *
 * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes
 * during build.
 * @param {number} code
 */
function formatProdErrorMessage(code) {
  return "Minified Redux error #" + code + "; visit https://redux.js.org/Errors?code=" + code + " for the full message or " + 'use the non-minified dev environment for full errors. ';
}

// Inlined version of the `symbol-observable` polyfill
var $$observable = (function () {
  return typeof Symbol === 'function' && Symbol.observable || '@@observable';
})();

/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */
var randomString = function randomString() {
  return Math.random().toString(36).substring(7).split('').join('.');
};

var ActionTypes = {
  INIT: "@@redux/INIT" + randomString(),
  REPLACE: "@@redux/REPLACE" + randomString(),
  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
  }
};

/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */
function isPlainObject(obj) {
  if (typeof obj !== 'object' || obj === null) return false;
  var proto = obj;

  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }

  return Object.getPrototypeOf(obj) === proto;
}

// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of
function miniKindOf(val) {
  if (val === void 0) return 'undefined';
  if (val === null) return 'null';
  var type = typeof val;

  switch (type) {
    case 'boolean':
    case 'string':
    case 'number':
    case 'symbol':
    case 'function':
      {
        return type;
      }
  }

  if (Array.isArray(val)) return 'array';
  if (isDate(val)) return 'date';
  if (isError(val)) return 'error';
  var constructorName = ctorName(val);

  switch (constructorName) {
    case 'Symbol':
    case 'Promise':
    case 'WeakMap':
    case 'WeakSet':
    case 'Map':
    case 'Set':
      return constructorName;
  } // other


  return type.slice(8, -1).toLowerCase().replace(/\s/g, '');
}

function ctorName(val) {
  return typeof val.constructor === 'function' ? val.constructor.name : null;
}

function isError(val) {
  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';
}

function isDate(val) {
  if (val instanceof Date) return true;
  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';
}

function kindOf(val) {
  var typeOfVal = typeof val;

  if (true) {
    typeOfVal = miniKindOf(val);
  }

  return typeOfVal;
}

/**
 * Creates a Redux store that holds the state tree.
 * The only way to change the data in the store is to call `dispatch()` on it.
 *
 * There should only be a single store in your app. To specify how different
 * parts of the state tree respond to actions, you may combine several reducers
 * into a single reducer function by using `combineReducers`.
 *
 * @param {Function} reducer A function that returns the next state tree, given
 * the current state tree and the action to handle.
 *
 * @param {any} [preloadedState] The initial state. You may optionally specify it
 * to hydrate the state from the server in universal apps, or to restore a
 * previously serialized user session.
 * If you use `combineReducers` to produce the root reducer function, this must be
 * an object with the same shape as `combineReducers` keys.
 *
 * @param {Function} [enhancer] The store enhancer. You may optionally specify it
 * to enhance the store with third-party capabilities such as middleware,
 * time travel, persistence, etc. The only store enhancer that ships with Redux
 * is `applyMiddleware()`.
 *
 * @returns {Store} A Redux store that lets you read the state, dispatch actions
 * and subscribe to changes.
 */

function createStore(reducer, preloadedState, enhancer) {
  var _ref2;

  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {
    throw new Error( false ? 0 : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');
  }

  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
    enhancer = preloadedState;
    preloadedState = undefined;
  }

  if (typeof enhancer !== 'undefined') {
    if (typeof enhancer !== 'function') {
      throw new Error( false ? 0 : "Expected the enhancer to be a function. Instead, received: '" + kindOf(enhancer) + "'");
    }

    return enhancer(createStore)(reducer, preloadedState);
  }

  if (typeof reducer !== 'function') {
    throw new Error( false ? 0 : "Expected the root reducer to be a function. Instead, received: '" + kindOf(reducer) + "'");
  }

  var currentReducer = reducer;
  var currentState = preloadedState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;
  /**
   * This makes a shallow copy of currentListeners so we can use
   * nextListeners as a temporary list while dispatching.
   *
   * This prevents any bugs around consumers calling
   * subscribe/unsubscribe in the middle of a dispatch.
   */

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }
  /**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */


  function getState() {
    if (isDispatching) {
      throw new Error( false ? 0 : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');
    }

    return currentState;
  }
  /**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */


  function subscribe(listener) {
    if (typeof listener !== 'function') {
      throw new Error( false ? 0 : "Expected the listener to be a function. Instead, received: '" + kindOf(listener) + "'");
    }

    if (isDispatching) {
      throw new Error( false ? 0 : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');
    }

    var isSubscribed = true;
    ensureCanMutateNextListeners();
    nextListeners.push(listener);
    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }

      if (isDispatching) {
        throw new Error( false ? 0 : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');
      }

      isSubscribed = false;
      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
      currentListeners = null;
    };
  }
  /**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */


  function dispatch(action) {
    if (!isPlainObject(action)) {
      throw new Error( false ? 0 : "Actions must be plain objects. Instead, the actual type was: '" + kindOf(action) + "'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.");
    }

    if (typeof action.type === 'undefined') {
      throw new Error( false ? 0 : 'Actions may not have an undefined "type" property. You may have misspelled an action type string constant.');
    }

    if (isDispatching) {
      throw new Error( false ? 0 : 'Reducers may not dispatch actions.');
    }

    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action);
    } finally {
      isDispatching = false;
    }

    var listeners = currentListeners = nextListeners;

    for (var i = 0; i < listeners.length; i++) {
      var listener = listeners[i];
      listener();
    }

    return action;
  }
  /**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */


  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== 'function') {
      throw new Error( false ? 0 : "Expected the nextReducer to be a function. Instead, received: '" + kindOf(nextReducer));
    }

    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.
    // Any reducers that existed in both the new and old rootReducer
    // will receive the previous state. This effectively populates
    // the new state tree with any relevant data from the old one.

    dispatch({
      type: ActionTypes.REPLACE
    });
  }
  /**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/tc39/proposal-observable
   */


  function observable() {
    var _ref;

    var outerSubscribe = subscribe;
    return _ref = {
      /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */
      subscribe: function subscribe(observer) {
        if (typeof observer !== 'object' || observer === null) {
          throw new Error( false ? 0 : "Expected the observer to be an object. Instead, received: '" + kindOf(observer) + "'");
        }

        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }

        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return {
          unsubscribe: unsubscribe
        };
      }
    }, _ref[$$observable] = function () {
      return this;
    }, _ref;
  } // When a store is created, an "INIT" action is dispatched so that every
  // reducer returns their initial state. This effectively populates
  // the initial state tree.


  dispatch({
    type: ActionTypes.INIT
  });
  return _ref2 = {
    dispatch: dispatch,
    subscribe: subscribe,
    getState: getState,
    replaceReducer: replaceReducer
  }, _ref2[$$observable] = observable, _ref2;
}

/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function warning(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */


  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
  } catch (e) {} // eslint-disable-line no-empty

}

function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
  var reducerKeys = Object.keys(reducers);
  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

  if (reducerKeys.length === 0) {
    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
  }

  if (!isPlainObject(inputState)) {
    return "The " + argumentName + " has unexpected type of \"" + kindOf(inputState) + "\". Expected argument to be an object with the following " + ("keys: \"" + reducerKeys.join('", "') + "\"");
  }

  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
  });
  unexpectedKeys.forEach(function (key) {
    unexpectedKeyCache[key] = true;
  });
  if (action && action.type === ActionTypes.REPLACE) return;

  if (unexpectedKeys.length > 0) {
    return "Unexpected " + (unexpectedKeys.length > 1 ? 'keys' : 'key') + " " + ("\"" + unexpectedKeys.join('", "') + "\" found in " + argumentName + ". ") + "Expected to find one of the known reducer keys instead: " + ("\"" + reducerKeys.join('", "') + "\". Unexpected keys will be ignored.");
  }
}

function assertReducerShape(reducers) {
  Object.keys(reducers).forEach(function (key) {
    var reducer = reducers[key];
    var initialState = reducer(undefined, {
      type: ActionTypes.INIT
    });

    if (typeof initialState === 'undefined') {
      throw new Error( false ? 0 : "The slice reducer for key \"" + key + "\" returned undefined during initialization. " + "If the state passed to the reducer is undefined, you must " + "explicitly return the initial state. The initial state may " + "not be undefined. If you don't want to set a value for this reducer, " + "you can use null instead of undefined.");
    }

    if (typeof reducer(undefined, {
      type: ActionTypes.PROBE_UNKNOWN_ACTION()
    }) === 'undefined') {
      throw new Error( false ? 0 : "The slice reducer for key \"" + key + "\" returned undefined when probed with a random type. " + ("Don't try to handle '" + ActionTypes.INIT + "' or other actions in \"redux/*\" ") + "namespace. They are considered private. Instead, you must return the " + "current state for any unknown actions, unless it is undefined, " + "in which case you must return the initial state, regardless of the " + "action type. The initial state may not be undefined, but can be null.");
    }
  });
}
/**
 * Turns an object whose values are different reducer functions, into a single
 * reducer function. It will call every child reducer, and gather their results
 * into a single state object, whose keys correspond to the keys of the passed
 * reducer functions.
 *
 * @param {Object} reducers An object whose values correspond to different
 * reducer functions that need to be combined into one. One handy way to obtain
 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
 * undefined for any action. Instead, they should return their initial state
 * if the state passed to them was undefined, and the current state for any
 * unrecognized action.
 *
 * @returns {Function} A reducer function that invokes every reducer inside the
 * passed object, and builds a state object with the same shape.
 */


function combineReducers(reducers) {
  var reducerKeys = Object.keys(reducers);
  var finalReducers = {};

  for (var i = 0; i < reducerKeys.length; i++) {
    var key = reducerKeys[i];

    if (true) {
      if (typeof reducers[key] === 'undefined') {
        warning("No reducer provided for key \"" + key + "\"");
      }
    }

    if (typeof reducers[key] === 'function') {
      finalReducers[key] = reducers[key];
    }
  }

  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same
  // keys multiple times.

  var unexpectedKeyCache;

  if (true) {
    unexpectedKeyCache = {};
  }

  var shapeAssertionError;

  try {
    assertReducerShape(finalReducers);
  } catch (e) {
    shapeAssertionError = e;
  }

  return function combination(state, action) {
    if (state === void 0) {
      state = {};
    }

    if (shapeAssertionError) {
      throw shapeAssertionError;
    }

    if (true) {
      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);

      if (warningMessage) {
        warning(warningMessage);
      }
    }

    var hasChanged = false;
    var nextState = {};

    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
      var _key = finalReducerKeys[_i];
      var reducer = finalReducers[_key];
      var previousStateForKey = state[_key];
      var nextStateForKey = reducer(previousStateForKey, action);

      if (typeof nextStateForKey === 'undefined') {
        var actionType = action && action.type;
        throw new Error( false ? 0 : "When called with an action of type " + (actionType ? "\"" + String(actionType) + "\"" : '(unknown type)') + ", the slice reducer for key \"" + _key + "\" returned undefined. " + "To ignore an action, you must explicitly return the previous state. " + "If you want this reducer to hold no value, you can return null instead of undefined.");
      }

      nextState[_key] = nextStateForKey;
      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
    }

    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;
    return hasChanged ? nextState : state;
  };
}

function bindActionCreator(actionCreator, dispatch) {
  return function () {
    return dispatch(actionCreator.apply(this, arguments));
  };
}
/**
 * Turns an object whose values are action creators, into an object with the
 * same keys, but with every function wrapped into a `dispatch` call so they
 * may be invoked directly. This is just a convenience method, as you can call
 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
 *
 * For convenience, you can also pass an action creator as the first argument,
 * and get a dispatch wrapped function in return.
 *
 * @param {Function|Object} actionCreators An object whose values are action
 * creator functions. One handy way to obtain it is to use ES6 `import * as`
 * syntax. You may also pass a single function.
 *
 * @param {Function} dispatch The `dispatch` function available on your Redux
 * store.
 *
 * @returns {Function|Object} The object mimicking the original object, but with
 * every action creator wrapped into the `dispatch` call. If you passed a
 * function as `actionCreators`, the return value will also be a single
 * function.
 */


function bindActionCreators(actionCreators, dispatch) {
  if (typeof actionCreators === 'function') {
    return bindActionCreator(actionCreators, dispatch);
  }

  if (typeof actionCreators !== 'object' || actionCreators === null) {
    throw new Error( false ? 0 : "bindActionCreators expected an object or a function, but instead received: '" + kindOf(actionCreators) + "'. " + "Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?");
  }

  var boundActionCreators = {};

  for (var key in actionCreators) {
    var actionCreator = actionCreators[key];

    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
  }

  return boundActionCreators;
}

/**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */
function compose() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  }

  if (funcs.length === 1) {
    return funcs[0];
  }

  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(void 0, arguments));
    };
  });
}

/**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */

function applyMiddleware() {
  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }

  return function (createStore) {
    return function () {
      var store = createStore.apply(void 0, arguments);

      var _dispatch = function dispatch() {
        throw new Error( false ? 0 : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');
      };

      var middlewareAPI = {
        getState: store.getState,
        dispatch: function dispatch() {
          return _dispatch.apply(void 0, arguments);
        }
      };
      var chain = middlewares.map(function (middleware) {
        return middleware(middlewareAPI);
      });
      _dispatch = compose.apply(void 0, chain)(store.dispatch);
      return (0,_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.default)({}, store), {}, {
        dispatch: _dispatch
      });
    };
  };
}

/*
 * This is a dummy function to check if the function name has been altered by minification.
 * If the function has been minified and NODE_ENV !== 'production', warn the user.
 */

function isCrushed() {}

if ( true && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {
  warning('You are currently using minified code outside of NODE_ENV === "production". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');
}




/***/ }),

/***/ "./node_modules/reselect/es/index.js":
/*!*******************************************!*\
  !*** ./node_modules/reselect/es/index.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "defaultMemoize": function() { return /* binding */ defaultMemoize; },
/* harmony export */   "createSelectorCreator": function() { return /* binding */ createSelectorCreator; },
/* harmony export */   "createSelector": function() { return /* binding */ createSelector; },
/* harmony export */   "createStructuredSelector": function() { return /* binding */ createStructuredSelector; }
/* harmony export */ });
function defaultEqualityCheck(a, b) {
  return a === b;
}

function areArgumentsShallowlyEqual(equalityCheck, prev, next) {
  if (prev === null || next === null || prev.length !== next.length) {
    return false;
  }

  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.
  var length = prev.length;
  for (var i = 0; i < length; i++) {
    if (!equalityCheck(prev[i], next[i])) {
      return false;
    }
  }

  return true;
}

function defaultMemoize(func) {
  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;

  var lastArgs = null;
  var lastResult = null;
  // we reference arguments instead of spreading them for performance reasons
  return function () {
    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {
      // apply arguments instead of spreading for performance.
      lastResult = func.apply(null, arguments);
    }

    lastArgs = arguments;
    return lastResult;
  };
}

function getDependencies(funcs) {
  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;

  if (!dependencies.every(function (dep) {
    return typeof dep === 'function';
  })) {
    var dependencyTypes = dependencies.map(function (dep) {
      return typeof dep;
    }).join(', ');
    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));
  }

  return dependencies;
}

function createSelectorCreator(memoize) {
  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    memoizeOptions[_key - 1] = arguments[_key];
  }

  return function () {
    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      funcs[_key2] = arguments[_key2];
    }

    var recomputations = 0;
    var resultFunc = funcs.pop();
    var dependencies = getDependencies(funcs);

    var memoizedResultFunc = memoize.apply(undefined, [function () {
      recomputations++;
      // apply arguments instead of spreading for performance.
      return resultFunc.apply(null, arguments);
    }].concat(memoizeOptions));

    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.
    var selector = memoize(function () {
      var params = [];
      var length = dependencies.length;

      for (var i = 0; i < length; i++) {
        // apply arguments instead of spreading and mutate a local list of params for performance.
        params.push(dependencies[i].apply(null, arguments));
      }

      // apply arguments instead of spreading for performance.
      return memoizedResultFunc.apply(null, params);
    });

    selector.resultFunc = resultFunc;
    selector.dependencies = dependencies;
    selector.recomputations = function () {
      return recomputations;
    };
    selector.resetRecomputations = function () {
      return recomputations = 0;
    };
    return selector;
  };
}

var createSelector = createSelectorCreator(defaultMemoize);

function createStructuredSelector(selectors) {
  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;

  if (typeof selectors !== 'object') {
    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));
  }
  var objectKeys = Object.keys(selectors);
  return selectorCreator(objectKeys.map(function (key) {
    return selectors[key];
  }), function () {
    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      values[_key3] = arguments[_key3];
    }

    return values.reduce(function (composition, value, index) {
      composition[objectKeys[index]] = value;
      return composition;
    }, {});
  });
}

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ // runtime can't be in strict mode because a global variable is assign and maybe created.
/******/ 
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js!"), __webpack_exec__("./node_modules/next/dist/client/router.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5LmpzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcy5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlLmpzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJhZHJhcC9iYXItb2YtcHJvZ3Jlc3MvZGlzdC9pbmRleC5tanMiLCJ3ZWJwYWNrOi8vX05fRS8uL3BhZ2VzL19hcHAuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL3JlZHV4L2FwcC9zdG9yZS5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vcmVkdXgvZmVhdHVyZXMvVXNlclNsaWNlLmpzIiwid2VicGFjazovL19OX0UvLi9yZWR1eC9mZWF0dXJlcy90b2RvU2xpY2UuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcmVkdXhqcy90b29sa2l0L2Rpc3QvcmVkdXgtdG9vbGtpdC5lc20uanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9hZGFwdGVycy94aHIuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvYXhpb3MuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL0NhbmNlbC5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvQ2FuY2VsVG9rZW4uanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL2lzQ2FuY2VsLmpzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvQXhpb3MuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9JbnRlcmNlcHRvck1hbmFnZXIuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9idWlsZEZ1bGxQYXRoLmpzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvY3JlYXRlRXJyb3IuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9kaXNwYXRjaFJlcXVlc3QuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9lbmhhbmNlRXJyb3IuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9tZXJnZUNvbmZpZy5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3NldHRsZS5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3RyYW5zZm9ybURhdGEuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvZGVmYXVsdHMuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9iaW5kLmpzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYnVpbGRVUkwuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9jb21iaW5lVVJMcy5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2Nvb2tpZXMuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9pc0Fic29sdXRlVVJMLmpzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBeGlvc0Vycm9yLmpzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNVUkxTYW1lT3JpZ2luLmpzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZS5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3BhcnNlSGVhZGVycy5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3NwcmVhZC5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi91dGlscy5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvaW1tZXIvZGlzdC9pbW1lci5lc20uanMiLCJ3ZWJwYWNrOi8vX05fRS8iLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdGFpbHdpbmQvcmVhY3QvdGFpbHdpbmQuY3NzPzFjMzIiLCJ3ZWJwYWNrOi8vX05fRS8uL3N0eWxlcy9nbG9iYWxzLmNzcz9hNzIzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXN0eWxlLWxvYWRlci9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9jc3MtbG9hZGVyL2FwaS5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC10YWlsd2luZC9yZWFjdC90YWlsd2luZC5jc3MiLCJ3ZWJwYWNrOi8vX05fRS8uL3N0eWxlcy9nbG9iYWxzLmNzcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5TGlrZVRvQXJyYXkuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hcnJheVdpdGhvdXRIb2xlcy5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2l0ZXJhYmxlVG9BcnJheS5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL25vbkl0ZXJhYmxlU3ByZWFkLmpzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheS5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvY2hlY2tQcm9wVHlwZXMuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL0NvbnRleHQuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL1Byb3ZpZGVyLmpzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29tcG9uZW50cy9jb25uZWN0QWR2YW5jZWQuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L2Nvbm5lY3QuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L21hcERpc3BhdGNoVG9Qcm9wcy5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3QvbWFwU3RhdGVUb1Byb3BzLmpzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29ubmVjdC9tZXJnZVByb3BzLmpzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29ubmVjdC9zZWxlY3RvckZhY3RvcnkuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L3ZlcmlmeVN1YnNlbGVjdG9ycy5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3Qvd3JhcE1hcFRvUHJvcHMuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9ob29rcy91c2VEaXNwYXRjaC5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2hvb2tzL3VzZVJlZHV4Q29udGV4dC5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2hvb2tzL3VzZVNlbGVjdG9yLmpzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvaG9va3MvdXNlU3RvcmUuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL3V0aWxzL1N1YnNjcmlwdGlvbi5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL3V0aWxzL2JhdGNoLmpzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvYmluZEFjdGlvbkNyZWF0b3JzLmpzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvaXNQbGFpbk9iamVjdC5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL3V0aWxzL3JlYWN0QmF0Y2hlZFVwZGF0ZXMuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9zaGFsbG93RXF1YWwuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy91c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0LmpzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvdmVyaWZ5UGxhaW5PYmplY3QuanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy93YXJuaW5nLmpzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcyIsIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlZHV4LXRodW5rL2VzL2luZGV4LmpzIiwid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVkdXgvZXMvcmVkdXguanMiLCJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZXNlbGVjdC9lcy9pbmRleC5qcyJdLCJuYW1lcyI6WyJwcm9ncmVzcyIsIlByb2dyZXNzQmFyIiwic2l6ZSIsImNvbG9yIiwiY2xhc3NOYW1lIiwiZGVsYXkiLCJSb3V0ZXIiLCJzdGFydCIsImZpbmlzaCIsIk15QXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIiwic3RvcmUiLCJjb25maWd1cmVTdG9yZSIsInJlZHVjZXIiLCJVc2VyIiwiVXNlclJlZHVjZXIiLCJUb2RvIiwiVG9kb1JlZHVjZXIiLCJVc2VyU2xpY2UiLCJjcmVhdGVTbGljZSIsIm5hbWUiLCJpbml0aWFsU3RhdGUiLCJ1c2VyIiwicmVkdWNlcnMiLCJBZGQiLCJzdGF0ZSIsImFjdGlvbiIsInBheWxvYWQiLCJmZXRjaCIsImF4aW9zIiwiZW1haWwiLCJ0aGVuIiwicmVzIiwiY29uc29sZSIsImxvZyIsImVyciIsIlJlbW92ZSIsIkNoZWNrIiwiYWN0aW9ucyIsInNlbGVjdFVzZXIiLCJ0b2RvIiwiU2V0VG9kbyIsInJldmVyc2UiLCJzZWxlY3RUb2RvIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQSxDOzs7Ozs7Ozs7Ozs7Ozs7QUNiZTtBQUNmO0FBQ0EsbUJBQW1CLHNCQUFzQjtBQUN6Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLEM7Ozs7Ozs7Ozs7Ozs7Ozs7QUNoQmlEOztBQUVqRDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFZTtBQUNmLGlCQUFpQixzQkFBc0I7QUFDdkM7O0FBRUE7QUFDQTtBQUNBLFFBQVEsMkRBQWM7QUFDdEIsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxDOzs7Ozs7Ozs7Ozs7Ozs7QUN0Q2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhLHVCQUF1QjtBQUNwQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEM7Ozs7Ozs7Ozs7Ozs7OztBQ2JBLDZCQUFlLG9DQUFTLEdBQUcsb0JBQW9CLG1DQUFtQyxVQUFVLEVBQUUsSUFBSSwwREFBMEQsVUFBVSxXQUFXLDZNQUE2TSxJQUFJLDJFQUEyRSxJQUFJLGdGQUFnRixJQUFJLGdEQUFnRCxzQkFBc0Isd0pBQXdKLG1EQUFtRCxpRkFBaUYsdURBQXVELHdCQUF3Qix3QkFBd0I7QUFDOStCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsSUFBTUEsUUFBUSxHQUFHLElBQUlDLDREQUFKLENBQWdCO0FBQy9CQyxNQUFJLEVBQUUsQ0FEeUI7QUFFL0JDLE9BQUssRUFBRSxTQUZ3QjtBQUcvQkMsV0FBUyxFQUFFLGlCQUhvQjtBQUkvQkMsT0FBSyxFQUFFO0FBSndCLENBQWhCLENBQWpCO0FBT0FDLDREQUFBLENBQWlCLGtCQUFqQixFQUFxQ04sUUFBUSxDQUFDTyxLQUE5QztBQUNBRCw0REFBQSxDQUFpQixxQkFBakIsRUFBd0NOLFFBQVEsQ0FBQ1EsTUFBakQ7QUFDQUYsNERBQUEsQ0FBaUIsa0JBQWpCLEVBQXFDTixRQUFRLENBQUNRLE1BQTlDOztBQUVBLFNBQVNDLEtBQVQsT0FBeUM7QUFBQSxNQUF4QkMsU0FBd0IsUUFBeEJBLFNBQXdCO0FBQUEsTUFBYkMsU0FBYSxRQUFiQSxTQUFhO0FBQ3ZDLHNCQUNFLDhEQUFDLGlEQUFEO0FBQVUsU0FBSyxFQUFFQyxxREFBakI7QUFBQSwyQkFDRSw4REFBQyxTQUFELG9CQUFlRCxTQUFmO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFERjtBQUFBO0FBQUE7QUFBQTtBQUFBLFVBREY7QUFLRDs7S0FOUUYsSztBQVFULCtEQUFlQSxLQUFmOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDMUJBO0FBQ0E7QUFDQTtBQUVBLCtEQUFlSSxnRUFBYyxDQUFDO0FBQzVCQyxTQUFPLEVBQUU7QUFDUEMsUUFBSSxFQUFFQyx3REFEQztBQUVQQyxRQUFJLEVBQUVDLHdEQUFXQTtBQUZWO0FBRG1CLENBQUQsQ0FBN0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ0pBO0FBQ0E7QUFFTyxJQUFNQyxTQUFTLEdBQUdDLDZEQUFXLENBQUM7QUFDbkNDLE1BQUksRUFBRSxNQUQ2QjtBQUVuQ0MsY0FBWSxFQUFFO0FBQ1pDLFFBQUksRUFBRTtBQURNLEdBRnFCO0FBS25DQyxVQUFRLEVBQUU7QUFDUkMsT0FBRyxFQUFFLGFBQUNDLEtBQUQsRUFBUUMsTUFBUixFQUFtQjtBQUN0QkQsV0FBSyxDQUFDSCxJQUFOLEdBQWFJLE1BQU0sQ0FBQ0MsT0FBcEI7O0FBQ0EsVUFBTUMsS0FBSztBQUFBLHlVQUFHO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHlCQUNOQyxpREFBQSxDQUNFLGdCQURGLEVBQ29CO0FBQ3RCQyx5QkFBSyxFQUFFSixNQUFNLENBQUNDLE9BQVAsQ0FBZUc7QUFEQSxtQkFEcEIsRUFJSEMsSUFKRyxDQUlFLFVBQUFDLEdBQUc7QUFBQSwyQkFBSUMsT0FBTyxDQUFDQyxHQUFSLENBQVlGLEdBQVosQ0FBSjtBQUFBLG1CQUpMLFdBS0csVUFBQUcsR0FBRztBQUFBLDJCQUFJRixPQUFPLENBQUNDLEdBQVIsQ0FBWUMsR0FBWixDQUFKO0FBQUEsbUJBTE4sQ0FETTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxTQUFIOztBQUFBLHdCQUFMUCxLQUFLO0FBQUE7QUFBQTtBQUFBLFNBQVg7O0FBUUFBLFdBQUs7QUFDTixLQVpPO0FBYVJRLFVBQU0sRUFBRSxnQkFBQ1gsS0FBRCxFQUFRQyxNQUFSLEVBQW1CO0FBQ3pCRCxXQUFLLENBQUNILElBQU4sR0FBYSxJQUFiO0FBQ0QsS0FmTztBQWdCUmUsU0FBSyxFQUFFLGVBQUNaLEtBQUQsRUFBUUMsTUFBUixFQUFtQjtBQUN4QkQsV0FBSyxDQUFDSCxJQUFOLEdBQWFJLE1BQU0sQ0FBQ0MsT0FBcEI7QUFDRDtBQWxCTztBQUx5QixDQUFELENBQTdCO3lCQTJCK0JULFNBQVMsQ0FBQ29CLE87SUFBakNkLEcsc0JBQUFBLEc7SUFBS1ksTSxzQkFBQUEsTTtJQUFRQyxLLHNCQUFBQSxLLEVBRTVCO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOzs7QUFDTyxJQUFNRSxVQUFVLEdBQUcsU0FBYkEsVUFBYSxDQUFBZCxLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDWCxJQUFOLENBQVdRLElBQWY7QUFBQSxDQUF4QjtBQUVQLCtEQUFlSixTQUFTLENBQUNMLE9BQXpCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDMUNBO0FBQ0E7QUFFTyxJQUFNSSxXQUFXLEdBQUdFLDZEQUFXLENBQUM7QUFDckNDLE1BQUksRUFBRSxNQUQrQjtBQUVyQ0MsY0FBWSxFQUFFO0FBQ1ptQixRQUFJLEVBQUU7QUFETSxHQUZ1QjtBQUtyQ2pCLFVBQVEsRUFBRTtBQUNSa0IsV0FBTyxFQUFFLGlCQUFDaEIsS0FBRCxFQUFRQyxNQUFSLEVBQW1CO0FBQzFCRCxXQUFLLENBQUNlLElBQU4sR0FBYSw0SkFBSWQsTUFBTSxDQUFDQyxPQUFYLEVBQW9CZSxPQUFwQixFQUFiO0FBQ0Q7QUFITztBQUwyQixDQUFELENBQS9CO0lBWVFELE8sR0FBWXhCLFdBQVcsQ0FBQ3FCLE8sQ0FBeEJHLE8sRUFFZjtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7O0FBQ08sSUFBTUUsVUFBVSxHQUFHLFNBQWJBLFVBQWEsQ0FBQWxCLEtBQUs7QUFBQSxTQUFJQSxLQUFLLENBQUNULElBQU4sQ0FBV3dCLElBQWY7QUFBQSxDQUF4QjtBQUVQLCtEQUFldkIsV0FBVyxDQUFDSixPQUEzQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQzNCQSxpQkFBaUIsU0FBSSxJQUFJLFNBQUk7QUFDN0I7QUFDQTtBQUNBLGNBQWMsZ0JBQWdCLHNDQUFzQyxpQkFBaUIsRUFBRTtBQUN2Riw2QkFBNkIsOEVBQThFO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixzQkFBc0I7QUFDN0M7QUFDQTtBQUNBLENBQUM7QUFDRCxtQkFBbUIsU0FBSSxJQUFJLFNBQUk7QUFDL0IsYUFBYSw2QkFBNkIsMEJBQTBCLGFBQWEsRUFBRSxxQkFBcUI7QUFDeEcsZ0JBQWdCLHFEQUFxRCxvRUFBb0UsYUFBYSxFQUFFO0FBQ3hKLHNCQUFzQixzQkFBc0IscUJBQXFCLEdBQUc7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDO0FBQ3ZDLGtDQUFrQyxTQUFTO0FBQzNDLGtDQUFrQyxXQUFXLFVBQVU7QUFDdkQseUNBQXlDLGNBQWM7QUFDdkQ7QUFDQSw2R0FBNkcsT0FBTyxVQUFVO0FBQzlILGdGQUFnRixpQkFBaUIsT0FBTztBQUN4Ryx3REFBd0QsZ0JBQWdCLFFBQVEsT0FBTztBQUN2Riw4Q0FBOEMsZ0JBQWdCLGdCQUFnQixPQUFPO0FBQ3JGO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQSxTQUFTLFlBQVksYUFBYSxPQUFPLEVBQUUsVUFBVSxXQUFXO0FBQ2hFLG1DQUFtQyxTQUFTO0FBQzVDO0FBQ0E7QUFDQSxxQkFBcUIsU0FBSSxJQUFJLFNBQUk7QUFDakMsb0RBQW9ELFFBQVE7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELDBDQUEwQyxxRUFBcUUscUJBQXFCO0FBQ3RMO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxnQkFBZ0I7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLDRDQUE0QztBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsdUZBQXVGO0FBQ3hIO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDa0M7QUFDWjtBQUNrRjtBQUMzQztBQUM3RDtBQUN5QztBQUNDO0FBQzFDO0FBQ0E7QUFDQSxvQkFBb0IsdUJBQXVCO0FBQzNDO0FBQ0E7QUFDQSxtQkFBbUIsMERBQW9CO0FBQ3ZDO0FBQ0E7QUFDQSx3QkFBd0IsdUJBQXVCO0FBQy9DO0FBQ0E7QUFDQSxxREFBcUQsOENBQU8sVUFBVSw4Q0FBTztBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUMyRjtBQUMzRjtBQUNnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsMENBQU87QUFDdEIsV0FBVyxnREFBYTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsdUJBQXVCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSx3QkFBd0IsdUJBQXVCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix1QkFBdUI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLG1CQUFtQixhQUFvQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxrQkFBa0I7QUFDbkQsMEJBQTBCLFdBQVc7QUFDckMsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGtCQUFrQjtBQUNuRCxtQ0FBbUMsdUJBQXVCO0FBQzFELDBCQUEwQixXQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsNkJBQTZCLGNBQWM7QUFDM0MsUUFBUSxLQUFxQyxFQUFFLEVBRTFDO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixXQUFXO0FBQ3JDLG9DQUFvQywwQkFBMEI7QUFDOUQsa0NBQWtDLG1CQUFtQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsdUJBQXVCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixjQUFjO0FBQzNDLFFBQVEsS0FBcUMsRUFBRSxFQUUxQztBQUNMO0FBQ0EsZ0NBQWdDLHlCQUF5QjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsTUFBTSxHQUFHO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixjQUFjO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGdEQUFlO0FBQ2hEO0FBQ0E7QUFDQSxpQ0FBaUMsa0VBQWlDO0FBQ2xFO0FBQ0E7QUFDQSxRQUFRLElBQXFDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixhQUFvQjtBQUN4QztBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isc0RBQWU7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdFQUFnRSxtQ0FBbUMsRUFBRTtBQUNyRztBQUNBO0FBQ0EsNkJBQTZCLHdEQUFxQjtBQUNsRCx1QkFBdUIsMENBQVE7QUFDL0I7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsa0RBQVc7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix1QkFBdUI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHlCQUF5QixzQkFBc0IsMkJBQTJCLHdCQUF3QjtBQUMvRztBQUNBLGdCQUFnQjtBQUNoQjtBQUNBLDBDQUEwQyxrQkFBa0I7QUFDNUQ7QUFDQSw2Q0FBNkMsNkJBQTZCO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMwRTtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixJQUFxQztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLGdCQUFnQixJQUFxQztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxxQ0FBcUM7QUFDdEU7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxnQkFBZ0IsSUFBcUM7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MscUJBQXFCO0FBQ3pEO0FBQ0EsNkJBQTZCLDhDQUFlO0FBQzVDLEtBQUs7QUFDTDtBQUNBLCtCQUErQiw0QkFBNEI7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNULCtDQUErQyxhQUFhLEVBQUU7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsOENBQVE7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsa0RBQVc7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsOENBQWU7QUFDMUM7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlMQUF5TDtBQUN6TDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCw0REFBNEQ7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxzQkFBc0I7QUFDL0Q7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxrQkFBa0I7QUFDNUQsK0NBQStDLHVCQUF1QjtBQUN0RSxxR0FBcUcsK0JBQStCLHFCQUFxQixFQUFFLEVBQUUsRUFBRTtBQUMvSix5Q0FBeUMsV0FBVztBQUNwRCxrREFBa0QscUJBQXFCO0FBQ3ZFLDZFQUE2RSxtQkFBbUIsRUFBRTtBQUNsRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUM4RDtBQUM5RDtBQUNBLDREQUE0RCx1QkFBdUIsRUFBRTtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSw4Q0FBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiw4Q0FBZ0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxLQUFxQztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELDJCQUEyQjtBQUM1RTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsMEJBQTBCO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELDJCQUEyQjtBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCwyQkFBMkI7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLHdEQUF3RCw2QkFBNkIsRUFBRTtBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZEO0FBQzdEO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFLDJDQUEyQyxFQUFFO0FBQzlHO0FBQ0EseURBQXlELDBCQUEwQixFQUFFO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELDREQUE0RCxFQUFFO0FBQ3hIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxnREFBZ0QsRUFBRTtBQUM3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qiw4QkFBOEI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsY0FBYztBQUMzQztBQUNBO0FBQ0EsdUNBQXVDLG9CQUFvQjtBQUMzRCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLFdBQVc7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsK0RBQStELGdDQUFnQztBQUMvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0Esc0dBQXNHO0FBQ3RHO0FBQ0EsNkNBQTZDLFlBQVk7QUFDekQ7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUssRUFBRSxFQUFFO0FBQ1QseUZBQXlGO0FBQ3pGO0FBQ0EsNkNBQTZDLFlBQVk7QUFDekQ7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUssRUFBRSxFQUFFO0FBQ1QsMkdBQTJHO0FBQzNHO0FBQ0E7QUFDQSw2Q0FBNkMsWUFBWTtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSyxFQUFFLEVBQUU7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLElBQXFDO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1FQUFtRSxzRUFBc0UsZ0JBQWdCLHdEQUF3RCxFQUFFLEVBQUUsRUFBRSxFQUFFO0FBQ3pOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0RkFBNEYsbUNBQW1DO0FBQy9IO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlLQUFpSyxpQ0FBaUMsR0FBRyxtQ0FBbUM7QUFDeE87QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHVCQUF1QjtBQUMzQztBQUNBO0FBQ0E7QUFDQSxpREFBaUQsaUNBQWlDLEVBQUU7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsdUJBQXVCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxpQ0FBaUMsRUFBRTtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHVCQUF1QjtBQUMzQztBQUNBO0FBQ0E7QUFDQSxrQ0FBa0Msd0RBQXdEO0FBQzFGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsMkJBQTJCLEVBQUU7QUFDM0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHVCQUF1QjtBQUMzQztBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MseURBQXlEO0FBQzNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsNEJBQTRCLEVBQUU7QUFDNUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHVCQUF1QjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsdUJBQXVCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQywwREFBMEQ7QUFDNUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCw2QkFBNkIsRUFBRTtBQUM3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsdUJBQXVCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxpRkFBaUY7QUFDbkg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELDJCQUEyQjtBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQVM7QUFDMmtCO0FBQ3BsQixrQzs7Ozs7Ozs7OztBQ2x5Q0EsNEZBQXVDLEM7Ozs7Ozs7Ozs7O0FDQTFCOztBQUViLFlBQVksbUJBQU8sQ0FBQyxxREFBWTtBQUNoQyxhQUFhLG1CQUFPLENBQUMsaUVBQWtCO0FBQ3ZDLGNBQWMsbUJBQU8sQ0FBQyx5RUFBc0I7QUFDNUMsZUFBZSxtQkFBTyxDQUFDLDJFQUF1QjtBQUM5QyxvQkFBb0IsbUJBQU8sQ0FBQyw2RUFBdUI7QUFDbkQsbUJBQW1CLG1CQUFPLENBQUMsbUZBQTJCO0FBQ3RELHNCQUFzQixtQkFBTyxDQUFDLHlGQUE4QjtBQUM1RCxrQkFBa0IsbUJBQU8sQ0FBQyx5RUFBcUI7O0FBRS9DO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNENBQTRDO0FBQzVDOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIOzs7Ozs7Ozs7Ozs7QUNsTGE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLGtEQUFTO0FBQzdCLFdBQVcsbUJBQU8sQ0FBQyxnRUFBZ0I7QUFDbkMsWUFBWSxtQkFBTyxDQUFDLDREQUFjO0FBQ2xDLGtCQUFrQixtQkFBTyxDQUFDLHdFQUFvQjtBQUM5QyxlQUFlLG1CQUFPLENBQUMsd0RBQVk7O0FBRW5DO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZLE1BQU07QUFDbEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLGtFQUFpQjtBQUN4QyxvQkFBb0IsbUJBQU8sQ0FBQyw0RUFBc0I7QUFDbEQsaUJBQWlCLG1CQUFPLENBQUMsc0VBQW1COztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxvRUFBa0I7O0FBRXpDO0FBQ0EscUJBQXFCLG1CQUFPLENBQUMsZ0ZBQXdCOztBQUVyRDs7QUFFQTtBQUNBLHNCQUFzQjs7Ozs7Ozs7Ozs7O0FDdkRUOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7Ozs7Ozs7Ozs7O0FDbEJhOztBQUViLGFBQWEsbUJBQU8sQ0FBQywyREFBVTs7QUFFL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7QUN4RGE7O0FBRWI7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7QUNKYTs7QUFFYixZQUFZLG1CQUFPLENBQUMscURBQVk7QUFDaEMsZUFBZSxtQkFBTyxDQUFDLHlFQUFxQjtBQUM1Qyx5QkFBeUIsbUJBQU8sQ0FBQyxpRkFBc0I7QUFDdkQsc0JBQXNCLG1CQUFPLENBQUMsMkVBQW1CO0FBQ2pELGtCQUFrQixtQkFBTyxDQUFDLG1FQUFlOztBQUV6QztBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0Q7QUFDaEQ7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QixLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVEOzs7Ozs7Ozs7Ozs7QUM5RmE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLHFEQUFZOztBQUVoQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsU0FBUztBQUNwQjtBQUNBLFlBQVksT0FBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBOzs7Ozs7Ozs7Ozs7QUNuRGE7O0FBRWIsb0JBQW9CLG1CQUFPLENBQUMsbUZBQTBCO0FBQ3RELGtCQUFrQixtQkFBTyxDQUFDLCtFQUF3Qjs7QUFFbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7QUNuQmE7O0FBRWIsbUJBQW1CLG1CQUFPLENBQUMscUVBQWdCOztBQUUzQztBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsTUFBTTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7QUNqQmE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLHFEQUFZO0FBQ2hDLG9CQUFvQixtQkFBTyxDQUFDLHVFQUFpQjtBQUM3QyxlQUFlLG1CQUFPLENBQUMsdUVBQW9CO0FBQzNDLGVBQWUsbUJBQU8sQ0FBQyx5REFBYTs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CLHVDQUF1QztBQUN2QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDs7Ozs7Ozs7Ozs7O0FDOUVhOztBQUViO0FBQ0E7QUFDQTtBQUNBLFdBQVcsTUFBTTtBQUNqQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYSxNQUFNO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7O0FDekNhOztBQUViLFlBQVksbUJBQU8sQ0FBQyxtREFBVTs7QUFFOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCwyQkFBMkI7QUFDM0IsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7O0FBRUE7QUFDQTs7Ozs7Ozs7Ozs7O0FDdEZhOztBQUViLGtCQUFrQixtQkFBTyxDQUFDLG1FQUFlOztBQUV6QztBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEIsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsT0FBTztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7O0FDeEJhOztBQUViLFlBQVksbUJBQU8sQ0FBQyxxREFBWTs7QUFFaEM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsTUFBTTtBQUNqQixXQUFXLGVBQWU7QUFDMUIsYUFBYSxFQUFFO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7Ozs7Ozs7Ozs7OztBQ25CYTs7QUFFYixZQUFZLG1CQUFPLENBQUMsa0RBQVM7QUFDN0IsMEJBQTBCLG1CQUFPLENBQUMsOEZBQStCOztBQUVqRTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxnRUFBZ0I7QUFDdEMsR0FBRyxpQkFBaUIsT0FBTyxtREFBbUQsT0FBTztBQUNyRjtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxpRUFBaUI7QUFDdkM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0U7QUFDeEU7QUFDQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sWUFBWTtBQUNuQjtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQSxDQUFDOztBQUVEOzs7Ozs7Ozs7Ozs7QUNqR2E7O0FBRWI7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGlCQUFpQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7QUNWYTs7QUFFYixZQUFZLG1CQUFPLENBQUMscURBQVk7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7O0FBRUw7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7Ozs7Ozs7Ozs7O0FDckVhOztBQUViO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7O0FDYmE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLHFEQUFZOztBQUVoQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsMENBQTBDO0FBQzFDLFNBQVM7O0FBRVQ7QUFDQSw0REFBNEQsd0JBQXdCO0FBQ3BGO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDLCtCQUErQixhQUFhLEVBQUU7QUFDOUM7QUFDQTtBQUNBLEtBQUs7QUFDTDs7Ozs7Ozs7Ozs7O0FDcERhOztBQUViO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7OztBQ2JhOztBQUViO0FBQ0E7QUFDQTtBQUNBLFdBQVcsRUFBRTtBQUNiLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7O0FDVmE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLHFEQUFZOztBQUVoQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLE9BQU87QUFDckIsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYyxPQUFPO0FBQ3JCLGdCQUFnQixRQUFRO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7Ozs7Ozs7Ozs7O0FDbkVhOztBQUViLFlBQVksbUJBQU8sQ0FBQyxtREFBVTs7QUFFOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOzs7Ozs7Ozs7Ozs7QUNYYTs7QUFFYixZQUFZLG1CQUFPLENBQUMscURBQVk7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsZUFBZTs7QUFFaEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7Ozs7Ozs7Ozs7O0FDcERhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7QUMxQmE7O0FBRWIsV0FBVyxtQkFBTyxDQUFDLGdFQUFnQjs7QUFFbkM7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZLFFBQVE7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsYUFBYTtBQUN4QixXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1DQUFtQyxPQUFPO0FBQzFDO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixTQUFTLEdBQUcsU0FBUztBQUM1QywyQkFBMkI7QUFDM0I7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLDRCQUE0QjtBQUM1QixLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBLHVDQUF1QyxPQUFPO0FBQzlDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFlBQVksT0FBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7O0FDOVZhOztBQUViLGNBQWMsbUJBQU8sQ0FBQyxrREFBVTs7QUFFaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7OztBQUdIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxtQkFBbUIsaUJBQWlCO0FBQ3BDOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUN0R0EsY0FBYyxrREFBa0QsSUFBSSx3QkFBd0IsR0FBRyxJQUFtQyxFQUFFLDZFQUE2RSwwQkFBMEIsNkVBQTZFLGdCQUFnQixxRUFBcUUsY0FBYyxrQkFBa0IsY0FBYyx3QkFBd0IsbUNBQW1DLCtCQUErQixxQkFBcUIsaUVBQWlFLHVFQUF1RSwrREFBK0QsY0FBYyw0QkFBNEIsa0JBQWtCLHVFQUF1RSxtQ0FBbUMsNEJBQTRCLGdCQUFnQixHQUFHLGNBQWMsV0FBVyw0REFBNEQsZ0JBQWdCLG1FQUFtRSxnQkFBZ0IsOEJBQThCLGtCQUFrQixXQUFXLHFEQUFxRCxnQkFBZ0Isd0NBQXdDLGNBQWMsMkJBQTJCLGNBQWMsMkJBQTJCLGNBQWMsZ0JBQWdCLGNBQWMseURBQXlELFlBQVksWUFBWSxvQkFBb0IsV0FBVyxLQUFLLGtCQUFrQiwwRUFBMEUsK0RBQStELEVBQUUsaURBQWlELGdCQUFnQiwrSEFBK0gsZUFBZSxTQUFTLGFBQWEsS0FBSyxjQUFjLHVEQUF1RCxjQUFjLFlBQVksb0JBQW9CLGdCQUFnQixpQkFBaUIsYUFBYSxNQUFNLE1BQW1DLFlBQVksZ0JBQWdCLHNDQUFzQyxjQUFjLDZCQUE2QixjQUFjLGVBQWUsY0FBYyxVQUFVLHVCQUF1QixjQUFjLFdBQVcsOEJBQThCLGdCQUFnQixlQUFlLGlDQUFpQywyS0FBMkssa0JBQWtCLGlCQUFpQixXQUFXLGdDQUFnQyxzQkFBc0IsUUFBUSxvQkFBb0IsK0JBQStCLFNBQVMsZUFBZSxzQ0FBc0Msc0NBQXNDLHNCQUFzQixpREFBaUQsV0FBVyx3QkFBd0IsR0FBRyxLQUFtQyxvQkFBb0IseURBQXlELHlCQUF5QixPQUFPLGdCQUFnQix3QkFBd0IseUJBQXlCLGtCQUFrQixzQ0FBc0MsZ0JBQWdCLFdBQVcsb0JBQW9CLGdCQUFnQiw2Q0FBNkMsRUFBRSxFQUFFLDJDQUEyQyxjQUFjLDRCQUE0QixjQUFjLDBCQUEwQixjQUFjLGtCQUFrQixrQkFBa0Isd0VBQXdFLDBCQUEwQixrQ0FBa0MsbUNBQW1DLFVBQVUsZ0JBQWdCLGdEQUFnRCxxQkFBcUIsc0JBQXNCLDhCQUE4QixjQUFjLG1DQUFtQyxrQkFBa0Isb0JBQW9CLE1BQU0sNENBQTRDLHVCQUF1QixjQUFjLDBCQUEwQiw2QkFBNkIsc0JBQXNCLElBQUksZ0JBQWdCLFVBQVUseUJBQXlCLDRCQUE0QixZQUFZLGFBQWEsZ0JBQWdCLFdBQVcsZ0NBQWdDLDRDQUE0QyxjQUFjLE1BQU0sS0FBbUMsbUJBQW1CLGlCQUFpQixjQUFjLEtBQW1DLHNCQUFzQixHQUFHLGNBQWMscUJBQXFCLEtBQUssS0FBSyxjQUFjLG9CQUFvQixrQkFBa0IsTUFBTSxvQkFBb0IsY0FBYyx5Q0FBeUMsS0FBSyxLQUFLLFdBQVcsVUFBVSxXQUFXLGdDQUFnQyxxQkFBcUIsK0JBQStCLGFBQWEsdUNBQXVDLGNBQWMsVUFBVSxrQ0FBa0Msb0RBQW9ELG1CQUFtQixjQUFjLCtCQUErQixTQUFTLFNBQVMsZ0JBQWdCLHVDQUF1QyxNQUFNLDhCQUE4QixXQUFXLDBDQUEwQyxTQUFTLFlBQVksWUFBWSxvQkFBb0IsV0FBVyxLQUFLLFdBQVcsK0JBQStCLGlEQUFpRCxTQUFTLGtDQUFrQywrQkFBK0Isa0NBQWtDLG9CQUFvQixJQUFJLG1CQUFtQiwrQ0FBK0MsMEJBQTBCLFdBQVcsTUFBTSw0QkFBNEIsMEJBQTBCLDREQUE0RCxvQkFBb0Isc0NBQXNDLEdBQUcsZUFBZSxpRUFBaUUsV0FBVyxZQUFZLHdCQUF3QixXQUFXLFlBQVksMENBQTBDLElBQUksOEJBQThCLGlCQUFpQixlQUFlLDBCQUEwQixFQUFFLGFBQWEsY0FBYyxrQkFBa0Isb0NBQW9DLGdFQUFnRSxxQkFBcUIsSUFBSSw2Q0FBNkMsOENBQThDLDRCQUE0Qiw2QkFBNkIsY0FBYyxtQkFBbUIsWUFBWSxhQUFhLGdCQUFnQiw4QkFBOEIsZ0NBQWdDLGFBQWEsS0FBSyxrQkFBa0IsbUpBQW1KLHdDQUF3QyxVQUFVLHdCQUF3Qix5QkFBeUIsYUFBYSxzQkFBc0IsaUJBQWlCLDhCQUE4Qix5QkFBeUIsdUJBQXVCLHNCQUFzQix1QkFBdUIsNEJBQTRCLDBCQUEwQixnQ0FBZ0MsMkJBQTJCLGlCQUFpQixLQUFLLHFCQUFxQixZQUFZLDhDQUE4QyxnQkFBZ0IscUJBQXFCLHNEQUFzRCx5QkFBeUIsa0JBQWtCLHFCQUFxQixZQUFZLEVBQUUsb0JBQW9CLGdCQUFnQixtQkFBbUIsZUFBZSx1QkFBdUIsRUFBRSwrQkFBK0IsR0FBRyxHQUFHLFVBQVUsdUNBQXVDLHNCQUFzQixzQkFBc0IsWUFBWSxjQUFjLFlBQVksY0FBYyxZQUFZLFdBQVcsMEJBQTBCLG9CQUFvQixRQUFRLGtDQUFrQyxVQUFVLGtDQUFrQyxFQUFFLG1CQUFtQixXQUFXLEtBQUssb0JBQW9CLFFBQVEsMEJBQTBCLEVBQUUsMkJBQTJCLHNEQUFzRCxFQUFFLFVBQVUsZ0NBQWdDLG9CQUFvQix1QkFBdUIsY0FBYyxvQkFBb0IsUUFBUSwyQkFBMkIsYUFBYSxvQkFBb0IsRUFBRSxJQUFJLDhCQUE4QixjQUFjLG9CQUFvQixRQUFRLG9CQUFvQixhQUFhLDJCQUEyQixFQUFFLElBQUksR0FBRyxXQUFXLHFCQUFxQixRQUFRLDBDQUEwQyxVQUFVLCtCQUErQixHQUFHLEVBQUUsYUFBYSxnQkFBZ0IsYUFBYSxtQkFBbUIsbURBQW1ELGNBQWMsb0NBQW9DLGNBQWMsMkNBQTJDLFNBQVMsbUJBQW1CLHdCQUF3QixnQkFBZ0IsSUFBSSxjQUFjLCtCQUErQixvQkFBb0IsaUNBQWlDLGFBQWEsZ0NBQWdDLGNBQWMsZ0JBQWdCLGdEQUFnRCxPQUFPLGNBQWMsZ0JBQWdCLGdCQUFnQixxRUFBcUUsTUFBTSxTQUFTLGtCQUFrQix1Q0FBdUMsZUFBZSx3QkFBd0Isb0JBQW9CLHlCQUF5QixxQkFBcUIsY0FBYyxvR0FBb0csc0JBQXNCLHlCQUF5QixjQUFjLHFEQUFxRCxvQkFBb0IsY0FBYywwREFBMEQsY0FBYyxnQkFBZ0IseUJBQXlCLFdBQVcsa0NBQWtDLHVCQUF1QixHQUFHLG1CQUFtQixjQUFjLEtBQUssa0JBQWtCLHVCQUF1QiwyQkFBMkIsbUJBQW1CLDJCQUEyQixtQkFBbUIseUJBQXlCLHFCQUFxQiwyQkFBMkIsV0FBVyxnQkFBZ0Isa0JBQWtCLG1CQUFtQixlQUFlLGlCQUFpQiw4QkFBOEIsR0FBRyxzQkFBc0IsMkJBQTJCLFdBQVcsZ0JBQWdCLG1CQUFtQixtQkFBbUIsZUFBZSxtQkFBbUIscUJBQXFCLE9BQU8sMkJBQTJCLEdBQUcsaUJBQWlCLHNCQUFzQixHQUFHLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLHNFQUFzRSxNQUFNLFNBQVMsa0JBQWtCLHVDQUF1QyxlQUFlLHdCQUF3QixvQkFBb0IsY0FBYyw4RUFBOEUsbUJBQW1CLGNBQWMscURBQXFELHNCQUFzQix5QkFBeUIsY0FBYywwRUFBMEUsb0JBQW9CLGNBQWMsd0NBQXdDLHFCQUFxQixjQUFjLDhCQUE4QixzQkFBc0IsY0FBYywrQkFBK0IsbUJBQW1CLHFCQUFxQixpQkFBaUIscUJBQXFCLHlCQUF5QixtQ0FBbUMsUUFBUSwyQ0FBMkMsR0FBRyxHQUFHLFlBQVksZ0JBQWdCLGtCQUFrQixpQkFBaUIsbUJBQW1CLEVBQUUsYUFBYSxZQUFZLGNBQWMsU0FBUyxjQUFjLFNBQVMsZ1BBQWdQLDhMQUE4TCwySUFBMkksK0hBQStILDJ2QkFBMnZCLHFEQUFxRCx5REFBeUQsd0NBQXdDLGdCQUFnQix5SkFBeUosK0ZBQStGLGtLQUFrSyxnQkFBZ0IsMkNBQTJDLGdCQUFnQiw0Q0FBNEMsNEZBQTRGLHFKQUFxSiw2RUFBNkUsNkVBQTZFLFNBQVMsa0NBQWtDLDBDQUEwQyxLQUFLLE1BQU0sS0FBSyxrQkFBa0Isa0JBQWtCLFdBQVcsa0NBQWtDLGVBQWUsb0ZBQW9GLFFBQVEsV0FBVyw4REFBOEQsbUJBQW1CLGlCQUFpQixxQkFBcUIsNkJBQTZCLHFCQUFxQixnQkFBZ0Isb0RBQW9ELFNBQVMsc0NBQXNDLDJDQUEyQywyQ0FBMkMsVUFBVSx1RkFBdUYsOEJBQThCLDZGQUE2Rix3Q0FBd0MsbURBQW1ELFVBQVUsa0ZBQWtGLEdBQUcsMkJBQTJCLE1BQU0sNEJBQTRCLGtDQUFrQywyQkFBMkIsT0FBTyxPQUFPLG9CQUFvQixpQkFBaUIsNkRBQTZELG1DQUFtQyxNQUFNLEtBQW1DLGdFQUFnRSx3QkFBd0IsTUFBTSxLQUFtQywyRUFBMkUsa0JBQWtCLGNBQWMsV0FBVyxnREFBZ0QsK0NBQStDLFFBQVEsSUFBSSxRQUFRLG1CQUFtQixXQUFXLGtCQUFrQixrREFBa0QsSUFBSSx3QkFBd0IsZ0NBQWdDLE1BQU0sMENBQTBDLElBQUksTUFBTSwyRUFBMkUsZ0NBQWdDLElBQUksWUFBWSxRQUFRLFlBQVksNEVBQTRFLHFCQUFxQixlQUFlLGFBQWEsbUJBQW1CLDJCQUEyQix1QkFBdUIsd0NBQXdDLFFBQVEsdUNBQXVDLHVDQUF1QyxrREFBa0QsSUFBSSx3QkFBd0IsMkNBQTJDLHFDQUFxQyxHQUFHLCtCQUErQixRQUFRLFFBQVEsUUFBUSxtS0FBbUssa0JBQWtCLGlDQUFpQywwQkFBMEIsaUNBQWlDLHdCQUF3Qiw2QkFBNkIsY0FBYyxLQUFtQyw0QkFBNEIsVUFBVSwwQkFBMEIsNkJBQTZCLFNBQVMsNkJBQTZCLHNCQUFzQiw4QkFBOEIsTUFBTSxpQkFBaUIsS0FBSyxLQUFLLFdBQVcsd0NBQXdDLFVBQVUsT0FBTyxxQkFBcUIsK0NBQStDLHlCQUF5QixHQUFHLEdBQUcseU1BQXlNLCtEQUFlLEVBQUUsRUFBd1c7QUFDNWdqQjs7Ozs7Ozs7Ozs7O0FDQUE7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLG1EQUE0QjtBQUNuRDtBQUNBOzs7Ozs7Ozs7OztBQ05BLFVBQVUsbUJBQU8sQ0FBQywwTUFBOEY7QUFDaEgsMEJBQTBCLG1CQUFPLENBQUMsd2FBQXNMOztBQUV4Tjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsbUNBQW1DO0FBQ25DO0FBQ0Esc0VBQXNFLHdDQUF3QztBQUM5RztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7QUFHQSxJQUFJLElBQVU7QUFDZCx5QkFBeUIsVUFBVTtBQUNuQyxrRUFBa0UsaUJBQWlCLGNBQWMsTUFBTSxZQUFZLGlDQUFpQztBQUNwSixVQUFVLGdCQUFnQixlQUFlLFlBQVksaUNBQWlDO0FBQ3RGLFVBQVUsVUFBVSxlQUFlO0FBQ25DOztBQUVBLElBQUksaUJBQWlCO0FBQ3JCLE1BQU0sd2FBQXNMO0FBQzVMO0FBQ0Esa0JBQWtCLG1CQUFPLENBQUMsd2FBQXNMOztBQUVoTjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsVUFBVTs7QUFFMUI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLFVBQVU7QUFDWjtBQUNBLEdBQUc7QUFDSDs7QUFFQSxzQzs7Ozs7Ozs7OztBQzNEQSxVQUFVLG1CQUFPLENBQUMsb05BQXdHO0FBQzFILDBCQUEwQixtQkFBTyxDQUFDLDJaQUF5TTs7QUFFM087O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBLG1DQUFtQztBQUNuQztBQUNBLHNFQUFzRSx3Q0FBd0M7QUFDOUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7O0FBR0EsSUFBSSxJQUFVO0FBQ2QseUJBQXlCLFVBQVU7QUFDbkMsa0VBQWtFLGlCQUFpQixjQUFjLE1BQU0sWUFBWSxpQ0FBaUM7QUFDcEosVUFBVSxnQkFBZ0IsZUFBZSxZQUFZLGlDQUFpQztBQUN0RixVQUFVLFVBQVUsZUFBZTtBQUNuQzs7QUFFQSxJQUFJLGlCQUFpQjtBQUNyQixNQUFNLDJaQUF5TTtBQUMvTTtBQUNBLGtCQUFrQixtQkFBTyxDQUFDLDJaQUF5TTs7QUFFbk87O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0JBQWdCLFVBQVU7O0FBRTFCO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsRUFBRSxVQUFVO0FBQ1o7QUFDQSxHQUFHO0FBQ0g7O0FBRUEsc0M7Ozs7Ozs7Ozs7O0FDM0RhLGlDQUFpQyxTQUFTLDJCQUEyQiw4QkFBOEI7QUFDaEg7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsZUFBZSxHQUFHLHFDQUFxQyxjQUFjLGlDQUFpQyxzQ0FBc0MsK0NBQStDO0FBQ3ZQLDhFQUE4RSxJQUFJO0FBQ2xGO0FBQ0EsOENBQThDLFNBQVM7QUFDdkQsbUJBQW1CLDBCQUEwQix1QkFBdUIsR0FBRyxxQkFBcUIsMENBQTBDLGNBQWMsWUFBWSxxQkFBcUIsS0FBSywyQ0FBMkMsU0FBUyxRQUFRLGVBQWUsb0NBQW9DLG9CQUFvQixxQkFBcUIsWUFBWSxjQUFjLEtBQUssbUJBQW1CLG1EQUFtRCw4QkFBOEIseUNBQXlDLHVCQUF1Qiw2Q0FBNkMsV0FBVyw2Q0FBNkMsZUFBZSxnQ0FBZ0MsaUNBQWlDLEtBQUssa0JBQWtCLGlFQUFpRSxHQUFHLDhCQUE4QixvQkFBb0IscUNBQXFDLDRDQUE0Qyx3Q0FBd0MsMENBQTBDO0FBQzEvQixLQUFzQyxDQUFDLHNCQUFpQixDQUFDLENBQUksQ0FBQyxVQUFVLHlCQUF5Qiw4Q0FBOEMseUNBQXlDLEVBQUUsdUNBQXVDLHVCQUF1QixLQUFLLCtDQUErQyxZQUFZLDRIQUE0SCwyQkFBMkIsY0FBYyxtQ0FBbUM7QUFDaGdCLDRCQUE0QixjQUFjLHFDQUFxQyxvRUFBb0UsbUJBQW1CLDJDQUEyQyw2QkFBNkIsK0NBQStDLEdBQUcscURBQXFELHFEQUFxRCxZQUFZLFVBQVU7QUFDaGEsOENBQThDLGlEQUFpRCxLQUFLLDJDQUEyQyxrQ0FBa0Msc0JBQXNCLHNDQUFzQyxzQkFBc0IsK0NBQStDLEtBQUssOEJBQThCLHVDQUF1QyxnQkFBZ0Isc0JBQXNCLDhCQUE4QixVQUFVLG1DQUFtQyxLQUFLLGdDQUFnQyx5Q0FBeUMsbURBQW1ELDhFQUE4RTtBQUM1ckIsOENBQThDLDhCQUE4QixLQUFLLHdCQUF3QixxQ0FBcUMsa0RBQWtELG1CQUFtQix1QkFBdUIsK0JBQStCLFVBQVUsV0FBVyxXQUFXLHNCQUFzQixvQ0FBb0MseURBQXlELDZEQUE2RCw2REFBNkQsS0FBSyxrQ0FBa0MsMkNBQTJDLGtCQUFrQiw2QkFBNkIsWUFBWSxvQ0FBb0MsV0FBVyxxRkFBcUYsUUFBUSxvQkFBb0IsS0FBSyxhQUFhLHNDQUFzQyxvQkFBb0I7QUFDLzRCO0FBQ0EsNkRBQTZELDZCQUE2QixjQUFjLCtDQUErQyxnQ0FBZ0Msb0JBQW9CLCtEQUErRCxRQUFRLFlBQVkseUJBQXlCLEtBQUssb0NBQW9DLDZDQUE2QyxpQ0FBaUMsdURBQXVELFlBQVkseUJBQXlCLEtBQUssb0NBQW9DLDZDQUE2QyxzQ0FBc0MsNkJBQTZCLDhCQUE4QjtBQUNqc0Isb0Q7Ozs7Ozs7Ozs7O0FDaEJBLDBCQUEwQixhQUFhLE9BQU8sZ0JBQWdCLHNCQUFzQixTQUFTLCtCQUErQiw0QkFBNEIsa0NBQWtDLFNBQVMsK0JBQStCLGNBQWMsR0FBRyxTQUFTLFlBQVksb0JBQW9CLHdCQUF3QixnQkFBZ0IsU0FBUyxNQUFNLFlBQVksY0FBYyxLQUFLLGlCQUFpQixZQUFZLFlBQVksWUFBWSxXQUFXLEtBQUssc0JBQXNCLGVBQWUsU0FBUyxNQUFNLFVBQVUsT0FBTyxLQUFLLHdDQUF3QyxZQUFZLFVBQVUscUNBQXFDLGVBQWUsV0FBVyxPQUFPLFNBQVMsZ0NBQWdDLG1CQUFtQixnQ0FBZ0MsZ0VBQWdFLEVBQUUsMkNBQTJDLHFCQUFxQixzQkFBc0IsNERBQTRELDhDQUE4QyxjQUFjLG1CQUFtQixnQ0FBZ0MsU0FBUyxnQ0FBZ0MsU0FBUyxvQkFBb0IsWUFBWSxZQUFZLFdBQVcsSUFBSSxzQ0FBc0MsUUFBUSxRQUFRLGlCQUFpQixpQkFBaUIsdUJBQXVCLFNBQVMsS0FBSyxnQ0FBZ0MsRzs7Ozs7Ozs7Ozs7Ozs7QUNBOXlDO0FBQ3FGO0FBQ3JGLDhCQUE4Qiw0RUFBMkI7QUFDekQsb0hBQW9ILElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksa0NBQWtDLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sb0JBQW9CO0FBQ2xRO0FBQ0EsMkZBQTJGLFNBQVMsOEdBQThHLFNBQVMseUJBQXlCLHNEQUFzRCxNQUFNLDBEQUEwRCxZQUFZLG9EQUFvRCxRQUFRLGdIQUFnSCx3QkFBd0Isb0JBQW9CLFVBQVUscURBQXFELE9BQU8sa0hBQWtILHlCQUF5QixvQkFBb0IsV0FBVyxtQkFBbUIsV0FBVyxZQUFZLFVBQVUsbUJBQW1CLHdDQUF3QyxrQkFBa0Isd0RBQXdELHdCQUF3QiwyREFBMkQscUJBQXFCLHlEQUF5RCx1QkFBdUIsMERBQTBELHNCQUFzQixzREFBc0Qsb0JBQW9CLFVBQVUsMkRBQTJELFVBQVUsZ0ZBQWdGLDJCQUEyQixtRkFBbUYsNEJBQTRCLGlGQUFpRiwyQkFBMkIsa0ZBQWtGLDRCQUE0QiwwUUFBMFEsMkJBQTJCLEdBQUcsOERBQThELHFCQUFxQixtQkFBbUIsbUJBQW1CLEdBQUcscUlBQXFJLHNCQUFzQiwyQ0FBMkMsV0FBVyxpRkFBaUYsY0FBYyxHQUFHLG9JQUFvSSxvT0FBb08sR0FBRyxnTkFBZ04sY0FBYywyQkFBMkIsV0FBVywwSUFBMEksOENBQThDLDhDQUE4QyxHQUFHLHdFQUF3RSx3QkFBd0IsR0FBRyxnTkFBZ04sMkhBQTJILDJCQUEyQixXQUFXLDhEQUE4RCxtQkFBbUIsR0FBRyx3R0FBd0csbUJBQW1CLG1CQUFtQix1QkFBdUIsNkJBQTZCLEdBQUcsT0FBTyxvQkFBb0IsR0FBRyxPQUFPLGdCQUFnQixHQUFHLCtaQUErWixtQkFBbUIsa0NBQWtDLFdBQVcseUtBQXlLLHlCQUF5Qiw0QkFBNEIsOEJBQThCLHNCQUFzQixXQUFXLG9KQUFvSixpQ0FBaUMsR0FBRywySUFBMkksK0JBQStCLEdBQUcsZ0ZBQWdGLHVCQUF1QixlQUFlLEdBQUcsa0ZBQWtGLG1DQUFtQyxHQUFHLGdOQUFnTixxQkFBcUIsR0FBRyxnSUFBZ0ksZUFBZSxHQUFHLGdGQUFnRiw2QkFBNkIsR0FBRyw4SUFBOEksaUJBQWlCLEdBQUcsMEhBQTBILGtDQUFrQyxpQ0FBaUMsV0FBVyxpR0FBaUcsNkJBQTZCLEdBQUcsa0tBQWtLLCtCQUErQiwwQkFBMEIsV0FBVyxvR0FBb0csdUJBQXVCLEdBQUcsK1ZBQStWLGNBQWMsR0FBRyxVQUFVLGtDQUFrQywyQkFBMkIsR0FBRyxpS0FBaUssd0JBQXdCLCtDQUErQyxHQUFHLFlBQVksY0FBYyxlQUFlLEdBQUcsV0FBVyxxQkFBcUIsY0FBYyxlQUFlLEdBQUcsc1dBQXNXLG9DQUFvQyw2QkFBNkIsV0FBVywySUFBMkkseUJBQXlCLHlCQUF5QixHQUFHLGlwQ0FBaXBDLDJCQUEyQiw0QkFBNEIsZ0NBQWdDLGtDQUFrQyxXQUFXLGtFQUFrRSwwQkFBMEIsR0FBRyx3R0FBd0csTUFBTSw2TkFBNk4sd0JBQXdCLEdBQUcsWUFBWSxxQkFBcUIsR0FBRyx1REFBdUQsZUFBZSxtQkFBbUIsR0FBRywrREFBK0QsZUFBZSxtQkFBbUIsR0FBRyw4Q0FBOEMsZUFBZSxtQkFBbUIsR0FBRyw4QkFBOEIsb0JBQW9CLEdBQUcsU0FBUyw4QkFBOEIsR0FBRywrQkFBK0IsdUJBQXVCLHlCQUF5QixHQUFHLHNGQUFzRixtQkFBbUIsNkJBQTZCLEdBQUcsNlRBQTZULGVBQWUseUJBQXlCLG1CQUFtQixHQUFHLHlQQUF5UCx3SEFBd0gsR0FBRywwU0FBMFMsbUJBQW1CLDJCQUEyQixHQUFHLG1MQUFtTCxvQkFBb0IsaUJBQWlCLEdBQUcsSUFBSSxzQkFBc0IsNENBQTRDLDJCQUEyQiw0QkFBNEIsd0NBQXdDLGtDQUFrQywyQkFBMkIsYUFBYSxXQUFXLDRCQUE0QixhQUFhLGlCQUFpQiw0QkFBNEIsYUFBYSxpQkFBaUIsNkJBQTZCLGFBQWEsa0JBQWtCLDZCQUE2QixhQUFhLGtCQUFrQiw2QkFBNkIsYUFBYSxrQkFBa0IsdUJBQXVCLG9CQUFvQix1QkFBdUIsb0JBQW9CLFlBQVksa0JBQWtCLFlBQVksa0JBQWtCLFVBQVUsZ0JBQWdCLFNBQVMsZUFBZSxXQUFXLFFBQVEsVUFBVSxXQUFXLFNBQVMsV0FBVyxXQUFXLGFBQWEsZUFBZSxVQUFVLFNBQVMsV0FBVyxVQUFVLFVBQVUsU0FBUyxjQUFjLGNBQWMsY0FBYyxjQUFjLFVBQVUsYUFBYSxVQUFVLFFBQVEsYUFBYSxRQUFRLGFBQWEsUUFBUSxXQUFXLGFBQWEsV0FBVyxjQUFjLFNBQVMsV0FBVyxTQUFTLFFBQVEsYUFBYSxhQUFhLGFBQWEsZ0JBQWdCLFFBQVEsV0FBVyxRQUFRLFdBQVcsUUFBUSxXQUFXLFFBQVEsV0FBVyxRQUFRLFdBQVcsY0FBYyxXQUFXLGVBQWUsWUFBWSxXQUFXLGlCQUFpQixrQkFBa0IsU0FBUyxnQkFBZ0IsbUJBQW1CLFFBQVEsZ0JBQWdCLG1CQUFtQixRQUFRLGtCQUFrQixxQkFBcUIsUUFBUSxpQkFBaUIsa0JBQWtCLFFBQVEsb0JBQW9CLHFCQUFxQixRQUFRLGdCQUFnQixtQkFBbUIsUUFBUSxvQkFBb0IscUJBQXFCLFNBQVMsbUJBQW1CLFNBQVMsZ0JBQWdCLFNBQVMsa0JBQWtCLFFBQVEsbUJBQW1CLFNBQVMsZ0JBQWdCLFFBQVEsZ0JBQWdCLFNBQVMsZ0JBQWdCLFNBQVMscUJBQXFCLFFBQVEsZ0JBQWdCLFNBQVMsZ0JBQWdCLFNBQVMsbUJBQW1CLFNBQVMsaUJBQWlCLFdBQVcsa0JBQWtCLFdBQVcsaUJBQWlCLFFBQVEscUJBQXFCLFFBQVEsb0JBQW9CLFFBQVEsa0JBQWtCLFNBQVMsZ0JBQWdCLFFBQVEsa0JBQWtCLFFBQVEscUJBQXFCLFVBQVUsa0JBQWtCLFFBQVEsc0JBQXNCLFNBQVMsbUJBQW1CLFFBQVEsbUJBQW1CLFFBQVEsbUJBQW1CLFFBQVEscUJBQXFCLFVBQVUsbUJBQW1CLFNBQVMsb0JBQW9CLFFBQVEsc0JBQXNCLFFBQVEsb0JBQW9CLFFBQVEscUJBQXFCLFFBQVEsbUJBQW1CLFFBQVEsa0JBQWtCLFFBQVEsbUJBQW1CLFFBQVEsb0JBQW9CLFFBQVEsbUJBQW1CLFFBQVEsZUFBZSxRQUFRLHNCQUFzQixRQUFRLGtCQUFrQixVQUFVLGlCQUFpQixTQUFTLG9CQUFvQixTQUFTLGNBQWMsZ0JBQWdCLHFCQUFxQixRQUFRLGFBQWEsZUFBZSxvQkFBb0IsUUFBUSxhQUFhLFVBQVUsYUFBYSxRQUFRLFlBQVksT0FBTyxlQUFlLFFBQVEsY0FBYyxRQUFRLFlBQVksUUFBUSxZQUFZLFFBQVEsWUFBWSxPQUFPLGNBQWMsT0FBTyxZQUFZLFFBQVEsWUFBWSxRQUFRLFlBQVksT0FBTyxlQUFlLFlBQVksYUFBYSxVQUFVLFlBQVksVUFBVSxZQUFZLE9BQU8sZUFBZSxRQUFRLGVBQWUsT0FBTyxZQUFZLFFBQVEsV0FBVyxPQUFPLGNBQWMsVUFBVSxXQUFXLFFBQVEsWUFBWSxRQUFRLFlBQVksaUJBQWlCLFlBQVksUUFBUSxZQUFZLFFBQVEsWUFBWSxRQUFRLFlBQVksUUFBUSxXQUFXLE9BQU8sY0FBYyxRQUFRLFdBQVcsUUFBUSxXQUFXLFFBQVEsYUFBYSxPQUFPLGFBQWEsT0FBTyxXQUFXLFFBQVEsV0FBVyxRQUFRLFdBQVcsUUFBUSxXQUFXLE9BQU8sY0FBYyxhQUFhLGlCQUFpQixPQUFPLFdBQVcsVUFBVSxXQUFXLFFBQVEsYUFBYSxXQUFXLGNBQWMsYUFBYSxnQkFBZ0IsY0FBYyxlQUFlLGFBQWEsOEJBQThCLDJCQUEyQixzQkFBc0IsWUFBWSxnQkFBZ0IsYUFBYSxnQkFBZ0IsYUFBYSxnQkFBZ0IsWUFBWSxnQkFBZ0IsYUFBYSxjQUFjLFVBQVUsWUFBWSxhQUFhLFVBQVUsYUFBYSxZQUFZLGFBQWEsbUJBQW1CLG1CQUFtQixjQUFjLGNBQWMsY0FBYyxlQUFlLGVBQWUsMk1BQTJNLHNCQUFzQiw2QkFBNkIsc0JBQXNCLHNCQUFzQixpQkFBaUIscUJBQXFCLG1CQUFtQix5QkFBeUIsa0JBQWtCLGVBQWUsc0JBQXNCLG1CQUFtQixlQUFlLHlCQUF5QixzQkFBc0IscUJBQXFCLGlCQUFpQixlQUFlLFlBQVksYUFBYSxxQkFBcUIsWUFBWSxzQkFBc0IsYUFBYSxlQUFlLHNCQUFzQixtQkFBbUIsZ0JBQWdCLG1CQUFtQixhQUFhLHFCQUFxQixlQUFlLHVCQUF1QixtQkFBbUIsOEJBQThCLGtCQUFrQix1QkFBdUIsaUJBQWlCLDJCQUEyQixlQUFlLHlCQUF5QixTQUFTLFNBQVMsVUFBVSxXQUFXLFNBQVMsU0FBUyxTQUFTLFdBQVcsU0FBUyxZQUFZLFNBQVMsWUFBWSxXQUFXLHVCQUF1QixrQkFBa0IsV0FBVyxhQUFhLFlBQVkscUJBQXFCLGdCQUFnQixXQUFXLGFBQWEsV0FBVyxxQkFBcUIsZ0JBQWdCLCtDQUErQyx1QkFBdUIsNERBQTRELHFEQUFxRCxtQkFBbUIsZ0JBQWdCLHFCQUFxQixrQkFBa0IscUJBQXFCLGtCQUFrQixtQkFBbUIsZ0JBQWdCLHFCQUFxQixtQkFBbUIsZUFBZSx5QkFBeUIsV0FBVyxzQkFBc0IsY0FBYyxxQkFBcUIsZ0JBQWdCLHFCQUFxQixjQUFjLHNCQUFzQixjQUFjLHVCQUF1QixjQUFjLHVCQUF1QixhQUFhLCtCQUErQixnQ0FBZ0MsVUFBVSxpQkFBaUIsWUFBWSxpQkFBaUIsY0FBYyxxQkFBcUIsY0FBYyx1QkFBdUIsY0FBYyxzQkFBc0IsWUFBWSxxQkFBcUIsWUFBWSx3QkFBd0IsY0FBYyx3QkFBd0IsWUFBWSx1QkFBdUIsZ0JBQWdCLG1CQUFtQixlQUFlLGtCQUFrQix1QkFBdUIsc0JBQXNCLDJEQUEyRCxtQkFBbUIsc0JBQXNCLDJEQUEyRCxtQkFBbUIsc0JBQXNCLDJEQUEyRCx3QkFBd0Isc0JBQXNCLDBEQUEwRCxtQkFBbUIsc0JBQXNCLDJEQUEyRCxvQkFBb0Isc0JBQXNCLHlEQUF5RCwwQkFBMEIsc0JBQXNCLHlEQUF5RCxxQkFBcUIsc0JBQXNCLHlEQUF5RCxvQkFBb0Isc0JBQXNCLHlEQUF5RCxxQkFBcUIsc0JBQXNCLDBEQUEwRCxtQkFBbUIsc0JBQXNCLDBEQUEwRCwwQkFBMEIsc0JBQXNCLDBEQUEwRCxvQkFBb0Isc0JBQXNCLHlEQUF5RCxtQkFBbUIsc0JBQXNCLHlEQUF5RCxtQkFBbUIsc0JBQXNCLHlEQUF5RCx5QkFBeUIsc0JBQXNCLHlEQUF5RCxtQkFBbUIsc0JBQXNCLDBEQUEwRCxxQkFBcUIsc0JBQXNCLHlEQUF5RCwwQkFBMEIsc0JBQXNCLDBEQUEwRCxxQkFBcUIsc0JBQXNCLDBEQUEwRCxtQkFBbUIsc0JBQXNCLHlEQUF5RCxrQkFBa0Isc0JBQXNCLHlEQUF5RCxzQkFBc0IseUJBQXlCLFlBQVksa0JBQWtCLDJEQUEyRCxlQUFlLGtCQUFrQiwyREFBMkQsaUJBQWlCLGtCQUFrQix3REFBd0QscUJBQXFCLGtCQUFrQix5REFBeUQsZUFBZSxrQkFBa0Isd0RBQXdELGlCQUFpQixrQkFBa0IsMERBQTBELGNBQWMsa0JBQWtCLHlEQUF5RCxnQkFBZ0Isa0JBQWtCLHlEQUF5RCxvQkFBb0Isa0JBQWtCLHdEQUF3RCxvQkFBb0Isa0JBQWtCLDBEQUEwRCxlQUFlLGtCQUFrQiwyREFBMkQsZ0JBQWdCLGtCQUFrQix5REFBeUQsc0JBQXNCLGtCQUFrQix5REFBeUQsaUJBQWlCLGtCQUFrQix5REFBeUQsZ0JBQWdCLGtCQUFrQix5REFBeUQsZUFBZSxrQkFBa0IsMERBQTBELHNCQUFzQixrQkFBa0IsMERBQTBELGVBQWUsa0JBQWtCLHlEQUF5RCxlQUFlLGtCQUFrQix5REFBeUQsZUFBZSxrQkFBa0IsMERBQTBELGlCQUFpQixrQkFBa0IseURBQXlELHNCQUFzQixrQkFBa0IsMERBQTBELGlCQUFpQixrQkFBa0IsMERBQTBELGVBQWUsa0JBQWtCLHlEQUF5RCxjQUFjLGtCQUFrQix5REFBeUQsa0JBQWtCLDZCQUE2QixlQUFlLGtCQUFrQiwyREFBMkQsb0JBQW9CLGtCQUFrQiwyREFBMkQsZ0JBQWdCLGtCQUFrQiwyREFBMkQsc0JBQXNCLGtCQUFrQiwyREFBMkQsaUJBQWlCLGtCQUFrQiwyREFBMkQsZ0JBQWdCLGtCQUFrQiwyREFBMkQsaUJBQWlCLGtCQUFrQiwyREFBMkQsZUFBZSxrQkFBa0IsMkRBQTJELHNCQUFzQixrQkFBa0IsMkRBQTJELGdCQUFnQixrQkFBa0IsMkRBQTJELGVBQWUsa0JBQWtCLDJEQUEyRCxlQUFlLGtCQUFrQiwyREFBMkQscUJBQXFCLGtCQUFrQiwyREFBMkQsZUFBZSxrQkFBa0IsMkRBQTJELGlCQUFpQixrQkFBa0IsMkRBQTJELHNCQUFzQixrQkFBa0IsMkRBQTJELGlCQUFpQixrQkFBa0IsMkRBQTJELGVBQWUsa0JBQWtCLDJEQUEyRCxjQUFjLGtCQUFrQiwyREFBMkQsb0JBQW9CLGtCQUFrQix3REFBd0QsZ0JBQWdCLGtCQUFrQix3REFBd0Qsc0JBQXNCLGtCQUFrQix5REFBeUQsZ0JBQWdCLGtCQUFrQix5REFBeUQsaUJBQWlCLGtCQUFrQiwwREFBMEQsZUFBZSxrQkFBa0IsMERBQTBELHNCQUFzQixrQkFBa0IseURBQXlELGdCQUFnQixrQkFBa0Isd0RBQXdELGVBQWUsa0JBQWtCLHVEQUF1RCxlQUFlLGtCQUFrQix3REFBd0QscUJBQXFCLGtCQUFrQix3REFBd0QsZUFBZSxrQkFBa0IseURBQXlELGlCQUFpQixrQkFBa0IseURBQXlELHNCQUFzQixrQkFBa0IseURBQXlELGlCQUFpQixrQkFBa0IseURBQXlELGVBQWUsa0JBQWtCLHlEQUF5RCxjQUFjLGtCQUFrQix5REFBeUQsWUFBWSxrQkFBa0IscURBQXFELGVBQWUsa0JBQWtCLHdEQUF3RCxvQkFBb0Isa0JBQWtCLDJEQUEyRCxnQkFBZ0Isa0JBQWtCLDJEQUEyRCxzQkFBc0Isa0JBQWtCLDJEQUEyRCxpQkFBaUIsa0JBQWtCLDJEQUEyRCxnQkFBZ0Isa0JBQWtCLDJEQUEyRCxpQkFBaUIsa0JBQWtCLDJEQUEyRCxlQUFlLGtCQUFrQiwyREFBMkQsc0JBQXNCLGtCQUFrQiwyREFBMkQsZ0JBQWdCLGtCQUFrQiwyREFBMkQsZUFBZSxrQkFBa0IsMkRBQTJELGVBQWUsa0JBQWtCLDJEQUEyRCxxQkFBcUIsa0JBQWtCLDJEQUEyRCxlQUFlLGtCQUFrQiwyREFBMkQsaUJBQWlCLGtCQUFrQiwyREFBMkQsc0JBQXNCLGtCQUFrQiwyREFBMkQsaUJBQWlCLGtCQUFrQiwyREFBMkQsZUFBZSxrQkFBa0IsMkRBQTJELGNBQWMsa0JBQWtCLDJEQUEyRCxpQkFBaUIsb0JBQW9CLGlCQUFpQixvQkFBb0IscUJBQXFCLHlFQUF5RSxzQkFBc0IsMkJBQTJCLDBGQUEwRixpQkFBaUIsMkJBQTJCLDJGQUEyRixrQkFBa0IsMkJBQTJCLHlGQUF5Rix3QkFBd0IsMkJBQTJCLHlGQUF5RixtQkFBbUIsMkJBQTJCLHlGQUF5RixrQkFBa0IsMkJBQTJCLHlGQUF5RixtQkFBbUIsMkJBQTJCLDBGQUEwRixpQkFBaUIsMkJBQTJCLDBGQUEwRix3QkFBd0IsMkJBQTJCLDBGQUEwRixrQkFBa0IsMkJBQTJCLHlGQUF5RixpQkFBaUIsMkJBQTJCLHlGQUF5RixpQkFBaUIsMkJBQTJCLHlGQUF5Rix1QkFBdUIsMkJBQTJCLHlGQUF5RixpQkFBaUIsMkJBQTJCLDBGQUEwRixtQkFBbUIsMkJBQTJCLHlGQUF5Rix3QkFBd0IsMkJBQTJCLDBGQUEwRixtQkFBbUIsMkJBQTJCLDBGQUEwRixpQkFBaUIsMkJBQTJCLHlGQUF5RixnQkFBZ0IsMkJBQTJCLHlGQUF5Rix1QkFBdUIsMkJBQTJCLHlGQUF5RixvQkFBb0IseUJBQXlCLGVBQWUseUJBQXlCLGdCQUFnQix5QkFBeUIsc0JBQXNCLHlCQUF5QixpQkFBaUIseUJBQXlCLGdCQUFnQix5QkFBeUIsaUJBQWlCLHlCQUF5QixlQUFlLHlCQUF5QixzQkFBc0IseUJBQXlCLGdCQUFnQix5QkFBeUIsZUFBZSx5QkFBeUIsZUFBZSx5QkFBeUIscUJBQXFCLHlCQUF5QixlQUFlLHlCQUF5QixpQkFBaUIseUJBQXlCLHNCQUFzQix5QkFBeUIsaUJBQWlCLHlCQUF5QixlQUFlLHlCQUF5QixjQUFjLHlCQUF5QixxQkFBcUIseUJBQXlCLE9BQU8sYUFBYSxPQUFPLGdCQUFnQixPQUFPLGFBQWEsT0FBTyxlQUFlLE9BQU8sWUFBWSxXQUFXLGlCQUFpQixPQUFPLGVBQWUsT0FBTyxnQkFBZ0IsT0FBTyxnQkFBZ0IsUUFBUSxlQUFlLFFBQVEsa0JBQWtCLG1CQUFtQixTQUFTLGlCQUFpQixvQkFBb0IsUUFBUSxvQkFBb0IsdUJBQXVCLFFBQVEsaUJBQWlCLG9CQUFvQixTQUFTLGlCQUFpQixvQkFBb0IsU0FBUyxrQkFBa0IsbUJBQW1CLFlBQVksc0JBQXNCLHVCQUF1QixRQUFRLG9CQUFvQixxQkFBcUIsUUFBUSxtQkFBbUIsc0JBQXNCLFNBQVMsaUJBQWlCLG9CQUFvQixTQUFTLGlCQUFpQixvQkFBb0IsUUFBUSxvQkFBb0IsdUJBQXVCLFlBQVkscUJBQXFCLHdCQUF3QixZQUFZLHFCQUFxQix3QkFBd0IsUUFBUSxvQkFBb0IscUJBQXFCLFFBQVEsb0JBQW9CLHVCQUF1QixRQUFRLHFCQUFxQixzQkFBc0IsUUFBUSxpQkFBaUIsb0JBQW9CLFFBQVEsa0JBQWtCLG1CQUFtQixRQUFRLHFCQUFxQixzQkFBc0IsUUFBUSxxQkFBcUIsc0JBQXNCLFFBQVEsaUJBQWlCLGtCQUFrQixRQUFRLHFCQUFxQixzQkFBc0IsWUFBWSxzQkFBc0IsdUJBQXVCLFFBQVEscUJBQXFCLHNCQUFzQixTQUFTLGlCQUFpQixTQUFTLG9CQUFvQixRQUFRLGlCQUFpQixRQUFRLHNCQUFzQixRQUFRLHNCQUFzQixRQUFRLG1CQUFtQixRQUFRLG9CQUFvQixTQUFTLG9CQUFvQixTQUFTLGlCQUFpQixTQUFTLGtCQUFrQixTQUFTLGlCQUFpQixTQUFTLHFCQUFxQixTQUFTLG9CQUFvQixTQUFTLG1CQUFtQixRQUFRLGtCQUFrQixRQUFRLGlCQUFpQixRQUFRLG9CQUFvQixRQUFRLGlCQUFpQixTQUFTLG1CQUFtQixRQUFRLHFCQUFxQixRQUFRLHNCQUFzQixRQUFRLHFCQUFxQixRQUFRLHNCQUFzQixRQUFRLGtCQUFrQixRQUFRLHFCQUFxQixZQUFZLHFCQUFxQixZQUFZLHdCQUF3QixRQUFRLG9CQUFvQixRQUFRLG1CQUFtQixZQUFZLHFCQUFxQixZQUFZLHdCQUF3QixRQUFRLG1CQUFtQixRQUFRLHVCQUF1QixZQUFZLHFCQUFxQixZQUFZLHdCQUF3QixRQUFRLG9CQUFvQixRQUFRLG9CQUFvQixRQUFRLHNCQUFzQixRQUFRLHFCQUFxQixRQUFRLHNCQUFzQixRQUFRLHNCQUFzQixTQUFTLHNCQUFzQixTQUFTLGlCQUFpQixlQUFlLGtCQUFrQixjQUFjLGlCQUFpQixhQUFhLGdCQUFnQixnQkFBZ0Isc0JBQXNCLGNBQWMsbUNBQW1DLFdBQVcsa0JBQWtCLG9CQUFvQixXQUFXLG1CQUFtQixvQkFBb0IsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksa0JBQWtCLGNBQWMsV0FBVyxtQkFBbUIsb0JBQW9CLGFBQWEsZUFBZSxtQkFBbUIsWUFBWSxpQkFBaUIsaUJBQWlCLFlBQVksa0JBQWtCLG1CQUFtQixZQUFZLG1CQUFtQixvQkFBb0IsWUFBWSxlQUFlLGNBQWMsWUFBWSxpQkFBaUIsY0FBYyxZQUFZLGVBQWUsY0FBYyxZQUFZLGVBQWUsY0FBYyxlQUFlLGdCQUFnQixpQkFBaUIsZ0JBQWdCLGFBQWEsZ0JBQWdCLGNBQWMsZ0JBQWdCLGVBQWUsZ0JBQWdCLGFBQWEseUJBQXlCLGNBQWMsMEJBQTBCLG1CQUFtQixrQkFBa0IsZ0JBQWdCLGNBQWMsa0JBQWtCLGdCQUFnQixjQUFjLG1CQUFtQixnQkFBZ0Isa0JBQWtCLGtCQUFrQixzQkFBc0IsaUJBQWlCLHVCQUF1QixpQkFBaUIsb0JBQW9CLCtDQUErQyxzQkFBc0Isb0JBQW9CLGdEQUFnRCx1QkFBdUIsb0JBQW9CLGdEQUFnRCxzQkFBc0Isb0JBQW9CLCtDQUErQyxzQkFBc0Isb0JBQW9CLCtDQUErQyxzQkFBc0Isb0JBQW9CLGtEQUFrRCxxQkFBcUIsb0JBQW9CLGtEQUFrRCxpQkFBaUIsb0JBQW9CLGdEQUFnRCxpQkFBaUIsb0JBQW9CLGtEQUFrRCxpQkFBaUIsb0JBQW9CLCtDQUErQyxpQkFBaUIsb0JBQW9CLGlEQUFpRCxpQkFBaUIsb0JBQW9CLGlEQUFpRCxtQkFBbUIsb0JBQW9CLGdEQUFnRCxpQkFBaUIsb0JBQW9CLGlEQUFpRCxnQkFBZ0Isb0JBQW9CLGdEQUFnRCxpQkFBaUIsb0JBQW9CLGtEQUFrRCxjQUFjLG9CQUFvQixrREFBa0Qsc0JBQXNCLG9CQUFvQixpREFBaUQsa0JBQWtCLG9CQUFvQixnREFBZ0Qsd0JBQXdCLG9CQUFvQixnREFBZ0QsbUJBQW1CLG9CQUFvQixnREFBZ0Qsa0JBQWtCLG9CQUFvQixnREFBZ0QsbUJBQW1CLG9CQUFvQixpREFBaUQsaUJBQWlCLG9CQUFvQixpREFBaUQsd0JBQXdCLG9CQUFvQixpREFBaUQsa0JBQWtCLG9CQUFvQixnREFBZ0QsaUJBQWlCLG9CQUFvQixnREFBZ0QsaUJBQWlCLG9CQUFvQixnREFBZ0QsaUJBQWlCLG9CQUFvQixpREFBaUQsd0JBQXdCLG9CQUFvQixpREFBaUQsbUJBQW1CLG9CQUFvQixpREFBaUQsaUJBQWlCLG9CQUFvQixnREFBZ0QsZ0JBQWdCLG9CQUFvQixnREFBZ0QsaUJBQWlCLG9CQUFvQixrREFBa0QsaUJBQWlCLG9CQUFvQiwrQ0FBK0Msa0JBQWtCLG9CQUFvQiwrQ0FBK0Msd0JBQXdCLG9CQUFvQixnREFBZ0QsbUJBQW1CLG9CQUFvQixnREFBZ0Qsa0JBQWtCLG9CQUFvQixnREFBZ0QsbUJBQW1CLG9CQUFvQixpREFBaUQsaUJBQWlCLG9CQUFvQixpREFBaUQsd0JBQXdCLG9CQUFvQixpREFBaUQsa0JBQWtCLG9CQUFvQixnREFBZ0QsaUJBQWlCLG9CQUFvQixnREFBZ0QsaUJBQWlCLG9CQUFvQixnREFBZ0QsdUJBQXVCLG9CQUFvQixnREFBZ0QsaUJBQWlCLG9CQUFvQixpREFBaUQsbUJBQW1CLG9CQUFvQixnREFBZ0Qsd0JBQXdCLG9CQUFvQixnREFBZ0QsbUJBQW1CLG9CQUFvQixpREFBaUQsaUJBQWlCLG9CQUFvQixnREFBZ0QsZ0JBQWdCLG9CQUFvQixnREFBZ0QsaUJBQWlCLG9CQUFvQixrREFBa0Qsa0JBQWtCLG9CQUFvQiwrQ0FBK0Msd0JBQXdCLG9CQUFvQixnREFBZ0QsbUJBQW1CLG9CQUFvQixnREFBZ0Qsa0JBQWtCLG9CQUFvQixnREFBZ0QsbUJBQW1CLG9CQUFvQixpREFBaUQsaUJBQWlCLG9CQUFvQixpREFBaUQsd0JBQXdCLG9CQUFvQixnREFBZ0Qsa0JBQWtCLG9CQUFvQixnREFBZ0QsaUJBQWlCLG9CQUFvQiwrQ0FBK0MsaUJBQWlCLG9CQUFvQixnREFBZ0QsdUJBQXVCLG9CQUFvQixnREFBZ0QsaUJBQWlCLG9CQUFvQixpREFBaUQsbUJBQW1CLG9CQUFvQixnREFBZ0Qsd0JBQXdCLG9CQUFvQixnREFBZ0QsbUJBQW1CLG9CQUFvQixpREFBaUQsaUJBQWlCLG9CQUFvQixnREFBZ0QsZ0JBQWdCLG9CQUFvQixnREFBZ0QsY0FBYyxvQkFBb0IsNENBQTRDLG1CQUFtQixzQkFBc0IsZ0JBQWdCLHFCQUFxQixlQUFlLG1DQUFtQyxrQ0FBa0MsdUNBQXVDLDJCQUEyQix5REFBeUQsMkNBQTJDLDJCQUEyQix5REFBeUQsa0NBQWtDLDJCQUEyQix5REFBeUQsNENBQTRDLDZCQUE2QixnREFBZ0QsNkJBQTZCLHVDQUF1Qyw2QkFBNkIsY0FBYyxZQUFZLGFBQWEsVUFBVSxlQUFlLFVBQVUsY0FBYyxhQUFhLGFBQWEsYUFBYSxhQUFhLGtGQUFrRix1R0FBdUcsYUFBYSxvRkFBb0YsdUdBQXVHLGFBQWEsc0ZBQXNGLHVHQUF1Ryx1QkFBdUIsd0hBQXdILHVHQUF1RyxrQkFBa0IseUhBQXlILHVHQUF1RyxtQkFBbUIsdUhBQXVILHVHQUF1Ryx5QkFBeUIsdUhBQXVILHVHQUF1RyxvQkFBb0IsdUhBQXVILHVHQUF1RyxtQkFBbUIsdUhBQXVILHVHQUF1RyxvQkFBb0Isd0hBQXdILHVHQUF1RyxrQkFBa0Isd0hBQXdILHVHQUF1Ryx5QkFBeUIsd0hBQXdILHVHQUF1RyxtQkFBbUIsdUhBQXVILHVHQUF1RyxrQkFBa0IsdUhBQXVILHVHQUF1RyxrQkFBa0IsdUhBQXVILHVHQUF1Ryx3QkFBd0IsdUhBQXVILHVHQUF1RyxrQkFBa0Isd0hBQXdILHVHQUF1RyxvQkFBb0IsdUhBQXVILHVHQUF1Ryx5QkFBeUIsd0hBQXdILHVHQUF1RyxvQkFBb0Isd0hBQXdILHVHQUF1RyxrQkFBa0IsdUhBQXVILHVHQUF1RyxpQkFBaUIsdUhBQXVILHVHQUF1RyxlQUFlLHNCQUFzQix1R0FBdUcsdUJBQXVCLGlJQUFpSSx1R0FBdUcsa0JBQWtCLGdJQUFnSSx1R0FBdUcsbUJBQW1CLGdJQUFnSSx1R0FBdUcseUJBQXlCLGlJQUFpSSx1R0FBdUcsb0JBQW9CLGlJQUFpSSx1R0FBdUcsbUJBQW1CLGlJQUFpSSx1R0FBdUcsb0JBQW9CLGtJQUFrSSx1R0FBdUcsa0JBQWtCLGtJQUFrSSx1R0FBdUcseUJBQXlCLGtJQUFrSSx1R0FBdUcsbUJBQW1CLGlJQUFpSSx1R0FBdUcsa0JBQWtCLGlJQUFpSSx1R0FBdUcsa0JBQWtCLGlJQUFpSSx1R0FBdUcsd0JBQXdCLGlJQUFpSSx1R0FBdUcsa0JBQWtCLGtJQUFrSSx1R0FBdUcsb0JBQW9CLGlJQUFpSSx1R0FBdUcseUJBQXlCLGlJQUFpSSx1R0FBdUcsb0JBQW9CLGtJQUFrSSx1R0FBdUcsa0JBQWtCLGlJQUFpSSx1R0FBdUcsaUJBQWlCLGlJQUFpSSx1R0FBdUcsYUFBYSw0Q0FBNEMsdUdBQXVHLGdCQUFnQiw4QkFBOEIsbUJBQW1CLGtCQUFrQix3QkFBd0Isd0RBQXdELDBCQUEwQixnQkFBZ0IsMEJBQTBCLFlBQVksMEJBQTBCLGdCQUFnQiwwQkFBMEIsMERBQTBELHNCQUFzQiw4QkFBOEIsNEJBQTRCLHVCQUF1QixtQkFBbUIsc0JBQXNCLHFCQUFxQiw2QkFBNkIsNkJBQTZCLHdCQUF3Qix3QkFBd0Isd0JBQXdCLHlCQUF5Qix5QkFBeUIscU5BQXFOLHlCQUF5QiwyQkFBMkIsK0JBQStCLGdDQUFnQyxpQ0FBaUMsa0NBQWtDLGtDQUFrQyxrRUFBa0Usb0NBQW9DLG9DQUFvQyxPQUFPLGdDQUFnQyxlQUFlLHVEQUF1RCxvQkFBb0IsT0FBTyxzREFBc0Qsb0JBQW9CLE9BQU8scUZBQXFGLG9CQUFvQixPQUFPLHNEQUFzRCxrQkFBa0IsaUJBQWlCLGlCQUFpQixxREFBcUQsa0JBQWtCLGlCQUFpQixpQkFBaUIsK0VBQStFLGtCQUFrQixpQkFBaUIsaUJBQWlCLHVEQUF1RCxnQ0FBZ0MsT0FBTyxzREFBc0QsZ0NBQWdDLE9BQU8scUZBQXFGLGdDQUFnQyxPQUFPLHlGQUF5Riw2Q0FBNkMsT0FBTyxpREFBaUQsNkNBQTZDLE9BQU8sMkVBQTJFLDZDQUE2QyxPQUFPLDZCQUE2Qix3Q0FBd0MsT0FBTyx5REFBeUQsNkJBQTZCLDRCQUE0Qiw0QkFBNEIsd0RBQXdELDZCQUE2Qiw0QkFBNEIsNEJBQTRCLHFGQUFxRiw2QkFBNkIsNEJBQTRCLDRCQUE0QiwwRUFBMEUsc0JBQXNCLG9CQUFvQixvQkFBb0Isc0JBQXNCLGNBQWMsY0FBYyxlQUFlLGlCQUFpQixxQkFBcUIsd0JBQXdCLHNCQUFzQix1QkFBdUIseUJBQXlCLE9BQU8sOEhBQThILHFCQUFxQixzQkFBc0IsMkRBQTJELDRIQUE0SCxxQkFBcUIsc0JBQXNCLDJEQUEyRCxvSEFBb0gscUJBQXFCLHNCQUFzQiwyREFBMkQsa0ZBQWtGLHFCQUFxQixtQ0FBbUMscUJBQXFCLDhCQUE4QixrQ0FBa0Msb0JBQW9CLFlBQVksK0JBQStCLHdFQUF3RSxrREFBa0QsdUNBQXVDLE9BQU8sNEJBQTRCLG9CQUFvQiwrQ0FBK0Msa0NBQWtDLHNCQUFzQixzQkFBc0IsdUJBQXVCLHNDQUFzQyw0QkFBNEIscUJBQXFCLHFCQUFxQix3QkFBd0Isc0JBQXNCLHFCQUFxQiwrQkFBK0Isb0JBQW9CLE9BQU8sMENBQTBDLHNEQUFzRCxzREFBc0QsT0FBTyxzRUFBc0UsNkJBQTZCLCtCQUErQixvQkFBb0IsK0NBQStDLHFDQUFxQyxzQkFBc0Isb0JBQW9CLHVCQUF1QixzQ0FBc0MsNEJBQTRCLHFCQUFxQixxQkFBcUIsd0JBQXdCLHlCQUF5Qix3QkFBd0IsK0JBQStCLG9CQUFvQixPQUFPLG9DQUFvQyxzQkFBc0IsbUJBQW1CLG9CQUFvQiw0QkFBNEIsMEJBQTBCLHlCQUF5Qiw2QkFBNkIsNkJBQTZCLHdCQUF3Qix3QkFBd0Isd0JBQXdCLHlCQUF5Qix5QkFBeUIscU5BQXFOLDRCQUE0QixrQ0FBa0MsaUNBQWlDLG1DQUFtQyxrQ0FBa0Msa0VBQWtFLG9DQUFvQyxvQ0FBb0MsT0FBTyw2Q0FBNkMsc0RBQXNELHNEQUFzRCxPQUFPLDJDQUEyQyxzQkFBc0IsMkRBQTJELG9GQUFvRixzQkFBc0IsMERBQTBELHlDQUF5QyxzQkFBc0IsMkRBQTJELDJDQUEyQyxzQkFBc0IseURBQXlELGdEQUFnRCxzQkFBc0IseURBQXlELDBDQUEwQyxzQkFBc0IseURBQXlELDJDQUEyQyxzQkFBc0IsMERBQTBELHlDQUF5QyxzQkFBc0IsMERBQTBELGdEQUFnRCxzQkFBc0IsMERBQTBELDBDQUEwQyxzQkFBc0IseURBQXlELHlDQUF5QyxzQkFBc0IseURBQXlELHlDQUF5QyxzQkFBc0IseURBQXlELCtDQUErQyxzQkFBc0IseURBQXlELHlDQUF5QyxzQkFBc0IsMERBQTBELDJDQUEyQyxzQkFBc0IseURBQXlELDJDQUEyQyxzQkFBc0IsMERBQTBELGdEQUFnRCxzQkFBc0IsMERBQTBELHlDQUF5QyxzQkFBc0IseURBQXlELHdDQUF3QyxzQkFBc0IseURBQXlELGdQQUFnUCxzQkFBc0IsMERBQTBELG9CQUFvQixpREFBaUQsOEtBQThLLHNCQUFzQiwyREFBMkQsb0JBQW9CLGtEQUFrRCxzTEFBc0wsc0JBQXNCLHlEQUF5RCxvQkFBb0IsZ0RBQWdELDBNQUEwTSxzQkFBc0IseURBQXlELG9CQUFvQixnREFBZ0Qsa0xBQWtMLHNCQUFzQix5REFBeUQsb0JBQW9CLGdEQUFnRCxrTEFBa0wsc0JBQXNCLHlEQUF5RCxvQkFBb0IsZ0RBQWdELHNMQUFzTCxzQkFBc0IsMERBQTBELG9CQUFvQixpREFBaUQsOEtBQThLLHNCQUFzQiwwREFBMEQsb0JBQW9CLGlEQUFpRCwwTUFBME0sc0JBQXNCLDBEQUEwRCxvQkFBb0IsaURBQWlELGtMQUFrTCxzQkFBc0IseURBQXlELG9CQUFvQixnREFBZ0QsOEtBQThLLHNCQUFzQix5REFBeUQsb0JBQW9CLGdEQUFnRCw4S0FBOEssc0JBQXNCLHlEQUF5RCxvQkFBb0IsZ0RBQWdELHNNQUFzTSxzQkFBc0IseURBQXlELG9CQUFvQixnREFBZ0QsOEtBQThLLHNCQUFzQiwwREFBMEQsb0JBQW9CLGlEQUFpRCxzTEFBc0wsc0JBQXNCLHlEQUF5RCxvQkFBb0IsZ0RBQWdELHNMQUFzTCxzQkFBc0IsMERBQTBELG9CQUFvQixpREFBaUQsME1BQTBNLHNCQUFzQiwwREFBMEQsb0JBQW9CLGlEQUFpRCw4S0FBOEssc0JBQXNCLHlEQUF5RCxvQkFBb0IsZ0RBQWdELDBLQUEwSyxzQkFBc0IseURBQXlELG9CQUFvQixnREFBZ0Qsd01BQXdNLHNCQUFzQix5REFBeUQsb0JBQW9CLGdEQUFnRCxxTUFBcU0sc0JBQXNCLHlEQUF5RCxvQkFBb0IsZ0RBQWdELHlMQUF5TCxzQkFBc0IseURBQXlELG9CQUFvQixnREFBZ0QsOE1BQThNLHNCQUFzQix5REFBeUQsb0JBQW9CLGdEQUFnRCwyTUFBMk0sc0JBQXNCLHlEQUF5RCxvQkFBb0IsZ0RBQWdELCtMQUErTCxzQkFBc0IseURBQXlELG9CQUFvQixnREFBZ0QseVBBQXlQLHNCQUFzQiwwREFBMEQsa0JBQWtCLDBEQUEwRCxvQkFBb0IsMktBQTJLLHNCQUFzQiwyREFBMkQsa0JBQWtCLDJEQUEyRCxvQkFBb0IsbUxBQW1MLHNCQUFzQix5REFBeUQsa0JBQWtCLHlEQUF5RCxvQkFBb0IsdU1BQXVNLHNCQUFzQix5REFBeUQsa0JBQWtCLHlEQUF5RCxvQkFBb0IsK0tBQStLLHNCQUFzQix5REFBeUQsa0JBQWtCLHlEQUF5RCxvQkFBb0IsK0tBQStLLHNCQUFzQix5REFBeUQsa0JBQWtCLHlEQUF5RCxvQkFBb0IsbUxBQW1MLHNCQUFzQiwwREFBMEQsa0JBQWtCLDBEQUEwRCxvQkFBb0IsMktBQTJLLHNCQUFzQiwwREFBMEQsa0JBQWtCLDBEQUEwRCxvQkFBb0IsdU1BQXVNLHNCQUFzQiwwREFBMEQsa0JBQWtCLDBEQUEwRCxvQkFBb0IsK0tBQStLLHNCQUFzQix5REFBeUQsa0JBQWtCLHlEQUF5RCxvQkFBb0IsMktBQTJLLHNCQUFzQix5REFBeUQsa0JBQWtCLHlEQUF5RCxvQkFBb0IsMktBQTJLLHNCQUFzQix5REFBeUQsa0JBQWtCLHlEQUF5RCxvQkFBb0IsbU1BQW1NLHNCQUFzQix5REFBeUQsa0JBQWtCLHlEQUF5RCxvQkFBb0IsMktBQTJLLHNCQUFzQiwwREFBMEQsa0JBQWtCLDBEQUEwRCxvQkFBb0IsbUxBQW1MLHNCQUFzQix5REFBeUQsa0JBQWtCLHlEQUF5RCxvQkFBb0IsbUxBQW1MLHNCQUFzQiwwREFBMEQsa0JBQWtCLDBEQUEwRCxvQkFBb0IsdU1BQXVNLHNCQUFzQiwwREFBMEQsa0JBQWtCLDBEQUEwRCxvQkFBb0IsMktBQTJLLHNCQUFzQix5REFBeUQsa0JBQWtCLHlEQUF5RCxvQkFBb0IsdUtBQXVLLHNCQUFzQix5REFBeUQsa0JBQWtCLHlEQUF5RCxvQkFBb0Isc0NBQXNDLG9CQUFvQixHQUFHLDZEQUE2RCw0Q0FBNEMsR0FBRyxvREFBb0QsaUJBQWlCLEdBQUcsZ0NBQWdDLCtCQUErQixHQUFHLGlHQUFpRyxZQUFZLHFCQUFxQixzQ0FBc0MsT0FBTyxXQUFXLHFCQUFxQixzQ0FBc0MsT0FBTyxVQUFVLHFCQUFxQixzQ0FBc0MsT0FBTyxHQUFHLDJCQUEyQixZQUFZLHFCQUFxQixzQ0FBc0MsT0FBTyxXQUFXLHFCQUFxQixzQ0FBc0MsT0FBTyxVQUFVLHFCQUFxQixzQ0FBc0MsT0FBTyxHQUFHLDBCQUEwQixpQkFBaUIsc0NBQXNDLHNCQUFzQix5REFBeUQsaUNBQWlDLHNCQUFzQix3REFBd0Qsa0NBQWtDLHNCQUFzQix3REFBd0Qsd0NBQXdDLHNCQUFzQix5REFBeUQsbUNBQW1DLHNCQUFzQix5REFBeUQsa0NBQWtDLHNCQUFzQix5REFBeUQsbUNBQW1DLHNCQUFzQiwwREFBMEQsaUNBQWlDLHNCQUFzQiwwREFBMEQsd0NBQXdDLHNCQUFzQiwwREFBMEQsa0NBQWtDLHNCQUFzQix5REFBeUQsaUNBQWlDLHNCQUFzQix5REFBeUQsaUNBQWlDLHNCQUFzQix5REFBeUQsdUNBQXVDLHNCQUFzQix5REFBeUQsaUNBQWlDLHNCQUFzQiwwREFBMEQsbUNBQW1DLHNCQUFzQix5REFBeUQsd0NBQXdDLHNCQUFzQix5REFBeUQsbUNBQW1DLHNCQUFzQiwwREFBMEQsaUNBQWlDLHNCQUFzQix5REFBeUQsZ0NBQWdDLHNCQUFzQix5REFBeUQsa0NBQWtDLGtCQUFrQix5REFBeUQsNkJBQTZCLGtCQUFrQix3REFBd0QsOEJBQThCLGtCQUFrQix3REFBd0Qsb0NBQW9DLGtCQUFrQix5REFBeUQsK0JBQStCLGtCQUFrQix5REFBeUQsOEJBQThCLGtCQUFrQix5REFBeUQsK0JBQStCLGtCQUFrQiwwREFBMEQsNkJBQTZCLGtCQUFrQiwwREFBMEQsb0NBQW9DLGtCQUFrQiwwREFBMEQsOEJBQThCLGtCQUFrQix5REFBeUQsNkJBQTZCLGtCQUFrQix5REFBeUQsNkJBQTZCLGtCQUFrQix5REFBeUQsbUNBQW1DLGtCQUFrQix5REFBeUQsNkJBQTZCLGtCQUFrQiwwREFBMEQsK0JBQStCLGtCQUFrQix5REFBeUQsb0NBQW9DLGtCQUFrQix5REFBeUQsK0JBQStCLGtCQUFrQiwwREFBMEQsNkJBQTZCLGtCQUFrQix5REFBeUQsNEJBQTRCLGtCQUFrQix5REFBeUQsaUNBQWlDLGtCQUFrQiwyREFBMkQsNEJBQTRCLGtCQUFrQiwyREFBMkQsNkJBQTZCLGtCQUFrQiwyREFBMkQsbUNBQW1DLGtCQUFrQiwyREFBMkQsOEJBQThCLGtCQUFrQiwyREFBMkQsNkJBQTZCLGtCQUFrQiwyREFBMkQsOEJBQThCLGtCQUFrQiwyREFBMkQsNEJBQTRCLGtCQUFrQiwyREFBMkQsbUNBQW1DLGtCQUFrQiwyREFBMkQsNkJBQTZCLGtCQUFrQiwyREFBMkQsNEJBQTRCLGtCQUFrQiwyREFBMkQsNEJBQTRCLGtCQUFrQiwyREFBMkQsa0NBQWtDLGtCQUFrQiwyREFBMkQsNEJBQTRCLGtCQUFrQiwyREFBMkQsOEJBQThCLGtCQUFrQiwyREFBMkQsbUNBQW1DLGtCQUFrQiwyREFBMkQsOEJBQThCLGtCQUFrQiwyREFBMkQsNEJBQTRCLGtCQUFrQiwyREFBMkQsMkJBQTJCLGtCQUFrQiwyREFBMkQsa0NBQWtDLGtCQUFrQiwwREFBMEQsNkJBQTZCLGtCQUFrQiwyREFBMkQsOEJBQThCLGtCQUFrQix5REFBeUQsb0NBQW9DLGtCQUFrQix5REFBeUQsK0JBQStCLGtCQUFrQix5REFBeUQsOEJBQThCLGtCQUFrQix5REFBeUQsK0JBQStCLGtCQUFrQiwwREFBMEQsNkJBQTZCLGtCQUFrQiwwREFBMEQsb0NBQW9DLGtCQUFrQiwwREFBMEQsOEJBQThCLGtCQUFrQix5REFBeUQsNkJBQTZCLGtCQUFrQix5REFBeUQsNkJBQTZCLGtCQUFrQix5REFBeUQsbUNBQW1DLGtCQUFrQix5REFBeUQsNkJBQTZCLGtCQUFrQiwwREFBMEQsK0JBQStCLGtCQUFrQix5REFBeUQsb0NBQW9DLGtCQUFrQiwwREFBMEQsK0JBQStCLGtCQUFrQiwwREFBMEQsNkJBQTZCLGtCQUFrQix5REFBeUQsNEJBQTRCLGtCQUFrQix5REFBeUQsMEJBQTBCLGtCQUFrQiwyREFBMkQsK0JBQStCLG9CQUFvQiwrQkFBK0Isb0JBQW9CLCtDQUErQyxvQ0FBb0Msb0JBQW9CLCtDQUErQyxvQ0FBb0Msb0JBQW9CLGdEQUFnRCwrQkFBK0Isb0JBQW9CLCtDQUErQyxnQ0FBZ0Msb0JBQW9CLCtDQUErQyxzQ0FBc0Msb0JBQW9CLGdEQUFnRCxpQ0FBaUMsb0JBQW9CLGdEQUFnRCxnQ0FBZ0Msb0JBQW9CLGdEQUFnRCxpQ0FBaUMsb0JBQW9CLGlEQUFpRCwrQkFBK0Isb0JBQW9CLGlEQUFpRCxzQ0FBc0Msb0JBQW9CLGlEQUFpRCxnQ0FBZ0Msb0JBQW9CLGdEQUFnRCwrQkFBK0Isb0JBQW9CLGdEQUFnRCwrQkFBK0Isb0JBQW9CLGdEQUFnRCxxQ0FBcUMsb0JBQW9CLGdEQUFnRCwrQkFBK0Isb0JBQW9CLGlEQUFpRCxpQ0FBaUMsb0JBQW9CLGdEQUFnRCxzQ0FBc0Msb0JBQW9CLGdEQUFnRCxpQ0FBaUMsb0JBQW9CLGlEQUFpRCwrQkFBK0Isb0JBQW9CLGdEQUFnRCw4QkFBOEIsb0JBQW9CLGdEQUFnRCw0QkFBNEIsb0JBQW9CLGtEQUFrRCxxQ0FBcUMsaUlBQWlJLHVHQUF1RyxnQ0FBZ0MsZ0lBQWdJLHVHQUF1RyxpQ0FBaUMsZ0lBQWdJLHVHQUF1Ryx1Q0FBdUMsaUlBQWlJLHVHQUF1RyxrQ0FBa0MsaUlBQWlJLHVHQUF1RyxpQ0FBaUMsaUlBQWlJLHVHQUF1RyxrQ0FBa0Msa0lBQWtJLHVHQUF1RyxnQ0FBZ0Msa0lBQWtJLHVHQUF1Ryx1Q0FBdUMsa0lBQWtJLHVHQUF1RyxpQ0FBaUMsaUlBQWlJLHVHQUF1RyxnQ0FBZ0MsaUlBQWlJLHVHQUF1RyxnQ0FBZ0MsaUlBQWlJLHVHQUF1RyxzQ0FBc0MsaUlBQWlJLHVHQUF1RyxnQ0FBZ0Msa0lBQWtJLHVHQUF1RyxrQ0FBa0MsaUlBQWlJLHVHQUF1Ryx1Q0FBdUMsaUlBQWlJLHVHQUF1RyxrQ0FBa0Msa0lBQWtJLHVHQUF1RyxnQ0FBZ0MsaUlBQWlJLHVHQUF1RywrQkFBK0IsaUlBQWlJLHVHQUF1RyxxQ0FBcUMsd0hBQXdILHVHQUF1RyxnQ0FBZ0MseUhBQXlILHVHQUF1RyxpQ0FBaUMsdUhBQXVILHVHQUF1Ryx1Q0FBdUMsdUhBQXVILHVHQUF1RyxrQ0FBa0MsdUhBQXVILHVHQUF1RyxpQ0FBaUMsdUhBQXVILHVHQUF1RyxrQ0FBa0Msd0hBQXdILHVHQUF1RyxnQ0FBZ0Msd0hBQXdILHVHQUF1Ryx1Q0FBdUMsd0hBQXdILHVHQUF1RyxpQ0FBaUMsdUhBQXVILHVHQUF1RyxnQ0FBZ0MsdUhBQXVILHVHQUF1RyxnQ0FBZ0MsdUhBQXVILHVHQUF1RyxzQ0FBc0MsdUhBQXVILHVHQUF1RyxnQ0FBZ0Msd0hBQXdILHVHQUF1RyxrQ0FBa0MsdUhBQXVILHVHQUF1Ryx1Q0FBdUMsd0hBQXdILHVHQUF1RyxrQ0FBa0Msd0hBQXdILHVHQUF1RyxnQ0FBZ0MsdUhBQXVILHVHQUF1RywrQkFBK0IsdUhBQXVILHVHQUF1RywwQkFBMEIsaUJBQWlCLHNDQUFzQyxzQkFBc0IsMERBQTBELGlDQUFpQyxzQkFBc0IsMkRBQTJELGtDQUFrQyxzQkFBc0IseURBQXlELHdDQUF3QyxzQkFBc0IseURBQXlELG1DQUFtQyxzQkFBc0IseURBQXlELGtDQUFrQyxzQkFBc0IseURBQXlELG1DQUFtQyxzQkFBc0IsMERBQTBELGlDQUFpQyxzQkFBc0IsMERBQTBELHdDQUF3QyxzQkFBc0IsMERBQTBELGtDQUFrQyxzQkFBc0IseURBQXlELGlDQUFpQyxzQkFBc0IseURBQXlELGlDQUFpQyxzQkFBc0IseURBQXlELHVDQUF1QyxzQkFBc0IseURBQXlELGlDQUFpQyxzQkFBc0IsMERBQTBELG1DQUFtQyxzQkFBc0IseURBQXlELHdDQUF3QyxzQkFBc0IsMERBQTBELG1DQUFtQyxzQkFBc0IsMERBQTBELGlDQUFpQyxzQkFBc0IseURBQXlELGdDQUFnQyxzQkFBc0IseURBQXlELGtDQUFrQyxrQkFBa0IsMkRBQTJELDZCQUE2QixrQkFBa0IsMkRBQTJELDhCQUE4QixrQkFBa0IsMERBQTBELG9DQUFvQyxrQkFBa0IsMERBQTBELCtCQUErQixrQkFBa0IsMERBQTBELDhCQUE4QixrQkFBa0IsMERBQTBELCtCQUErQixrQkFBa0IsMERBQTBELDZCQUE2QixrQkFBa0IsMERBQTBELG9DQUFvQyxrQkFBa0IsMkRBQTJELDhCQUE4QixrQkFBa0IsMkRBQTJELDZCQUE2QixrQkFBa0IsMERBQTBELDZCQUE2QixrQkFBa0IsMERBQTBELG1DQUFtQyxrQkFBa0IsMERBQTBELDZCQUE2QixrQkFBa0IsMERBQTBELCtCQUErQixrQkFBa0IsMERBQTBELG9DQUFvQyxrQkFBa0IsMERBQTBELCtCQUErQixrQkFBa0IsMERBQTBELDZCQUE2QixrQkFBa0IsMERBQTBELDRCQUE0QixrQkFBa0IseURBQXlELDZCQUE2QixrQkFBa0IsMkRBQTJELCtCQUErQixvQkFBb0IsK0JBQStCLG9CQUFvQiwrQ0FBK0MsNkJBQTZCLHNCQUFzQix1R0FBdUcsOEJBQThCLDhCQUE4QixtQkFBbUIsd0JBQXdCLDJHQUEyRyx5R0FBeUcsNEZBQTRGLG9DQUFvQyxrQkFBa0Isd0RBQXdELCtCQUErQixrQkFBa0Isd0RBQXdELGdDQUFnQyxrQkFBa0Isd0RBQXdELHNDQUFzQyxrQkFBa0IseURBQXlELGlDQUFpQyxrQkFBa0IseURBQXlELGdDQUFnQyxrQkFBa0IseURBQXlELGlDQUFpQyxrQkFBa0IsMERBQTBELCtCQUErQixrQkFBa0IsMERBQTBELHNDQUFzQyxrQkFBa0IseURBQXlELGdDQUFnQyxrQkFBa0IseURBQXlELCtCQUErQixrQkFBa0Isd0RBQXdELCtCQUErQixrQkFBa0IseURBQXlELHFDQUFxQyxrQkFBa0IseURBQXlELCtCQUErQixrQkFBa0IsMERBQTBELGlDQUFpQyxrQkFBa0IseURBQXlELHNDQUFzQyxrQkFBa0IseURBQXlELGlDQUFpQyxrQkFBa0IsMERBQTBELCtCQUErQixrQkFBa0IseURBQXlELDhCQUE4QixrQkFBa0IseURBQXlELG9DQUFvQyxrQkFBa0IsMkRBQTJELCtCQUErQixrQkFBa0IsMkRBQTJELGdDQUFnQyxrQkFBa0IsMkRBQTJELHNDQUFzQyxrQkFBa0IsMkRBQTJELGlDQUFpQyxrQkFBa0IsMkRBQTJELGdDQUFnQyxrQkFBa0IsMkRBQTJELGlDQUFpQyxrQkFBa0IsMkRBQTJELCtCQUErQixrQkFBa0IsMkRBQTJELHNDQUFzQyxrQkFBa0IsMkRBQTJELGdDQUFnQyxrQkFBa0IsMkRBQTJELCtCQUErQixrQkFBa0IsMkRBQTJELCtCQUErQixrQkFBa0IsMkRBQTJELHFDQUFxQyxrQkFBa0IsMkRBQTJELCtCQUErQixrQkFBa0IsMkRBQTJELGlDQUFpQyxrQkFBa0IsMkRBQTJELHNDQUFzQyxrQkFBa0IsMkRBQTJELGlDQUFpQyxrQkFBa0IsMkRBQTJELCtCQUErQixrQkFBa0IsMkRBQTJELDhCQUE4QixrQkFBa0IsMkRBQTJELCtCQUErQixrQkFBa0IsMkRBQTJELGlDQUFpQyxvQkFBb0IsNEJBQTRCLGtCQUFrQixVQUFVLGVBQWUsWUFBWSw0QkFBNEIsY0FBYyxpQkFBaUIsYUFBYSxlQUFlLGNBQWMsaUJBQWlCLGFBQWEsa0JBQWtCLGlCQUFpQixVQUFVLGFBQWEsWUFBWSxpQkFBaUIsVUFBVSxpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsbUJBQW1CLHNCQUFzQiwyQkFBMkIsd0JBQXdCLDhCQUE4QixjQUFjLFdBQVcsYUFBYSxrQkFBa0IsbUJBQW1CLGFBQWEsa0JBQWtCLG1CQUFtQixjQUFjLG1CQUFtQixhQUFhLGlCQUFpQiw2QkFBNkIsZUFBZSxnQkFBZ0IsYUFBYSxxQkFBcUIsYUFBYSxvQkFBb0IsY0FBYyxnQkFBZ0IsY0FBYyxjQUFjLGFBQWEsYUFBYSxlQUFlLGFBQWEsaUJBQWlCLGlCQUFpQixpQkFBaUIsVUFBVSxpQkFBaUIsaUJBQWlCLGFBQWEsWUFBWSxlQUFlLFdBQVcsaUJBQWlCLG1CQUFtQixxQkFBcUIsbUJBQW1CLHdCQUF3Qiw4QkFBOEIsc0JBQXNCLDJCQUEyQixjQUFjLGtCQUFrQixtQkFBbUIsa0JBQWtCLGlCQUFpQixTQUFTLCtIQUErSCw4QkFBOEIsa0JBQWtCLGtCQUFrQixrQkFBa0IsMENBQTBDLGtCQUFrQiwwQ0FBMEMsa0RBQWtELG9CQUFvQixvQkFBb0Isb0JBQW9CLG9CQUFvQixvQkFBb0IsOEJBQThCLGtCQUFrQixvQkFBb0Isb0JBQW9CLG9CQUFvQixvQkFBb0IsYUFBYSxhQUFhLFFBQVEsS0FBSyxNQUFNLEtBQUssT0FBTyxZQUFZLE1BQU0sTUFBTSxLQUFLLEtBQUssWUFBWSxXQUFXLFVBQVUsS0FBSyxPQUFPLEtBQUssS0FBSyxzQkFBc0IsdUJBQXVCLE1BQU0sT0FBTyxLQUFLLE1BQU0sS0FBSyxLQUFLLFVBQVUsS0FBSyxNQUFNLEtBQUssS0FBSyxhQUFhLE9BQU8sTUFBTSxPQUFPLEtBQUssT0FBTyxLQUFLLEtBQUssb0JBQW9CLHFCQUFxQixNQUFNLE9BQU8sS0FBSyxNQUFNLEtBQUssS0FBSyxZQUFZLGFBQWEsTUFBTSxNQUFNLEtBQUssTUFBTSxZQUFZLE1BQU0sT0FBTyxLQUFLLFFBQVEsVUFBVSxlQUFlLHFCQUFxQixNQUFNLE1BQU0sS0FBSyxLQUFLLFVBQVUsS0FBSyxNQUFNLEtBQUssTUFBTSxVQUFVLFVBQVUsWUFBWSxhQUFhLE1BQU0sS0FBSyxVQUFVLE1BQU0sS0FBSyxVQUFVLEtBQUssT0FBTyxLQUFLLE9BQU8sS0FBSyxLQUFLLG9CQUFvQix1QkFBdUIsTUFBTSxPQUFPLEtBQUssT0FBTyxLQUFLLFNBQVMsc0JBQXNCLHFCQUFxQix1QkFBdUIscUJBQXFCLE1BQU0sT0FBTyxLQUFLLEtBQUssVUFBVSxZQUFZLE1BQU0sTUFBTSxLQUFLLFFBQVEsWUFBWSxNQUFNLE1BQU0sS0FBSyxLQUFLLFlBQVksV0FBVyxLQUFLLE1BQU0sS0FBSyxLQUFLLFlBQVksTUFBTSxPQUFPLEtBQUssS0FBSyxZQUFZLE1BQU0sTUFBTSxLQUFLLEtBQUssVUFBVSxLQUFLLE1BQU0sS0FBSyxLQUFLLFlBQVksTUFBTSxNQUFNLEtBQUssTUFBTSxVQUFVLEtBQUssT0FBTyxLQUFLLEtBQUssc0JBQXNCLHVCQUF1QixNQUFNLE1BQU0sS0FBSyxLQUFLLFlBQVksTUFBTSxPQUFPLEtBQUssS0FBSyxzQkFBc0IscUJBQXFCLE1BQU0sT0FBTyxLQUFLLE1BQU0sS0FBSyxLQUFLLFlBQVksTUFBTSxRQUFRLEtBQUssTUFBTSxLQUFLLGlCQUFpQixVQUFVLEtBQUssS0FBSyxZQUFZLGFBQWEsTUFBTSxPQUFPLEtBQUssS0FBSyxZQUFZLGFBQWEsTUFBTSxLQUFLLFVBQVUsVUFBVSxLQUFLLE1BQU0sWUFBWSxXQUFXLFVBQVUsS0FBSyxNQUFNLEtBQUssU0FBUyxLQUFLLEtBQUssc0JBQXNCLHVCQUF1QixNQUFNLE9BQU8sS0FBSyxLQUFLLFlBQVksYUFBYSxNQUFNLDRCQUE0QixNQUFNLE9BQU8sc0JBQXNCLHFCQUFxQix1QkFBdUIsdUJBQXVCLE1BQU0sTUFBTSxLQUFLLEtBQUssWUFBWSxNQUFNLFlBQVksS0FBSyxLQUFLLFlBQVksTUFBTSxLQUFLLFlBQVksTUFBTSxLQUFLLFVBQVUsVUFBVSxNQUFNLEtBQUssVUFBVSxVQUFVLE1BQU0sTUFBTSxVQUFVLFVBQVUsTUFBTSxNQUFNLFVBQVUsTUFBTSxLQUFLLFlBQVksTUFBTSxVQUFVLFlBQVksYUFBYSxNQUFNLE9BQU8sS0FBSyxLQUFLLFVBQVUsWUFBWSxNQUFNLFVBQVUsS0FBSyxTQUFTLFVBQVUsWUFBWSxXQUFXLE1BQU0sU0FBUyxLQUFLLFFBQVEsWUFBWSxNQUFNLFVBQVUsS0FBSyxZQUFZLFVBQVUsWUFBWSxNQUFNLFNBQVMsS0FBSyxNQUFNLFVBQVUsVUFBVSxLQUFLLHlGQUF5RixnQkFBZ0IsTUFBTSxvQkFBb0IsTUFBTSxvQkFBb0IsTUFBTSxzQkFBc0IsTUFBTSxzQkFBc0IsTUFBTSxzQkFBc0Isb0JBQW9CLG9CQUFvQixrQkFBa0Isa0JBQWtCLGdCQUFnQixnQkFBZ0IsOENBQThDLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGVBQWUsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixlQUFlLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsOEJBQThCLDRCQUE0Qiw0QkFBNEIsOEJBQThCLDhCQUE4Qiw4QkFBOEIsNEJBQTRCLDhCQUE4QixrQkFBa0IsZ0JBQWdCLGtCQUFrQixrQkFBa0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0Isa0JBQWtCLGdCQUFnQixnQkFBZ0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGdCQUFnQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixnQkFBZ0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGdCQUFnQixrQkFBa0IsZ0JBQWdCLGtCQUFrQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGVBQWUsZ0JBQWdCLGdCQUFnQixnQkFBZ0Isa0JBQWtCLGdCQUFnQixlQUFlLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQiwwQ0FBMEMsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQiw0RkFBNEYsb0JBQW9CLG9CQUFvQixrQkFBa0Isb0JBQW9CLGtCQUFrQixvQkFBb0Isc0RBQXNELGdCQUFnQixrQkFBa0Isa0JBQWtCLGdCQUFnQixvQkFBb0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isb0JBQW9CLG9CQUFvQixrQkFBa0Isa0JBQWtCLGdCQUFnQixlQUFlLGdCQUFnQixlQUFlLGdCQUFnQixnQkFBZ0IsOEJBQThCLGdCQUFnQiw0QkFBNEIsZ0JBQWdCLDRCQUE0Qiw0Q0FBNEMsa0JBQWtCLG9CQUFvQixvQkFBb0Isa0JBQWtCLG9CQUFvQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0IsOEJBQThCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0IsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLG9CQUFvQiw4QkFBOEIsOEJBQThCLDhCQUE4QixnQ0FBZ0MsOEJBQThCLDhCQUE4Qiw4QkFBOEIsOEJBQThCLGdDQUFnQyxnQ0FBZ0MsOEJBQThCLDhCQUE4QixnQ0FBZ0MsOEJBQThCLDhCQUE4Qiw4QkFBOEIsZ0NBQWdDLDhCQUE4Qiw4QkFBOEIsOEJBQThCLDhCQUE4QixnQ0FBZ0MsOEJBQThCLDhCQUE4Qiw4QkFBOEIsb0JBQW9CLDhCQUE4QixnQ0FBZ0MsOEJBQThCLGdDQUFnQyw4QkFBOEIsOEJBQThCLDhCQUE4Qiw4QkFBOEIsZ0NBQWdDLDhCQUE4Qiw4QkFBOEIsOEJBQThCLGdDQUFnQyw4QkFBOEIsOEJBQThCLGdDQUFnQyw4QkFBOEIsOEJBQThCLDhCQUE4QixnQ0FBZ0MsOEJBQThCLGdDQUFnQyw4QkFBOEIsOEJBQThCLDhCQUE4QixnQ0FBZ0MsOEJBQThCLDhCQUE4Qiw4QkFBOEIsZ0NBQWdDLDhCQUE4Qiw4QkFBOEIsZ0NBQWdDLDhCQUE4Qiw4QkFBOEIsOEJBQThCLDhCQUE4Qiw4QkFBOEIsZ0NBQWdDLDhCQUE4QixnQ0FBZ0MsOEJBQThCLDhCQUE4Qiw4QkFBOEIsOEJBQThCLGdDQUFnQyw4QkFBOEIsOEJBQThCLDhCQUE4QixnQ0FBZ0MsOEJBQThCLDhCQUE4QixnQ0FBZ0MsOEJBQThCLDhCQUE4Qiw4QkFBOEIsa0JBQWtCLGtCQUFrQixvQkFBb0IsZ0NBQWdDLDhCQUE4QixnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLDhCQUE4QixnQ0FBZ0MsZ0NBQWdDLDhCQUE4Qiw4QkFBOEIsZ0NBQWdDLDhCQUE4QixnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyw4QkFBOEIsOEJBQThCLGdDQUFnQyxvQkFBb0Isa0JBQWtCLGtCQUFrQixvQkFBb0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLG9CQUFvQixrQkFBa0Isa0JBQWtCLGtCQUFrQixvQkFBb0Isa0JBQWtCLGtCQUFrQixvQkFBb0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isb0JBQW9CLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0Isa0JBQWtCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQiw4QkFBOEIsOEJBQThCLDhCQUE4Qiw4QkFBOEIsOEJBQThCLDhCQUE4Qiw4QkFBOEIsOEJBQThCLDhCQUE4Qiw4QkFBOEIsOEJBQThCLDhCQUE4Qiw4QkFBOEIsOEJBQThCLDhCQUE4Qiw4QkFBOEIsOEJBQThCLDhCQUE4Qiw4QkFBOEIsOEJBQThCLDhCQUE4Qiw4QkFBOEIsOEJBQThCLDhCQUE4Qiw4QkFBOEIsa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0IsZ0JBQWdCLGtCQUFrQixrQkFBa0IsOEJBQThCLDhCQUE4Qiw4QkFBOEIsNEJBQTRCLDhCQUE4Qiw0QkFBNEIsOEJBQThCLDhCQUE4Qiw4QkFBOEIsMEJBQTBCLDRCQUE0QiwwQkFBMEIsMEJBQTBCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0Isa0JBQWtCLGtCQUFrQixvQkFBb0IsZ0JBQWdCLGtCQUFrQixrQkFBa0Isa0JBQWtCLG9CQUFvQixrQkFBa0IsOEJBQThCLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLDhCQUE4Qiw4QkFBOEIsOEJBQThCLDhCQUE4Qiw4QkFBOEIsZ0NBQWdDLDhCQUE4Qiw4QkFBOEIsOEJBQThCLDhCQUE4QixnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyw4QkFBOEIsZ0NBQWdDLGdDQUFnQyw4QkFBOEIsOEJBQThCLDhCQUE4QixnQ0FBZ0MsZ0NBQWdDLDhCQUE4Qiw4QkFBOEIsOEJBQThCLDhCQUE4QixnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLDhCQUE4QixnQ0FBZ0MsZ0NBQWdDLDhCQUE4Qiw4QkFBOEIsZ0NBQWdDLDhCQUE4QixnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyw4QkFBOEIsOEJBQThCLDhCQUE4QixnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLDhCQUE4QixnQ0FBZ0MsZ0NBQWdDLDhCQUE4Qiw4QkFBOEIsZ0NBQWdDLDhCQUE4QixnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyw4QkFBOEIsOEJBQThCLDhCQUE4QixvQkFBb0Isa0JBQWtCLDhCQUE4QixnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxvQkFBb0Isb0JBQW9CLG9CQUFvQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLDhCQUE4Qiw4QkFBOEIsOEJBQThCLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLDhCQUE4Qiw4QkFBOEIsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsOEJBQThCLDhCQUE4Qiw4QkFBOEIsNENBQTRDLGtCQUFrQixrQkFBa0Isa0JBQWtCLGFBQWEsTUFBTSxVQUFVLFlBQVksYUFBYSxXQUFXLFVBQVUsVUFBVSxVQUFVLFlBQVksYUFBYSxXQUFXLFVBQVUsVUFBVSxVQUFVLFVBQVUsWUFBWSxXQUFXLFlBQVksYUFBYSxhQUFhLGFBQWEsYUFBYSxhQUFhLGFBQWEsYUFBYSxhQUFhLE1BQU0saUJBQWlCLE1BQU0sVUFBVSxLQUFLLEtBQUssVUFBVSxLQUFLLE1BQU0sVUFBVSxLQUFLLDJDQUEyQyw0Q0FBNEMsNENBQTRDLE1BQU0sWUFBWSxNQUFNLEtBQUssWUFBWSxNQUFNLE1BQU0sWUFBWSxNQUFNLFlBQVksTUFBTSxZQUFZLE1BQU0sS0FBSyxZQUFZLE1BQU0sTUFBTSxZQUFZLE1BQU0sS0FBSyxZQUFZLE1BQU0sMkNBQTJDLDRDQUE0Qyw0Q0FBNEMsT0FBTyxxSkFBcUosTUFBTSwyQ0FBMkMsNENBQTRDLDRDQUE0QyxvQkFBb0IsZ0NBQWdDLDBDQUEwQyxhQUFhLE1BQU0sWUFBWSxhQUFhLE1BQU0sK0JBQStCLE1BQU0sVUFBVSxVQUFVLFVBQVUsWUFBWSxhQUFhLFdBQVcsVUFBVSxVQUFVLFVBQVUsVUFBVSxZQUFZLFdBQVcsS0FBSyxLQUFLLFlBQVksY0FBYyxNQUFNLFlBQVksb0JBQW9CLGdDQUFnQyxNQUFNLFVBQVUsVUFBVSxVQUFVLFlBQVksYUFBYSxXQUFXLFVBQVUsVUFBVSxVQUFVLFVBQVUsWUFBWSxXQUFXLEtBQUssS0FBSyxVQUFVLFVBQVUsVUFBVSxZQUFZLFdBQVcsVUFBVSxZQUFZLGFBQWEsV0FBVyxVQUFVLFVBQVUsVUFBVSxVQUFVLFlBQVksYUFBYSxhQUFhLGFBQWEsYUFBYSxhQUFhLGFBQWEsYUFBYSxhQUFhLE1BQU0sS0FBSyxZQUFZLGNBQWMsTUFBTSwrQkFBK0IsYUFBYSxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxhQUFhLHdEQUF3RCx3REFBd0Qsd0RBQXdELHdEQUF3RCx3REFBd0Qsd0RBQXdELHdEQUF3RCx3REFBd0Qsd0RBQXdELHdEQUF3RCx3REFBd0Qsd0RBQXdELHdEQUF3RCx3REFBd0Qsd0RBQXdELHdEQUF3RCx3REFBd0Qsd0RBQXdELHdEQUF3RCx3REFBd0Qsd0RBQXdELHdEQUF3RCx3REFBd0Qsd0RBQXdELHdEQUF3RCxhQUFhLG9FQUFvRSxvRUFBb0Usb0VBQW9FLG9FQUFvRSxvRUFBb0Usb0VBQW9FLG9FQUFvRSxvRUFBb0Usb0VBQW9FLG9FQUFvRSxvRUFBb0Usb0VBQW9FLG9FQUFvRSxvRUFBb0Usb0VBQW9FLG9FQUFvRSxvRUFBb0Usb0VBQW9FLG9FQUFvRSxXQUFXLEtBQUssVUFBVSxNQUFNLFlBQVksTUFBTSxZQUFZLE1BQU0sWUFBWSxNQUFNLFVBQVUsS0FBSyxLQUFLLFlBQVksTUFBTSxZQUFZLE1BQU0sS0FBSyxVQUFVLFlBQVksTUFBTSxLQUFLLFVBQVUsWUFBWSxNQUFNLEtBQUssVUFBVSxZQUFZLE1BQU0sS0FBSyxLQUFLLEtBQUssVUFBVSxZQUFZLE1BQU0sS0FBSyxVQUFVLFlBQVksTUFBTSxLQUFLLFVBQVUsWUFBWSxNQUFNLEtBQUssbUJBQW1CLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0Msb0JBQW9CLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLG9CQUFvQixnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyxv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QixrQkFBa0IseURBQXlELDRCQUE0QixrQkFBa0IseURBQXlELGlDQUFpQyxrQkFBa0IsMkRBQTJELDRCQUE0QixrQkFBa0IsMkRBQTJELDZCQUE2QixrQkFBa0IsMkRBQTJELG1DQUFtQyxrQkFBa0IsMkRBQTJELDhCQUE4QixrQkFBa0IsMkRBQTJELDZCQUE2QixrQkFBa0IsMkRBQTJELDhCQUE4QixrQkFBa0IsMkRBQTJELDRCQUE0QixrQkFBa0IsMkRBQTJELG1DQUFtQyxrQkFBa0IsMkRBQTJELDZCQUE2QixrQkFBa0IsMkRBQTJELDRCQUE0QixrQkFBa0IsMkRBQTJELDRCQUE0QixrQkFBa0IsMkRBQTJELGtDQUFrQyxrQkFBa0IsMkRBQTJELDRCQUE0QixrQkFBa0IsMkRBQTJELDhCQUE4QixrQkFBa0IsMkRBQTJELG1DQUFtQyxrQkFBa0IsMkRBQTJELDhCQUE4QixrQkFBa0IsMkRBQTJELDRCQUE0QixrQkFBa0IsMkRBQTJELDJCQUEyQixrQkFBa0IsMkRBQTJELGtDQUFrQyxrQkFBa0IsMERBQTBELDZCQUE2QixrQkFBa0IsMkRBQTJELDhCQUE4QixrQkFBa0IseURBQXlELG9DQUFvQyxrQkFBa0IseURBQXlELCtCQUErQixrQkFBa0IseURBQXlELDhCQUE4QixrQkFBa0IseURBQXlELCtCQUErQixrQkFBa0IsMERBQTBELDZCQUE2QixrQkFBa0IsMERBQTBELG9DQUFvQyxrQkFBa0IsMERBQTBELDhCQUE4QixrQkFBa0IseURBQXlELDZCQUE2QixrQkFBa0IseURBQXlELDZCQUE2QixrQkFBa0IseURBQXlELG1DQUFtQyxrQkFBa0IseURBQXlELDZCQUE2QixrQkFBa0IsMERBQTBELCtCQUErQixrQkFBa0IseURBQXlELG9DQUFvQyxrQkFBa0IsMERBQTBELCtCQUErQixrQkFBa0IsMERBQTBELDZCQUE2QixrQkFBa0IseURBQXlELDRCQUE0QixrQkFBa0IseURBQXlELDBCQUEwQixrQkFBa0IsMkRBQTJELCtCQUErQixvQkFBb0IsK0JBQStCLG9CQUFvQiwrQ0FBK0Msb0NBQW9DLG9C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QkFBdUIsUUFBUSxTQUFTLE1BQU0sTUFBTSxXQUFXLFVBQVUsT0FBTyxNQUFNLE1BQU0sS0FBSyxXQUFXLE9BQU8sTUFBTSxXQUFXLFdBQVcsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFdBQVcsT0FBTyxPQUFPLFlBQVksT0FBTyxNQUFNLFdBQVcsT0FBTyxNQUFNLFdBQVcsT0FBTyxNQUFNLFdBQVcsT0FBTyxNQUFNLFdBQVcsT0FBTyxNQUFNLFdBQVcsT0FBTyxNQUFNLFdBQVcsT0FBTyxNQUFNLFlBQVksT0FBTyxNQUFNLFlBQVksT0FBTyxNQUFNLFlBQVksT0FBTyxNQUFNLFdBQVcsT0FBTyxNQUFNLFdBQVcsT0FBTyxNQUFNLFdBQVcsT0FBTyxNQUFNLFdBQVcsT0FBTyxNQUFNLFdBQVcsT0FBTyxNQUFNLFdBQVcsT0FBTyxNQUFNLFdBQVcsT0FBTyxNQUFNLFdBQVcsT0FBTyxNQUFNLFdBQVcsT0FBTyxNQUFNLFdBQVcsT0FBTyxNQUFNLFdBQVcsT0FBTyxNQUFNLFlBQVksV0FBVyxXQUFXLE9BQU8sTUFBTSxXQUFXLE9BQU8sTUFBTSxZQUFZLE9BQU8sTUFBTSxZQUFZLE9BQU8sTUFBTSxZQUFZLE9BQU8sTUFBTSxZQUFZLE9BQU8sTUFBTSxZQUFZLFdBQVcsV0FBVyxPQUFPLE1BQU0sWUFBWSxXQUFXLFdBQVcsT0FBTyxNQUFNLFlBQVksT0FBTyxNQUFNLFlBQVksV0FBVyxPQUFPLE1BQU0sWUFBWSxXQUFXLE9BQU8sTUFBTSxZQUFZLFdBQVcsT0FBTyxNQUFNLFlBQVksV0FBVyxPQUFPLE1BQU0sV0FBVyxPQUFPLE1BQU0sV0FBVyxPQUFPLE1BQU0sWUFBWSxXQUFXLE9BQU8sTUFBTSxZQUFZLFdBQVcsT0FBTyxNQUFNLFlBQVksV0FBVyxPQUFPLE1BQU0sWUFBWSxXQUFXLE9BQU8sT0FBTyxVQUFVLFVBQVUsV0FBVyxPQUFPLE9BQU8sV0FBVyxXQUFXLHdDQUF3QyxlQUFlLGNBQWMsd0pBQXdKLEdBQUcsT0FBTyxtQkFBbUIsMEJBQTBCLEdBQUcsT0FBTywyQkFBMkIsR0FBRyxtQkFB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Qzs7Ozs7Ozs7OztBQ1JBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsc0JBQXNCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxxQ0FBcUM7O0FB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QUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixzQkFBc0I7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxVQUFVLElBQXFDO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EscUJBQXFCLDJCQUEyQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU0sS0FBcUMsNEZBQTRGLENBQU07QUFDN0k7QUFDQTs7QUFFQSxtQkFBbUIsZ0NBQWdDO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHFCQUFxQixnQ0FBZ0M7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7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QUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLLEVBQUU7O0FBRVAsaURBQWlEO0FBQ2pEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBLDJCQUEyQjs7QUFFM0I7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7O0FBRXRDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFROztBQUVSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTs7QUFFUjtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBLFNBQVM7QUFDVCx3QkFBd0I7QUFDeEI7QUFDQSxTQUFTO0FBQ1Qsd0JBQXdCO0FBQ3hCO0FBQ0EsU0FBUztBQUNULHlCQUF5QjtBQUN6QjtBQUNBLFNBQVM7QUFDVCx5QkFBeUI7QUFDekI7QUFDQSxTQUFTO0FBQ1Qsa0NBQWtDO0FBQ2xDO0FBQ0EsU0FBUztBQUNULDRCQUE0QjtBQUM1QjtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7O0FBR0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDBEQUEwRDs7QUFFMUQ7QUFDQTs7QUFFQTtBQUNBLHdEQUF3RDtBQUN4RDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTs7O0FBR1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsWUFBWSxrQkFBa0I7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7OztBQUdqQjtBQUNBO0FBQ0EsYUFBYTtBQUNiOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBIQUEwSDtBQUMxSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBOztBQUVBLG1FQUFtRTs7QUFFbkU7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEVBQUU7QUFDYixXQUFXLEVBQUU7QUFDYixXQUFXLEVBQUU7QUFDYixXQUFXLGNBQWM7QUFDekIsV0FBVyxFQUFFO0FBQ2IsV0FBVyxFQUFFO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEVBQUU7QUFDYjtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxFQUFFOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLEVBQUU7QUFDUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxFQUFFO0FBQ2IsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQjs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCOztBQUVqQjtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CLDJEQUEyRCxTQUFTO0FBQ3BFLHlCQUF5QixTQUFTO0FBQ2xDO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7O0FBR0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOzs7QUFHTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVksUUFBUTtBQUNwQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGFBQWE7QUFDeEIsV0FBVyxFQUFFO0FBQ2I7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsNERBQTREO0FBQzVEO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsRUFBRTtBQUNiOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztB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QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBOztBQUVPO0FBQ1AsOEZBQThGLGFBQWE7QUFDM0c7QUFDQTs7QUFFQTtBQUNBLHVFQUF1RSxlQUFlO0FBQ3RGO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxxQkFBcUIsWUFBWTtBQUNqQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTzs7QUFFQTtBQUNQOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCx3RUFBd0UsZUFBZTtBQUN2RjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUssSUFBSTtBQUNULEdBQUc7QUFDSCxDIiwiZmlsZSI6InN0YXRpYy9jaHVua3MvcGFnZXMvX2FwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgaWYgKGtleSBpbiBvYmopIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG9ialtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59IiwiaW1wb3J0IGRlZmluZVByb3BlcnR5IGZyb20gXCIuL2RlZmluZVByb3BlcnR5LmpzXCI7XG5cbmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkge1xuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7XG5cbiAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTtcblxuICAgIGlmIChlbnVtZXJhYmxlT25seSkge1xuICAgICAgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7XG4gIH1cblxuICByZXR1cm4ga2V5cztcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFNwcmVhZDIodGFyZ2V0KSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307XG5cbiAgICBpZiAoaSAlIDIpIHtcbiAgICAgIG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBkZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykge1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuICB2YXIgdGFyZ2V0ID0ge307XG4gIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgdmFyIGtleSwgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGtleSA9IHNvdXJjZUtleXNbaV07XG4gICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbihlLHQpe09iamVjdC5rZXlzKHQpLmZvckVhY2goZnVuY3Rpb24obyl7ZVtvXT10W29dfSl9LG89e3NpemU6Mixjb2xvcjpcIiMyOWVcIixjbGFzc05hbWU6XCJiYXItb2YtcHJvZ3Jlc3NcIixkZWxheTo4MH07ZSYmdChvLGUpO3ZhciBhLGkscz17cG9zaXRpb246XCJmaXhlZFwiLHRvcDowLGxlZnQ6MCxtYXJnaW46MCxwYWRkaW5nOjAsYm9yZGVyOlwibm9uZVwiLGJvcmRlclJhZGl1czowLGJhY2tncm91bmRDb2xvcjpcImN1cnJlbnRDb2xvclwiLHpJbmRleDoxZTQsaGVpZ2h0OlwibnVtYmVyXCI9PXR5cGVvZiBvLnNpemU/by5zaXplK1wicHhcIjpvLnNpemUsY29sb3I6by5jb2xvcixvcGFjaXR5OjAsd2lkdGg6XCIwJVwifSxuPXtvcGFjaXR5OjEsd2lkdGg6XCI5OSVcIix0cmFuc2l0aW9uOlwid2lkdGggMTBzIGN1YmljLWJlemllcigwLjEsIDAuMDUsIDAsIDEpXCJ9LGw9e29wYWNpdHk6MCx3aWR0aDpcIjEwMCVcIix0cmFuc2l0aW9uOlwid2lkdGggMC4xcyBlYXNlLW91dCwgb3BhY2l0eSAwLjVzIGVhc2UgMC4yc1wifSxjPXtvcGFjaXR5Oi40LGJveFNoYWRvdzpcIjNweCAwIDhweFwiLGhlaWdodDpcIjEwMCVcIn07dGhpcy5zdGFydD1mdW5jdGlvbigpe2kmJmkucGFyZW50Tm9kZSYmaS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGkpLChpPWRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSkpLmNsYXNzTmFtZT1vLmNsYXNzTmFtZStcIiBzdG9wcGVkXCIsdChpLnN0eWxlLHMpO3ZhciBlPWkuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSk7ZS5jbGFzc05hbWU9XCJnbG93XCIsdChlLnN0eWxlLGMpLG51bGwhPWEmJmNsZWFyVGltZW91dChhKSxhPXNldFRpbWVvdXQoZnVuY3Rpb24oKXthPW51bGwsaS5jbGFzc05hbWU9by5jbGFzc05hbWUrXCIgc3RhcnRlZFwiLHQoaS5zdHlsZSxuKX0sby5kZWxheSksaS5zY3JvbGxUb3A9MH0sdGhpcy5maW5pc2g9ZnVuY3Rpb24oKXtudWxsIT1hJiYoY2xlYXJUaW1lb3V0KGEpLGE9bnVsbCksaSYmKGkuY2xhc3NOYW1lPW8uY2xhc3NOYW1lK1wiIGZpbmlzaGVkXCIsdChpLnN0eWxlLGwpKX19XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXG4iLCJpbXBvcnQgXCIuLi9zdHlsZXMvZ2xvYmFscy5jc3NcIlxuaW1wb3J0IFwiQG1hdGVyaWFsLXRhaWx3aW5kL3JlYWN0L3RhaWx3aW5kLmNzc1wiXG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJyZWFjdC1yZWR1eFwiXG5pbXBvcnQgc3RvcmUgZnJvbSBcIi4uL3JlZHV4L2FwcC9zdG9yZVwiXG5pbXBvcnQgUHJvZ3Jlc3NCYXIgZnJvbSBcIkBiYWRyYXAvYmFyLW9mLXByb2dyZXNzXCJcbmltcG9ydCBSb3V0ZXIgZnJvbSBcIm5leHQvcm91dGVyXCJcblxuY29uc3QgcHJvZ3Jlc3MgPSBuZXcgUHJvZ3Jlc3NCYXIoe1xuICBzaXplOiAyLFxuICBjb2xvcjogXCIjMzhhMTY5XCIsXG4gIGNsYXNzTmFtZTogXCJiYXItb2YtcHJvZ3Jlc3NcIixcbiAgZGVsYXk6IDcwLFxufSlcblxuUm91dGVyLmV2ZW50cy5vbihcInJvdXRlQ2hhbmdlU3RhcnRcIiwgcHJvZ3Jlc3Muc3RhcnQpXG5Sb3V0ZXIuZXZlbnRzLm9uKFwicm91dGVDaGFuZ2VDb21wbGV0ZVwiLCBwcm9ncmVzcy5maW5pc2gpXG5Sb3V0ZXIuZXZlbnRzLm9uKFwicm91dGVDaGFuZ2VFcnJvclwiLCBwcm9ncmVzcy5maW5pc2gpXG5cbmZ1bmN0aW9uIE15QXBwKHsgQ29tcG9uZW50LCBwYWdlUHJvcHMgfSkge1xuICByZXR1cm4gKFxuICAgIDxQcm92aWRlciBzdG9yZT17c3RvcmV9PlxuICAgICAgPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPlxuICAgIDwvUHJvdmlkZXI+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgTXlBcHBcbiIsImltcG9ydCB7IGNvbmZpZ3VyZVN0b3JlIH0gZnJvbSAnQHJlZHV4anMvdG9vbGtpdCdcclxuaW1wb3J0IFVzZXJSZWR1Y2VyIGZyb20gJy4uL2ZlYXR1cmVzL1VzZXJTbGljZSdcclxuaW1wb3J0IFRvZG9SZWR1Y2VyIGZyb20gJy4uL2ZlYXR1cmVzL3RvZG9TbGljZSdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbmZpZ3VyZVN0b3JlKHtcclxuICByZWR1Y2VyOiB7XHJcbiAgICBVc2VyOiBVc2VyUmVkdWNlcixcclxuICAgIFRvZG86IFRvZG9SZWR1Y2VyLFxyXG4gIH0sXHJcbn0pXHJcbiIsImltcG9ydCB7IGNyZWF0ZVNsaWNlIH0gZnJvbSBcIkByZWR1eGpzL3Rvb2xraXRcIlxyXG5pbXBvcnQgYXhpb3MgZnJvbSBcImF4aW9zXCJcclxuXHJcbmV4cG9ydCBjb25zdCBVc2VyU2xpY2UgPSBjcmVhdGVTbGljZSh7XHJcbiAgbmFtZTogXCJVc2VyXCIsXHJcbiAgaW5pdGlhbFN0YXRlOiB7XHJcbiAgICB1c2VyOiBudWxsLFxyXG4gIH0sXHJcbiAgcmVkdWNlcnM6IHtcclxuICAgIEFkZDogKHN0YXRlLCBhY3Rpb24pID0+IHtcclxuICAgICAgc3RhdGUudXNlciA9IGFjdGlvbi5wYXlsb2FkXHJcbiAgICAgIGNvbnN0IGZldGNoID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIGF3YWl0IGF4aW9zXHJcbiAgICAgICAgICAucG9zdChcImFwaS9jcmVhdGVVc2VyXCIsIHtcclxuICAgICAgICAgICAgZW1haWw6IGFjdGlvbi5wYXlsb2FkLmVtYWlsLFxyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIC50aGVuKHJlcyA9PiBjb25zb2xlLmxvZyhyZXMpKVxyXG4gICAgICAgICAgLmNhdGNoKGVyciA9PiBjb25zb2xlLmxvZyhlcnIpKVxyXG4gICAgICB9XHJcbiAgICAgIGZldGNoKClcclxuICAgIH0sXHJcbiAgICBSZW1vdmU6IChzdGF0ZSwgYWN0aW9uKSA9PiB7XHJcbiAgICAgIHN0YXRlLnVzZXIgPSBudWxsXHJcbiAgICB9LFxyXG4gICAgQ2hlY2s6IChzdGF0ZSwgYWN0aW9uKSA9PiB7XHJcbiAgICAgIHN0YXRlLnVzZXIgPSBhY3Rpb24ucGF5bG9hZFxyXG4gICAgfSxcclxuICB9LFxyXG59KVxyXG5cclxuZXhwb3J0IGNvbnN0IHsgQWRkLCBSZW1vdmUsIENoZWNrIH0gPSBVc2VyU2xpY2UuYWN0aW9uc1xyXG5cclxuLy8gVGhlIGZ1bmN0aW9uIGJlbG93IGlzIGNhbGxlZCBhIHRodW5rIGFuZCBhbGxvd3MgdXMgdG8gcGVyZm9ybSBhc3luYyBsb2dpYy4gSXRcclxuLy8gY2FuIGJlIGRpc3BhdGNoZWQgbGlrZSBhIHJlZ3VsYXIgYWN0aW9uOiBgZGlzcGF0Y2goaW5jcmVtZW50QXN5bmMoMTApKWAuIFRoaXNcclxuLy8gd2lsbCBjYWxsIHRoZSB0aHVuayB3aXRoIHRoZSBgZGlzcGF0Y2hgIGZ1bmN0aW9uIGFzIHRoZSBmaXJzdCBhcmd1bWVudC4gQXN5bmNcclxuLy8gY29kZSBjYW4gdGhlbiBiZSBleGVjdXRlZCBhbmQgb3RoZXIgYWN0aW9ucyBjYW4gYmUgZGlzcGF0Y2hlZFxyXG5cclxuLy8gVGhlIGZ1bmN0aW9uIGJlbG93IGlzIGNhbGxlZCBhIHNlbGVjdG9yIGFuZCBhbGxvd3MgdXMgdG8gc2VsZWN0IGEgdmFsdWUgZnJvbVxyXG4vLyB0aGUgc3RhdGUuIFNlbGVjdG9ycyBjYW4gYWxzbyBiZSBkZWZpbmVkIGlubGluZSB3aGVyZSB0aGV5J3JlIHVzZWQgaW5zdGVhZCBvZlxyXG4vLyBpbiB0aGUgc2xpY2UgZmlsZS4gRm9yIGV4YW1wbGU6IGB1c2VTZWxlY3Rvcigoc3RhdGUpID0+IHN0YXRlLmNvdW50ZXIudmFsdWUpYFxyXG5leHBvcnQgY29uc3Qgc2VsZWN0VXNlciA9IHN0YXRlID0+IHN0YXRlLlVzZXIudXNlclxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVXNlclNsaWNlLnJlZHVjZXJcclxuIiwiaW1wb3J0IHsgY3JlYXRlU2xpY2UgfSBmcm9tICdAcmVkdXhqcy90b29sa2l0J1xyXG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnXHJcblxyXG5leHBvcnQgY29uc3QgVG9kb1JlZHVjZXIgPSBjcmVhdGVTbGljZSh7XHJcbiAgbmFtZTogJ1RvZG8nLFxyXG4gIGluaXRpYWxTdGF0ZToge1xyXG4gICAgdG9kbzogW10sXHJcbiAgfSxcclxuICByZWR1Y2Vyczoge1xyXG4gICAgU2V0VG9kbzogKHN0YXRlLCBhY3Rpb24pID0+IHtcclxuICAgICAgc3RhdGUudG9kbyA9IFsuLi5hY3Rpb24ucGF5bG9hZF0ucmV2ZXJzZSgpXHJcbiAgICB9LFxyXG4gIH0sXHJcbn0pXHJcblxyXG5leHBvcnQgY29uc3QgeyBTZXRUb2RvIH0gPSBUb2RvUmVkdWNlci5hY3Rpb25zXHJcblxyXG4vLyBUaGUgZnVuY3Rpb24gYmVsb3cgaXMgY2FsbGVkIGEgdGh1bmsgYW5kIGFsbG93cyB1cyB0byBwZXJmb3JtIGFzeW5jIGxvZ2ljLiBJdFxyXG4vLyBjYW4gYmUgZGlzcGF0Y2hlZCBsaWtlIGEgcmVndWxhciBhY3Rpb246IGBkaXNwYXRjaChpbmNyZW1lbnRBc3luYygxMCkpYC4gVGhpc1xyXG4vLyB3aWxsIGNhbGwgdGhlIHRodW5rIHdpdGggdGhlIGBkaXNwYXRjaGAgZnVuY3Rpb24gYXMgdGhlIGZpcnN0IGFyZ3VtZW50LiBBc3luY1xyXG4vLyBjb2RlIGNhbiB0aGVuIGJlIGV4ZWN1dGVkIGFuZCBvdGhlciBhY3Rpb25zIGNhbiBiZSBkaXNwYXRjaGVkXHJcblxyXG4vLyBUaGUgZnVuY3Rpb24gYmVsb3cgaXMgY2FsbGVkIGEgc2VsZWN0b3IgYW5kIGFsbG93cyB1cyB0byBzZWxlY3QgYSB2YWx1ZSBmcm9tXHJcbi8vIHRoZSBzdGF0ZS4gU2VsZWN0b3JzIGNhbiBhbHNvIGJlIGRlZmluZWQgaW5saW5lIHdoZXJlIHRoZXkncmUgdXNlZCBpbnN0ZWFkIG9mXHJcbi8vIGluIHRoZSBzbGljZSBmaWxlLiBGb3IgZXhhbXBsZTogYHVzZVNlbGVjdG9yKChzdGF0ZSkgPT4gc3RhdGUuY291bnRlci52YWx1ZSlgXHJcbmV4cG9ydCBjb25zdCBzZWxlY3RUb2RvID0gc3RhdGUgPT4gc3RhdGUuVG9kby50b2RvXHJcblxyXG5leHBvcnQgZGVmYXVsdCBUb2RvUmVkdWNlci5yZWR1Y2VyXHJcbiIsInZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcclxuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XHJcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcclxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcclxuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuICAgIH07XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcclxuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxyXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIiArIFN0cmluZyhiKSArIFwiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7XHJcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cclxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XHJcbiAgICB9O1xyXG59KSgpO1xyXG52YXIgX19nZW5lcmF0b3IgPSAodGhpcyAmJiB0aGlzLl9fZ2VuZXJhdG9yKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgYm9keSkge1xyXG4gICAgdmFyIF8gPSB7IGxhYmVsOiAwLCBzZW50OiBmdW5jdGlvbigpIHsgaWYgKHRbMF0gJiAxKSB0aHJvdyB0WzFdOyByZXR1cm4gdFsxXTsgfSwgdHJ5czogW10sIG9wczogW10gfSwgZiwgeSwgdCwgZztcclxuICAgIHJldHVybiBnID0geyBuZXh0OiB2ZXJiKDApLCBcInRocm93XCI6IHZlcmIoMSksIFwicmV0dXJuXCI6IHZlcmIoMikgfSwgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIChnW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXM7IH0pLCBnO1xyXG4gICAgZnVuY3Rpb24gdmVyYihuKSB7IHJldHVybiBmdW5jdGlvbiAodikgeyByZXR1cm4gc3RlcChbbiwgdl0pOyB9OyB9XHJcbiAgICBmdW5jdGlvbiBzdGVwKG9wKSB7XHJcbiAgICAgICAgaWYgKGYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO1xyXG4gICAgICAgIHdoaWxlIChfKSB0cnkge1xyXG4gICAgICAgICAgICBpZiAoZiA9IDEsIHkgJiYgKHQgPSBvcFswXSAmIDIgPyB5W1wicmV0dXJuXCJdIDogb3BbMF0gPyB5W1widGhyb3dcIl0gfHwgKCh0ID0geVtcInJldHVyblwiXSkgJiYgdC5jYWxsKHkpLCAwKSA6IHkubmV4dCkgJiYgISh0ID0gdC5jYWxsKHksIG9wWzFdKSkuZG9uZSkgcmV0dXJuIHQ7XHJcbiAgICAgICAgICAgIGlmICh5ID0gMCwgdCkgb3AgPSBbb3BbMF0gJiAyLCB0LnZhbHVlXTtcclxuICAgICAgICAgICAgc3dpdGNoIChvcFswXSkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSAwOiBjYXNlIDE6IHQgPSBvcDsgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIDQ6IF8ubGFiZWwrKzsgcmV0dXJuIHsgdmFsdWU6IG9wWzFdLCBkb25lOiBmYWxzZSB9O1xyXG4gICAgICAgICAgICAgICAgY2FzZSA1OiBfLmxhYmVsKys7IHkgPSBvcFsxXTsgb3AgPSBbMF07IGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgY2FzZSA3OiBvcCA9IF8ub3BzLnBvcCgpOyBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICBpZiAoISh0ID0gXy50cnlzLCB0ID0gdC5sZW5ndGggPiAwICYmIHRbdC5sZW5ndGggLSAxXSkgJiYgKG9wWzBdID09PSA2IHx8IG9wWzBdID09PSAyKSkgeyBfID0gMDsgY29udGludWU7IH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDMgJiYgKCF0IHx8IChvcFsxXSA+IHRbMF0gJiYgb3BbMV0gPCB0WzNdKSkpIHsgXy5sYWJlbCA9IG9wWzFdOyBicmVhazsgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gNiAmJiBfLmxhYmVsIDwgdFsxXSkgeyBfLmxhYmVsID0gdFsxXTsgdCA9IG9wOyBicmVhazsgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0ICYmIF8ubGFiZWwgPCB0WzJdKSB7IF8ubGFiZWwgPSB0WzJdOyBfLm9wcy5wdXNoKG9wKTsgYnJlYWs7IH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAodFsyXSkgXy5vcHMucG9wKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBvcCA9IGJvZHkuY2FsbCh0aGlzQXJnLCBfKTtcclxuICAgICAgICB9IGNhdGNoIChlKSB7IG9wID0gWzYsIGVdOyB5ID0gMDsgfSBmaW5hbGx5IHsgZiA9IHQgPSAwOyB9XHJcbiAgICAgICAgaWYgKG9wWzBdICYgNSkgdGhyb3cgb3BbMV07IHJldHVybiB7IHZhbHVlOiBvcFswXSA/IG9wWzFdIDogdm9pZCAwLCBkb25lOiB0cnVlIH07XHJcbiAgICB9XHJcbn07XHJcbnZhciBfX3NwcmVhZEFycmF5ID0gKHRoaXMgJiYgdGhpcy5fX3NwcmVhZEFycmF5KSB8fCBmdW5jdGlvbiAodG8sIGZyb20pIHtcclxuICAgIGZvciAodmFyIGkgPSAwLCBpbCA9IGZyb20ubGVuZ3RoLCBqID0gdG8ubGVuZ3RoOyBpIDwgaWw7IGkrKywgaisrKVxyXG4gICAgICAgIHRvW2pdID0gZnJvbVtpXTtcclxuICAgIHJldHVybiB0bztcclxufTtcclxudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcclxudmFyIF9fZGVmUHJvcHMgPSBPYmplY3QuZGVmaW5lUHJvcGVydGllcztcclxudmFyIF9fZ2V0T3duUHJvcERlc2NzID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM7XHJcbnZhciBfX2dldE93blByb3BTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcclxudmFyIF9faGFzT3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XHJcbnZhciBfX3Byb3BJc0VudW0gPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xyXG52YXIgX19kZWZOb3JtYWxQcm9wID0gZnVuY3Rpb24gKG9iaiwga2V5LCB2YWx1ZSkgeyByZXR1cm4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlOyB9O1xyXG52YXIgX19zcHJlYWRWYWx1ZXMgPSBmdW5jdGlvbiAoYSwgYikge1xyXG4gICAgZm9yICh2YXIgcHJvcCBpbiBiIHx8IChiID0ge30pKVxyXG4gICAgICAgIGlmIChfX2hhc093blByb3AuY2FsbChiLCBwcm9wKSlcclxuICAgICAgICAgICAgX19kZWZOb3JtYWxQcm9wKGEsIHByb3AsIGJbcHJvcF0pO1xyXG4gICAgaWYgKF9fZ2V0T3duUHJvcFN5bWJvbHMpXHJcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBfYiA9IF9fZ2V0T3duUHJvcFN5bWJvbHMoYik7IF9pIDwgX2IubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgICAgIHZhciBwcm9wID0gX2JbX2ldO1xyXG4gICAgICAgICAgICBpZiAoX19wcm9wSXNFbnVtLmNhbGwoYiwgcHJvcCkpXHJcbiAgICAgICAgICAgICAgICBfX2RlZk5vcm1hbFByb3AoYSwgcHJvcCwgYltwcm9wXSk7XHJcbiAgICAgICAgfVxyXG4gICAgcmV0dXJuIGE7XHJcbn07XHJcbnZhciBfX3NwcmVhZFByb3BzID0gZnVuY3Rpb24gKGEsIGIpIHsgcmV0dXJuIF9fZGVmUHJvcHMoYSwgX19nZXRPd25Qcm9wRGVzY3MoYikpOyB9O1xyXG52YXIgX19hc3luYyA9IGZ1bmN0aW9uIChfX3RoaXMsIF9fYXJndW1lbnRzLCBnZW5lcmF0b3IpIHtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XHJcbiAgICAgICAgdmFyIGZ1bGZpbGxlZCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICByZWplY3QoZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIHZhciByZWplY3RlZCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgc3RlcChnZW5lcmF0b3IudGhyb3codmFsdWUpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAgICAgcmVqZWN0KGUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICB2YXIgc3RlcCA9IGZ1bmN0aW9uICh4KSB7IHJldHVybiB4LmRvbmUgPyByZXNvbHZlKHgudmFsdWUpIDogUHJvbWlzZS5yZXNvbHZlKHgudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH07XHJcbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KF9fdGhpcywgX19hcmd1bWVudHMpKS5uZXh0KCkpO1xyXG4gICAgfSk7XHJcbn07XHJcbi8vIHNyYy9pbmRleC50c1xyXG5pbXBvcnQgeyBlbmFibGVFUzUgfSBmcm9tIFwiaW1tZXJcIjtcclxuZXhwb3J0ICogZnJvbSBcInJlZHV4XCI7XHJcbmltcG9ydCB7IGRlZmF1bHQgYXMgZGVmYXVsdDIsIGN1cnJlbnQgYXMgY3VycmVudDIsIGZyZWV6ZSwgb3JpZ2luYWwsIGlzRHJhZnQgYXMgaXNEcmFmdDQgfSBmcm9tIFwiaW1tZXJcIjtcclxuaW1wb3J0IHsgY3JlYXRlU2VsZWN0b3IgYXMgY3JlYXRlU2VsZWN0b3IyIH0gZnJvbSBcInJlc2VsZWN0XCI7XHJcbi8vIHNyYy9jcmVhdGVEcmFmdFNhZmVTZWxlY3Rvci50c1xyXG5pbXBvcnQgeyBjdXJyZW50LCBpc0RyYWZ0IH0gZnJvbSBcImltbWVyXCI7XHJcbmltcG9ydCB7IGNyZWF0ZVNlbGVjdG9yIH0gZnJvbSBcInJlc2VsZWN0XCI7XHJcbnZhciBjcmVhdGVEcmFmdFNhZmVTZWxlY3RvciA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBhcmdzID0gW107XHJcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgIGFyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcclxuICAgIH1cclxuICAgIHZhciBzZWxlY3RvciA9IGNyZWF0ZVNlbGVjdG9yLmFwcGx5KHZvaWQgMCwgYXJncyk7XHJcbiAgICB2YXIgd3JhcHBlZFNlbGVjdG9yID0gZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgdmFyIHJlc3QgPSBbXTtcclxuICAgICAgICBmb3IgKHZhciBfaSA9IDE7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgICAgICByZXN0W19pIC0gMV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gc2VsZWN0b3IuYXBwbHkodm9pZCAwLCBfX3NwcmVhZEFycmF5KFtpc0RyYWZ0KHZhbHVlKSA/IGN1cnJlbnQodmFsdWUpIDogdmFsdWVdLCByZXN0KSk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIHdyYXBwZWRTZWxlY3RvcjtcclxufTtcclxuLy8gc3JjL2NvbmZpZ3VyZVN0b3JlLnRzXHJcbmltcG9ydCB7IGNyZWF0ZVN0b3JlLCBjb21wb3NlIGFzIGNvbXBvc2UyLCBhcHBseU1pZGRsZXdhcmUsIGNvbWJpbmVSZWR1Y2VycyB9IGZyb20gXCJyZWR1eFwiO1xyXG4vLyBzcmMvZGV2dG9vbHNFeHRlbnNpb24udHNcclxuaW1wb3J0IHsgY29tcG9zZSB9IGZyb20gXCJyZWR1eFwiO1xyXG52YXIgY29tcG9zZVdpdGhEZXZUb29scyA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93Ll9fUkVEVVhfREVWVE9PTFNfRVhURU5TSU9OX0NPTVBPU0VfXyA/IHdpbmRvdy5fX1JFRFVYX0RFVlRPT0xTX0VYVEVOU0lPTl9DT01QT1NFX18gOiBmdW5jdGlvbiAoKSB7XHJcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMClcclxuICAgICAgICByZXR1cm4gdm9pZCAwO1xyXG4gICAgaWYgKHR5cGVvZiBhcmd1bWVudHNbMF0gPT09IFwib2JqZWN0XCIpXHJcbiAgICAgICAgcmV0dXJuIGNvbXBvc2U7XHJcbiAgICByZXR1cm4gY29tcG9zZS5hcHBseShudWxsLCBhcmd1bWVudHMpO1xyXG59O1xyXG52YXIgZGV2VG9vbHNFbmhhbmNlciA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93Ll9fUkVEVVhfREVWVE9PTFNfRVhURU5TSU9OX18gPyB3aW5kb3cuX19SRURVWF9ERVZUT09MU19FWFRFTlNJT05fXyA6IGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiAobm9vcCkge1xyXG4gICAgICAgIHJldHVybiBub29wO1xyXG4gICAgfTtcclxufTtcclxuLy8gc3JjL2lzUGxhaW5PYmplY3QudHNcclxuZnVuY3Rpb24gaXNQbGFpbk9iamVjdCh2YWx1ZSkge1xyXG4gICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJvYmplY3RcIiB8fCB2YWx1ZSA9PT0gbnVsbClcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB2YXIgcHJvdG8gPSB2YWx1ZTtcclxuICAgIHdoaWxlIChPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG8pICE9PSBudWxsKSB7XHJcbiAgICAgICAgcHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG8pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIE9iamVjdC5nZXRQcm90b3R5cGVPZih2YWx1ZSkgPT09IHByb3RvO1xyXG59XHJcbi8vIHNyYy9nZXREZWZhdWx0TWlkZGxld2FyZS50c1xyXG5pbXBvcnQgdGh1bmtNaWRkbGV3YXJlIGZyb20gXCJyZWR1eC10aHVua1wiO1xyXG4vLyBzcmMvdXRpbHMudHNcclxuZnVuY3Rpb24gZ2V0VGltZU1lYXN1cmVVdGlscyhtYXhEZWxheSwgZm5OYW1lKSB7XHJcbiAgICB2YXIgZWxhcHNlZCA9IDA7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIG1lYXN1cmVUaW1lOiBmdW5jdGlvbiAoZm4pIHtcclxuICAgICAgICAgICAgdmFyIHN0YXJ0ZWQgPSBEYXRlLm5vdygpO1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZuKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZmluYWxseSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZmluaXNoZWQgPSBEYXRlLm5vdygpO1xyXG4gICAgICAgICAgICAgICAgZWxhcHNlZCArPSBmaW5pc2hlZCAtIHN0YXJ0ZWQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHdhcm5JZkV4Y2VlZGVkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmIChlbGFwc2VkID4gbWF4RGVsYXkpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUud2Fybihmbk5hbWUgKyBcIiB0b29rIFwiICsgZWxhcHNlZCArIFwibXMsIHdoaWNoIGlzIG1vcmUgdGhhbiB0aGUgd2FybmluZyB0aHJlc2hvbGQgb2YgXCIgKyBtYXhEZWxheSArIFwibXMuIFxcbklmIHlvdXIgc3RhdGUgb3IgYWN0aW9ucyBhcmUgdmVyeSBsYXJnZSwgeW91IG1heSB3YW50IHRvIGRpc2FibGUgdGhlIG1pZGRsZXdhcmUgYXMgaXQgbWlnaHQgY2F1c2UgdG9vIG11Y2ggb2YgYSBzbG93ZG93biBpbiBkZXZlbG9wbWVudCBtb2RlLiBTZWUgaHR0cHM6Ly9yZWR1eC10b29sa2l0LmpzLm9yZy9hcGkvZ2V0RGVmYXVsdE1pZGRsZXdhcmUgZm9yIGluc3RydWN0aW9ucy5cXG5JdCBpcyBkaXNhYmxlZCBpbiBwcm9kdWN0aW9uIGJ1aWxkcywgc28geW91IGRvbid0IG5lZWQgdG8gd29ycnkgYWJvdXQgdGhhdC5cIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9O1xyXG59XHJcbnZhciBNaWRkbGV3YXJlQXJyYXkgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcbiAgICBfX2V4dGVuZHMoTWlkZGxld2FyZUFycmF5LCBfc3VwZXIpO1xyXG4gICAgZnVuY3Rpb24gTWlkZGxld2FyZUFycmF5KCkge1xyXG4gICAgICAgIHZhciBhcmdzID0gW107XHJcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICAgICAgYXJnc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuYXBwbHkodGhpcywgYXJncykgfHwgdGhpcztcclxuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YoX3RoaXMsIE1pZGRsZXdhcmVBcnJheS5wcm90b3R5cGUpO1xyXG4gICAgICAgIHJldHVybiBfdGhpcztcclxuICAgIH1cclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShNaWRkbGV3YXJlQXJyYXksIFN5bWJvbC5zcGVjaWVzLCB7XHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBNaWRkbGV3YXJlQXJyYXk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgTWlkZGxld2FyZUFycmF5LnByb3RvdHlwZS5jb25jYXQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGFyciA9IFtdO1xyXG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgICAgIGFycltfaV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gX3N1cGVyLnByb3RvdHlwZS5jb25jYXQuYXBwbHkodGhpcywgYXJyKTtcclxuICAgIH07XHJcbiAgICBNaWRkbGV3YXJlQXJyYXkucHJvdG90eXBlLnByZXBlbmQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGFyciA9IFtdO1xyXG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgICAgIGFycltfaV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoYXJyLmxlbmd0aCA9PT0gMSAmJiBBcnJheS5pc0FycmF5KGFyclswXSkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG5ldyAoTWlkZGxld2FyZUFycmF5LmJpbmQuYXBwbHkoTWlkZGxld2FyZUFycmF5LCBfX3NwcmVhZEFycmF5KFt2b2lkIDBdLCBhcnJbMF0uY29uY2F0KHRoaXMpKSkpKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBuZXcgKE1pZGRsZXdhcmVBcnJheS5iaW5kLmFwcGx5KE1pZGRsZXdhcmVBcnJheSwgX19zcHJlYWRBcnJheShbdm9pZCAwXSwgYXJyLmNvbmNhdCh0aGlzKSkpKSgpO1xyXG4gICAgfTtcclxuICAgIHJldHVybiBNaWRkbGV3YXJlQXJyYXk7XHJcbn0oQXJyYXkpKTtcclxuLy8gc3JjL2ltbXV0YWJsZVN0YXRlSW52YXJpYW50TWlkZGxld2FyZS50c1xyXG52YXIgaXNQcm9kdWN0aW9uID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiO1xyXG52YXIgcHJlZml4ID0gXCJJbnZhcmlhbnQgZmFpbGVkXCI7XHJcbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIG1lc3NhZ2UpIHtcclxuICAgIGlmIChjb25kaXRpb24pIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAoaXNQcm9kdWN0aW9uKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKHByZWZpeCk7XHJcbiAgICB9XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4ICsgXCI6IFwiICsgKG1lc3NhZ2UgfHwgXCJcIikpO1xyXG59XHJcbmZ1bmN0aW9uIHN0cmluZ2lmeShvYmosIHNlcmlhbGl6ZXIsIGluZGVudCwgZGVjeWNsZXIpIHtcclxuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShvYmosIGdldFNlcmlhbGl6ZShzZXJpYWxpemVyLCBkZWN5Y2xlciksIGluZGVudCk7XHJcbn1cclxuZnVuY3Rpb24gZ2V0U2VyaWFsaXplKHNlcmlhbGl6ZXIsIGRlY3ljbGVyKSB7XHJcbiAgICB2YXIgc3RhY2sgPSBbXSwga2V5cyA9IFtdO1xyXG4gICAgaWYgKCFkZWN5Y2xlcilcclxuICAgICAgICBkZWN5Y2xlciA9IGZ1bmN0aW9uIChfLCB2YWx1ZSkge1xyXG4gICAgICAgICAgICBpZiAoc3RhY2tbMF0gPT09IHZhbHVlKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiW0NpcmN1bGFyIH5dXCI7XHJcbiAgICAgICAgICAgIHJldHVybiBcIltDaXJjdWxhciB+LlwiICsga2V5cy5zbGljZSgwLCBzdGFjay5pbmRleE9mKHZhbHVlKSkuam9pbihcIi5cIikgKyBcIl1cIjtcclxuICAgICAgICB9O1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XHJcbiAgICAgICAgaWYgKHN0YWNrLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgdmFyIHRoaXNQb3MgPSBzdGFjay5pbmRleE9mKHRoaXMpO1xyXG4gICAgICAgICAgICB+dGhpc1BvcyA/IHN0YWNrLnNwbGljZSh0aGlzUG9zICsgMSkgOiBzdGFjay5wdXNoKHRoaXMpO1xyXG4gICAgICAgICAgICB+dGhpc1BvcyA/IGtleXMuc3BsaWNlKHRoaXNQb3MsIEluZmluaXR5LCBrZXkpIDoga2V5cy5wdXNoKGtleSk7XHJcbiAgICAgICAgICAgIGlmICh+c3RhY2suaW5kZXhPZih2YWx1ZSkpXHJcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IGRlY3ljbGVyLmNhbGwodGhpcywga2V5LCB2YWx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgc3RhY2sucHVzaCh2YWx1ZSk7XHJcbiAgICAgICAgcmV0dXJuIHNlcmlhbGl6ZXIgPT0gbnVsbCA/IHZhbHVlIDogc2VyaWFsaXplci5jYWxsKHRoaXMsIGtleSwgdmFsdWUpO1xyXG4gICAgfTtcclxufVxyXG5mdW5jdGlvbiBpc0ltbXV0YWJsZURlZmF1bHQodmFsdWUpIHtcclxuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgIT09IFwib2JqZWN0XCIgfHwgdmFsdWUgPT09IG51bGwgfHwgdHlwZW9mIHZhbHVlID09PSBcInVuZGVmaW5lZFwiIHx8IE9iamVjdC5pc0Zyb3plbih2YWx1ZSk7XHJcbn1cclxuZnVuY3Rpb24gdHJhY2tGb3JNdXRhdGlvbnMoaXNJbW11dGFibGUsIGlnbm9yZVBhdGhzLCBvYmopIHtcclxuICAgIHZhciB0cmFja2VkUHJvcGVydGllcyA9IHRyYWNrUHJvcGVydGllcyhpc0ltbXV0YWJsZSwgaWdub3JlUGF0aHMsIG9iaik7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGRldGVjdE11dGF0aW9uczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gZGV0ZWN0TXV0YXRpb25zKGlzSW1tdXRhYmxlLCBpZ25vcmVQYXRocywgdHJhY2tlZFByb3BlcnRpZXMsIG9iaik7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxufVxyXG5mdW5jdGlvbiB0cmFja1Byb3BlcnRpZXMoaXNJbW11dGFibGUsIGlnbm9yZVBhdGhzLCBvYmosIHBhdGgpIHtcclxuICAgIGlmIChpZ25vcmVQYXRocyA9PT0gdm9pZCAwKSB7IGlnbm9yZVBhdGhzID0gW107IH1cclxuICAgIGlmIChwYXRoID09PSB2b2lkIDApIHsgcGF0aCA9IFwiXCI7IH1cclxuICAgIHZhciB0cmFja2VkID0geyB2YWx1ZTogb2JqIH07XHJcbiAgICBpZiAoIWlzSW1tdXRhYmxlKG9iaikpIHtcclxuICAgICAgICB0cmFja2VkLmNoaWxkcmVuID0ge307XHJcbiAgICAgICAgZm9yICh2YXIga2V5IGluIG9iaikge1xyXG4gICAgICAgICAgICB2YXIgY2hpbGRQYXRoID0gcGF0aCA/IHBhdGggKyBcIi5cIiArIGtleSA6IGtleTtcclxuICAgICAgICAgICAgaWYgKGlnbm9yZVBhdGhzLmxlbmd0aCAmJiBpZ25vcmVQYXRocy5pbmRleE9mKGNoaWxkUGF0aCkgIT09IC0xKSB7XHJcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0cmFja2VkLmNoaWxkcmVuW2tleV0gPSB0cmFja1Byb3BlcnRpZXMoaXNJbW11dGFibGUsIGlnbm9yZVBhdGhzLCBvYmpba2V5XSwgY2hpbGRQYXRoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdHJhY2tlZDtcclxufVxyXG5mdW5jdGlvbiBkZXRlY3RNdXRhdGlvbnMoaXNJbW11dGFibGUsIGlnbm9yZVBhdGhzLCB0cmFja2VkUHJvcGVydHksIG9iaiwgc2FtZVBhcmVudFJlZiwgcGF0aCkge1xyXG4gICAgaWYgKGlnbm9yZVBhdGhzID09PSB2b2lkIDApIHsgaWdub3JlUGF0aHMgPSBbXTsgfVxyXG4gICAgaWYgKHNhbWVQYXJlbnRSZWYgPT09IHZvaWQgMCkgeyBzYW1lUGFyZW50UmVmID0gZmFsc2U7IH1cclxuICAgIGlmIChwYXRoID09PSB2b2lkIDApIHsgcGF0aCA9IFwiXCI7IH1cclxuICAgIHZhciBwcmV2T2JqID0gdHJhY2tlZFByb3BlcnR5ID8gdHJhY2tlZFByb3BlcnR5LnZhbHVlIDogdm9pZCAwO1xyXG4gICAgdmFyIHNhbWVSZWYgPSBwcmV2T2JqID09PSBvYmo7XHJcbiAgICBpZiAoc2FtZVBhcmVudFJlZiAmJiAhc2FtZVJlZiAmJiAhTnVtYmVyLmlzTmFOKG9iaikpIHtcclxuICAgICAgICByZXR1cm4geyB3YXNNdXRhdGVkOiB0cnVlLCBwYXRoOiBwYXRoIH07XHJcbiAgICB9XHJcbiAgICBpZiAoaXNJbW11dGFibGUocHJldk9iaikgfHwgaXNJbW11dGFibGUob2JqKSkge1xyXG4gICAgICAgIHJldHVybiB7IHdhc011dGF0ZWQ6IGZhbHNlIH07XHJcbiAgICB9XHJcbiAgICB2YXIga2V5c1RvRGV0ZWN0ID0ge307XHJcbiAgICBmb3IgKHZhciBrZXkgaW4gdHJhY2tlZFByb3BlcnR5LmNoaWxkcmVuKSB7XHJcbiAgICAgICAga2V5c1RvRGV0ZWN0W2tleV0gPSB0cnVlO1xyXG4gICAgfVxyXG4gICAgZm9yICh2YXIga2V5IGluIG9iaikge1xyXG4gICAgICAgIGtleXNUb0RldGVjdFtrZXldID0gdHJ1ZTtcclxuICAgIH1cclxuICAgIGZvciAodmFyIGtleSBpbiBrZXlzVG9EZXRlY3QpIHtcclxuICAgICAgICB2YXIgY2hpbGRQYXRoID0gcGF0aCA/IHBhdGggKyBcIi5cIiArIGtleSA6IGtleTtcclxuICAgICAgICBpZiAoaWdub3JlUGF0aHMubGVuZ3RoICYmIGlnbm9yZVBhdGhzLmluZGV4T2YoY2hpbGRQYXRoKSAhPT0gLTEpIHtcclxuICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciByZXN1bHQgPSBkZXRlY3RNdXRhdGlvbnMoaXNJbW11dGFibGUsIGlnbm9yZVBhdGhzLCB0cmFja2VkUHJvcGVydHkuY2hpbGRyZW5ba2V5XSwgb2JqW2tleV0sIHNhbWVSZWYsIGNoaWxkUGF0aCk7XHJcbiAgICAgICAgaWYgKHJlc3VsdC53YXNNdXRhdGVkKSB7XHJcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHsgd2FzTXV0YXRlZDogZmFsc2UgfTtcclxufVxyXG5mdW5jdGlvbiBjcmVhdGVJbW11dGFibGVTdGF0ZUludmFyaWFudE1pZGRsZXdhcmUob3B0aW9ucykge1xyXG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cclxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkgeyByZXR1cm4gZnVuY3Rpb24gKG5leHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHsgcmV0dXJuIG5leHQoYWN0aW9uKTsgfTsgfTsgfTtcclxuICAgIH1cclxuICAgIHZhciBfYiA9IG9wdGlvbnMuaXNJbW11dGFibGUsIGlzSW1tdXRhYmxlID0gX2IgPT09IHZvaWQgMCA/IGlzSW1tdXRhYmxlRGVmYXVsdCA6IF9iLCBpZ25vcmVkUGF0aHMgPSBvcHRpb25zLmlnbm9yZWRQYXRocywgX2MgPSBvcHRpb25zLndhcm5BZnRlciwgd2FybkFmdGVyID0gX2MgPT09IHZvaWQgMCA/IDMyIDogX2MsIGlnbm9yZSA9IG9wdGlvbnMuaWdub3JlO1xyXG4gICAgaWdub3JlZFBhdGhzID0gaWdub3JlZFBhdGhzIHx8IGlnbm9yZTtcclxuICAgIHZhciB0cmFjayA9IHRyYWNrRm9yTXV0YXRpb25zLmJpbmQobnVsbCwgaXNJbW11dGFibGUsIGlnbm9yZWRQYXRocyk7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKF9iKSB7XHJcbiAgICAgICAgdmFyIGdldFN0YXRlID0gX2IuZ2V0U3RhdGU7XHJcbiAgICAgICAgdmFyIHN0YXRlID0gZ2V0U3RhdGUoKTtcclxuICAgICAgICB2YXIgdHJhY2tlciA9IHRyYWNrKHN0YXRlKTtcclxuICAgICAgICB2YXIgcmVzdWx0O1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAobmV4dCkgeyByZXR1cm4gZnVuY3Rpb24gKGFjdGlvbikge1xyXG4gICAgICAgICAgICB2YXIgbWVhc3VyZVV0aWxzID0gZ2V0VGltZU1lYXN1cmVVdGlscyh3YXJuQWZ0ZXIsIFwiSW1tdXRhYmxlU3RhdGVJbnZhcmlhbnRNaWRkbGV3YXJlXCIpO1xyXG4gICAgICAgICAgICBtZWFzdXJlVXRpbHMubWVhc3VyZVRpbWUoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgc3RhdGUgPSBnZXRTdGF0ZSgpO1xyXG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gdHJhY2tlci5kZXRlY3RNdXRhdGlvbnMoKTtcclxuICAgICAgICAgICAgICAgIHRyYWNrZXIgPSB0cmFjayhzdGF0ZSk7XHJcbiAgICAgICAgICAgICAgICBpbnZhcmlhbnQoIXJlc3VsdC53YXNNdXRhdGVkLCBcIkEgc3RhdGUgbXV0YXRpb24gd2FzIGRldGVjdGVkIGJldHdlZW4gZGlzcGF0Y2hlcywgaW4gdGhlIHBhdGggJ1wiICsgKHJlc3VsdC5wYXRoIHx8IFwiXCIpICsgXCInLiAgVGhpcyBtYXkgY2F1c2UgaW5jb3JyZWN0IGJlaGF2aW9yLiAoaHR0cHM6Ly9yZWR1eC5qcy5vcmcvc3R5bGUtZ3VpZGUvc3R5bGUtZ3VpZGUjZG8tbm90LW11dGF0ZS1zdGF0ZSlcIik7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB2YXIgZGlzcGF0Y2hlZEFjdGlvbiA9IG5leHQoYWN0aW9uKTtcclxuICAgICAgICAgICAgbWVhc3VyZVV0aWxzLm1lYXN1cmVUaW1lKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHN0YXRlID0gZ2V0U3RhdGUoKTtcclxuICAgICAgICAgICAgICAgIHJlc3VsdCA9IHRyYWNrZXIuZGV0ZWN0TXV0YXRpb25zKCk7XHJcbiAgICAgICAgICAgICAgICB0cmFja2VyID0gdHJhY2soc3RhdGUpO1xyXG4gICAgICAgICAgICAgICAgcmVzdWx0Lndhc011dGF0ZWQgJiYgaW52YXJpYW50KCFyZXN1bHQud2FzTXV0YXRlZCwgXCJBIHN0YXRlIG11dGF0aW9uIHdhcyBkZXRlY3RlZCBpbnNpZGUgYSBkaXNwYXRjaCwgaW4gdGhlIHBhdGg6IFwiICsgKHJlc3VsdC5wYXRoIHx8IFwiXCIpICsgXCIuIFRha2UgYSBsb29rIGF0IHRoZSByZWR1Y2VyKHMpIGhhbmRsaW5nIHRoZSBhY3Rpb24gXCIgKyBzdHJpbmdpZnkoYWN0aW9uKSArIFwiLiAoaHR0cHM6Ly9yZWR1eC5qcy5vcmcvc3R5bGUtZ3VpZGUvc3R5bGUtZ3VpZGUjZG8tbm90LW11dGF0ZS1zdGF0ZSlcIik7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBtZWFzdXJlVXRpbHMud2FybklmRXhjZWVkZWQoKTtcclxuICAgICAgICAgICAgcmV0dXJuIGRpc3BhdGNoZWRBY3Rpb247XHJcbiAgICAgICAgfTsgfTtcclxuICAgIH07XHJcbn1cclxuLy8gc3JjL3NlcmlhbGl6YWJsZVN0YXRlSW52YXJpYW50TWlkZGxld2FyZS50c1xyXG5mdW5jdGlvbiBpc1BsYWluKHZhbCkge1xyXG4gICAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsO1xyXG4gICAgcmV0dXJuIHR5cGUgPT09IFwidW5kZWZpbmVkXCIgfHwgdmFsID09PSBudWxsIHx8IHR5cGUgPT09IFwic3RyaW5nXCIgfHwgdHlwZSA9PT0gXCJib29sZWFuXCIgfHwgdHlwZSA9PT0gXCJudW1iZXJcIiB8fCBBcnJheS5pc0FycmF5KHZhbCkgfHwgaXNQbGFpbk9iamVjdCh2YWwpO1xyXG59XHJcbmZ1bmN0aW9uIGZpbmROb25TZXJpYWxpemFibGVWYWx1ZSh2YWx1ZSwgcGF0aCwgaXNTZXJpYWxpemFibGUsIGdldEVudHJpZXMsIGlnbm9yZWRQYXRocykge1xyXG4gICAgaWYgKHBhdGggPT09IHZvaWQgMCkgeyBwYXRoID0gXCJcIjsgfVxyXG4gICAgaWYgKGlzU2VyaWFsaXphYmxlID09PSB2b2lkIDApIHsgaXNTZXJpYWxpemFibGUgPSBpc1BsYWluOyB9XHJcbiAgICBpZiAoaWdub3JlZFBhdGhzID09PSB2b2lkIDApIHsgaWdub3JlZFBhdGhzID0gW107IH1cclxuICAgIHZhciBmb3VuZE5lc3RlZFNlcmlhbGl6YWJsZTtcclxuICAgIGlmICghaXNTZXJpYWxpemFibGUodmFsdWUpKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAga2V5UGF0aDogcGF0aCB8fCBcIjxyb290PlwiLFxyXG4gICAgICAgICAgICB2YWx1ZTogdmFsdWVcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJvYmplY3RcIiB8fCB2YWx1ZSA9PT0gbnVsbCkge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIHZhciBlbnRyaWVzID0gZ2V0RW50cmllcyAhPSBudWxsID8gZ2V0RW50cmllcyh2YWx1ZSkgOiBPYmplY3QuZW50cmllcyh2YWx1ZSk7XHJcbiAgICB2YXIgaGFzSWdub3JlZFBhdGhzID0gaWdub3JlZFBhdGhzLmxlbmd0aCA+IDA7XHJcbiAgICBmb3IgKHZhciBfaSA9IDAsIGVudHJpZXNfMSA9IGVudHJpZXM7IF9pIDwgZW50cmllc18xLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgIHZhciBfYiA9IGVudHJpZXNfMVtfaV0sIGtleSA9IF9iWzBdLCBuZXN0ZWRWYWx1ZSA9IF9iWzFdO1xyXG4gICAgICAgIHZhciBuZXN0ZWRQYXRoID0gcGF0aCA/IHBhdGggKyBcIi5cIiArIGtleSA6IGtleTtcclxuICAgICAgICBpZiAoaGFzSWdub3JlZFBhdGhzICYmIGlnbm9yZWRQYXRocy5pbmRleE9mKG5lc3RlZFBhdGgpID49IDApIHtcclxuICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghaXNTZXJpYWxpemFibGUobmVzdGVkVmFsdWUpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICBrZXlQYXRoOiBuZXN0ZWRQYXRoLFxyXG4gICAgICAgICAgICAgICAgdmFsdWU6IG5lc3RlZFZhbHVlXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0eXBlb2YgbmVzdGVkVmFsdWUgPT09IFwib2JqZWN0XCIpIHtcclxuICAgICAgICAgICAgZm91bmROZXN0ZWRTZXJpYWxpemFibGUgPSBmaW5kTm9uU2VyaWFsaXphYmxlVmFsdWUobmVzdGVkVmFsdWUsIG5lc3RlZFBhdGgsIGlzU2VyaWFsaXphYmxlLCBnZXRFbnRyaWVzLCBpZ25vcmVkUGF0aHMpO1xyXG4gICAgICAgICAgICBpZiAoZm91bmROZXN0ZWRTZXJpYWxpemFibGUpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmb3VuZE5lc3RlZFNlcmlhbGl6YWJsZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBmYWxzZTtcclxufVxyXG5mdW5jdGlvbiBjcmVhdGVTZXJpYWxpemFibGVTdGF0ZUludmFyaWFudE1pZGRsZXdhcmUob3B0aW9ucykge1xyXG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cclxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkgeyByZXR1cm4gZnVuY3Rpb24gKG5leHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHsgcmV0dXJuIG5leHQoYWN0aW9uKTsgfTsgfTsgfTtcclxuICAgIH1cclxuICAgIHZhciBfYiA9IG9wdGlvbnMuaXNTZXJpYWxpemFibGUsIGlzU2VyaWFsaXphYmxlID0gX2IgPT09IHZvaWQgMCA/IGlzUGxhaW4gOiBfYiwgZ2V0RW50cmllcyA9IG9wdGlvbnMuZ2V0RW50cmllcywgX2MgPSBvcHRpb25zLmlnbm9yZWRBY3Rpb25zLCBpZ25vcmVkQWN0aW9ucyA9IF9jID09PSB2b2lkIDAgPyBbXSA6IF9jLCBfZCA9IG9wdGlvbnMuaWdub3JlZEFjdGlvblBhdGhzLCBpZ25vcmVkQWN0aW9uUGF0aHMgPSBfZCA9PT0gdm9pZCAwID8gW1wibWV0YS5hcmdcIiwgXCJtZXRhLmJhc2VRdWVyeU1ldGFcIl0gOiBfZCwgX2UgPSBvcHRpb25zLmlnbm9yZWRQYXRocywgaWdub3JlZFBhdGhzID0gX2UgPT09IHZvaWQgMCA/IFtdIDogX2UsIF9mID0gb3B0aW9ucy53YXJuQWZ0ZXIsIHdhcm5BZnRlciA9IF9mID09PSB2b2lkIDAgPyAzMiA6IF9mLCBfZyA9IG9wdGlvbnMuaWdub3JlU3RhdGUsIGlnbm9yZVN0YXRlID0gX2cgPT09IHZvaWQgMCA/IGZhbHNlIDogX2c7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKHN0b3JlQVBJKSB7IHJldHVybiBmdW5jdGlvbiAobmV4dCkgeyByZXR1cm4gZnVuY3Rpb24gKGFjdGlvbikge1xyXG4gICAgICAgIGlmIChpZ25vcmVkQWN0aW9ucy5sZW5ndGggJiYgaWdub3JlZEFjdGlvbnMuaW5kZXhPZihhY3Rpb24udHlwZSkgIT09IC0xKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXh0KGFjdGlvbik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBtZWFzdXJlVXRpbHMgPSBnZXRUaW1lTWVhc3VyZVV0aWxzKHdhcm5BZnRlciwgXCJTZXJpYWxpemFibGVTdGF0ZUludmFyaWFudE1pZGRsZXdhcmVcIik7XHJcbiAgICAgICAgbWVhc3VyZVV0aWxzLm1lYXN1cmVUaW1lKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGZvdW5kQWN0aW9uTm9uU2VyaWFsaXphYmxlVmFsdWUgPSBmaW5kTm9uU2VyaWFsaXphYmxlVmFsdWUoYWN0aW9uLCBcIlwiLCBpc1NlcmlhbGl6YWJsZSwgZ2V0RW50cmllcywgaWdub3JlZEFjdGlvblBhdGhzKTtcclxuICAgICAgICAgICAgaWYgKGZvdW5kQWN0aW9uTm9uU2VyaWFsaXphYmxlVmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHZhciBrZXlQYXRoID0gZm91bmRBY3Rpb25Ob25TZXJpYWxpemFibGVWYWx1ZS5rZXlQYXRoLCB2YWx1ZSA9IGZvdW5kQWN0aW9uTm9uU2VyaWFsaXphYmxlVmFsdWUudmFsdWU7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiQSBub24tc2VyaWFsaXphYmxlIHZhbHVlIHdhcyBkZXRlY3RlZCBpbiBhbiBhY3Rpb24sIGluIHRoZSBwYXRoOiBgXCIgKyBrZXlQYXRoICsgXCJgLiBWYWx1ZTpcIiwgdmFsdWUsIFwiXFxuVGFrZSBhIGxvb2sgYXQgdGhlIGxvZ2ljIHRoYXQgZGlzcGF0Y2hlZCB0aGlzIGFjdGlvbjogXCIsIGFjdGlvbiwgXCJcXG4oU2VlIGh0dHBzOi8vcmVkdXguanMub3JnL2ZhcS9hY3Rpb25zI3doeS1zaG91bGQtdHlwZS1iZS1hLXN0cmluZy1vci1hdC1sZWFzdC1zZXJpYWxpemFibGUtd2h5LXNob3VsZC1teS1hY3Rpb24tdHlwZXMtYmUtY29uc3RhbnRzKVwiLCBcIlxcbihUbyBhbGxvdyBub24tc2VyaWFsaXphYmxlIHZhbHVlcyBzZWU6IGh0dHBzOi8vcmVkdXgtdG9vbGtpdC5qcy5vcmcvdXNhZ2UvdXNhZ2UtZ3VpZGUjd29ya2luZy13aXRoLW5vbi1zZXJpYWxpemFibGUtZGF0YSlcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICB2YXIgcmVzdWx0ID0gbmV4dChhY3Rpb24pO1xyXG4gICAgICAgIGlmICghaWdub3JlU3RhdGUpIHtcclxuICAgICAgICAgICAgbWVhc3VyZVV0aWxzLm1lYXN1cmVUaW1lKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciBzdGF0ZSA9IHN0b3JlQVBJLmdldFN0YXRlKCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgZm91bmRTdGF0ZU5vblNlcmlhbGl6YWJsZVZhbHVlID0gZmluZE5vblNlcmlhbGl6YWJsZVZhbHVlKHN0YXRlLCBcIlwiLCBpc1NlcmlhbGl6YWJsZSwgZ2V0RW50cmllcywgaWdub3JlZFBhdGhzKTtcclxuICAgICAgICAgICAgICAgIGlmIChmb3VuZFN0YXRlTm9uU2VyaWFsaXphYmxlVmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIga2V5UGF0aCA9IGZvdW5kU3RhdGVOb25TZXJpYWxpemFibGVWYWx1ZS5rZXlQYXRoLCB2YWx1ZSA9IGZvdW5kU3RhdGVOb25TZXJpYWxpemFibGVWYWx1ZS52YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiQSBub24tc2VyaWFsaXphYmxlIHZhbHVlIHdhcyBkZXRlY3RlZCBpbiB0aGUgc3RhdGUsIGluIHRoZSBwYXRoOiBgXCIgKyBrZXlQYXRoICsgXCJgLiBWYWx1ZTpcIiwgdmFsdWUsIFwiXFxuVGFrZSBhIGxvb2sgYXQgdGhlIHJlZHVjZXIocykgaGFuZGxpbmcgdGhpcyBhY3Rpb24gdHlwZTogXCIgKyBhY3Rpb24udHlwZSArIFwiLlxcbihTZWUgaHR0cHM6Ly9yZWR1eC5qcy5vcmcvZmFxL29yZ2FuaXppbmctc3RhdGUjY2FuLWktcHV0LWZ1bmN0aW9ucy1wcm9taXNlcy1vci1vdGhlci1ub24tc2VyaWFsaXphYmxlLWl0ZW1zLWluLW15LXN0b3JlLXN0YXRlKVwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIG1lYXN1cmVVdGlscy53YXJuSWZFeGNlZWRlZCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfTsgfTsgfTtcclxufVxyXG4vLyBzcmMvZ2V0RGVmYXVsdE1pZGRsZXdhcmUudHNcclxuZnVuY3Rpb24gaXNCb29sZWFuKHgpIHtcclxuICAgIHJldHVybiB0eXBlb2YgeCA9PT0gXCJib29sZWFuXCI7XHJcbn1cclxuZnVuY3Rpb24gY3VycnlHZXREZWZhdWx0TWlkZGxld2FyZSgpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiBjdXJyaWVkR2V0RGVmYXVsdE1pZGRsZXdhcmUob3B0aW9ucykge1xyXG4gICAgICAgIHJldHVybiBnZXREZWZhdWx0TWlkZGxld2FyZShvcHRpb25zKTtcclxuICAgIH07XHJcbn1cclxuZnVuY3Rpb24gZ2V0RGVmYXVsdE1pZGRsZXdhcmUob3B0aW9ucykge1xyXG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cclxuICAgIHZhciBfYiA9IG9wdGlvbnMudGh1bmssIHRodW5rID0gX2IgPT09IHZvaWQgMCA/IHRydWUgOiBfYiwgX2MgPSBvcHRpb25zLmltbXV0YWJsZUNoZWNrLCBpbW11dGFibGVDaGVjayA9IF9jID09PSB2b2lkIDAgPyB0cnVlIDogX2MsIF9kID0gb3B0aW9ucy5zZXJpYWxpemFibGVDaGVjaywgc2VyaWFsaXphYmxlQ2hlY2sgPSBfZCA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9kO1xyXG4gICAgdmFyIG1pZGRsZXdhcmVBcnJheSA9IG5ldyBNaWRkbGV3YXJlQXJyYXkoKTtcclxuICAgIGlmICh0aHVuaykge1xyXG4gICAgICAgIGlmIChpc0Jvb2xlYW4odGh1bmspKSB7XHJcbiAgICAgICAgICAgIG1pZGRsZXdhcmVBcnJheS5wdXNoKHRodW5rTWlkZGxld2FyZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBtaWRkbGV3YXJlQXJyYXkucHVzaCh0aHVua01pZGRsZXdhcmUud2l0aEV4dHJhQXJndW1lbnQodGh1bmsuZXh0cmFBcmd1bWVudCkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICAgICAgICBpZiAoaW1tdXRhYmxlQ2hlY2spIHtcclxuICAgICAgICAgICAgdmFyIGltbXV0YWJsZU9wdGlvbnMgPSB7fTtcclxuICAgICAgICAgICAgaWYgKCFpc0Jvb2xlYW4oaW1tdXRhYmxlQ2hlY2spKSB7XHJcbiAgICAgICAgICAgICAgICBpbW11dGFibGVPcHRpb25zID0gaW1tdXRhYmxlQ2hlY2s7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbWlkZGxld2FyZUFycmF5LnVuc2hpZnQoY3JlYXRlSW1tdXRhYmxlU3RhdGVJbnZhcmlhbnRNaWRkbGV3YXJlKGltbXV0YWJsZU9wdGlvbnMpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHNlcmlhbGl6YWJsZUNoZWNrKSB7XHJcbiAgICAgICAgICAgIHZhciBzZXJpYWxpemFibGVPcHRpb25zID0ge307XHJcbiAgICAgICAgICAgIGlmICghaXNCb29sZWFuKHNlcmlhbGl6YWJsZUNoZWNrKSkge1xyXG4gICAgICAgICAgICAgICAgc2VyaWFsaXphYmxlT3B0aW9ucyA9IHNlcmlhbGl6YWJsZUNoZWNrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIG1pZGRsZXdhcmVBcnJheS5wdXNoKGNyZWF0ZVNlcmlhbGl6YWJsZVN0YXRlSW52YXJpYW50TWlkZGxld2FyZShzZXJpYWxpemFibGVPcHRpb25zKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIG1pZGRsZXdhcmVBcnJheTtcclxufVxyXG4vLyBzcmMvY29uZmlndXJlU3RvcmUudHNcclxudmFyIElTX1BST0RVQ1RJT04gPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCI7XHJcbmZ1bmN0aW9uIGNvbmZpZ3VyZVN0b3JlKG9wdGlvbnMpIHtcclxuICAgIHZhciBjdXJyaWVkR2V0RGVmYXVsdE1pZGRsZXdhcmUgPSBjdXJyeUdldERlZmF1bHRNaWRkbGV3YXJlKCk7XHJcbiAgICB2YXIgX2IgPSBvcHRpb25zIHx8IHt9LCBfYyA9IF9iLnJlZHVjZXIsIHJlZHVjZXIgPSBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MsIF9kID0gX2IubWlkZGxld2FyZSwgbWlkZGxld2FyZSA9IF9kID09PSB2b2lkIDAgPyBjdXJyaWVkR2V0RGVmYXVsdE1pZGRsZXdhcmUoKSA6IF9kLCBfZSA9IF9iLmRldlRvb2xzLCBkZXZUb29scyA9IF9lID09PSB2b2lkIDAgPyB0cnVlIDogX2UsIF9mID0gX2IucHJlbG9hZGVkU3RhdGUsIHByZWxvYWRlZFN0YXRlID0gX2YgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9mLCBfZyA9IF9iLmVuaGFuY2VycywgZW5oYW5jZXJzID0gX2cgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9nO1xyXG4gICAgdmFyIHJvb3RSZWR1Y2VyO1xyXG4gICAgaWYgKHR5cGVvZiByZWR1Y2VyID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICByb290UmVkdWNlciA9IHJlZHVjZXI7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChpc1BsYWluT2JqZWN0KHJlZHVjZXIpKSB7XHJcbiAgICAgICAgcm9vdFJlZHVjZXIgPSBjb21iaW5lUmVkdWNlcnMocmVkdWNlcik7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1wicmVkdWNlclwiIGlzIGEgcmVxdWlyZWQgYXJndW1lbnQsIGFuZCBtdXN0IGJlIGEgZnVuY3Rpb24gb3IgYW4gb2JqZWN0IG9mIGZ1bmN0aW9ucyB0aGF0IGNhbiBiZSBwYXNzZWQgdG8gY29tYmluZVJlZHVjZXJzJyk7XHJcbiAgICB9XHJcbiAgICB2YXIgZmluYWxNaWRkbGV3YXJlID0gbWlkZGxld2FyZTtcclxuICAgIGlmICh0eXBlb2YgZmluYWxNaWRkbGV3YXJlID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICBmaW5hbE1pZGRsZXdhcmUgPSBmaW5hbE1pZGRsZXdhcmUoY3VycmllZEdldERlZmF1bHRNaWRkbGV3YXJlKTtcclxuICAgICAgICBpZiAoIUlTX1BST0RVQ1RJT04gJiYgIUFycmF5LmlzQXJyYXkoZmluYWxNaWRkbGV3YXJlKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ3aGVuIHVzaW5nIGEgbWlkZGxld2FyZSBidWlsZGVyIGZ1bmN0aW9uLCBhbiBhcnJheSBvZiBtaWRkbGV3YXJlIG11c3QgYmUgcmV0dXJuZWRcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYgKCFJU19QUk9EVUNUSU9OICYmIGZpbmFsTWlkZGxld2FyZS5zb21lKGZ1bmN0aW9uIChpdGVtKSB7IHJldHVybiB0eXBlb2YgaXRlbSAhPT0gXCJmdW5jdGlvblwiOyB9KSkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImVhY2ggbWlkZGxld2FyZSBwcm92aWRlZCB0byBjb25maWd1cmVTdG9yZSBtdXN0IGJlIGEgZnVuY3Rpb25cIik7XHJcbiAgICB9XHJcbiAgICB2YXIgbWlkZGxld2FyZUVuaGFuY2VyID0gYXBwbHlNaWRkbGV3YXJlLmFwcGx5KHZvaWQgMCwgZmluYWxNaWRkbGV3YXJlKTtcclxuICAgIHZhciBmaW5hbENvbXBvc2UgPSBjb21wb3NlMjtcclxuICAgIGlmIChkZXZUb29scykge1xyXG4gICAgICAgIGZpbmFsQ29tcG9zZSA9IGNvbXBvc2VXaXRoRGV2VG9vbHMoX19zcHJlYWRWYWx1ZXMoe1xyXG4gICAgICAgICAgICB0cmFjZTogIUlTX1BST0RVQ1RJT05cclxuICAgICAgICB9LCB0eXBlb2YgZGV2VG9vbHMgPT09IFwib2JqZWN0XCIgJiYgZGV2VG9vbHMpKTtcclxuICAgIH1cclxuICAgIHZhciBzdG9yZUVuaGFuY2VycyA9IFttaWRkbGV3YXJlRW5oYW5jZXJdO1xyXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZW5oYW5jZXJzKSkge1xyXG4gICAgICAgIHN0b3JlRW5oYW5jZXJzID0gX19zcHJlYWRBcnJheShbbWlkZGxld2FyZUVuaGFuY2VyXSwgZW5oYW5jZXJzKTtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKHR5cGVvZiBlbmhhbmNlcnMgPT09IFwiZnVuY3Rpb25cIikge1xyXG4gICAgICAgIHN0b3JlRW5oYW5jZXJzID0gZW5oYW5jZXJzKHN0b3JlRW5oYW5jZXJzKTtcclxuICAgIH1cclxuICAgIHZhciBjb21wb3NlZEVuaGFuY2VyID0gZmluYWxDb21wb3NlLmFwcGx5KHZvaWQgMCwgc3RvcmVFbmhhbmNlcnMpO1xyXG4gICAgcmV0dXJuIGNyZWF0ZVN0b3JlKHJvb3RSZWR1Y2VyLCBwcmVsb2FkZWRTdGF0ZSwgY29tcG9zZWRFbmhhbmNlcik7XHJcbn1cclxuLy8gc3JjL2NyZWF0ZUFjdGlvbi50c1xyXG5mdW5jdGlvbiBjcmVhdGVBY3Rpb24odHlwZSwgcHJlcGFyZUFjdGlvbikge1xyXG4gICAgZnVuY3Rpb24gYWN0aW9uQ3JlYXRvcigpIHtcclxuICAgICAgICB2YXIgYXJncyA9IFtdO1xyXG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgICAgIGFyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHByZXBhcmVBY3Rpb24pIHtcclxuICAgICAgICAgICAgdmFyIHByZXBhcmVkID0gcHJlcGFyZUFjdGlvbi5hcHBseSh2b2lkIDAsIGFyZ3MpO1xyXG4gICAgICAgICAgICBpZiAoIXByZXBhcmVkKSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJwcmVwYXJlQWN0aW9uIGRpZCBub3QgcmV0dXJuIGFuIG9iamVjdFwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoe1xyXG4gICAgICAgICAgICAgICAgdHlwZTogdHlwZSxcclxuICAgICAgICAgICAgICAgIHBheWxvYWQ6IHByZXBhcmVkLnBheWxvYWRcclxuICAgICAgICAgICAgfSwgXCJtZXRhXCIgaW4gcHJlcGFyZWQgJiYgeyBtZXRhOiBwcmVwYXJlZC5tZXRhIH0pLCBcImVycm9yXCIgaW4gcHJlcGFyZWQgJiYgeyBlcnJvcjogcHJlcGFyZWQuZXJyb3IgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB7IHR5cGU6IHR5cGUsIHBheWxvYWQ6IGFyZ3NbMF0gfTtcclxuICAgIH1cclxuICAgIGFjdGlvbkNyZWF0b3IudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBcIlwiICsgdHlwZTsgfTtcclxuICAgIGFjdGlvbkNyZWF0b3IudHlwZSA9IHR5cGU7XHJcbiAgICBhY3Rpb25DcmVhdG9yLm1hdGNoID0gZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gYWN0aW9uLnR5cGUgPT09IHR5cGU7IH07XHJcbiAgICByZXR1cm4gYWN0aW9uQ3JlYXRvcjtcclxufVxyXG5mdW5jdGlvbiBpc0ZTQShhY3Rpb24pIHtcclxuICAgIHJldHVybiBpc1BsYWluT2JqZWN0KGFjdGlvbikgJiYgdHlwZW9mIGFjdGlvbi50eXBlID09PSBcInN0cmluZ1wiICYmIE9iamVjdC5rZXlzKGFjdGlvbikuZXZlcnkoaXNWYWxpZEtleSk7XHJcbn1cclxuZnVuY3Rpb24gaXNWYWxpZEtleShrZXkpIHtcclxuICAgIHJldHVybiBbXCJ0eXBlXCIsIFwicGF5bG9hZFwiLCBcImVycm9yXCIsIFwibWV0YVwiXS5pbmRleE9mKGtleSkgPiAtMTtcclxufVxyXG5mdW5jdGlvbiBnZXRUeXBlKGFjdGlvbkNyZWF0b3IpIHtcclxuICAgIHJldHVybiBcIlwiICsgYWN0aW9uQ3JlYXRvcjtcclxufVxyXG4vLyBzcmMvY3JlYXRlUmVkdWNlci50c1xyXG5pbXBvcnQgY3JlYXRlTmV4dFN0YXRlLCB7IGlzRHJhZnQgYXMgaXNEcmFmdDIsIGlzRHJhZnRhYmxlIH0gZnJvbSBcImltbWVyXCI7XHJcbi8vIHNyYy9tYXBCdWlsZGVycy50c1xyXG5mdW5jdGlvbiBleGVjdXRlUmVkdWNlckJ1aWxkZXJDYWxsYmFjayhidWlsZGVyQ2FsbGJhY2spIHtcclxuICAgIHZhciBhY3Rpb25zTWFwID0ge307XHJcbiAgICB2YXIgYWN0aW9uTWF0Y2hlcnMgPSBbXTtcclxuICAgIHZhciBkZWZhdWx0Q2FzZVJlZHVjZXI7XHJcbiAgICB2YXIgYnVpbGRlciA9IHtcclxuICAgICAgICBhZGRDYXNlOiBmdW5jdGlvbiAodHlwZU9yQWN0aW9uQ3JlYXRvciwgcmVkdWNlcikge1xyXG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoYWN0aW9uTWF0Y2hlcnMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImBidWlsZGVyLmFkZENhc2VgIHNob3VsZCBvbmx5IGJlIGNhbGxlZCBiZWZvcmUgY2FsbGluZyBgYnVpbGRlci5hZGRNYXRjaGVyYFwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChkZWZhdWx0Q2FzZVJlZHVjZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJgYnVpbGRlci5hZGRDYXNlYCBzaG91bGQgb25seSBiZSBjYWxsZWQgYmVmb3JlIGNhbGxpbmcgYGJ1aWxkZXIuYWRkRGVmYXVsdENhc2VgXCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZhciB0eXBlID0gdHlwZW9mIHR5cGVPckFjdGlvbkNyZWF0b3IgPT09IFwic3RyaW5nXCIgPyB0eXBlT3JBY3Rpb25DcmVhdG9yIDogdHlwZU9yQWN0aW9uQ3JlYXRvci50eXBlO1xyXG4gICAgICAgICAgICBpZiAodHlwZSBpbiBhY3Rpb25zTWFwKSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJhZGRDYXNlIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCB0d28gcmVkdWNlcnMgZm9yIHRoZSBzYW1lIGFjdGlvbiB0eXBlXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGFjdGlvbnNNYXBbdHlwZV0gPSByZWR1Y2VyO1xyXG4gICAgICAgICAgICByZXR1cm4gYnVpbGRlcjtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGFkZE1hdGNoZXI6IGZ1bmN0aW9uIChtYXRjaGVyLCByZWR1Y2VyKSB7XHJcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICAgICAgICAgICAgICAgIGlmIChkZWZhdWx0Q2FzZVJlZHVjZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJgYnVpbGRlci5hZGRNYXRjaGVyYCBzaG91bGQgb25seSBiZSBjYWxsZWQgYmVmb3JlIGNhbGxpbmcgYGJ1aWxkZXIuYWRkRGVmYXVsdENhc2VgXCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGFjdGlvbk1hdGNoZXJzLnB1c2goeyBtYXRjaGVyOiBtYXRjaGVyLCByZWR1Y2VyOiByZWR1Y2VyIH0pO1xyXG4gICAgICAgICAgICByZXR1cm4gYnVpbGRlcjtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGFkZERlZmF1bHRDYXNlOiBmdW5jdGlvbiAocmVkdWNlcikge1xyXG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZGVmYXVsdENhc2VSZWR1Y2VyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiYGJ1aWxkZXIuYWRkRGVmYXVsdENhc2VgIGNhbiBvbmx5IGJlIGNhbGxlZCBvbmNlXCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGRlZmF1bHRDYXNlUmVkdWNlciA9IHJlZHVjZXI7XHJcbiAgICAgICAgICAgIHJldHVybiBidWlsZGVyO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBidWlsZGVyQ2FsbGJhY2soYnVpbGRlcik7XHJcbiAgICByZXR1cm4gW2FjdGlvbnNNYXAsIGFjdGlvbk1hdGNoZXJzLCBkZWZhdWx0Q2FzZVJlZHVjZXJdO1xyXG59XHJcbi8vIHNyYy9jcmVhdGVSZWR1Y2VyLnRzXHJcbmZ1bmN0aW9uIGNyZWF0ZVJlZHVjZXIoaW5pdGlhbFN0YXRlLCBtYXBPckJ1aWxkZXJDYWxsYmFjaywgYWN0aW9uTWF0Y2hlcnMsIGRlZmF1bHRDYXNlUmVkdWNlcikge1xyXG4gICAgaWYgKGFjdGlvbk1hdGNoZXJzID09PSB2b2lkIDApIHsgYWN0aW9uTWF0Y2hlcnMgPSBbXTsgfVxyXG4gICAgdmFyIF9iID0gdHlwZW9mIG1hcE9yQnVpbGRlckNhbGxiYWNrID09PSBcImZ1bmN0aW9uXCIgPyBleGVjdXRlUmVkdWNlckJ1aWxkZXJDYWxsYmFjayhtYXBPckJ1aWxkZXJDYWxsYmFjaykgOiBbbWFwT3JCdWlsZGVyQ2FsbGJhY2ssIGFjdGlvbk1hdGNoZXJzLCBkZWZhdWx0Q2FzZVJlZHVjZXJdLCBhY3Rpb25zTWFwID0gX2JbMF0sIGZpbmFsQWN0aW9uTWF0Y2hlcnMgPSBfYlsxXSwgZmluYWxEZWZhdWx0Q2FzZVJlZHVjZXIgPSBfYlsyXTtcclxuICAgIHZhciBmcm96ZW5Jbml0aWFsU3RhdGUgPSBjcmVhdGVOZXh0U3RhdGUoaW5pdGlhbFN0YXRlLCBmdW5jdGlvbiAoKSB7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoc3RhdGUsIGFjdGlvbikge1xyXG4gICAgICAgIGlmIChzdGF0ZSA9PT0gdm9pZCAwKSB7IHN0YXRlID0gZnJvemVuSW5pdGlhbFN0YXRlOyB9XHJcbiAgICAgICAgdmFyIGNhc2VSZWR1Y2VycyA9IF9fc3ByZWFkQXJyYXkoW1xyXG4gICAgICAgICAgICBhY3Rpb25zTWFwW2FjdGlvbi50eXBlXVxyXG4gICAgICAgIF0sIGZpbmFsQWN0aW9uTWF0Y2hlcnMuZmlsdGVyKGZ1bmN0aW9uIChfYikge1xyXG4gICAgICAgICAgICB2YXIgbWF0Y2hlciA9IF9iLm1hdGNoZXI7XHJcbiAgICAgICAgICAgIHJldHVybiBtYXRjaGVyKGFjdGlvbik7XHJcbiAgICAgICAgfSkubWFwKGZ1bmN0aW9uIChfYikge1xyXG4gICAgICAgICAgICB2YXIgcmVkdWNlciA9IF9iLnJlZHVjZXI7XHJcbiAgICAgICAgICAgIHJldHVybiByZWR1Y2VyO1xyXG4gICAgICAgIH0pKTtcclxuICAgICAgICBpZiAoY2FzZVJlZHVjZXJzLmZpbHRlcihmdW5jdGlvbiAoY3IpIHsgcmV0dXJuICEhY3I7IH0pLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICBjYXNlUmVkdWNlcnMgPSBbZmluYWxEZWZhdWx0Q2FzZVJlZHVjZXJdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gY2FzZVJlZHVjZXJzLnJlZHVjZShmdW5jdGlvbiAocHJldmlvdXNTdGF0ZSwgY2FzZVJlZHVjZXIpIHtcclxuICAgICAgICAgICAgaWYgKGNhc2VSZWR1Y2VyKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoaXNEcmFmdDIocHJldmlvdXNTdGF0ZSkpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZHJhZnQgPSBwcmV2aW91c1N0YXRlO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciByZXN1bHQgPSBjYXNlUmVkdWNlcihkcmFmdCwgYWN0aW9uKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gXCJ1bmRlZmluZWRcIikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJldmlvdXNTdGF0ZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKCFpc0RyYWZ0YWJsZShwcmV2aW91c1N0YXRlKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciByZXN1bHQgPSBjYXNlUmVkdWNlcihwcmV2aW91c1N0YXRlLCBhY3Rpb24pO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSBcInVuZGVmaW5lZFwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwcmV2aW91c1N0YXRlID09PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJldmlvdXNTdGF0ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBFcnJvcihcIkEgY2FzZSByZWR1Y2VyIG9uIGEgbm9uLWRyYWZ0YWJsZSB2YWx1ZSBtdXN0IG5vdCByZXR1cm4gdW5kZWZpbmVkXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU5leHRTdGF0ZShwcmV2aW91c1N0YXRlLCBmdW5jdGlvbiAoZHJhZnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNhc2VSZWR1Y2VyKGRyYWZ0LCBhY3Rpb24pO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBwcmV2aW91c1N0YXRlO1xyXG4gICAgICAgIH0sIHN0YXRlKTtcclxuICAgIH07XHJcbn1cclxuLy8gc3JjL2NyZWF0ZVNsaWNlLnRzXHJcbmZ1bmN0aW9uIGdldFR5cGUyKHNsaWNlLCBhY3Rpb25LZXkpIHtcclxuICAgIHJldHVybiBzbGljZSArIFwiL1wiICsgYWN0aW9uS2V5O1xyXG59XHJcbmZ1bmN0aW9uIGNyZWF0ZVNsaWNlKG9wdGlvbnMpIHtcclxuICAgIHZhciBuYW1lID0gb3B0aW9ucy5uYW1lLCBpbml0aWFsU3RhdGUgPSBvcHRpb25zLmluaXRpYWxTdGF0ZTtcclxuICAgIGlmICghbmFtZSkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImBuYW1lYCBpcyBhIHJlcXVpcmVkIG9wdGlvbiBmb3IgY3JlYXRlU2xpY2VcIik7XHJcbiAgICB9XHJcbiAgICB2YXIgcmVkdWNlcnMgPSBvcHRpb25zLnJlZHVjZXJzIHx8IHt9O1xyXG4gICAgdmFyIF9iID0gdHlwZW9mIG9wdGlvbnMuZXh0cmFSZWR1Y2VycyA9PT0gXCJmdW5jdGlvblwiID8gZXhlY3V0ZVJlZHVjZXJCdWlsZGVyQ2FsbGJhY2sob3B0aW9ucy5leHRyYVJlZHVjZXJzKSA6IFtvcHRpb25zLmV4dHJhUmVkdWNlcnNdLCBfYyA9IF9iWzBdLCBleHRyYVJlZHVjZXJzID0gX2MgPT09IHZvaWQgMCA/IHt9IDogX2MsIF9kID0gX2JbMV0sIGFjdGlvbk1hdGNoZXJzID0gX2QgPT09IHZvaWQgMCA/IFtdIDogX2QsIF9lID0gX2JbMl0sIGRlZmF1bHRDYXNlUmVkdWNlciA9IF9lID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZTtcclxuICAgIHZhciByZWR1Y2VyTmFtZXMgPSBPYmplY3Qua2V5cyhyZWR1Y2Vycyk7XHJcbiAgICB2YXIgc2xpY2VDYXNlUmVkdWNlcnNCeU5hbWUgPSB7fTtcclxuICAgIHZhciBzbGljZUNhc2VSZWR1Y2Vyc0J5VHlwZSA9IHt9O1xyXG4gICAgdmFyIGFjdGlvbkNyZWF0b3JzID0ge307XHJcbiAgICByZWR1Y2VyTmFtZXMuZm9yRWFjaChmdW5jdGlvbiAocmVkdWNlck5hbWUpIHtcclxuICAgICAgICB2YXIgbWF5YmVSZWR1Y2VyV2l0aFByZXBhcmUgPSByZWR1Y2Vyc1tyZWR1Y2VyTmFtZV07XHJcbiAgICAgICAgdmFyIHR5cGUgPSBnZXRUeXBlMihuYW1lLCByZWR1Y2VyTmFtZSk7XHJcbiAgICAgICAgdmFyIGNhc2VSZWR1Y2VyO1xyXG4gICAgICAgIHZhciBwcmVwYXJlQ2FsbGJhY2s7XHJcbiAgICAgICAgaWYgKFwicmVkdWNlclwiIGluIG1heWJlUmVkdWNlcldpdGhQcmVwYXJlKSB7XHJcbiAgICAgICAgICAgIGNhc2VSZWR1Y2VyID0gbWF5YmVSZWR1Y2VyV2l0aFByZXBhcmUucmVkdWNlcjtcclxuICAgICAgICAgICAgcHJlcGFyZUNhbGxiYWNrID0gbWF5YmVSZWR1Y2VyV2l0aFByZXBhcmUucHJlcGFyZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGNhc2VSZWR1Y2VyID0gbWF5YmVSZWR1Y2VyV2l0aFByZXBhcmU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHNsaWNlQ2FzZVJlZHVjZXJzQnlOYW1lW3JlZHVjZXJOYW1lXSA9IGNhc2VSZWR1Y2VyO1xyXG4gICAgICAgIHNsaWNlQ2FzZVJlZHVjZXJzQnlUeXBlW3R5cGVdID0gY2FzZVJlZHVjZXI7XHJcbiAgICAgICAgYWN0aW9uQ3JlYXRvcnNbcmVkdWNlck5hbWVdID0gcHJlcGFyZUNhbGxiYWNrID8gY3JlYXRlQWN0aW9uKHR5cGUsIHByZXBhcmVDYWxsYmFjaykgOiBjcmVhdGVBY3Rpb24odHlwZSk7XHJcbiAgICB9KTtcclxuICAgIHZhciBmaW5hbENhc2VSZWR1Y2VycyA9IF9fc3ByZWFkVmFsdWVzKF9fc3ByZWFkVmFsdWVzKHt9LCBleHRyYVJlZHVjZXJzKSwgc2xpY2VDYXNlUmVkdWNlcnNCeVR5cGUpO1xyXG4gICAgdmFyIHJlZHVjZXIgPSBjcmVhdGVSZWR1Y2VyKGluaXRpYWxTdGF0ZSwgZmluYWxDYXNlUmVkdWNlcnMsIGFjdGlvbk1hdGNoZXJzLCBkZWZhdWx0Q2FzZVJlZHVjZXIpO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBuYW1lOiBuYW1lLFxyXG4gICAgICAgIHJlZHVjZXI6IHJlZHVjZXIsXHJcbiAgICAgICAgYWN0aW9uczogYWN0aW9uQ3JlYXRvcnMsXHJcbiAgICAgICAgY2FzZVJlZHVjZXJzOiBzbGljZUNhc2VSZWR1Y2Vyc0J5TmFtZVxyXG4gICAgfTtcclxufVxyXG4vLyBzcmMvZW50aXRpZXMvZW50aXR5X3N0YXRlLnRzXHJcbmZ1bmN0aW9uIGdldEluaXRpYWxFbnRpdHlTdGF0ZSgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgaWRzOiBbXSxcclxuICAgICAgICBlbnRpdGllczoge31cclxuICAgIH07XHJcbn1cclxuZnVuY3Rpb24gY3JlYXRlSW5pdGlhbFN0YXRlRmFjdG9yeSgpIHtcclxuICAgIGZ1bmN0aW9uIGdldEluaXRpYWxTdGF0ZShhZGRpdGlvbmFsU3RhdGUpIHtcclxuICAgICAgICBpZiAoYWRkaXRpb25hbFN0YXRlID09PSB2b2lkIDApIHsgYWRkaXRpb25hbFN0YXRlID0ge307IH1cclxuICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihnZXRJbml0aWFsRW50aXR5U3RhdGUoKSwgYWRkaXRpb25hbFN0YXRlKTtcclxuICAgIH1cclxuICAgIHJldHVybiB7IGdldEluaXRpYWxTdGF0ZTogZ2V0SW5pdGlhbFN0YXRlIH07XHJcbn1cclxuLy8gc3JjL2VudGl0aWVzL3N0YXRlX3NlbGVjdG9ycy50c1xyXG5mdW5jdGlvbiBjcmVhdGVTZWxlY3RvcnNGYWN0b3J5KCkge1xyXG4gICAgZnVuY3Rpb24gZ2V0U2VsZWN0b3JzKHNlbGVjdFN0YXRlKSB7XHJcbiAgICAgICAgdmFyIHNlbGVjdElkcyA9IGZ1bmN0aW9uIChzdGF0ZSkgeyByZXR1cm4gc3RhdGUuaWRzOyB9O1xyXG4gICAgICAgIHZhciBzZWxlY3RFbnRpdGllcyA9IGZ1bmN0aW9uIChzdGF0ZSkgeyByZXR1cm4gc3RhdGUuZW50aXRpZXM7IH07XHJcbiAgICAgICAgdmFyIHNlbGVjdEFsbCA9IGNyZWF0ZURyYWZ0U2FmZVNlbGVjdG9yKHNlbGVjdElkcywgc2VsZWN0RW50aXRpZXMsIGZ1bmN0aW9uIChpZHMsIGVudGl0aWVzKSB7IHJldHVybiBpZHMubWFwKGZ1bmN0aW9uIChpZCkgeyByZXR1cm4gZW50aXRpZXNbaWRdOyB9KTsgfSk7XHJcbiAgICAgICAgdmFyIHNlbGVjdElkID0gZnVuY3Rpb24gKF8sIGlkKSB7IHJldHVybiBpZDsgfTtcclxuICAgICAgICB2YXIgc2VsZWN0QnlJZCA9IGZ1bmN0aW9uIChlbnRpdGllcywgaWQpIHsgcmV0dXJuIGVudGl0aWVzW2lkXTsgfTtcclxuICAgICAgICB2YXIgc2VsZWN0VG90YWwgPSBjcmVhdGVEcmFmdFNhZmVTZWxlY3RvcihzZWxlY3RJZHMsIGZ1bmN0aW9uIChpZHMpIHsgcmV0dXJuIGlkcy5sZW5ndGg7IH0pO1xyXG4gICAgICAgIGlmICghc2VsZWN0U3RhdGUpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIHNlbGVjdElkczogc2VsZWN0SWRzLFxyXG4gICAgICAgICAgICAgICAgc2VsZWN0RW50aXRpZXM6IHNlbGVjdEVudGl0aWVzLFxyXG4gICAgICAgICAgICAgICAgc2VsZWN0QWxsOiBzZWxlY3RBbGwsXHJcbiAgICAgICAgICAgICAgICBzZWxlY3RUb3RhbDogc2VsZWN0VG90YWwsXHJcbiAgICAgICAgICAgICAgICBzZWxlY3RCeUlkOiBjcmVhdGVEcmFmdFNhZmVTZWxlY3RvcihzZWxlY3RFbnRpdGllcywgc2VsZWN0SWQsIHNlbGVjdEJ5SWQpXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBzZWxlY3RHbG9iYWxpemVkRW50aXRpZXMgPSBjcmVhdGVEcmFmdFNhZmVTZWxlY3RvcihzZWxlY3RTdGF0ZSwgc2VsZWN0RW50aXRpZXMpO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHNlbGVjdElkczogY3JlYXRlRHJhZnRTYWZlU2VsZWN0b3Ioc2VsZWN0U3RhdGUsIHNlbGVjdElkcyksXHJcbiAgICAgICAgICAgIHNlbGVjdEVudGl0aWVzOiBzZWxlY3RHbG9iYWxpemVkRW50aXRpZXMsXHJcbiAgICAgICAgICAgIHNlbGVjdEFsbDogY3JlYXRlRHJhZnRTYWZlU2VsZWN0b3Ioc2VsZWN0U3RhdGUsIHNlbGVjdEFsbCksXHJcbiAgICAgICAgICAgIHNlbGVjdFRvdGFsOiBjcmVhdGVEcmFmdFNhZmVTZWxlY3RvcihzZWxlY3RTdGF0ZSwgc2VsZWN0VG90YWwpLFxyXG4gICAgICAgICAgICBzZWxlY3RCeUlkOiBjcmVhdGVEcmFmdFNhZmVTZWxlY3RvcihzZWxlY3RHbG9iYWxpemVkRW50aXRpZXMsIHNlbGVjdElkLCBzZWxlY3RCeUlkKVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbiAgICByZXR1cm4geyBnZXRTZWxlY3RvcnM6IGdldFNlbGVjdG9ycyB9O1xyXG59XHJcbi8vIHNyYy9lbnRpdGllcy9zdGF0ZV9hZGFwdGVyLnRzXHJcbmltcG9ydCBjcmVhdGVOZXh0U3RhdGUyLCB7IGlzRHJhZnQgYXMgaXNEcmFmdDMgfSBmcm9tIFwiaW1tZXJcIjtcclxuZnVuY3Rpb24gY3JlYXRlU2luZ2xlQXJndW1lbnRTdGF0ZU9wZXJhdG9yKG11dGF0b3IpIHtcclxuICAgIHZhciBvcGVyYXRvciA9IGNyZWF0ZVN0YXRlT3BlcmF0b3IoZnVuY3Rpb24gKF8sIHN0YXRlKSB7IHJldHVybiBtdXRhdG9yKHN0YXRlKTsgfSk7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gb3BlcmF0aW9uKHN0YXRlKSB7XHJcbiAgICAgICAgcmV0dXJuIG9wZXJhdG9yKHN0YXRlLCB2b2lkIDApO1xyXG4gICAgfTtcclxufVxyXG5mdW5jdGlvbiBjcmVhdGVTdGF0ZU9wZXJhdG9yKG11dGF0b3IpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiBvcGVyYXRpb24oc3RhdGUsIGFyZykge1xyXG4gICAgICAgIGZ1bmN0aW9uIGlzUGF5bG9hZEFjdGlvbkFyZ3VtZW50KGFyZzIpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGlzRlNBKGFyZzIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgcnVuTXV0YXRvciA9IGZ1bmN0aW9uIChkcmFmdCkge1xyXG4gICAgICAgICAgICBpZiAoaXNQYXlsb2FkQWN0aW9uQXJndW1lbnQoYXJnKSkge1xyXG4gICAgICAgICAgICAgICAgbXV0YXRvcihhcmcucGF5bG9hZCwgZHJhZnQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgbXV0YXRvcihhcmcsIGRyYWZ0KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgaWYgKGlzRHJhZnQzKHN0YXRlKSkge1xyXG4gICAgICAgICAgICBydW5NdXRhdG9yKHN0YXRlKTtcclxuICAgICAgICAgICAgcmV0dXJuIHN0YXRlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU5leHRTdGF0ZTIoc3RhdGUsIHJ1bk11dGF0b3IpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn1cclxuLy8gc3JjL2VudGl0aWVzL3V0aWxzLnRzXHJcbmZ1bmN0aW9uIHNlbGVjdElkVmFsdWUoZW50aXR5LCBzZWxlY3RJZCkge1xyXG4gICAgdmFyIGtleSA9IHNlbGVjdElkKGVudGl0eSk7XHJcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiICYmIGtleSA9PT0gdm9pZCAwKSB7XHJcbiAgICAgICAgY29uc29sZS53YXJuKFwiVGhlIGVudGl0eSBwYXNzZWQgdG8gdGhlIGBzZWxlY3RJZGAgaW1wbGVtZW50YXRpb24gcmV0dXJuZWQgdW5kZWZpbmVkLlwiLCBcIllvdSBzaG91bGQgcHJvYmFibHkgcHJvdmlkZSB5b3VyIG93biBgc2VsZWN0SWRgIGltcGxlbWVudGF0aW9uLlwiLCBcIlRoZSBlbnRpdHkgdGhhdCB3YXMgcGFzc2VkOlwiLCBlbnRpdHksIFwiVGhlIGBzZWxlY3RJZGAgaW1wbGVtZW50YXRpb246XCIsIHNlbGVjdElkLnRvU3RyaW5nKCkpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGtleTtcclxufVxyXG5mdW5jdGlvbiBlbnN1cmVFbnRpdGllc0FycmF5KGVudGl0aWVzKSB7XHJcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoZW50aXRpZXMpKSB7XHJcbiAgICAgICAgZW50aXRpZXMgPSBPYmplY3QudmFsdWVzKGVudGl0aWVzKTtcclxuICAgIH1cclxuICAgIHJldHVybiBlbnRpdGllcztcclxufVxyXG5mdW5jdGlvbiBzcGxpdEFkZGVkVXBkYXRlZEVudGl0aWVzKG5ld0VudGl0aWVzLCBzZWxlY3RJZCwgc3RhdGUpIHtcclxuICAgIG5ld0VudGl0aWVzID0gZW5zdXJlRW50aXRpZXNBcnJheShuZXdFbnRpdGllcyk7XHJcbiAgICB2YXIgYWRkZWQgPSBbXTtcclxuICAgIHZhciB1cGRhdGVkID0gW107XHJcbiAgICBmb3IgKHZhciBfaSA9IDAsIG5ld0VudGl0aWVzXzEgPSBuZXdFbnRpdGllczsgX2kgPCBuZXdFbnRpdGllc18xLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgIHZhciBlbnRpdHkgPSBuZXdFbnRpdGllc18xW19pXTtcclxuICAgICAgICB2YXIgaWQgPSBzZWxlY3RJZFZhbHVlKGVudGl0eSwgc2VsZWN0SWQpO1xyXG4gICAgICAgIGlmIChpZCBpbiBzdGF0ZS5lbnRpdGllcykge1xyXG4gICAgICAgICAgICB1cGRhdGVkLnB1c2goeyBpZDogaWQsIGNoYW5nZXM6IGVudGl0eSB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGFkZGVkLnB1c2goZW50aXR5KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gW2FkZGVkLCB1cGRhdGVkXTtcclxufVxyXG4vLyBzcmMvZW50aXRpZXMvdW5zb3J0ZWRfc3RhdGVfYWRhcHRlci50c1xyXG5mdW5jdGlvbiBjcmVhdGVVbnNvcnRlZFN0YXRlQWRhcHRlcihzZWxlY3RJZCkge1xyXG4gICAgZnVuY3Rpb24gYWRkT25lTXV0YWJseShlbnRpdHksIHN0YXRlKSB7XHJcbiAgICAgICAgdmFyIGtleSA9IHNlbGVjdElkVmFsdWUoZW50aXR5LCBzZWxlY3RJZCk7XHJcbiAgICAgICAgaWYgKGtleSBpbiBzdGF0ZS5lbnRpdGllcykge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHN0YXRlLmlkcy5wdXNoKGtleSk7XHJcbiAgICAgICAgc3RhdGUuZW50aXRpZXNba2V5XSA9IGVudGl0eTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIGFkZE1hbnlNdXRhYmx5KG5ld0VudGl0aWVzLCBzdGF0ZSkge1xyXG4gICAgICAgIG5ld0VudGl0aWVzID0gZW5zdXJlRW50aXRpZXNBcnJheShuZXdFbnRpdGllcyk7XHJcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBuZXdFbnRpdGllc18yID0gbmV3RW50aXRpZXM7IF9pIDwgbmV3RW50aXRpZXNfMi5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICAgICAgdmFyIGVudGl0eSA9IG5ld0VudGl0aWVzXzJbX2ldO1xyXG4gICAgICAgICAgICBhZGRPbmVNdXRhYmx5KGVudGl0eSwgc3RhdGUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIHNldE9uZU11dGFibHkoZW50aXR5LCBzdGF0ZSkge1xyXG4gICAgICAgIHZhciBrZXkgPSBzZWxlY3RJZFZhbHVlKGVudGl0eSwgc2VsZWN0SWQpO1xyXG4gICAgICAgIGlmICghKGtleSBpbiBzdGF0ZS5lbnRpdGllcykpIHtcclxuICAgICAgICAgICAgc3RhdGUuaWRzLnB1c2goa2V5KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgc3RhdGUuZW50aXRpZXNba2V5XSA9IGVudGl0eTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIHNldE1hbnlNdXRhYmx5KG5ld0VudGl0aWVzLCBzdGF0ZSkge1xyXG4gICAgICAgIG5ld0VudGl0aWVzID0gZW5zdXJlRW50aXRpZXNBcnJheShuZXdFbnRpdGllcyk7XHJcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBuZXdFbnRpdGllc18zID0gbmV3RW50aXRpZXM7IF9pIDwgbmV3RW50aXRpZXNfMy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICAgICAgdmFyIGVudGl0eSA9IG5ld0VudGl0aWVzXzNbX2ldO1xyXG4gICAgICAgICAgICBzZXRPbmVNdXRhYmx5KGVudGl0eSwgc3RhdGUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIHNldEFsbE11dGFibHkobmV3RW50aXRpZXMsIHN0YXRlKSB7XHJcbiAgICAgICAgbmV3RW50aXRpZXMgPSBlbnN1cmVFbnRpdGllc0FycmF5KG5ld0VudGl0aWVzKTtcclxuICAgICAgICBzdGF0ZS5pZHMgPSBbXTtcclxuICAgICAgICBzdGF0ZS5lbnRpdGllcyA9IHt9O1xyXG4gICAgICAgIGFkZE1hbnlNdXRhYmx5KG5ld0VudGl0aWVzLCBzdGF0ZSk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiByZW1vdmVPbmVNdXRhYmx5KGtleSwgc3RhdGUpIHtcclxuICAgICAgICByZXR1cm4gcmVtb3ZlTWFueU11dGFibHkoW2tleV0sIHN0YXRlKTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIHJlbW92ZU1hbnlNdXRhYmx5KGtleXMsIHN0YXRlKSB7XHJcbiAgICAgICAgdmFyIGRpZE11dGF0ZSA9IGZhbHNlO1xyXG4gICAgICAgIGtleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XHJcbiAgICAgICAgICAgIGlmIChrZXkgaW4gc3RhdGUuZW50aXRpZXMpIHtcclxuICAgICAgICAgICAgICAgIGRlbGV0ZSBzdGF0ZS5lbnRpdGllc1trZXldO1xyXG4gICAgICAgICAgICAgICAgZGlkTXV0YXRlID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGlmIChkaWRNdXRhdGUpIHtcclxuICAgICAgICAgICAgc3RhdGUuaWRzID0gc3RhdGUuaWRzLmZpbHRlcihmdW5jdGlvbiAoaWQpIHsgcmV0dXJuIGlkIGluIHN0YXRlLmVudGl0aWVzOyB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiByZW1vdmVBbGxNdXRhYmx5KHN0YXRlKSB7XHJcbiAgICAgICAgT2JqZWN0LmFzc2lnbihzdGF0ZSwge1xyXG4gICAgICAgICAgICBpZHM6IFtdLFxyXG4gICAgICAgICAgICBlbnRpdGllczoge31cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIHRha2VOZXdLZXkoa2V5cywgdXBkYXRlLCBzdGF0ZSkge1xyXG4gICAgICAgIHZhciBvcmlnaW5hbDIgPSBzdGF0ZS5lbnRpdGllc1t1cGRhdGUuaWRdO1xyXG4gICAgICAgIHZhciB1cGRhdGVkID0gT2JqZWN0LmFzc2lnbih7fSwgb3JpZ2luYWwyLCB1cGRhdGUuY2hhbmdlcyk7XHJcbiAgICAgICAgdmFyIG5ld0tleSA9IHNlbGVjdElkVmFsdWUodXBkYXRlZCwgc2VsZWN0SWQpO1xyXG4gICAgICAgIHZhciBoYXNOZXdLZXkgPSBuZXdLZXkgIT09IHVwZGF0ZS5pZDtcclxuICAgICAgICBpZiAoaGFzTmV3S2V5KSB7XHJcbiAgICAgICAgICAgIGtleXNbdXBkYXRlLmlkXSA9IG5ld0tleTtcclxuICAgICAgICAgICAgZGVsZXRlIHN0YXRlLmVudGl0aWVzW3VwZGF0ZS5pZF07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHN0YXRlLmVudGl0aWVzW25ld0tleV0gPSB1cGRhdGVkO1xyXG4gICAgICAgIHJldHVybiBoYXNOZXdLZXk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiB1cGRhdGVPbmVNdXRhYmx5KHVwZGF0ZSwgc3RhdGUpIHtcclxuICAgICAgICByZXR1cm4gdXBkYXRlTWFueU11dGFibHkoW3VwZGF0ZV0sIHN0YXRlKTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIHVwZGF0ZU1hbnlNdXRhYmx5KHVwZGF0ZXMsIHN0YXRlKSB7XHJcbiAgICAgICAgdmFyIG5ld0tleXMgPSB7fTtcclxuICAgICAgICB2YXIgdXBkYXRlc1BlckVudGl0eSA9IHt9O1xyXG4gICAgICAgIHVwZGF0ZXMuZm9yRWFjaChmdW5jdGlvbiAodXBkYXRlKSB7XHJcbiAgICAgICAgICAgIGlmICh1cGRhdGUuaWQgaW4gc3RhdGUuZW50aXRpZXMpIHtcclxuICAgICAgICAgICAgICAgIHVwZGF0ZXNQZXJFbnRpdHlbdXBkYXRlLmlkXSA9IHtcclxuICAgICAgICAgICAgICAgICAgICBpZDogdXBkYXRlLmlkLFxyXG4gICAgICAgICAgICAgICAgICAgIGNoYW5nZXM6IF9fc3ByZWFkVmFsdWVzKF9fc3ByZWFkVmFsdWVzKHt9LCB1cGRhdGVzUGVyRW50aXR5W3VwZGF0ZS5pZF0gPyB1cGRhdGVzUGVyRW50aXR5W3VwZGF0ZS5pZF0uY2hhbmdlcyA6IG51bGwpLCB1cGRhdGUuY2hhbmdlcylcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICB1cGRhdGVzID0gT2JqZWN0LnZhbHVlcyh1cGRhdGVzUGVyRW50aXR5KTtcclxuICAgICAgICB2YXIgZGlkTXV0YXRlRW50aXRpZXMgPSB1cGRhdGVzLmxlbmd0aCA+IDA7XHJcbiAgICAgICAgaWYgKGRpZE11dGF0ZUVudGl0aWVzKSB7XHJcbiAgICAgICAgICAgIHZhciBkaWRNdXRhdGVJZHMgPSB1cGRhdGVzLmZpbHRlcihmdW5jdGlvbiAodXBkYXRlKSB7IHJldHVybiB0YWtlTmV3S2V5KG5ld0tleXMsIHVwZGF0ZSwgc3RhdGUpOyB9KS5sZW5ndGggPiAwO1xyXG4gICAgICAgICAgICBpZiAoZGlkTXV0YXRlSWRzKSB7XHJcbiAgICAgICAgICAgICAgICBzdGF0ZS5pZHMgPSBzdGF0ZS5pZHMubWFwKGZ1bmN0aW9uIChpZCkgeyByZXR1cm4gbmV3S2V5c1tpZF0gfHwgaWQ7IH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gdXBzZXJ0T25lTXV0YWJseShlbnRpdHksIHN0YXRlKSB7XHJcbiAgICAgICAgcmV0dXJuIHVwc2VydE1hbnlNdXRhYmx5KFtlbnRpdHldLCBzdGF0ZSk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiB1cHNlcnRNYW55TXV0YWJseShuZXdFbnRpdGllcywgc3RhdGUpIHtcclxuICAgICAgICB2YXIgX2IgPSBzcGxpdEFkZGVkVXBkYXRlZEVudGl0aWVzKG5ld0VudGl0aWVzLCBzZWxlY3RJZCwgc3RhdGUpLCBhZGRlZCA9IF9iWzBdLCB1cGRhdGVkID0gX2JbMV07XHJcbiAgICAgICAgdXBkYXRlTWFueU11dGFibHkodXBkYXRlZCwgc3RhdGUpO1xyXG4gICAgICAgIGFkZE1hbnlNdXRhYmx5KGFkZGVkLCBzdGF0ZSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHJlbW92ZUFsbDogY3JlYXRlU2luZ2xlQXJndW1lbnRTdGF0ZU9wZXJhdG9yKHJlbW92ZUFsbE11dGFibHkpLFxyXG4gICAgICAgIGFkZE9uZTogY3JlYXRlU3RhdGVPcGVyYXRvcihhZGRPbmVNdXRhYmx5KSxcclxuICAgICAgICBhZGRNYW55OiBjcmVhdGVTdGF0ZU9wZXJhdG9yKGFkZE1hbnlNdXRhYmx5KSxcclxuICAgICAgICBzZXRPbmU6IGNyZWF0ZVN0YXRlT3BlcmF0b3Ioc2V0T25lTXV0YWJseSksXHJcbiAgICAgICAgc2V0TWFueTogY3JlYXRlU3RhdGVPcGVyYXRvcihzZXRNYW55TXV0YWJseSksXHJcbiAgICAgICAgc2V0QWxsOiBjcmVhdGVTdGF0ZU9wZXJhdG9yKHNldEFsbE11dGFibHkpLFxyXG4gICAgICAgIHVwZGF0ZU9uZTogY3JlYXRlU3RhdGVPcGVyYXRvcih1cGRhdGVPbmVNdXRhYmx5KSxcclxuICAgICAgICB1cGRhdGVNYW55OiBjcmVhdGVTdGF0ZU9wZXJhdG9yKHVwZGF0ZU1hbnlNdXRhYmx5KSxcclxuICAgICAgICB1cHNlcnRPbmU6IGNyZWF0ZVN0YXRlT3BlcmF0b3IodXBzZXJ0T25lTXV0YWJseSksXHJcbiAgICAgICAgdXBzZXJ0TWFueTogY3JlYXRlU3RhdGVPcGVyYXRvcih1cHNlcnRNYW55TXV0YWJseSksXHJcbiAgICAgICAgcmVtb3ZlT25lOiBjcmVhdGVTdGF0ZU9wZXJhdG9yKHJlbW92ZU9uZU11dGFibHkpLFxyXG4gICAgICAgIHJlbW92ZU1hbnk6IGNyZWF0ZVN0YXRlT3BlcmF0b3IocmVtb3ZlTWFueU11dGFibHkpXHJcbiAgICB9O1xyXG59XHJcbi8vIHNyYy9lbnRpdGllcy9zb3J0ZWRfc3RhdGVfYWRhcHRlci50c1xyXG5mdW5jdGlvbiBjcmVhdGVTb3J0ZWRTdGF0ZUFkYXB0ZXIoc2VsZWN0SWQsIHNvcnQpIHtcclxuICAgIHZhciBfYiA9IGNyZWF0ZVVuc29ydGVkU3RhdGVBZGFwdGVyKHNlbGVjdElkKSwgcmVtb3ZlT25lID0gX2IucmVtb3ZlT25lLCByZW1vdmVNYW55ID0gX2IucmVtb3ZlTWFueSwgcmVtb3ZlQWxsID0gX2IucmVtb3ZlQWxsO1xyXG4gICAgZnVuY3Rpb24gYWRkT25lTXV0YWJseShlbnRpdHksIHN0YXRlKSB7XHJcbiAgICAgICAgcmV0dXJuIGFkZE1hbnlNdXRhYmx5KFtlbnRpdHldLCBzdGF0ZSk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBhZGRNYW55TXV0YWJseShuZXdFbnRpdGllcywgc3RhdGUpIHtcclxuICAgICAgICBuZXdFbnRpdGllcyA9IGVuc3VyZUVudGl0aWVzQXJyYXkobmV3RW50aXRpZXMpO1xyXG4gICAgICAgIHZhciBtb2RlbHMgPSBuZXdFbnRpdGllcy5maWx0ZXIoZnVuY3Rpb24gKG1vZGVsKSB7IHJldHVybiAhKHNlbGVjdElkVmFsdWUobW9kZWwsIHNlbGVjdElkKSBpbiBzdGF0ZS5lbnRpdGllcyk7IH0pO1xyXG4gICAgICAgIGlmIChtb2RlbHMubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgICAgICAgIG1lcmdlKG1vZGVscywgc3RhdGUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIHNldE9uZU11dGFibHkoZW50aXR5LCBzdGF0ZSkge1xyXG4gICAgICAgIHJldHVybiBzZXRNYW55TXV0YWJseShbZW50aXR5XSwgc3RhdGUpO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gc2V0TWFueU11dGFibHkobmV3RW50aXRpZXMsIHN0YXRlKSB7XHJcbiAgICAgICAgbmV3RW50aXRpZXMgPSBlbnN1cmVFbnRpdGllc0FycmF5KG5ld0VudGl0aWVzKTtcclxuICAgICAgICBpZiAobmV3RW50aXRpZXMubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgICAgICAgIG1lcmdlKG5ld0VudGl0aWVzLCBzdGF0ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gc2V0QWxsTXV0YWJseShuZXdFbnRpdGllcywgc3RhdGUpIHtcclxuICAgICAgICBuZXdFbnRpdGllcyA9IGVuc3VyZUVudGl0aWVzQXJyYXkobmV3RW50aXRpZXMpO1xyXG4gICAgICAgIHN0YXRlLmVudGl0aWVzID0ge307XHJcbiAgICAgICAgc3RhdGUuaWRzID0gW107XHJcbiAgICAgICAgYWRkTWFueU11dGFibHkobmV3RW50aXRpZXMsIHN0YXRlKTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIHVwZGF0ZU9uZU11dGFibHkodXBkYXRlLCBzdGF0ZSkge1xyXG4gICAgICAgIHJldHVybiB1cGRhdGVNYW55TXV0YWJseShbdXBkYXRlXSwgc3RhdGUpO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gdGFrZVVwZGF0ZWRNb2RlbChtb2RlbHMsIHVwZGF0ZSwgc3RhdGUpIHtcclxuICAgICAgICBpZiAoISh1cGRhdGUuaWQgaW4gc3RhdGUuZW50aXRpZXMpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIG9yaWdpbmFsMiA9IHN0YXRlLmVudGl0aWVzW3VwZGF0ZS5pZF07XHJcbiAgICAgICAgdmFyIHVwZGF0ZWQgPSBPYmplY3QuYXNzaWduKHt9LCBvcmlnaW5hbDIsIHVwZGF0ZS5jaGFuZ2VzKTtcclxuICAgICAgICB2YXIgbmV3S2V5ID0gc2VsZWN0SWRWYWx1ZSh1cGRhdGVkLCBzZWxlY3RJZCk7XHJcbiAgICAgICAgZGVsZXRlIHN0YXRlLmVudGl0aWVzW3VwZGF0ZS5pZF07XHJcbiAgICAgICAgbW9kZWxzLnB1c2godXBkYXRlZCk7XHJcbiAgICAgICAgcmV0dXJuIG5ld0tleSAhPT0gdXBkYXRlLmlkO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gdXBkYXRlTWFueU11dGFibHkodXBkYXRlcywgc3RhdGUpIHtcclxuICAgICAgICB2YXIgbW9kZWxzID0gW107XHJcbiAgICAgICAgdXBkYXRlcy5mb3JFYWNoKGZ1bmN0aW9uICh1cGRhdGUpIHsgcmV0dXJuIHRha2VVcGRhdGVkTW9kZWwobW9kZWxzLCB1cGRhdGUsIHN0YXRlKTsgfSk7XHJcbiAgICAgICAgaWYgKG1vZGVscy5sZW5ndGggIT09IDApIHtcclxuICAgICAgICAgICAgbWVyZ2UobW9kZWxzLCBzdGF0ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gdXBzZXJ0T25lTXV0YWJseShlbnRpdHksIHN0YXRlKSB7XHJcbiAgICAgICAgcmV0dXJuIHVwc2VydE1hbnlNdXRhYmx5KFtlbnRpdHldLCBzdGF0ZSk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiB1cHNlcnRNYW55TXV0YWJseShuZXdFbnRpdGllcywgc3RhdGUpIHtcclxuICAgICAgICB2YXIgX2IgPSBzcGxpdEFkZGVkVXBkYXRlZEVudGl0aWVzKG5ld0VudGl0aWVzLCBzZWxlY3RJZCwgc3RhdGUpLCBhZGRlZCA9IF9iWzBdLCB1cGRhdGVkID0gX2JbMV07XHJcbiAgICAgICAgdXBkYXRlTWFueU11dGFibHkodXBkYXRlZCwgc3RhdGUpO1xyXG4gICAgICAgIGFkZE1hbnlNdXRhYmx5KGFkZGVkLCBzdGF0ZSk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBhcmVBcnJheXNFcXVhbChhLCBiKSB7XHJcbiAgICAgICAgaWYgKGEubGVuZ3RoICE9PSBiLmxlbmd0aCkge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYS5sZW5ndGggJiYgaSA8IGIubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKGFbaV0gPT09IGJbaV0pIHtcclxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBtZXJnZShtb2RlbHMsIHN0YXRlKSB7XHJcbiAgICAgICAgbW9kZWxzLmZvckVhY2goZnVuY3Rpb24gKG1vZGVsKSB7XHJcbiAgICAgICAgICAgIHN0YXRlLmVudGl0aWVzW3NlbGVjdElkKG1vZGVsKV0gPSBtb2RlbDtcclxuICAgICAgICB9KTtcclxuICAgICAgICB2YXIgYWxsRW50aXRpZXMgPSBPYmplY3QudmFsdWVzKHN0YXRlLmVudGl0aWVzKTtcclxuICAgICAgICBhbGxFbnRpdGllcy5zb3J0KHNvcnQpO1xyXG4gICAgICAgIHZhciBuZXdTb3J0ZWRJZHMgPSBhbGxFbnRpdGllcy5tYXAoc2VsZWN0SWQpO1xyXG4gICAgICAgIHZhciBpZHMgPSBzdGF0ZS5pZHM7XHJcbiAgICAgICAgaWYgKCFhcmVBcnJheXNFcXVhbChpZHMsIG5ld1NvcnRlZElkcykpIHtcclxuICAgICAgICAgICAgc3RhdGUuaWRzID0gbmV3U29ydGVkSWRzO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgcmVtb3ZlT25lOiByZW1vdmVPbmUsXHJcbiAgICAgICAgcmVtb3ZlTWFueTogcmVtb3ZlTWFueSxcclxuICAgICAgICByZW1vdmVBbGw6IHJlbW92ZUFsbCxcclxuICAgICAgICBhZGRPbmU6IGNyZWF0ZVN0YXRlT3BlcmF0b3IoYWRkT25lTXV0YWJseSksXHJcbiAgICAgICAgdXBkYXRlT25lOiBjcmVhdGVTdGF0ZU9wZXJhdG9yKHVwZGF0ZU9uZU11dGFibHkpLFxyXG4gICAgICAgIHVwc2VydE9uZTogY3JlYXRlU3RhdGVPcGVyYXRvcih1cHNlcnRPbmVNdXRhYmx5KSxcclxuICAgICAgICBzZXRPbmU6IGNyZWF0ZVN0YXRlT3BlcmF0b3Ioc2V0T25lTXV0YWJseSksXHJcbiAgICAgICAgc2V0TWFueTogY3JlYXRlU3RhdGVPcGVyYXRvcihzZXRNYW55TXV0YWJseSksXHJcbiAgICAgICAgc2V0QWxsOiBjcmVhdGVTdGF0ZU9wZXJhdG9yKHNldEFsbE11dGFibHkpLFxyXG4gICAgICAgIGFkZE1hbnk6IGNyZWF0ZVN0YXRlT3BlcmF0b3IoYWRkTWFueU11dGFibHkpLFxyXG4gICAgICAgIHVwZGF0ZU1hbnk6IGNyZWF0ZVN0YXRlT3BlcmF0b3IodXBkYXRlTWFueU11dGFibHkpLFxyXG4gICAgICAgIHVwc2VydE1hbnk6IGNyZWF0ZVN0YXRlT3BlcmF0b3IodXBzZXJ0TWFueU11dGFibHkpXHJcbiAgICB9O1xyXG59XHJcbi8vIHNyYy9lbnRpdGllcy9jcmVhdGVfYWRhcHRlci50c1xyXG5mdW5jdGlvbiBjcmVhdGVFbnRpdHlBZGFwdGVyKG9wdGlvbnMpIHtcclxuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XHJcbiAgICB2YXIgX2IgPSBfX3NwcmVhZFZhbHVlcyh7XHJcbiAgICAgICAgc29ydENvbXBhcmVyOiBmYWxzZSxcclxuICAgICAgICBzZWxlY3RJZDogZnVuY3Rpb24gKGluc3RhbmNlKSB7IHJldHVybiBpbnN0YW5jZS5pZDsgfVxyXG4gICAgfSwgb3B0aW9ucyksIHNlbGVjdElkID0gX2Iuc2VsZWN0SWQsIHNvcnRDb21wYXJlciA9IF9iLnNvcnRDb21wYXJlcjtcclxuICAgIHZhciBzdGF0ZUZhY3RvcnkgPSBjcmVhdGVJbml0aWFsU3RhdGVGYWN0b3J5KCk7XHJcbiAgICB2YXIgc2VsZWN0b3JzRmFjdG9yeSA9IGNyZWF0ZVNlbGVjdG9yc0ZhY3RvcnkoKTtcclxuICAgIHZhciBzdGF0ZUFkYXB0ZXIgPSBzb3J0Q29tcGFyZXIgPyBjcmVhdGVTb3J0ZWRTdGF0ZUFkYXB0ZXIoc2VsZWN0SWQsIHNvcnRDb21wYXJlcikgOiBjcmVhdGVVbnNvcnRlZFN0YXRlQWRhcHRlcihzZWxlY3RJZCk7XHJcbiAgICByZXR1cm4gX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoX19zcHJlYWRWYWx1ZXMoe1xyXG4gICAgICAgIHNlbGVjdElkOiBzZWxlY3RJZCxcclxuICAgICAgICBzb3J0Q29tcGFyZXI6IHNvcnRDb21wYXJlclxyXG4gICAgfSwgc3RhdGVGYWN0b3J5KSwgc2VsZWN0b3JzRmFjdG9yeSksIHN0YXRlQWRhcHRlcik7XHJcbn1cclxuLy8gc3JjL25hbm9pZC50c1xyXG52YXIgdXJsQWxwaGFiZXQgPSBcIk1vZHVsZVN5bWJoYXNPd25Qci0wMTIzNDU2Nzg5QUJDREVGR0hOUlZmZ2N0aVV2el9LcVlUSmtMeHBaWElqUVdcIjtcclxudmFyIG5hbm9pZCA9IGZ1bmN0aW9uIChzaXplKSB7XHJcbiAgICBpZiAoc2l6ZSA9PT0gdm9pZCAwKSB7IHNpemUgPSAyMTsgfVxyXG4gICAgdmFyIGlkID0gXCJcIjtcclxuICAgIHZhciBpID0gc2l6ZTtcclxuICAgIHdoaWxlIChpLS0pIHtcclxuICAgICAgICBpZCArPSB1cmxBbHBoYWJldFtNYXRoLnJhbmRvbSgpICogNjQgfCAwXTtcclxuICAgIH1cclxuICAgIHJldHVybiBpZDtcclxufTtcclxuLy8gc3JjL2NyZWF0ZUFzeW5jVGh1bmsudHNcclxudmFyIGNvbW1vblByb3BlcnRpZXMgPSBbXHJcbiAgICBcIm5hbWVcIixcclxuICAgIFwibWVzc2FnZVwiLFxyXG4gICAgXCJzdGFja1wiLFxyXG4gICAgXCJjb2RlXCJcclxuXTtcclxudmFyIFJlamVjdFdpdGhWYWx1ZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIFJlamVjdFdpdGhWYWx1ZShwYXlsb2FkLCBtZXRhKSB7XHJcbiAgICAgICAgdGhpcy5wYXlsb2FkID0gcGF5bG9hZDtcclxuICAgICAgICB0aGlzLm1ldGEgPSBtZXRhO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFJlamVjdFdpdGhWYWx1ZTtcclxufSgpKTtcclxudmFyIEZ1bGZpbGxXaXRoTWV0YSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIEZ1bGZpbGxXaXRoTWV0YShwYXlsb2FkLCBtZXRhKSB7XHJcbiAgICAgICAgdGhpcy5wYXlsb2FkID0gcGF5bG9hZDtcclxuICAgICAgICB0aGlzLm1ldGEgPSBtZXRhO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIEZ1bGZpbGxXaXRoTWV0YTtcclxufSgpKTtcclxudmFyIG1pbmlTZXJpYWxpemVFcnJvciA9IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIiAmJiB2YWx1ZSAhPT0gbnVsbCkge1xyXG4gICAgICAgIHZhciBzaW1wbGVFcnJvciA9IHt9O1xyXG4gICAgICAgIGZvciAodmFyIF9pID0gMCwgY29tbW9uUHJvcGVydGllc18xID0gY29tbW9uUHJvcGVydGllczsgX2kgPCBjb21tb25Qcm9wZXJ0aWVzXzEubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgICAgIHZhciBwcm9wZXJ0eSA9IGNvbW1vblByb3BlcnRpZXNfMVtfaV07XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWVbcHJvcGVydHldID09PSBcInN0cmluZ1wiKSB7XHJcbiAgICAgICAgICAgICAgICBzaW1wbGVFcnJvcltwcm9wZXJ0eV0gPSB2YWx1ZVtwcm9wZXJ0eV07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHNpbXBsZUVycm9yO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHsgbWVzc2FnZTogU3RyaW5nKHZhbHVlKSB9O1xyXG59O1xyXG5mdW5jdGlvbiBjcmVhdGVBc3luY1RodW5rKHR5cGVQcmVmaXgsIHBheWxvYWRDcmVhdG9yLCBvcHRpb25zKSB7XHJcbiAgICB2YXIgZnVsZmlsbGVkID0gY3JlYXRlQWN0aW9uKHR5cGVQcmVmaXggKyBcIi9mdWxmaWxsZWRcIiwgZnVuY3Rpb24gKHBheWxvYWQsIHJlcXVlc3RJZCwgYXJnLCBtZXRhKSB7IHJldHVybiAoe1xyXG4gICAgICAgIHBheWxvYWQ6IHBheWxvYWQsXHJcbiAgICAgICAgbWV0YTogX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgbWV0YSB8fCB7fSksIHtcclxuICAgICAgICAgICAgYXJnOiBhcmcsXHJcbiAgICAgICAgICAgIHJlcXVlc3RJZDogcmVxdWVzdElkLFxyXG4gICAgICAgICAgICByZXF1ZXN0U3RhdHVzOiBcImZ1bGZpbGxlZFwiXHJcbiAgICAgICAgfSlcclxuICAgIH0pOyB9KTtcclxuICAgIHZhciBwZW5kaW5nID0gY3JlYXRlQWN0aW9uKHR5cGVQcmVmaXggKyBcIi9wZW5kaW5nXCIsIGZ1bmN0aW9uIChyZXF1ZXN0SWQsIGFyZywgbWV0YSkgeyByZXR1cm4gKHtcclxuICAgICAgICBwYXlsb2FkOiB2b2lkIDAsXHJcbiAgICAgICAgbWV0YTogX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgbWV0YSB8fCB7fSksIHtcclxuICAgICAgICAgICAgYXJnOiBhcmcsXHJcbiAgICAgICAgICAgIHJlcXVlc3RJZDogcmVxdWVzdElkLFxyXG4gICAgICAgICAgICByZXF1ZXN0U3RhdHVzOiBcInBlbmRpbmdcIlxyXG4gICAgICAgIH0pXHJcbiAgICB9KTsgfSk7XHJcbiAgICB2YXIgcmVqZWN0ZWQgPSBjcmVhdGVBY3Rpb24odHlwZVByZWZpeCArIFwiL3JlamVjdGVkXCIsIGZ1bmN0aW9uIChlcnJvciwgcmVxdWVzdElkLCBhcmcsIHBheWxvYWQsIG1ldGEpIHsgcmV0dXJuICh7XHJcbiAgICAgICAgcGF5bG9hZDogcGF5bG9hZCxcclxuICAgICAgICBlcnJvcjogKG9wdGlvbnMgJiYgb3B0aW9ucy5zZXJpYWxpemVFcnJvciB8fCBtaW5pU2VyaWFsaXplRXJyb3IpKGVycm9yIHx8IFwiUmVqZWN0ZWRcIiksXHJcbiAgICAgICAgbWV0YTogX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgbWV0YSB8fCB7fSksIHtcclxuICAgICAgICAgICAgYXJnOiBhcmcsXHJcbiAgICAgICAgICAgIHJlcXVlc3RJZDogcmVxdWVzdElkLFxyXG4gICAgICAgICAgICByZWplY3RlZFdpdGhWYWx1ZTogISFwYXlsb2FkLFxyXG4gICAgICAgICAgICByZXF1ZXN0U3RhdHVzOiBcInJlamVjdGVkXCIsXHJcbiAgICAgICAgICAgIGFib3J0ZWQ6IChlcnJvciA9PSBudWxsID8gdm9pZCAwIDogZXJyb3IubmFtZSkgPT09IFwiQWJvcnRFcnJvclwiLFxyXG4gICAgICAgICAgICBjb25kaXRpb246IChlcnJvciA9PSBudWxsID8gdm9pZCAwIDogZXJyb3IubmFtZSkgPT09IFwiQ29uZGl0aW9uRXJyb3JcIlxyXG4gICAgICAgIH0pXHJcbiAgICB9KTsgfSk7XHJcbiAgICB2YXIgZGlzcGxheWVkV2FybmluZyA9IGZhbHNlO1xyXG4gICAgdmFyIEFDID0gdHlwZW9mIEFib3J0Q29udHJvbGxlciAhPT0gXCJ1bmRlZmluZWRcIiA/IEFib3J0Q29udHJvbGxlciA6IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBmdW5jdGlvbiBjbGFzc18xKCkge1xyXG4gICAgICAgICAgICB0aGlzLnNpZ25hbCA9IHtcclxuICAgICAgICAgICAgICAgIGFib3J0ZWQ6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgYWRkRXZlbnRMaXN0ZW5lcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGRpc3BhdGNoRXZlbnQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgb25hYm9ydDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHJlbW92ZUV2ZW50TGlzdGVuZXI6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY2xhc3NfMS5wcm90b3R5cGUuYWJvcnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcclxuICAgICAgICAgICAgICAgIGlmICghZGlzcGxheWVkV2FybmluZykge1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXllZFdhcm5pbmcgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuaW5mbyhcIlRoaXMgcGxhdGZvcm0gZG9lcyBub3QgaW1wbGVtZW50IEFib3J0Q29udHJvbGxlci4gXFxuSWYgeW91IHdhbnQgdG8gdXNlIHRoZSBBYm9ydENvbnRyb2xsZXIgdG8gcmVhY3QgdG8gYGFib3J0YCBldmVudHMsIHBsZWFzZSBjb25zaWRlciBpbXBvcnRpbmcgYSBwb2x5ZmlsbCBsaWtlICdhYm9ydGNvbnRyb2xsZXItcG9seWZpbGwvZGlzdC9hYm9ydGNvbnRyb2xsZXItcG9seWZpbGwtb25seScuXCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICByZXR1cm4gY2xhc3NfMTtcclxuICAgIH0oKSk7XHJcbiAgICBmdW5jdGlvbiBhY3Rpb25DcmVhdG9yKGFyZykge1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoZGlzcGF0Y2gsIGdldFN0YXRlLCBleHRyYSkge1xyXG4gICAgICAgICAgICB2YXIgX2E7XHJcbiAgICAgICAgICAgIHZhciByZXF1ZXN0SWQgPSAoKF9hID0gb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5pZEdlbmVyYXRvcikgIT0gbnVsbCA/IF9hIDogbmFub2lkKSgpO1xyXG4gICAgICAgICAgICB2YXIgYWJvcnRDb250cm9sbGVyID0gbmV3IEFDKCk7XHJcbiAgICAgICAgICAgIHZhciBhYm9ydFJlYXNvbjtcclxuICAgICAgICAgICAgdmFyIGFib3J0ZWRQcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24gKF8sIHJlamVjdCkgeyByZXR1cm4gYWJvcnRDb250cm9sbGVyLnNpZ25hbC5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgZnVuY3Rpb24gKCkgeyByZXR1cm4gcmVqZWN0KHsgbmFtZTogXCJBYm9ydEVycm9yXCIsIG1lc3NhZ2U6IGFib3J0UmVhc29uIHx8IFwiQWJvcnRlZFwiIH0pOyB9KTsgfSk7XHJcbiAgICAgICAgICAgIHZhciBzdGFydGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIGFib3J0KHJlYXNvbikge1xyXG4gICAgICAgICAgICAgICAgaWYgKHN0YXJ0ZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICBhYm9ydFJlYXNvbiA9IHJlYXNvbjtcclxuICAgICAgICAgICAgICAgICAgICBhYm9ydENvbnRyb2xsZXIuYWJvcnQoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgcHJvbWlzZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgX2EyLCBmaW5hbEFjdGlvbiwgZXJyXzEsIHNraXBEaXNwYXRjaDtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9iKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2IubGFiZWwpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYi50cnlzLnB1c2goWzAsIDIsICwgM10pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvcHRpb25zICYmIG9wdGlvbnMuY29uZGl0aW9uICYmIG9wdGlvbnMuY29uZGl0aW9uKGFyZywgeyBnZXRTdGF0ZTogZ2V0U3RhdGUsIGV4dHJhOiBleHRyYSB9KSA9PT0gZmFsc2UpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJDb25kaXRpb25FcnJvclwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogXCJBYm9ydGVkIGR1ZSB0byBjb25kaXRpb24gY2FsbGJhY2sgcmV0dXJuaW5nIGZhbHNlLlwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BhdGNoKHBlbmRpbmcocmVxdWVzdElkLCBhcmcsIChfYTIgPSBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmdldFBlbmRpbmdNZXRhKSA9PSBudWxsID8gdm9pZCAwIDogX2EyLmNhbGwob3B0aW9ucywgeyByZXF1ZXN0SWQ6IHJlcXVlc3RJZCwgYXJnOiBhcmcgfSwgeyBnZXRTdGF0ZTogZ2V0U3RhdGUsIGV4dHJhOiBleHRyYSB9KSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIFByb21pc2UucmFjZShbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhYm9ydGVkUHJvbWlzZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFByb21pc2UucmVzb2x2ZShwYXlsb2FkQ3JlYXRvcihhcmcsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwYXRjaDogZGlzcGF0Y2gsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0U3RhdGU6IGdldFN0YXRlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4dHJhOiBleHRyYSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1ZXN0SWQ6IHJlcXVlc3RJZCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaWduYWw6IGFib3J0Q29udHJvbGxlci5zaWduYWwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0V2l0aFZhbHVlOiBmdW5jdGlvbiAodmFsdWUsIG1ldGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBSZWplY3RXaXRoVmFsdWUodmFsdWUsIG1ldGEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVsZmlsbFdpdGhWYWx1ZTogZnVuY3Rpb24gKHZhbHVlLCBtZXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgRnVsZmlsbFdpdGhNZXRhKHZhbHVlLCBtZXRhKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIFJlamVjdFdpdGhWYWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyByZXN1bHQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBGdWxmaWxsV2l0aE1ldGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZ1bGZpbGxlZChyZXN1bHQucGF5bG9hZCwgcmVxdWVzdElkLCBhcmcsIHJlc3VsdC5tZXRhKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZ1bGZpbGxlZChyZXN1bHQsIHJlcXVlc3RJZCwgYXJnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaW5hbEFjdGlvbiA9IF9iLnNlbnQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzMgLypicmVhayovLCAzXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJfMSA9IF9iLnNlbnQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaW5hbEFjdGlvbiA9IGVycl8xIGluc3RhbmNlb2YgUmVqZWN0V2l0aFZhbHVlID8gcmVqZWN0ZWQobnVsbCwgcmVxdWVzdElkLCBhcmcsIGVycl8xLnBheWxvYWQsIGVycl8xLm1ldGEpIDogcmVqZWN0ZWQoZXJyXzEsIHJlcXVlc3RJZCwgYXJnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzMgLypicmVhayovLCAzXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBza2lwRGlzcGF0Y2ggPSBvcHRpb25zICYmICFvcHRpb25zLmRpc3BhdGNoQ29uZGl0aW9uUmVqZWN0aW9uICYmIHJlamVjdGVkLm1hdGNoKGZpbmFsQWN0aW9uKSAmJiBmaW5hbEFjdGlvbi5tZXRhLmNvbmRpdGlvbjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXNraXBEaXNwYXRjaCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwYXRjaChmaW5hbEFjdGlvbik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBmaW5hbEFjdGlvbl07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KCk7XHJcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHByb21pc2UsIHtcclxuICAgICAgICAgICAgICAgIGFib3J0OiBhYm9ydCxcclxuICAgICAgICAgICAgICAgIHJlcXVlc3RJZDogcmVxdWVzdElkLFxyXG4gICAgICAgICAgICAgICAgYXJnOiBhcmcsXHJcbiAgICAgICAgICAgICAgICB1bndyYXA6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvbWlzZS50aGVuKHVud3JhcFJlc3VsdCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihhY3Rpb25DcmVhdG9yLCB7XHJcbiAgICAgICAgcGVuZGluZzogcGVuZGluZyxcclxuICAgICAgICByZWplY3RlZDogcmVqZWN0ZWQsXHJcbiAgICAgICAgZnVsZmlsbGVkOiBmdWxmaWxsZWQsXHJcbiAgICAgICAgdHlwZVByZWZpeDogdHlwZVByZWZpeFxyXG4gICAgfSk7XHJcbn1cclxuZnVuY3Rpb24gdW53cmFwUmVzdWx0KGFjdGlvbikge1xyXG4gICAgaWYgKGFjdGlvbi5tZXRhICYmIGFjdGlvbi5tZXRhLnJlamVjdGVkV2l0aFZhbHVlKSB7XHJcbiAgICAgICAgdGhyb3cgYWN0aW9uLnBheWxvYWQ7XHJcbiAgICB9XHJcbiAgICBpZiAoYWN0aW9uLmVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgYWN0aW9uLmVycm9yO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGFjdGlvbi5wYXlsb2FkO1xyXG59XHJcbi8vIHNyYy90c0hlbHBlcnMudHNcclxudmFyIGhhc01hdGNoRnVuY3Rpb24gPSBmdW5jdGlvbiAodikge1xyXG4gICAgcmV0dXJuIHYgJiYgdHlwZW9mIHYubWF0Y2ggPT09IFwiZnVuY3Rpb25cIjtcclxufTtcclxuLy8gc3JjL21hdGNoZXJzLnRzXHJcbnZhciBtYXRjaGVzID0gZnVuY3Rpb24gKG1hdGNoZXIsIGFjdGlvbikge1xyXG4gICAgaWYgKGhhc01hdGNoRnVuY3Rpb24obWF0Y2hlcikpIHtcclxuICAgICAgICByZXR1cm4gbWF0Y2hlci5tYXRjaChhY3Rpb24pO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIG1hdGNoZXIoYWN0aW9uKTtcclxuICAgIH1cclxufTtcclxuZnVuY3Rpb24gaXNBbnlPZigpIHtcclxuICAgIHZhciBtYXRjaGVycyA9IFtdO1xyXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICBtYXRjaGVyc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcclxuICAgICAgICByZXR1cm4gbWF0Y2hlcnMuc29tZShmdW5jdGlvbiAobWF0Y2hlcikgeyByZXR1cm4gbWF0Y2hlcyhtYXRjaGVyLCBhY3Rpb24pOyB9KTtcclxuICAgIH07XHJcbn1cclxuZnVuY3Rpb24gaXNBbGxPZigpIHtcclxuICAgIHZhciBtYXRjaGVycyA9IFtdO1xyXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICBtYXRjaGVyc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcclxuICAgICAgICByZXR1cm4gbWF0Y2hlcnMuZXZlcnkoZnVuY3Rpb24gKG1hdGNoZXIpIHsgcmV0dXJuIG1hdGNoZXMobWF0Y2hlciwgYWN0aW9uKTsgfSk7XHJcbiAgICB9O1xyXG59XHJcbmZ1bmN0aW9uIGhhc0V4cGVjdGVkUmVxdWVzdE1ldGFkYXRhKGFjdGlvbiwgdmFsaWRTdGF0dXMpIHtcclxuICAgIGlmICghYWN0aW9uIHx8ICFhY3Rpb24ubWV0YSlcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB2YXIgaGFzVmFsaWRSZXF1ZXN0SWQgPSB0eXBlb2YgYWN0aW9uLm1ldGEucmVxdWVzdElkID09PSBcInN0cmluZ1wiO1xyXG4gICAgdmFyIGhhc1ZhbGlkUmVxdWVzdFN0YXR1cyA9IHZhbGlkU3RhdHVzLmluZGV4T2YoYWN0aW9uLm1ldGEucmVxdWVzdFN0YXR1cykgPiAtMTtcclxuICAgIHJldHVybiBoYXNWYWxpZFJlcXVlc3RJZCAmJiBoYXNWYWxpZFJlcXVlc3RTdGF0dXM7XHJcbn1cclxuZnVuY3Rpb24gaXNBc3luY1RodW5rQXJyYXkoYSkge1xyXG4gICAgcmV0dXJuIHR5cGVvZiBhWzBdID09PSBcImZ1bmN0aW9uXCIgJiYgXCJwZW5kaW5nXCIgaW4gYVswXSAmJiBcImZ1bGZpbGxlZFwiIGluIGFbMF0gJiYgXCJyZWplY3RlZFwiIGluIGFbMF07XHJcbn1cclxuZnVuY3Rpb24gaXNQZW5kaW5nKCkge1xyXG4gICAgdmFyIGFzeW5jVGh1bmtzID0gW107XHJcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgIGFzeW5jVGh1bmtzW19pXSA9IGFyZ3VtZW50c1tfaV07XHJcbiAgICB9XHJcbiAgICBpZiAoYXN5bmNUaHVua3MubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHsgcmV0dXJuIGhhc0V4cGVjdGVkUmVxdWVzdE1ldGFkYXRhKGFjdGlvbiwgW1wicGVuZGluZ1wiXSk7IH07XHJcbiAgICB9XHJcbiAgICBpZiAoIWlzQXN5bmNUaHVua0FycmF5KGFzeW5jVGh1bmtzKSkge1xyXG4gICAgICAgIHJldHVybiBpc1BlbmRpbmcoKShhc3luY1RodW5rc1swXSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKGFjdGlvbikge1xyXG4gICAgICAgIHZhciBtYXRjaGVycyA9IGFzeW5jVGh1bmtzLm1hcChmdW5jdGlvbiAoYXN5bmNUaHVuaykgeyByZXR1cm4gYXN5bmNUaHVuay5wZW5kaW5nOyB9KTtcclxuICAgICAgICB2YXIgY29tYmluZWRNYXRjaGVyID0gaXNBbnlPZi5hcHBseSh2b2lkIDAsIG1hdGNoZXJzKTtcclxuICAgICAgICByZXR1cm4gY29tYmluZWRNYXRjaGVyKGFjdGlvbik7XHJcbiAgICB9O1xyXG59XHJcbmZ1bmN0aW9uIGlzUmVqZWN0ZWQoKSB7XHJcbiAgICB2YXIgYXN5bmNUaHVua3MgPSBbXTtcclxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgYXN5bmNUaHVua3NbX2ldID0gYXJndW1lbnRzW19pXTtcclxuICAgIH1cclxuICAgIGlmIChhc3luY1RodW5rcy5sZW5ndGggPT09IDApIHtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gaGFzRXhwZWN0ZWRSZXF1ZXN0TWV0YWRhdGEoYWN0aW9uLCBbXCJyZWplY3RlZFwiXSk7IH07XHJcbiAgICB9XHJcbiAgICBpZiAoIWlzQXN5bmNUaHVua0FycmF5KGFzeW5jVGh1bmtzKSkge1xyXG4gICAgICAgIHJldHVybiBpc1JlamVjdGVkKCkoYXN5bmNUaHVua3NbMF0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcclxuICAgICAgICB2YXIgbWF0Y2hlcnMgPSBhc3luY1RodW5rcy5tYXAoZnVuY3Rpb24gKGFzeW5jVGh1bmspIHsgcmV0dXJuIGFzeW5jVGh1bmsucmVqZWN0ZWQ7IH0pO1xyXG4gICAgICAgIHZhciBjb21iaW5lZE1hdGNoZXIgPSBpc0FueU9mLmFwcGx5KHZvaWQgMCwgbWF0Y2hlcnMpO1xyXG4gICAgICAgIHJldHVybiBjb21iaW5lZE1hdGNoZXIoYWN0aW9uKTtcclxuICAgIH07XHJcbn1cclxuZnVuY3Rpb24gaXNSZWplY3RlZFdpdGhWYWx1ZSgpIHtcclxuICAgIHZhciBhc3luY1RodW5rcyA9IFtdO1xyXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICBhc3luY1RodW5rc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgfVxyXG4gICAgdmFyIGhhc0ZsYWcgPSBmdW5jdGlvbiAoYWN0aW9uKSB7XHJcbiAgICAgICAgcmV0dXJuIGFjdGlvbiAmJiBhY3Rpb24ubWV0YSAmJiBhY3Rpb24ubWV0YS5yZWplY3RlZFdpdGhWYWx1ZTtcclxuICAgIH07XHJcbiAgICBpZiAoYXN5bmNUaHVua3MubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcclxuICAgICAgICAgICAgdmFyIGNvbWJpbmVkTWF0Y2hlciA9IGlzQWxsT2YoaXNSZWplY3RlZC5hcHBseSh2b2lkIDAsIGFzeW5jVGh1bmtzKSwgaGFzRmxhZyk7XHJcbiAgICAgICAgICAgIHJldHVybiBjb21iaW5lZE1hdGNoZXIoYWN0aW9uKTtcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgaWYgKCFpc0FzeW5jVGh1bmtBcnJheShhc3luY1RodW5rcykpIHtcclxuICAgICAgICByZXR1cm4gaXNSZWplY3RlZFdpdGhWYWx1ZSgpKGFzeW5jVGh1bmtzWzBdKTtcclxuICAgIH1cclxuICAgIHJldHVybiBmdW5jdGlvbiAoYWN0aW9uKSB7XHJcbiAgICAgICAgdmFyIGNvbWJpbmVkTWF0Y2hlciA9IGlzQWxsT2YoaXNSZWplY3RlZC5hcHBseSh2b2lkIDAsIGFzeW5jVGh1bmtzKSwgaGFzRmxhZyk7XHJcbiAgICAgICAgcmV0dXJuIGNvbWJpbmVkTWF0Y2hlcihhY3Rpb24pO1xyXG4gICAgfTtcclxufVxyXG5mdW5jdGlvbiBpc0Z1bGZpbGxlZCgpIHtcclxuICAgIHZhciBhc3luY1RodW5rcyA9IFtdO1xyXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICBhc3luY1RodW5rc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgfVxyXG4gICAgaWYgKGFzeW5jVGh1bmtzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoYWN0aW9uKSB7IHJldHVybiBoYXNFeHBlY3RlZFJlcXVlc3RNZXRhZGF0YShhY3Rpb24sIFtcImZ1bGZpbGxlZFwiXSk7IH07XHJcbiAgICB9XHJcbiAgICBpZiAoIWlzQXN5bmNUaHVua0FycmF5KGFzeW5jVGh1bmtzKSkge1xyXG4gICAgICAgIHJldHVybiBpc0Z1bGZpbGxlZCgpKGFzeW5jVGh1bmtzWzBdKTtcclxuICAgIH1cclxuICAgIHJldHVybiBmdW5jdGlvbiAoYWN0aW9uKSB7XHJcbiAgICAgICAgdmFyIG1hdGNoZXJzID0gYXN5bmNUaHVua3MubWFwKGZ1bmN0aW9uIChhc3luY1RodW5rKSB7IHJldHVybiBhc3luY1RodW5rLmZ1bGZpbGxlZDsgfSk7XHJcbiAgICAgICAgdmFyIGNvbWJpbmVkTWF0Y2hlciA9IGlzQW55T2YuYXBwbHkodm9pZCAwLCBtYXRjaGVycyk7XHJcbiAgICAgICAgcmV0dXJuIGNvbWJpbmVkTWF0Y2hlcihhY3Rpb24pO1xyXG4gICAgfTtcclxufVxyXG5mdW5jdGlvbiBpc0FzeW5jVGh1bmtBY3Rpb24oKSB7XHJcbiAgICB2YXIgYXN5bmNUaHVua3MgPSBbXTtcclxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgYXN5bmNUaHVua3NbX2ldID0gYXJndW1lbnRzW19pXTtcclxuICAgIH1cclxuICAgIGlmIChhc3luY1RodW5rcy5sZW5ndGggPT09IDApIHtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGFjdGlvbikgeyByZXR1cm4gaGFzRXhwZWN0ZWRSZXF1ZXN0TWV0YWRhdGEoYWN0aW9uLCBbXCJwZW5kaW5nXCIsIFwiZnVsZmlsbGVkXCIsIFwicmVqZWN0ZWRcIl0pOyB9O1xyXG4gICAgfVxyXG4gICAgaWYgKCFpc0FzeW5jVGh1bmtBcnJheShhc3luY1RodW5rcykpIHtcclxuICAgICAgICByZXR1cm4gaXNBc3luY1RodW5rQWN0aW9uKCkoYXN5bmNUaHVua3NbMF0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcclxuICAgICAgICB2YXIgbWF0Y2hlcnMgPSBbXTtcclxuICAgICAgICBmb3IgKHZhciBfaSA9IDAsIGFzeW5jVGh1bmtzXzEgPSBhc3luY1RodW5rczsgX2kgPCBhc3luY1RodW5rc18xLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgICAgICB2YXIgYXN5bmNUaHVuayA9IGFzeW5jVGh1bmtzXzFbX2ldO1xyXG4gICAgICAgICAgICBtYXRjaGVycy5wdXNoKGFzeW5jVGh1bmsucGVuZGluZywgYXN5bmNUaHVuay5yZWplY3RlZCwgYXN5bmNUaHVuay5mdWxmaWxsZWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgY29tYmluZWRNYXRjaGVyID0gaXNBbnlPZi5hcHBseSh2b2lkIDAsIG1hdGNoZXJzKTtcclxuICAgICAgICByZXR1cm4gY29tYmluZWRNYXRjaGVyKGFjdGlvbik7XHJcbiAgICB9O1xyXG59XHJcbi8vIHNyYy9pbmRleC50c1xyXG5lbmFibGVFUzUoKTtcclxuZXhwb3J0IHsgTWlkZGxld2FyZUFycmF5LCBjb25maWd1cmVTdG9yZSwgY3JlYXRlQWN0aW9uLCBjcmVhdGVBc3luY1RodW5rLCBjcmVhdGVEcmFmdFNhZmVTZWxlY3RvciwgY3JlYXRlRW50aXR5QWRhcHRlciwgY3JlYXRlSW1tdXRhYmxlU3RhdGVJbnZhcmlhbnRNaWRkbGV3YXJlLCBkZWZhdWx0MiBhcyBjcmVhdGVOZXh0U3RhdGUsIGNyZWF0ZVJlZHVjZXIsIGNyZWF0ZVNlbGVjdG9yMiBhcyBjcmVhdGVTZWxlY3RvciwgY3JlYXRlU2VyaWFsaXphYmxlU3RhdGVJbnZhcmlhbnRNaWRkbGV3YXJlLCBjcmVhdGVTbGljZSwgY3VycmVudDIgYXMgY3VycmVudCwgZmluZE5vblNlcmlhbGl6YWJsZVZhbHVlLCBmcmVlemUsIGdldERlZmF1bHRNaWRkbGV3YXJlLCBnZXRUeXBlLCBpc0FsbE9mLCBpc0FueU9mLCBpc0FzeW5jVGh1bmtBY3Rpb24sIGlzRHJhZnQ0IGFzIGlzRHJhZnQsIGlzRnVsZmlsbGVkLCBpc0ltbXV0YWJsZURlZmF1bHQsIGlzUGVuZGluZywgaXNQbGFpbiwgaXNQbGFpbk9iamVjdCwgaXNSZWplY3RlZCwgaXNSZWplY3RlZFdpdGhWYWx1ZSwgbWluaVNlcmlhbGl6ZUVycm9yLCBuYW5vaWQsIG9yaWdpbmFsLCB1bndyYXBSZXN1bHQgfTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bW9kdWxlLmpzLm1hcCIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvYXhpb3MnKTsiLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciBzZXR0bGUgPSByZXF1aXJlKCcuLy4uL2NvcmUvc2V0dGxlJyk7XG52YXIgY29va2llcyA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9jb29raWVzJyk7XG52YXIgYnVpbGRVUkwgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvYnVpbGRVUkwnKTtcbnZhciBidWlsZEZ1bGxQYXRoID0gcmVxdWlyZSgnLi4vY29yZS9idWlsZEZ1bGxQYXRoJyk7XG52YXIgcGFyc2VIZWFkZXJzID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL3BhcnNlSGVhZGVycycpO1xudmFyIGlzVVJMU2FtZU9yaWdpbiA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9pc1VSTFNhbWVPcmlnaW4nKTtcbnZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJy4uL2NvcmUvY3JlYXRlRXJyb3InKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB4aHJBZGFwdGVyKGNvbmZpZykge1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gZGlzcGF0Y2hYaHJSZXF1ZXN0KHJlc29sdmUsIHJlamVjdCkge1xuICAgIHZhciByZXF1ZXN0RGF0YSA9IGNvbmZpZy5kYXRhO1xuICAgIHZhciByZXF1ZXN0SGVhZGVycyA9IGNvbmZpZy5oZWFkZXJzO1xuXG4gICAgaWYgKHV0aWxzLmlzRm9ybURhdGEocmVxdWVzdERhdGEpKSB7XG4gICAgICBkZWxldGUgcmVxdWVzdEhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddOyAvLyBMZXQgdGhlIGJyb3dzZXIgc2V0IGl0XG4gICAgfVxuXG4gICAgdmFyIHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcblxuICAgIC8vIEhUVFAgYmFzaWMgYXV0aGVudGljYXRpb25cbiAgICBpZiAoY29uZmlnLmF1dGgpIHtcbiAgICAgIHZhciB1c2VybmFtZSA9IGNvbmZpZy5hdXRoLnVzZXJuYW1lIHx8ICcnO1xuICAgICAgdmFyIHBhc3N3b3JkID0gY29uZmlnLmF1dGgucGFzc3dvcmQgPyB1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoY29uZmlnLmF1dGgucGFzc3dvcmQpKSA6ICcnO1xuICAgICAgcmVxdWVzdEhlYWRlcnMuQXV0aG9yaXphdGlvbiA9ICdCYXNpYyAnICsgYnRvYSh1c2VybmFtZSArICc6JyArIHBhc3N3b3JkKTtcbiAgICB9XG5cbiAgICB2YXIgZnVsbFBhdGggPSBidWlsZEZ1bGxQYXRoKGNvbmZpZy5iYXNlVVJMLCBjb25maWcudXJsKTtcbiAgICByZXF1ZXN0Lm9wZW4oY29uZmlnLm1ldGhvZC50b1VwcGVyQ2FzZSgpLCBidWlsZFVSTChmdWxsUGF0aCwgY29uZmlnLnBhcmFtcywgY29uZmlnLnBhcmFtc1NlcmlhbGl6ZXIpLCB0cnVlKTtcblxuICAgIC8vIFNldCB0aGUgcmVxdWVzdCB0aW1lb3V0IGluIE1TXG4gICAgcmVxdWVzdC50aW1lb3V0ID0gY29uZmlnLnRpbWVvdXQ7XG5cbiAgICAvLyBMaXN0ZW4gZm9yIHJlYWR5IHN0YXRlXG4gICAgcmVxdWVzdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiBoYW5kbGVMb2FkKCkge1xuICAgICAgaWYgKCFyZXF1ZXN0IHx8IHJlcXVlc3QucmVhZHlTdGF0ZSAhPT0gNCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIFRoZSByZXF1ZXN0IGVycm9yZWQgb3V0IGFuZCB3ZSBkaWRuJ3QgZ2V0IGEgcmVzcG9uc2UsIHRoaXMgd2lsbCBiZVxuICAgICAgLy8gaGFuZGxlZCBieSBvbmVycm9yIGluc3RlYWRcbiAgICAgIC8vIFdpdGggb25lIGV4Y2VwdGlvbjogcmVxdWVzdCB0aGF0IHVzaW5nIGZpbGU6IHByb3RvY29sLCBtb3N0IGJyb3dzZXJzXG4gICAgICAvLyB3aWxsIHJldHVybiBzdGF0dXMgYXMgMCBldmVuIHRob3VnaCBpdCdzIGEgc3VjY2Vzc2Z1bCByZXF1ZXN0XG4gICAgICBpZiAocmVxdWVzdC5zdGF0dXMgPT09IDAgJiYgIShyZXF1ZXN0LnJlc3BvbnNlVVJMICYmIHJlcXVlc3QucmVzcG9uc2VVUkwuaW5kZXhPZignZmlsZTonKSA9PT0gMCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBQcmVwYXJlIHRoZSByZXNwb25zZVxuICAgICAgdmFyIHJlc3BvbnNlSGVhZGVycyA9ICdnZXRBbGxSZXNwb25zZUhlYWRlcnMnIGluIHJlcXVlc3QgPyBwYXJzZUhlYWRlcnMocmVxdWVzdC5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKSkgOiBudWxsO1xuICAgICAgdmFyIHJlc3BvbnNlRGF0YSA9ICFjb25maWcucmVzcG9uc2VUeXBlIHx8IGNvbmZpZy5yZXNwb25zZVR5cGUgPT09ICd0ZXh0JyA/IHJlcXVlc3QucmVzcG9uc2VUZXh0IDogcmVxdWVzdC5yZXNwb25zZTtcbiAgICAgIHZhciByZXNwb25zZSA9IHtcbiAgICAgICAgZGF0YTogcmVzcG9uc2VEYXRhLFxuICAgICAgICBzdGF0dXM6IHJlcXVlc3Quc3RhdHVzLFxuICAgICAgICBzdGF0dXNUZXh0OiByZXF1ZXN0LnN0YXR1c1RleHQsXG4gICAgICAgIGhlYWRlcnM6IHJlc3BvbnNlSGVhZGVycyxcbiAgICAgICAgY29uZmlnOiBjb25maWcsXG4gICAgICAgIHJlcXVlc3Q6IHJlcXVlc3RcbiAgICAgIH07XG5cbiAgICAgIHNldHRsZShyZXNvbHZlLCByZWplY3QsIHJlc3BvbnNlKTtcblxuICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgfTtcblxuICAgIC8vIEhhbmRsZSBicm93c2VyIHJlcXVlc3QgY2FuY2VsbGF0aW9uIChhcyBvcHBvc2VkIHRvIGEgbWFudWFsIGNhbmNlbGxhdGlvbilcbiAgICByZXF1ZXN0Lm9uYWJvcnQgPSBmdW5jdGlvbiBoYW5kbGVBYm9ydCgpIHtcbiAgICAgIGlmICghcmVxdWVzdCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHJlamVjdChjcmVhdGVFcnJvcignUmVxdWVzdCBhYm9ydGVkJywgY29uZmlnLCAnRUNPTk5BQk9SVEVEJywgcmVxdWVzdCkpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gSGFuZGxlIGxvdyBsZXZlbCBuZXR3b3JrIGVycm9yc1xuICAgIHJlcXVlc3Qub25lcnJvciA9IGZ1bmN0aW9uIGhhbmRsZUVycm9yKCkge1xuICAgICAgLy8gUmVhbCBlcnJvcnMgYXJlIGhpZGRlbiBmcm9tIHVzIGJ5IHRoZSBicm93c2VyXG4gICAgICAvLyBvbmVycm9yIHNob3VsZCBvbmx5IGZpcmUgaWYgaXQncyBhIG5ldHdvcmsgZXJyb3JcbiAgICAgIHJlamVjdChjcmVhdGVFcnJvcignTmV0d29yayBFcnJvcicsIGNvbmZpZywgbnVsbCwgcmVxdWVzdCkpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gSGFuZGxlIHRpbWVvdXRcbiAgICByZXF1ZXN0Lm9udGltZW91dCA9IGZ1bmN0aW9uIGhhbmRsZVRpbWVvdXQoKSB7XG4gICAgICB2YXIgdGltZW91dEVycm9yTWVzc2FnZSA9ICd0aW1lb3V0IG9mICcgKyBjb25maWcudGltZW91dCArICdtcyBleGNlZWRlZCc7XG4gICAgICBpZiAoY29uZmlnLnRpbWVvdXRFcnJvck1lc3NhZ2UpIHtcbiAgICAgICAgdGltZW91dEVycm9yTWVzc2FnZSA9IGNvbmZpZy50aW1lb3V0RXJyb3JNZXNzYWdlO1xuICAgICAgfVxuICAgICAgcmVqZWN0KGNyZWF0ZUVycm9yKHRpbWVvdXRFcnJvck1lc3NhZ2UsIGNvbmZpZywgJ0VDT05OQUJPUlRFRCcsXG4gICAgICAgIHJlcXVlc3QpKTtcblxuICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgfTtcblxuICAgIC8vIEFkZCB4c3JmIGhlYWRlclxuICAgIC8vIFRoaXMgaXMgb25seSBkb25lIGlmIHJ1bm5pbmcgaW4gYSBzdGFuZGFyZCBicm93c2VyIGVudmlyb25tZW50LlxuICAgIC8vIFNwZWNpZmljYWxseSBub3QgaWYgd2UncmUgaW4gYSB3ZWIgd29ya2VyLCBvciByZWFjdC1uYXRpdmUuXG4gICAgaWYgKHV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCkpIHtcbiAgICAgIC8vIEFkZCB4c3JmIGhlYWRlclxuICAgICAgdmFyIHhzcmZWYWx1ZSA9IChjb25maWcud2l0aENyZWRlbnRpYWxzIHx8IGlzVVJMU2FtZU9yaWdpbihmdWxsUGF0aCkpICYmIGNvbmZpZy54c3JmQ29va2llTmFtZSA/XG4gICAgICAgIGNvb2tpZXMucmVhZChjb25maWcueHNyZkNvb2tpZU5hbWUpIDpcbiAgICAgICAgdW5kZWZpbmVkO1xuXG4gICAgICBpZiAoeHNyZlZhbHVlKSB7XG4gICAgICAgIHJlcXVlc3RIZWFkZXJzW2NvbmZpZy54c3JmSGVhZGVyTmFtZV0gPSB4c3JmVmFsdWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gQWRkIGhlYWRlcnMgdG8gdGhlIHJlcXVlc3RcbiAgICBpZiAoJ3NldFJlcXVlc3RIZWFkZXInIGluIHJlcXVlc3QpIHtcbiAgICAgIHV0aWxzLmZvckVhY2gocmVxdWVzdEhlYWRlcnMsIGZ1bmN0aW9uIHNldFJlcXVlc3RIZWFkZXIodmFsLCBrZXkpIHtcbiAgICAgICAgaWYgKHR5cGVvZiByZXF1ZXN0RGF0YSA9PT0gJ3VuZGVmaW5lZCcgJiYga2V5LnRvTG93ZXJDYXNlKCkgPT09ICdjb250ZW50LXR5cGUnKSB7XG4gICAgICAgICAgLy8gUmVtb3ZlIENvbnRlbnQtVHlwZSBpZiBkYXRhIGlzIHVuZGVmaW5lZFxuICAgICAgICAgIGRlbGV0ZSByZXF1ZXN0SGVhZGVyc1trZXldO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIE90aGVyd2lzZSBhZGQgaGVhZGVyIHRvIHRoZSByZXF1ZXN0XG4gICAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKGtleSwgdmFsKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gQWRkIHdpdGhDcmVkZW50aWFscyB0byByZXF1ZXN0IGlmIG5lZWRlZFxuICAgIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnLndpdGhDcmVkZW50aWFscykpIHtcbiAgICAgIHJlcXVlc3Qud2l0aENyZWRlbnRpYWxzID0gISFjb25maWcud2l0aENyZWRlbnRpYWxzO1xuICAgIH1cblxuICAgIC8vIEFkZCByZXNwb25zZVR5cGUgdG8gcmVxdWVzdCBpZiBuZWVkZWRcbiAgICBpZiAoY29uZmlnLnJlc3BvbnNlVHlwZSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgcmVxdWVzdC5yZXNwb25zZVR5cGUgPSBjb25maWcucmVzcG9uc2VUeXBlO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBFeHBlY3RlZCBET01FeGNlcHRpb24gdGhyb3duIGJ5IGJyb3dzZXJzIG5vdCBjb21wYXRpYmxlIFhNTEh0dHBSZXF1ZXN0IExldmVsIDIuXG4gICAgICAgIC8vIEJ1dCwgdGhpcyBjYW4gYmUgc3VwcHJlc3NlZCBmb3IgJ2pzb24nIHR5cGUgYXMgaXQgY2FuIGJlIHBhcnNlZCBieSBkZWZhdWx0ICd0cmFuc2Zvcm1SZXNwb25zZScgZnVuY3Rpb24uXG4gICAgICAgIGlmIChjb25maWcucmVzcG9uc2VUeXBlICE9PSAnanNvbicpIHtcbiAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gSGFuZGxlIHByb2dyZXNzIGlmIG5lZWRlZFxuICAgIGlmICh0eXBlb2YgY29uZmlnLm9uRG93bmxvYWRQcm9ncmVzcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmVxdWVzdC5hZGRFdmVudExpc3RlbmVyKCdwcm9ncmVzcycsIGNvbmZpZy5vbkRvd25sb2FkUHJvZ3Jlc3MpO1xuICAgIH1cblxuICAgIC8vIE5vdCBhbGwgYnJvd3NlcnMgc3VwcG9ydCB1cGxvYWQgZXZlbnRzXG4gICAgaWYgKHR5cGVvZiBjb25maWcub25VcGxvYWRQcm9ncmVzcyA9PT0gJ2Z1bmN0aW9uJyAmJiByZXF1ZXN0LnVwbG9hZCkge1xuICAgICAgcmVxdWVzdC51cGxvYWQuYWRkRXZlbnRMaXN0ZW5lcigncHJvZ3Jlc3MnLCBjb25maWcub25VcGxvYWRQcm9ncmVzcyk7XG4gICAgfVxuXG4gICAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbikge1xuICAgICAgLy8gSGFuZGxlIGNhbmNlbGxhdGlvblxuICAgICAgY29uZmlnLmNhbmNlbFRva2VuLnByb21pc2UudGhlbihmdW5jdGlvbiBvbkNhbmNlbGVkKGNhbmNlbCkge1xuICAgICAgICBpZiAoIXJlcXVlc3QpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICByZXF1ZXN0LmFib3J0KCk7XG4gICAgICAgIHJlamVjdChjYW5jZWwpO1xuICAgICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKCFyZXF1ZXN0RGF0YSkge1xuICAgICAgcmVxdWVzdERhdGEgPSBudWxsO1xuICAgIH1cblxuICAgIC8vIFNlbmQgdGhlIHJlcXVlc3RcbiAgICByZXF1ZXN0LnNlbmQocmVxdWVzdERhdGEpO1xuICB9KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcbnZhciBiaW5kID0gcmVxdWlyZSgnLi9oZWxwZXJzL2JpbmQnKTtcbnZhciBBeGlvcyA9IHJlcXVpcmUoJy4vY29yZS9BeGlvcycpO1xudmFyIG1lcmdlQ29uZmlnID0gcmVxdWlyZSgnLi9jb3JlL21lcmdlQ29uZmlnJyk7XG52YXIgZGVmYXVsdHMgPSByZXF1aXJlKCcuL2RlZmF1bHRzJyk7XG5cbi8qKlxuICogQ3JlYXRlIGFuIGluc3RhbmNlIG9mIEF4aW9zXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGRlZmF1bHRDb25maWcgVGhlIGRlZmF1bHQgY29uZmlnIGZvciB0aGUgaW5zdGFuY2VcbiAqIEByZXR1cm4ge0F4aW9zfSBBIG5ldyBpbnN0YW5jZSBvZiBBeGlvc1xuICovXG5mdW5jdGlvbiBjcmVhdGVJbnN0YW5jZShkZWZhdWx0Q29uZmlnKSB7XG4gIHZhciBjb250ZXh0ID0gbmV3IEF4aW9zKGRlZmF1bHRDb25maWcpO1xuICB2YXIgaW5zdGFuY2UgPSBiaW5kKEF4aW9zLnByb3RvdHlwZS5yZXF1ZXN0LCBjb250ZXh0KTtcblxuICAvLyBDb3B5IGF4aW9zLnByb3RvdHlwZSB0byBpbnN0YW5jZVxuICB1dGlscy5leHRlbmQoaW5zdGFuY2UsIEF4aW9zLnByb3RvdHlwZSwgY29udGV4dCk7XG5cbiAgLy8gQ29weSBjb250ZXh0IHRvIGluc3RhbmNlXG4gIHV0aWxzLmV4dGVuZChpbnN0YW5jZSwgY29udGV4dCk7XG5cbiAgcmV0dXJuIGluc3RhbmNlO1xufVxuXG4vLyBDcmVhdGUgdGhlIGRlZmF1bHQgaW5zdGFuY2UgdG8gYmUgZXhwb3J0ZWRcbnZhciBheGlvcyA9IGNyZWF0ZUluc3RhbmNlKGRlZmF1bHRzKTtcblxuLy8gRXhwb3NlIEF4aW9zIGNsYXNzIHRvIGFsbG93IGNsYXNzIGluaGVyaXRhbmNlXG5heGlvcy5BeGlvcyA9IEF4aW9zO1xuXG4vLyBGYWN0b3J5IGZvciBjcmVhdGluZyBuZXcgaW5zdGFuY2VzXG5heGlvcy5jcmVhdGUgPSBmdW5jdGlvbiBjcmVhdGUoaW5zdGFuY2VDb25maWcpIHtcbiAgcmV0dXJuIGNyZWF0ZUluc3RhbmNlKG1lcmdlQ29uZmlnKGF4aW9zLmRlZmF1bHRzLCBpbnN0YW5jZUNvbmZpZykpO1xufTtcblxuLy8gRXhwb3NlIENhbmNlbCAmIENhbmNlbFRva2VuXG5heGlvcy5DYW5jZWwgPSByZXF1aXJlKCcuL2NhbmNlbC9DYW5jZWwnKTtcbmF4aW9zLkNhbmNlbFRva2VuID0gcmVxdWlyZSgnLi9jYW5jZWwvQ2FuY2VsVG9rZW4nKTtcbmF4aW9zLmlzQ2FuY2VsID0gcmVxdWlyZSgnLi9jYW5jZWwvaXNDYW5jZWwnKTtcblxuLy8gRXhwb3NlIGFsbC9zcHJlYWRcbmF4aW9zLmFsbCA9IGZ1bmN0aW9uIGFsbChwcm9taXNlcykge1xuICByZXR1cm4gUHJvbWlzZS5hbGwocHJvbWlzZXMpO1xufTtcbmF4aW9zLnNwcmVhZCA9IHJlcXVpcmUoJy4vaGVscGVycy9zcHJlYWQnKTtcblxuLy8gRXhwb3NlIGlzQXhpb3NFcnJvclxuYXhpb3MuaXNBeGlvc0Vycm9yID0gcmVxdWlyZSgnLi9oZWxwZXJzL2lzQXhpb3NFcnJvcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGF4aW9zO1xuXG4vLyBBbGxvdyB1c2Ugb2YgZGVmYXVsdCBpbXBvcnQgc3ludGF4IGluIFR5cGVTY3JpcHRcbm1vZHVsZS5leHBvcnRzLmRlZmF1bHQgPSBheGlvcztcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBBIGBDYW5jZWxgIGlzIGFuIG9iamVjdCB0aGF0IGlzIHRocm93biB3aGVuIGFuIG9wZXJhdGlvbiBpcyBjYW5jZWxlZC5cbiAqXG4gKiBAY2xhc3NcbiAqIEBwYXJhbSB7c3RyaW5nPX0gbWVzc2FnZSBUaGUgbWVzc2FnZS5cbiAqL1xuZnVuY3Rpb24gQ2FuY2VsKG1lc3NhZ2UpIHtcbiAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbn1cblxuQ2FuY2VsLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICByZXR1cm4gJ0NhbmNlbCcgKyAodGhpcy5tZXNzYWdlID8gJzogJyArIHRoaXMubWVzc2FnZSA6ICcnKTtcbn07XG5cbkNhbmNlbC5wcm90b3R5cGUuX19DQU5DRUxfXyA9IHRydWU7XG5cbm1vZHVsZS5leHBvcnRzID0gQ2FuY2VsO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgQ2FuY2VsID0gcmVxdWlyZSgnLi9DYW5jZWwnKTtcblxuLyoqXG4gKiBBIGBDYW5jZWxUb2tlbmAgaXMgYW4gb2JqZWN0IHRoYXQgY2FuIGJlIHVzZWQgdG8gcmVxdWVzdCBjYW5jZWxsYXRpb24gb2YgYW4gb3BlcmF0aW9uLlxuICpcbiAqIEBjbGFzc1xuICogQHBhcmFtIHtGdW5jdGlvbn0gZXhlY3V0b3IgVGhlIGV4ZWN1dG9yIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBDYW5jZWxUb2tlbihleGVjdXRvcikge1xuICBpZiAodHlwZW9mIGV4ZWN1dG9yICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignZXhlY3V0b3IgbXVzdCBiZSBhIGZ1bmN0aW9uLicpO1xuICB9XG5cbiAgdmFyIHJlc29sdmVQcm9taXNlO1xuICB0aGlzLnByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiBwcm9taXNlRXhlY3V0b3IocmVzb2x2ZSkge1xuICAgIHJlc29sdmVQcm9taXNlID0gcmVzb2x2ZTtcbiAgfSk7XG5cbiAgdmFyIHRva2VuID0gdGhpcztcbiAgZXhlY3V0b3IoZnVuY3Rpb24gY2FuY2VsKG1lc3NhZ2UpIHtcbiAgICBpZiAodG9rZW4ucmVhc29uKSB7XG4gICAgICAvLyBDYW5jZWxsYXRpb24gaGFzIGFscmVhZHkgYmVlbiByZXF1ZXN0ZWRcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0b2tlbi5yZWFzb24gPSBuZXcgQ2FuY2VsKG1lc3NhZ2UpO1xuICAgIHJlc29sdmVQcm9taXNlKHRva2VuLnJlYXNvbik7XG4gIH0pO1xufVxuXG4vKipcbiAqIFRocm93cyBhIGBDYW5jZWxgIGlmIGNhbmNlbGxhdGlvbiBoYXMgYmVlbiByZXF1ZXN0ZWQuXG4gKi9cbkNhbmNlbFRva2VuLnByb3RvdHlwZS50aHJvd0lmUmVxdWVzdGVkID0gZnVuY3Rpb24gdGhyb3dJZlJlcXVlc3RlZCgpIHtcbiAgaWYgKHRoaXMucmVhc29uKSB7XG4gICAgdGhyb3cgdGhpcy5yZWFzb247XG4gIH1cbn07XG5cbi8qKlxuICogUmV0dXJucyBhbiBvYmplY3QgdGhhdCBjb250YWlucyBhIG5ldyBgQ2FuY2VsVG9rZW5gIGFuZCBhIGZ1bmN0aW9uIHRoYXQsIHdoZW4gY2FsbGVkLFxuICogY2FuY2VscyB0aGUgYENhbmNlbFRva2VuYC5cbiAqL1xuQ2FuY2VsVG9rZW4uc291cmNlID0gZnVuY3Rpb24gc291cmNlKCkge1xuICB2YXIgY2FuY2VsO1xuICB2YXIgdG9rZW4gPSBuZXcgQ2FuY2VsVG9rZW4oZnVuY3Rpb24gZXhlY3V0b3IoYykge1xuICAgIGNhbmNlbCA9IGM7XG4gIH0pO1xuICByZXR1cm4ge1xuICAgIHRva2VuOiB0b2tlbixcbiAgICBjYW5jZWw6IGNhbmNlbFxuICB9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBDYW5jZWxUb2tlbjtcbiIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0NhbmNlbCh2YWx1ZSkge1xuICByZXR1cm4gISEodmFsdWUgJiYgdmFsdWUuX19DQU5DRUxfXyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG52YXIgYnVpbGRVUkwgPSByZXF1aXJlKCcuLi9oZWxwZXJzL2J1aWxkVVJMJyk7XG52YXIgSW50ZXJjZXB0b3JNYW5hZ2VyID0gcmVxdWlyZSgnLi9JbnRlcmNlcHRvck1hbmFnZXInKTtcbnZhciBkaXNwYXRjaFJlcXVlc3QgPSByZXF1aXJlKCcuL2Rpc3BhdGNoUmVxdWVzdCcpO1xudmFyIG1lcmdlQ29uZmlnID0gcmVxdWlyZSgnLi9tZXJnZUNvbmZpZycpO1xuXG4vKipcbiAqIENyZWF0ZSBhIG5ldyBpbnN0YW5jZSBvZiBBeGlvc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBpbnN0YW5jZUNvbmZpZyBUaGUgZGVmYXVsdCBjb25maWcgZm9yIHRoZSBpbnN0YW5jZVxuICovXG5mdW5jdGlvbiBBeGlvcyhpbnN0YW5jZUNvbmZpZykge1xuICB0aGlzLmRlZmF1bHRzID0gaW5zdGFuY2VDb25maWc7XG4gIHRoaXMuaW50ZXJjZXB0b3JzID0ge1xuICAgIHJlcXVlc3Q6IG5ldyBJbnRlcmNlcHRvck1hbmFnZXIoKSxcbiAgICByZXNwb25zZTogbmV3IEludGVyY2VwdG9yTWFuYWdlcigpXG4gIH07XG59XG5cbi8qKlxuICogRGlzcGF0Y2ggYSByZXF1ZXN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnIHNwZWNpZmljIGZvciB0aGlzIHJlcXVlc3QgKG1lcmdlZCB3aXRoIHRoaXMuZGVmYXVsdHMpXG4gKi9cbkF4aW9zLnByb3RvdHlwZS5yZXF1ZXN0ID0gZnVuY3Rpb24gcmVxdWVzdChjb25maWcpIHtcbiAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gIC8vIEFsbG93IGZvciBheGlvcygnZXhhbXBsZS91cmwnWywgY29uZmlnXSkgYSBsYSBmZXRjaCBBUElcbiAgaWYgKHR5cGVvZiBjb25maWcgPT09ICdzdHJpbmcnKSB7XG4gICAgY29uZmlnID0gYXJndW1lbnRzWzFdIHx8IHt9O1xuICAgIGNvbmZpZy51cmwgPSBhcmd1bWVudHNbMF07XG4gIH0gZWxzZSB7XG4gICAgY29uZmlnID0gY29uZmlnIHx8IHt9O1xuICB9XG5cbiAgY29uZmlnID0gbWVyZ2VDb25maWcodGhpcy5kZWZhdWx0cywgY29uZmlnKTtcblxuICAvLyBTZXQgY29uZmlnLm1ldGhvZFxuICBpZiAoY29uZmlnLm1ldGhvZCkge1xuICAgIGNvbmZpZy5tZXRob2QgPSBjb25maWcubWV0aG9kLnRvTG93ZXJDYXNlKCk7XG4gIH0gZWxzZSBpZiAodGhpcy5kZWZhdWx0cy5tZXRob2QpIHtcbiAgICBjb25maWcubWV0aG9kID0gdGhpcy5kZWZhdWx0cy5tZXRob2QudG9Mb3dlckNhc2UoKTtcbiAgfSBlbHNlIHtcbiAgICBjb25maWcubWV0aG9kID0gJ2dldCc7XG4gIH1cblxuICAvLyBIb29rIHVwIGludGVyY2VwdG9ycyBtaWRkbGV3YXJlXG4gIHZhciBjaGFpbiA9IFtkaXNwYXRjaFJlcXVlc3QsIHVuZGVmaW5lZF07XG4gIHZhciBwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKGNvbmZpZyk7XG5cbiAgdGhpcy5pbnRlcmNlcHRvcnMucmVxdWVzdC5mb3JFYWNoKGZ1bmN0aW9uIHVuc2hpZnRSZXF1ZXN0SW50ZXJjZXB0b3JzKGludGVyY2VwdG9yKSB7XG4gICAgY2hhaW4udW5zaGlmdChpbnRlcmNlcHRvci5mdWxmaWxsZWQsIGludGVyY2VwdG9yLnJlamVjdGVkKTtcbiAgfSk7XG5cbiAgdGhpcy5pbnRlcmNlcHRvcnMucmVzcG9uc2UuZm9yRWFjaChmdW5jdGlvbiBwdXNoUmVzcG9uc2VJbnRlcmNlcHRvcnMoaW50ZXJjZXB0b3IpIHtcbiAgICBjaGFpbi5wdXNoKGludGVyY2VwdG9yLmZ1bGZpbGxlZCwgaW50ZXJjZXB0b3IucmVqZWN0ZWQpO1xuICB9KTtcblxuICB3aGlsZSAoY2hhaW4ubGVuZ3RoKSB7XG4gICAgcHJvbWlzZSA9IHByb21pc2UudGhlbihjaGFpbi5zaGlmdCgpLCBjaGFpbi5zaGlmdCgpKTtcbiAgfVxuXG4gIHJldHVybiBwcm9taXNlO1xufTtcblxuQXhpb3MucHJvdG90eXBlLmdldFVyaSA9IGZ1bmN0aW9uIGdldFVyaShjb25maWcpIHtcbiAgY29uZmlnID0gbWVyZ2VDb25maWcodGhpcy5kZWZhdWx0cywgY29uZmlnKTtcbiAgcmV0dXJuIGJ1aWxkVVJMKGNvbmZpZy51cmwsIGNvbmZpZy5wYXJhbXMsIGNvbmZpZy5wYXJhbXNTZXJpYWxpemVyKS5yZXBsYWNlKC9eXFw/LywgJycpO1xufTtcblxuLy8gUHJvdmlkZSBhbGlhc2VzIGZvciBzdXBwb3J0ZWQgcmVxdWVzdCBtZXRob2RzXG51dGlscy5mb3JFYWNoKFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJywgJ29wdGlvbnMnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZE5vRGF0YShtZXRob2QpIHtcbiAgLyplc2xpbnQgZnVuYy1uYW1lczowKi9cbiAgQXhpb3MucHJvdG90eXBlW21ldGhvZF0gPSBmdW5jdGlvbih1cmwsIGNvbmZpZykge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QobWVyZ2VDb25maWcoY29uZmlnIHx8IHt9LCB7XG4gICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgIHVybDogdXJsLFxuICAgICAgZGF0YTogKGNvbmZpZyB8fCB7fSkuZGF0YVxuICAgIH0pKTtcbiAgfTtcbn0pO1xuXG51dGlscy5mb3JFYWNoKFsncG9zdCcsICdwdXQnLCAncGF0Y2gnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZFdpdGhEYXRhKG1ldGhvZCkge1xuICAvKmVzbGludCBmdW5jLW5hbWVzOjAqL1xuICBBeGlvcy5wcm90b3R5cGVbbWV0aG9kXSA9IGZ1bmN0aW9uKHVybCwgZGF0YSwgY29uZmlnKSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdChtZXJnZUNvbmZpZyhjb25maWcgfHwge30sIHtcbiAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgdXJsOiB1cmwsXG4gICAgICBkYXRhOiBkYXRhXG4gICAgfSkpO1xuICB9O1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gQXhpb3M7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxuZnVuY3Rpb24gSW50ZXJjZXB0b3JNYW5hZ2VyKCkge1xuICB0aGlzLmhhbmRsZXJzID0gW107XG59XG5cbi8qKlxuICogQWRkIGEgbmV3IGludGVyY2VwdG9yIHRvIHRoZSBzdGFja1xuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bGZpbGxlZCBUaGUgZnVuY3Rpb24gdG8gaGFuZGxlIGB0aGVuYCBmb3IgYSBgUHJvbWlzZWBcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlamVjdGVkIFRoZSBmdW5jdGlvbiB0byBoYW5kbGUgYHJlamVjdGAgZm9yIGEgYFByb21pc2VgXG4gKlxuICogQHJldHVybiB7TnVtYmVyfSBBbiBJRCB1c2VkIHRvIHJlbW92ZSBpbnRlcmNlcHRvciBsYXRlclxuICovXG5JbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLnVzZSA9IGZ1bmN0aW9uIHVzZShmdWxmaWxsZWQsIHJlamVjdGVkKSB7XG4gIHRoaXMuaGFuZGxlcnMucHVzaCh7XG4gICAgZnVsZmlsbGVkOiBmdWxmaWxsZWQsXG4gICAgcmVqZWN0ZWQ6IHJlamVjdGVkXG4gIH0pO1xuICByZXR1cm4gdGhpcy5oYW5kbGVycy5sZW5ndGggLSAxO1xufTtcblxuLyoqXG4gKiBSZW1vdmUgYW4gaW50ZXJjZXB0b3IgZnJvbSB0aGUgc3RhY2tcbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gaWQgVGhlIElEIHRoYXQgd2FzIHJldHVybmVkIGJ5IGB1c2VgXG4gKi9cbkludGVyY2VwdG9yTWFuYWdlci5wcm90b3R5cGUuZWplY3QgPSBmdW5jdGlvbiBlamVjdChpZCkge1xuICBpZiAodGhpcy5oYW5kbGVyc1tpZF0pIHtcbiAgICB0aGlzLmhhbmRsZXJzW2lkXSA9IG51bGw7XG4gIH1cbn07XG5cbi8qKlxuICogSXRlcmF0ZSBvdmVyIGFsbCB0aGUgcmVnaXN0ZXJlZCBpbnRlcmNlcHRvcnNcbiAqXG4gKiBUaGlzIG1ldGhvZCBpcyBwYXJ0aWN1bGFybHkgdXNlZnVsIGZvciBza2lwcGluZyBvdmVyIGFueVxuICogaW50ZXJjZXB0b3JzIHRoYXQgbWF5IGhhdmUgYmVjb21lIGBudWxsYCBjYWxsaW5nIGBlamVjdGAuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gVGhlIGZ1bmN0aW9uIHRvIGNhbGwgZm9yIGVhY2ggaW50ZXJjZXB0b3JcbiAqL1xuSW50ZXJjZXB0b3JNYW5hZ2VyLnByb3RvdHlwZS5mb3JFYWNoID0gZnVuY3Rpb24gZm9yRWFjaChmbikge1xuICB1dGlscy5mb3JFYWNoKHRoaXMuaGFuZGxlcnMsIGZ1bmN0aW9uIGZvckVhY2hIYW5kbGVyKGgpIHtcbiAgICBpZiAoaCAhPT0gbnVsbCkge1xuICAgICAgZm4oaCk7XG4gICAgfVxuICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gSW50ZXJjZXB0b3JNYW5hZ2VyO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaXNBYnNvbHV0ZVVSTCA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTCcpO1xudmFyIGNvbWJpbmVVUkxzID0gcmVxdWlyZSgnLi4vaGVscGVycy9jb21iaW5lVVJMcycpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgVVJMIGJ5IGNvbWJpbmluZyB0aGUgYmFzZVVSTCB3aXRoIHRoZSByZXF1ZXN0ZWRVUkwsXG4gKiBvbmx5IHdoZW4gdGhlIHJlcXVlc3RlZFVSTCBpcyBub3QgYWxyZWFkeSBhbiBhYnNvbHV0ZSBVUkwuXG4gKiBJZiB0aGUgcmVxdWVzdFVSTCBpcyBhYnNvbHV0ZSwgdGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSByZXF1ZXN0ZWRVUkwgdW50b3VjaGVkLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlVVJMIFRoZSBiYXNlIFVSTFxuICogQHBhcmFtIHtzdHJpbmd9IHJlcXVlc3RlZFVSTCBBYnNvbHV0ZSBvciByZWxhdGl2ZSBVUkwgdG8gY29tYmluZVxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGNvbWJpbmVkIGZ1bGwgcGF0aFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJ1aWxkRnVsbFBhdGgoYmFzZVVSTCwgcmVxdWVzdGVkVVJMKSB7XG4gIGlmIChiYXNlVVJMICYmICFpc0Fic29sdXRlVVJMKHJlcXVlc3RlZFVSTCkpIHtcbiAgICByZXR1cm4gY29tYmluZVVSTHMoYmFzZVVSTCwgcmVxdWVzdGVkVVJMKTtcbiAgfVxuICByZXR1cm4gcmVxdWVzdGVkVVJMO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGVuaGFuY2VFcnJvciA9IHJlcXVpcmUoJy4vZW5oYW5jZUVycm9yJyk7XG5cbi8qKlxuICogQ3JlYXRlIGFuIEVycm9yIHdpdGggdGhlIHNwZWNpZmllZCBtZXNzYWdlLCBjb25maWcsIGVycm9yIGNvZGUsIHJlcXVlc3QgYW5kIHJlc3BvbnNlLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIFRoZSBlcnJvciBtZXNzYWdlLlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnLlxuICogQHBhcmFtIHtzdHJpbmd9IFtjb2RlXSBUaGUgZXJyb3IgY29kZSAoZm9yIGV4YW1wbGUsICdFQ09OTkFCT1JURUQnKS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVxdWVzdF0gVGhlIHJlcXVlc3QuXG4gKiBAcGFyYW0ge09iamVjdH0gW3Jlc3BvbnNlXSBUaGUgcmVzcG9uc2UuXG4gKiBAcmV0dXJucyB7RXJyb3J9IFRoZSBjcmVhdGVkIGVycm9yLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNyZWF0ZUVycm9yKG1lc3NhZ2UsIGNvbmZpZywgY29kZSwgcmVxdWVzdCwgcmVzcG9uc2UpIHtcbiAgdmFyIGVycm9yID0gbmV3IEVycm9yKG1lc3NhZ2UpO1xuICByZXR1cm4gZW5oYW5jZUVycm9yKGVycm9yLCBjb25maWcsIGNvZGUsIHJlcXVlc3QsIHJlc3BvbnNlKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciB0cmFuc2Zvcm1EYXRhID0gcmVxdWlyZSgnLi90cmFuc2Zvcm1EYXRhJyk7XG52YXIgaXNDYW5jZWwgPSByZXF1aXJlKCcuLi9jYW5jZWwvaXNDYW5jZWwnKTtcbnZhciBkZWZhdWx0cyA9IHJlcXVpcmUoJy4uL2RlZmF1bHRzJyk7XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuZnVuY3Rpb24gdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpIHtcbiAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbikge1xuICAgIGNvbmZpZy5jYW5jZWxUb2tlbi50aHJvd0lmUmVxdWVzdGVkKCk7XG4gIH1cbn1cblxuLyoqXG4gKiBEaXNwYXRjaCBhIHJlcXVlc3QgdG8gdGhlIHNlcnZlciB1c2luZyB0aGUgY29uZmlndXJlZCBhZGFwdGVyLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZyB0aGF0IGlzIHRvIGJlIHVzZWQgZm9yIHRoZSByZXF1ZXN0XG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gVGhlIFByb21pc2UgdG8gYmUgZnVsZmlsbGVkXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZGlzcGF0Y2hSZXF1ZXN0KGNvbmZpZykge1xuICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgLy8gRW5zdXJlIGhlYWRlcnMgZXhpc3RcbiAgY29uZmlnLmhlYWRlcnMgPSBjb25maWcuaGVhZGVycyB8fCB7fTtcblxuICAvLyBUcmFuc2Zvcm0gcmVxdWVzdCBkYXRhXG4gIGNvbmZpZy5kYXRhID0gdHJhbnNmb3JtRGF0YShcbiAgICBjb25maWcuZGF0YSxcbiAgICBjb25maWcuaGVhZGVycyxcbiAgICBjb25maWcudHJhbnNmb3JtUmVxdWVzdFxuICApO1xuXG4gIC8vIEZsYXR0ZW4gaGVhZGVyc1xuICBjb25maWcuaGVhZGVycyA9IHV0aWxzLm1lcmdlKFxuICAgIGNvbmZpZy5oZWFkZXJzLmNvbW1vbiB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1tjb25maWcubWV0aG9kXSB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1xuICApO1xuXG4gIHV0aWxzLmZvckVhY2goXG4gICAgWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnLCAncG9zdCcsICdwdXQnLCAncGF0Y2gnLCAnY29tbW9uJ10sXG4gICAgZnVuY3Rpb24gY2xlYW5IZWFkZXJDb25maWcobWV0aG9kKSB7XG4gICAgICBkZWxldGUgY29uZmlnLmhlYWRlcnNbbWV0aG9kXTtcbiAgICB9XG4gICk7XG5cbiAgdmFyIGFkYXB0ZXIgPSBjb25maWcuYWRhcHRlciB8fCBkZWZhdWx0cy5hZGFwdGVyO1xuXG4gIHJldHVybiBhZGFwdGVyKGNvbmZpZykudGhlbihmdW5jdGlvbiBvbkFkYXB0ZXJSZXNvbHV0aW9uKHJlc3BvbnNlKSB7XG4gICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgLy8gVHJhbnNmb3JtIHJlc3BvbnNlIGRhdGFcbiAgICByZXNwb25zZS5kYXRhID0gdHJhbnNmb3JtRGF0YShcbiAgICAgIHJlc3BvbnNlLmRhdGEsXG4gICAgICByZXNwb25zZS5oZWFkZXJzLFxuICAgICAgY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlXG4gICAgKTtcblxuICAgIHJldHVybiByZXNwb25zZTtcbiAgfSwgZnVuY3Rpb24gb25BZGFwdGVyUmVqZWN0aW9uKHJlYXNvbikge1xuICAgIGlmICghaXNDYW5jZWwocmVhc29uKSkge1xuICAgICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgICAvLyBUcmFuc2Zvcm0gcmVzcG9uc2UgZGF0YVxuICAgICAgaWYgKHJlYXNvbiAmJiByZWFzb24ucmVzcG9uc2UpIHtcbiAgICAgICAgcmVhc29uLnJlc3BvbnNlLmRhdGEgPSB0cmFuc2Zvcm1EYXRhKFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5kYXRhLFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5oZWFkZXJzLFxuICAgICAgICAgIGNvbmZpZy50cmFuc2Zvcm1SZXNwb25zZVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChyZWFzb24pO1xuICB9KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVXBkYXRlIGFuIEVycm9yIHdpdGggdGhlIHNwZWNpZmllZCBjb25maWcsIGVycm9yIGNvZGUsIGFuZCByZXNwb25zZS5cbiAqXG4gKiBAcGFyYW0ge0Vycm9yfSBlcnJvciBUaGUgZXJyb3IgdG8gdXBkYXRlLlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnLlxuICogQHBhcmFtIHtzdHJpbmd9IFtjb2RlXSBUaGUgZXJyb3IgY29kZSAoZm9yIGV4YW1wbGUsICdFQ09OTkFCT1JURUQnKS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVxdWVzdF0gVGhlIHJlcXVlc3QuXG4gKiBAcGFyYW0ge09iamVjdH0gW3Jlc3BvbnNlXSBUaGUgcmVzcG9uc2UuXG4gKiBAcmV0dXJucyB7RXJyb3J9IFRoZSBlcnJvci5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBlbmhhbmNlRXJyb3IoZXJyb3IsIGNvbmZpZywgY29kZSwgcmVxdWVzdCwgcmVzcG9uc2UpIHtcbiAgZXJyb3IuY29uZmlnID0gY29uZmlnO1xuICBpZiAoY29kZSkge1xuICAgIGVycm9yLmNvZGUgPSBjb2RlO1xuICB9XG5cbiAgZXJyb3IucmVxdWVzdCA9IHJlcXVlc3Q7XG4gIGVycm9yLnJlc3BvbnNlID0gcmVzcG9uc2U7XG4gIGVycm9yLmlzQXhpb3NFcnJvciA9IHRydWU7XG5cbiAgZXJyb3IudG9KU09OID0gZnVuY3Rpb24gdG9KU09OKCkge1xuICAgIHJldHVybiB7XG4gICAgICAvLyBTdGFuZGFyZFxuICAgICAgbWVzc2FnZTogdGhpcy5tZXNzYWdlLFxuICAgICAgbmFtZTogdGhpcy5uYW1lLFxuICAgICAgLy8gTWljcm9zb2Z0XG4gICAgICBkZXNjcmlwdGlvbjogdGhpcy5kZXNjcmlwdGlvbixcbiAgICAgIG51bWJlcjogdGhpcy5udW1iZXIsXG4gICAgICAvLyBNb3ppbGxhXG4gICAgICBmaWxlTmFtZTogdGhpcy5maWxlTmFtZSxcbiAgICAgIGxpbmVOdW1iZXI6IHRoaXMubGluZU51bWJlcixcbiAgICAgIGNvbHVtbk51bWJlcjogdGhpcy5jb2x1bW5OdW1iZXIsXG4gICAgICBzdGFjazogdGhpcy5zdGFjayxcbiAgICAgIC8vIEF4aW9zXG4gICAgICBjb25maWc6IHRoaXMuY29uZmlnLFxuICAgICAgY29kZTogdGhpcy5jb2RlXG4gICAgfTtcbiAgfTtcbiAgcmV0dXJuIGVycm9yO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxuLyoqXG4gKiBDb25maWctc3BlY2lmaWMgbWVyZ2UtZnVuY3Rpb24gd2hpY2ggY3JlYXRlcyBhIG5ldyBjb25maWctb2JqZWN0XG4gKiBieSBtZXJnaW5nIHR3byBjb25maWd1cmF0aW9uIG9iamVjdHMgdG9nZXRoZXIuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZzFcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcyXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBOZXcgb2JqZWN0IHJlc3VsdGluZyBmcm9tIG1lcmdpbmcgY29uZmlnMiB0byBjb25maWcxXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbWVyZ2VDb25maWcoY29uZmlnMSwgY29uZmlnMikge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgY29uZmlnMiA9IGNvbmZpZzIgfHwge307XG4gIHZhciBjb25maWcgPSB7fTtcblxuICB2YXIgdmFsdWVGcm9tQ29uZmlnMktleXMgPSBbJ3VybCcsICdtZXRob2QnLCAnZGF0YSddO1xuICB2YXIgbWVyZ2VEZWVwUHJvcGVydGllc0tleXMgPSBbJ2hlYWRlcnMnLCAnYXV0aCcsICdwcm94eScsICdwYXJhbXMnXTtcbiAgdmFyIGRlZmF1bHRUb0NvbmZpZzJLZXlzID0gW1xuICAgICdiYXNlVVJMJywgJ3RyYW5zZm9ybVJlcXVlc3QnLCAndHJhbnNmb3JtUmVzcG9uc2UnLCAncGFyYW1zU2VyaWFsaXplcicsXG4gICAgJ3RpbWVvdXQnLCAndGltZW91dE1lc3NhZ2UnLCAnd2l0aENyZWRlbnRpYWxzJywgJ2FkYXB0ZXInLCAncmVzcG9uc2VUeXBlJywgJ3hzcmZDb29raWVOYW1lJyxcbiAgICAneHNyZkhlYWRlck5hbWUnLCAnb25VcGxvYWRQcm9ncmVzcycsICdvbkRvd25sb2FkUHJvZ3Jlc3MnLCAnZGVjb21wcmVzcycsXG4gICAgJ21heENvbnRlbnRMZW5ndGgnLCAnbWF4Qm9keUxlbmd0aCcsICdtYXhSZWRpcmVjdHMnLCAndHJhbnNwb3J0JywgJ2h0dHBBZ2VudCcsXG4gICAgJ2h0dHBzQWdlbnQnLCAnY2FuY2VsVG9rZW4nLCAnc29ja2V0UGF0aCcsICdyZXNwb25zZUVuY29kaW5nJ1xuICBdO1xuICB2YXIgZGlyZWN0TWVyZ2VLZXlzID0gWyd2YWxpZGF0ZVN0YXR1cyddO1xuXG4gIGZ1bmN0aW9uIGdldE1lcmdlZFZhbHVlKHRhcmdldCwgc291cmNlKSB7XG4gICAgaWYgKHV0aWxzLmlzUGxhaW5PYmplY3QodGFyZ2V0KSAmJiB1dGlscy5pc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAgIHJldHVybiB1dGlscy5tZXJnZSh0YXJnZXQsIHNvdXJjZSk7XG4gICAgfSBlbHNlIGlmICh1dGlscy5pc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAgIHJldHVybiB1dGlscy5tZXJnZSh7fSwgc291cmNlKTtcbiAgICB9IGVsc2UgaWYgKHV0aWxzLmlzQXJyYXkoc291cmNlKSkge1xuICAgICAgcmV0dXJuIHNvdXJjZS5zbGljZSgpO1xuICAgIH1cbiAgICByZXR1cm4gc291cmNlO1xuICB9XG5cbiAgZnVuY3Rpb24gbWVyZ2VEZWVwUHJvcGVydGllcyhwcm9wKSB7XG4gICAgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChjb25maWcyW3Byb3BdKSkge1xuICAgICAgY29uZmlnW3Byb3BdID0gZ2V0TWVyZ2VkVmFsdWUoY29uZmlnMVtwcm9wXSwgY29uZmlnMltwcm9wXSk7XG4gICAgfSBlbHNlIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMVtwcm9wXSkpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMVtwcm9wXSk7XG4gICAgfVxuICB9XG5cbiAgdXRpbHMuZm9yRWFjaCh2YWx1ZUZyb21Db25maWcyS2V5cywgZnVuY3Rpb24gdmFsdWVGcm9tQ29uZmlnMihwcm9wKSB7XG4gICAgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChjb25maWcyW3Byb3BdKSkge1xuICAgICAgY29uZmlnW3Byb3BdID0gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBjb25maWcyW3Byb3BdKTtcbiAgICB9XG4gIH0pO1xuXG4gIHV0aWxzLmZvckVhY2gobWVyZ2VEZWVwUHJvcGVydGllc0tleXMsIG1lcmdlRGVlcFByb3BlcnRpZXMpO1xuXG4gIHV0aWxzLmZvckVhY2goZGVmYXVsdFRvQ29uZmlnMktleXMsIGZ1bmN0aW9uIGRlZmF1bHRUb0NvbmZpZzIocHJvcCkge1xuICAgIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMltwcm9wXSkpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMltwcm9wXSk7XG4gICAgfSBlbHNlIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMVtwcm9wXSkpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMVtwcm9wXSk7XG4gICAgfVxuICB9KTtcblxuICB1dGlscy5mb3JFYWNoKGRpcmVjdE1lcmdlS2V5cywgZnVuY3Rpb24gbWVyZ2UocHJvcCkge1xuICAgIGlmIChwcm9wIGluIGNvbmZpZzIpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGdldE1lcmdlZFZhbHVlKGNvbmZpZzFbcHJvcF0sIGNvbmZpZzJbcHJvcF0pO1xuICAgIH0gZWxzZSBpZiAocHJvcCBpbiBjb25maWcxKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSBnZXRNZXJnZWRWYWx1ZSh1bmRlZmluZWQsIGNvbmZpZzFbcHJvcF0pO1xuICAgIH1cbiAgfSk7XG5cbiAgdmFyIGF4aW9zS2V5cyA9IHZhbHVlRnJvbUNvbmZpZzJLZXlzXG4gICAgLmNvbmNhdChtZXJnZURlZXBQcm9wZXJ0aWVzS2V5cylcbiAgICAuY29uY2F0KGRlZmF1bHRUb0NvbmZpZzJLZXlzKVxuICAgIC5jb25jYXQoZGlyZWN0TWVyZ2VLZXlzKTtcblxuICB2YXIgb3RoZXJLZXlzID0gT2JqZWN0XG4gICAgLmtleXMoY29uZmlnMSlcbiAgICAuY29uY2F0KE9iamVjdC5rZXlzKGNvbmZpZzIpKVxuICAgIC5maWx0ZXIoZnVuY3Rpb24gZmlsdGVyQXhpb3NLZXlzKGtleSkge1xuICAgICAgcmV0dXJuIGF4aW9zS2V5cy5pbmRleE9mKGtleSkgPT09IC0xO1xuICAgIH0pO1xuXG4gIHV0aWxzLmZvckVhY2gob3RoZXJLZXlzLCBtZXJnZURlZXBQcm9wZXJ0aWVzKTtcblxuICByZXR1cm4gY29uZmlnO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGNyZWF0ZUVycm9yID0gcmVxdWlyZSgnLi9jcmVhdGVFcnJvcicpO1xuXG4vKipcbiAqIFJlc29sdmUgb3IgcmVqZWN0IGEgUHJvbWlzZSBiYXNlZCBvbiByZXNwb25zZSBzdGF0dXMuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVzb2x2ZSBBIGZ1bmN0aW9uIHRoYXQgcmVzb2x2ZXMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZWplY3QgQSBmdW5jdGlvbiB0aGF0IHJlamVjdHMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzcG9uc2UgVGhlIHJlc3BvbnNlLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNldHRsZShyZXNvbHZlLCByZWplY3QsIHJlc3BvbnNlKSB7XG4gIHZhciB2YWxpZGF0ZVN0YXR1cyA9IHJlc3BvbnNlLmNvbmZpZy52YWxpZGF0ZVN0YXR1cztcbiAgaWYgKCFyZXNwb25zZS5zdGF0dXMgfHwgIXZhbGlkYXRlU3RhdHVzIHx8IHZhbGlkYXRlU3RhdHVzKHJlc3BvbnNlLnN0YXR1cykpIHtcbiAgICByZXNvbHZlKHJlc3BvbnNlKTtcbiAgfSBlbHNlIHtcbiAgICByZWplY3QoY3JlYXRlRXJyb3IoXG4gICAgICAnUmVxdWVzdCBmYWlsZWQgd2l0aCBzdGF0dXMgY29kZSAnICsgcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgcmVzcG9uc2UuY29uZmlnLFxuICAgICAgbnVsbCxcbiAgICAgIHJlc3BvbnNlLnJlcXVlc3QsXG4gICAgICByZXNwb25zZVxuICAgICkpO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbi8qKlxuICogVHJhbnNmb3JtIHRoZSBkYXRhIGZvciBhIHJlcXVlc3Qgb3IgYSByZXNwb25zZVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fFN0cmluZ30gZGF0YSBUaGUgZGF0YSB0byBiZSB0cmFuc2Zvcm1lZFxuICogQHBhcmFtIHtBcnJheX0gaGVhZGVycyBUaGUgaGVhZGVycyBmb3IgdGhlIHJlcXVlc3Qgb3IgcmVzcG9uc2VcbiAqIEBwYXJhbSB7QXJyYXl8RnVuY3Rpb259IGZucyBBIHNpbmdsZSBmdW5jdGlvbiBvciBBcnJheSBvZiBmdW5jdGlvbnNcbiAqIEByZXR1cm5zIHsqfSBUaGUgcmVzdWx0aW5nIHRyYW5zZm9ybWVkIGRhdGFcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB0cmFuc2Zvcm1EYXRhKGRhdGEsIGhlYWRlcnMsIGZucykge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgdXRpbHMuZm9yRWFjaChmbnMsIGZ1bmN0aW9uIHRyYW5zZm9ybShmbikge1xuICAgIGRhdGEgPSBmbihkYXRhLCBoZWFkZXJzKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGRhdGE7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG52YXIgbm9ybWFsaXplSGVhZGVyTmFtZSA9IHJlcXVpcmUoJy4vaGVscGVycy9ub3JtYWxpemVIZWFkZXJOYW1lJyk7XG5cbnZhciBERUZBVUxUX0NPTlRFTlRfVFlQRSA9IHtcbiAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnXG59O1xuXG5mdW5jdGlvbiBzZXRDb250ZW50VHlwZUlmVW5zZXQoaGVhZGVycywgdmFsdWUpIHtcbiAgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChoZWFkZXJzKSAmJiB1dGlscy5pc1VuZGVmaW5lZChoZWFkZXJzWydDb250ZW50LVR5cGUnXSkpIHtcbiAgICBoZWFkZXJzWydDb250ZW50LVR5cGUnXSA9IHZhbHVlO1xuICB9XG59XG5cbmZ1bmN0aW9uIGdldERlZmF1bHRBZGFwdGVyKCkge1xuICB2YXIgYWRhcHRlcjtcbiAgaWYgKHR5cGVvZiBYTUxIdHRwUmVxdWVzdCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAvLyBGb3IgYnJvd3NlcnMgdXNlIFhIUiBhZGFwdGVyXG4gICAgYWRhcHRlciA9IHJlcXVpcmUoJy4vYWRhcHRlcnMveGhyJyk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnICYmIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChwcm9jZXNzKSA9PT0gJ1tvYmplY3QgcHJvY2Vzc10nKSB7XG4gICAgLy8gRm9yIG5vZGUgdXNlIEhUVFAgYWRhcHRlclxuICAgIGFkYXB0ZXIgPSByZXF1aXJlKCcuL2FkYXB0ZXJzL2h0dHAnKTtcbiAgfVxuICByZXR1cm4gYWRhcHRlcjtcbn1cblxudmFyIGRlZmF1bHRzID0ge1xuICBhZGFwdGVyOiBnZXREZWZhdWx0QWRhcHRlcigpLFxuXG4gIHRyYW5zZm9ybVJlcXVlc3Q6IFtmdW5jdGlvbiB0cmFuc2Zvcm1SZXF1ZXN0KGRhdGEsIGhlYWRlcnMpIHtcbiAgICBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsICdBY2NlcHQnKTtcbiAgICBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsICdDb250ZW50LVR5cGUnKTtcbiAgICBpZiAodXRpbHMuaXNGb3JtRGF0YShkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNBcnJheUJ1ZmZlcihkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNCdWZmZXIoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzU3RyZWFtKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0ZpbGUoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzQmxvYihkYXRhKVxuICAgICkge1xuICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc0FycmF5QnVmZmVyVmlldyhkYXRhKSkge1xuICAgICAgcmV0dXJuIGRhdGEuYnVmZmVyO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaXNVUkxTZWFyY2hQYXJhbXMoZGF0YSkpIHtcbiAgICAgIHNldENvbnRlbnRUeXBlSWZVbnNldChoZWFkZXJzLCAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkO2NoYXJzZXQ9dXRmLTgnKTtcbiAgICAgIHJldHVybiBkYXRhLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc09iamVjdChkYXRhKSkge1xuICAgICAgc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsICdhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgnKTtcbiAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShkYXRhKTtcbiAgICB9XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1dLFxuXG4gIHRyYW5zZm9ybVJlc3BvbnNlOiBbZnVuY3Rpb24gdHJhbnNmb3JtUmVzcG9uc2UoZGF0YSkge1xuICAgIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGRhdGEgPSBKU09OLnBhcnNlKGRhdGEpO1xuICAgICAgfSBjYXRjaCAoZSkgeyAvKiBJZ25vcmUgKi8gfVxuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbiAgfV0sXG5cbiAgLyoqXG4gICAqIEEgdGltZW91dCBpbiBtaWxsaXNlY29uZHMgdG8gYWJvcnQgYSByZXF1ZXN0LiBJZiBzZXQgdG8gMCAoZGVmYXVsdCkgYVxuICAgKiB0aW1lb3V0IGlzIG5vdCBjcmVhdGVkLlxuICAgKi9cbiAgdGltZW91dDogMCxcblxuICB4c3JmQ29va2llTmFtZTogJ1hTUkYtVE9LRU4nLFxuICB4c3JmSGVhZGVyTmFtZTogJ1gtWFNSRi1UT0tFTicsXG5cbiAgbWF4Q29udGVudExlbmd0aDogLTEsXG4gIG1heEJvZHlMZW5ndGg6IC0xLFxuXG4gIHZhbGlkYXRlU3RhdHVzOiBmdW5jdGlvbiB2YWxpZGF0ZVN0YXR1cyhzdGF0dXMpIHtcbiAgICByZXR1cm4gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDA7XG4gIH1cbn07XG5cbmRlZmF1bHRzLmhlYWRlcnMgPSB7XG4gIGNvbW1vbjoge1xuICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbiwgdGV4dC9wbGFpbiwgKi8qJ1xuICB9XG59O1xuXG51dGlscy5mb3JFYWNoKFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2ROb0RhdGEobWV0aG9kKSB7XG4gIGRlZmF1bHRzLmhlYWRlcnNbbWV0aG9kXSA9IHt9O1xufSk7XG5cbnV0aWxzLmZvckVhY2goWydwb3N0JywgJ3B1dCcsICdwYXRjaCddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kV2l0aERhdGEobWV0aG9kKSB7XG4gIGRlZmF1bHRzLmhlYWRlcnNbbWV0aG9kXSA9IHV0aWxzLm1lcmdlKERFRkFVTFRfQ09OVEVOVF9UWVBFKTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRlZmF1bHRzO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJpbmQoZm4sIHRoaXNBcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXAoKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcmdzW2ldID0gYXJndW1lbnRzW2ldO1xuICAgIH1cbiAgICByZXR1cm4gZm4uYXBwbHkodGhpc0FyZywgYXJncyk7XG4gIH07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbmZ1bmN0aW9uIGVuY29kZSh2YWwpIHtcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudCh2YWwpLlxuICAgIHJlcGxhY2UoLyUzQS9naSwgJzonKS5cbiAgICByZXBsYWNlKC8lMjQvZywgJyQnKS5cbiAgICByZXBsYWNlKC8lMkMvZ2ksICcsJykuXG4gICAgcmVwbGFjZSgvJTIwL2csICcrJykuXG4gICAgcmVwbGFjZSgvJTVCL2dpLCAnWycpLlxuICAgIHJlcGxhY2UoLyU1RC9naSwgJ10nKTtcbn1cblxuLyoqXG4gKiBCdWlsZCBhIFVSTCBieSBhcHBlbmRpbmcgcGFyYW1zIHRvIHRoZSBlbmRcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIFRoZSBiYXNlIG9mIHRoZSB1cmwgKGUuZy4sIGh0dHA6Ly93d3cuZ29vZ2xlLmNvbSlcbiAqIEBwYXJhbSB7b2JqZWN0fSBbcGFyYW1zXSBUaGUgcGFyYW1zIHRvIGJlIGFwcGVuZGVkXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgZm9ybWF0dGVkIHVybFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJ1aWxkVVJMKHVybCwgcGFyYW1zLCBwYXJhbXNTZXJpYWxpemVyKSB7XG4gIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICBpZiAoIXBhcmFtcykge1xuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICB2YXIgc2VyaWFsaXplZFBhcmFtcztcbiAgaWYgKHBhcmFtc1NlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFyYW1zU2VyaWFsaXplcihwYXJhbXMpO1xuICB9IGVsc2UgaWYgKHV0aWxzLmlzVVJMU2VhcmNoUGFyYW1zKHBhcmFtcykpIHtcbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFyYW1zLnRvU3RyaW5nKCk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHBhcnRzID0gW107XG5cbiAgICB1dGlscy5mb3JFYWNoKHBhcmFtcywgZnVuY3Rpb24gc2VyaWFsaXplKHZhbCwga2V5KSB7XG4gICAgICBpZiAodmFsID09PSBudWxsIHx8IHR5cGVvZiB2YWwgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHV0aWxzLmlzQXJyYXkodmFsKSkge1xuICAgICAgICBrZXkgPSBrZXkgKyAnW10nO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFsID0gW3ZhbF07XG4gICAgICB9XG5cbiAgICAgIHV0aWxzLmZvckVhY2godmFsLCBmdW5jdGlvbiBwYXJzZVZhbHVlKHYpIHtcbiAgICAgICAgaWYgKHV0aWxzLmlzRGF0ZSh2KSkge1xuICAgICAgICAgIHYgPSB2LnRvSVNPU3RyaW5nKCk7XG4gICAgICAgIH0gZWxzZSBpZiAodXRpbHMuaXNPYmplY3QodikpIHtcbiAgICAgICAgICB2ID0gSlNPTi5zdHJpbmdpZnkodik7XG4gICAgICAgIH1cbiAgICAgICAgcGFydHMucHVzaChlbmNvZGUoa2V5KSArICc9JyArIGVuY29kZSh2KSk7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJ0cy5qb2luKCcmJyk7XG4gIH1cblxuICBpZiAoc2VyaWFsaXplZFBhcmFtcykge1xuICAgIHZhciBoYXNobWFya0luZGV4ID0gdXJsLmluZGV4T2YoJyMnKTtcbiAgICBpZiAoaGFzaG1hcmtJbmRleCAhPT0gLTEpIHtcbiAgICAgIHVybCA9IHVybC5zbGljZSgwLCBoYXNobWFya0luZGV4KTtcbiAgICB9XG5cbiAgICB1cmwgKz0gKHVybC5pbmRleE9mKCc/JykgPT09IC0xID8gJz8nIDogJyYnKSArIHNlcmlhbGl6ZWRQYXJhbXM7XG4gIH1cblxuICByZXR1cm4gdXJsO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IFVSTCBieSBjb21iaW5pbmcgdGhlIHNwZWNpZmllZCBVUkxzXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGJhc2VVUkwgVGhlIGJhc2UgVVJMXG4gKiBAcGFyYW0ge3N0cmluZ30gcmVsYXRpdmVVUkwgVGhlIHJlbGF0aXZlIFVSTFxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGNvbWJpbmVkIFVSTFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNvbWJpbmVVUkxzKGJhc2VVUkwsIHJlbGF0aXZlVVJMKSB7XG4gIHJldHVybiByZWxhdGl2ZVVSTFxuICAgID8gYmFzZVVSTC5yZXBsYWNlKC9cXC8rJC8sICcnKSArICcvJyArIHJlbGF0aXZlVVJMLnJlcGxhY2UoL15cXC8rLywgJycpXG4gICAgOiBiYXNlVVJMO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChcbiAgdXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSA/XG5cbiAgLy8gU3RhbmRhcmQgYnJvd3NlciBlbnZzIHN1cHBvcnQgZG9jdW1lbnQuY29va2llXG4gICAgKGZ1bmN0aW9uIHN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdyaXRlOiBmdW5jdGlvbiB3cml0ZShuYW1lLCB2YWx1ZSwgZXhwaXJlcywgcGF0aCwgZG9tYWluLCBzZWN1cmUpIHtcbiAgICAgICAgICB2YXIgY29va2llID0gW107XG4gICAgICAgICAgY29va2llLnB1c2gobmFtZSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSkpO1xuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzTnVtYmVyKGV4cGlyZXMpKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgnZXhwaXJlcz0nICsgbmV3IERhdGUoZXhwaXJlcykudG9HTVRTdHJpbmcoKSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKHBhdGgpKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgncGF0aD0nICsgcGF0aCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKGRvbWFpbikpIHtcbiAgICAgICAgICAgIGNvb2tpZS5wdXNoKCdkb21haW49JyArIGRvbWFpbik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHNlY3VyZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgY29va2llLnB1c2goJ3NlY3VyZScpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGRvY3VtZW50LmNvb2tpZSA9IGNvb2tpZS5qb2luKCc7ICcpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHJlYWQ6IGZ1bmN0aW9uIHJlYWQobmFtZSkge1xuICAgICAgICAgIHZhciBtYXRjaCA9IGRvY3VtZW50LmNvb2tpZS5tYXRjaChuZXcgUmVnRXhwKCcoXnw7XFxcXHMqKSgnICsgbmFtZSArICcpPShbXjtdKiknKSk7XG4gICAgICAgICAgcmV0dXJuIChtYXRjaCA/IGRlY29kZVVSSUNvbXBvbmVudChtYXRjaFszXSkgOiBudWxsKTtcbiAgICAgICAgfSxcblxuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZShuYW1lKSB7XG4gICAgICAgICAgdGhpcy53cml0ZShuYW1lLCAnJywgRGF0ZS5ub3coKSAtIDg2NDAwMDAwKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9KSgpIDpcblxuICAvLyBOb24gc3RhbmRhcmQgYnJvd3NlciBlbnYgKHdlYiB3b3JrZXJzLCByZWFjdC1uYXRpdmUpIGxhY2sgbmVlZGVkIHN1cHBvcnQuXG4gICAgKGZ1bmN0aW9uIG5vblN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdyaXRlOiBmdW5jdGlvbiB3cml0ZSgpIHt9LFxuICAgICAgICByZWFkOiBmdW5jdGlvbiByZWFkKCkgeyByZXR1cm4gbnVsbDsgfSxcbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgICAgfTtcbiAgICB9KSgpXG4pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgVGhlIFVSTCB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNBYnNvbHV0ZVVSTCh1cmwpIHtcbiAgLy8gQSBVUkwgaXMgY29uc2lkZXJlZCBhYnNvbHV0ZSBpZiBpdCBiZWdpbnMgd2l0aCBcIjxzY2hlbWU+Oi8vXCIgb3IgXCIvL1wiIChwcm90b2NvbC1yZWxhdGl2ZSBVUkwpLlxuICAvLyBSRkMgMzk4NiBkZWZpbmVzIHNjaGVtZSBuYW1lIGFzIGEgc2VxdWVuY2Ugb2YgY2hhcmFjdGVycyBiZWdpbm5pbmcgd2l0aCBhIGxldHRlciBhbmQgZm9sbG93ZWRcbiAgLy8gYnkgYW55IGNvbWJpbmF0aW9uIG9mIGxldHRlcnMsIGRpZ2l0cywgcGx1cywgcGVyaW9kLCBvciBoeXBoZW4uXG4gIHJldHVybiAvXihbYS16XVthLXpcXGRcXCtcXC1cXC5dKjopP1xcL1xcLy9pLnRlc3QodXJsKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBwYXlsb2FkIGlzIGFuIGVycm9yIHRocm93biBieSBBeGlvc1xuICpcbiAqIEBwYXJhbSB7Kn0gcGF5bG9hZCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIHBheWxvYWQgaXMgYW4gZXJyb3IgdGhyb3duIGJ5IEF4aW9zLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0F4aW9zRXJyb3IocGF5bG9hZCkge1xuICByZXR1cm4gKHR5cGVvZiBwYXlsb2FkID09PSAnb2JqZWN0JykgJiYgKHBheWxvYWQuaXNBeGlvc0Vycm9yID09PSB0cnVlKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAoXG4gIHV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCkgP1xuXG4gIC8vIFN0YW5kYXJkIGJyb3dzZXIgZW52cyBoYXZlIGZ1bGwgc3VwcG9ydCBvZiB0aGUgQVBJcyBuZWVkZWQgdG8gdGVzdFxuICAvLyB3aGV0aGVyIHRoZSByZXF1ZXN0IFVSTCBpcyBvZiB0aGUgc2FtZSBvcmlnaW4gYXMgY3VycmVudCBsb2NhdGlvbi5cbiAgICAoZnVuY3Rpb24gc3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgICAgdmFyIG1zaWUgPSAvKG1zaWV8dHJpZGVudCkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO1xuICAgICAgdmFyIHVybFBhcnNpbmdOb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICAgICAgdmFyIG9yaWdpblVSTDtcblxuICAgICAgLyoqXG4gICAgKiBQYXJzZSBhIFVSTCB0byBkaXNjb3ZlciBpdCdzIGNvbXBvbmVudHNcbiAgICAqXG4gICAgKiBAcGFyYW0ge1N0cmluZ30gdXJsIFRoZSBVUkwgdG8gYmUgcGFyc2VkXG4gICAgKiBAcmV0dXJucyB7T2JqZWN0fVxuICAgICovXG4gICAgICBmdW5jdGlvbiByZXNvbHZlVVJMKHVybCkge1xuICAgICAgICB2YXIgaHJlZiA9IHVybDtcblxuICAgICAgICBpZiAobXNpZSkge1xuICAgICAgICAvLyBJRSBuZWVkcyBhdHRyaWJ1dGUgc2V0IHR3aWNlIHRvIG5vcm1hbGl6ZSBwcm9wZXJ0aWVzXG4gICAgICAgICAgdXJsUGFyc2luZ05vZGUuc2V0QXR0cmlidXRlKCdocmVmJywgaHJlZik7XG4gICAgICAgICAgaHJlZiA9IHVybFBhcnNpbmdOb2RlLmhyZWY7XG4gICAgICAgIH1cblxuICAgICAgICB1cmxQYXJzaW5nTm9kZS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBocmVmKTtcblxuICAgICAgICAvLyB1cmxQYXJzaW5nTm9kZSBwcm92aWRlcyB0aGUgVXJsVXRpbHMgaW50ZXJmYWNlIC0gaHR0cDovL3VybC5zcGVjLndoYXR3Zy5vcmcvI3VybHV0aWxzXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgaHJlZjogdXJsUGFyc2luZ05vZGUuaHJlZixcbiAgICAgICAgICBwcm90b2NvbDogdXJsUGFyc2luZ05vZGUucHJvdG9jb2wgPyB1cmxQYXJzaW5nTm9kZS5wcm90b2NvbC5yZXBsYWNlKC86JC8sICcnKSA6ICcnLFxuICAgICAgICAgIGhvc3Q6IHVybFBhcnNpbmdOb2RlLmhvc3QsXG4gICAgICAgICAgc2VhcmNoOiB1cmxQYXJzaW5nTm9kZS5zZWFyY2ggPyB1cmxQYXJzaW5nTm9kZS5zZWFyY2gucmVwbGFjZSgvXlxcPy8sICcnKSA6ICcnLFxuICAgICAgICAgIGhhc2g6IHVybFBhcnNpbmdOb2RlLmhhc2ggPyB1cmxQYXJzaW5nTm9kZS5oYXNoLnJlcGxhY2UoL14jLywgJycpIDogJycsXG4gICAgICAgICAgaG9zdG5hbWU6IHVybFBhcnNpbmdOb2RlLmhvc3RuYW1lLFxuICAgICAgICAgIHBvcnQ6IHVybFBhcnNpbmdOb2RlLnBvcnQsXG4gICAgICAgICAgcGF0aG5hbWU6ICh1cmxQYXJzaW5nTm9kZS5wYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJykgP1xuICAgICAgICAgICAgdXJsUGFyc2luZ05vZGUucGF0aG5hbWUgOlxuICAgICAgICAgICAgJy8nICsgdXJsUGFyc2luZ05vZGUucGF0aG5hbWVcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgb3JpZ2luVVJMID0gcmVzb2x2ZVVSTCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG5cbiAgICAgIC8qKlxuICAgICogRGV0ZXJtaW5lIGlmIGEgVVJMIHNoYXJlcyB0aGUgc2FtZSBvcmlnaW4gYXMgdGhlIGN1cnJlbnQgbG9jYXRpb25cbiAgICAqXG4gICAgKiBAcGFyYW0ge1N0cmluZ30gcmVxdWVzdFVSTCBUaGUgVVJMIHRvIHRlc3RcbiAgICAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIFVSTCBzaGFyZXMgdGhlIHNhbWUgb3JpZ2luLCBvdGhlcndpc2UgZmFsc2VcbiAgICAqL1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIGlzVVJMU2FtZU9yaWdpbihyZXF1ZXN0VVJMKSB7XG4gICAgICAgIHZhciBwYXJzZWQgPSAodXRpbHMuaXNTdHJpbmcocmVxdWVzdFVSTCkpID8gcmVzb2x2ZVVSTChyZXF1ZXN0VVJMKSA6IHJlcXVlc3RVUkw7XG4gICAgICAgIHJldHVybiAocGFyc2VkLnByb3RvY29sID09PSBvcmlnaW5VUkwucHJvdG9jb2wgJiZcbiAgICAgICAgICAgIHBhcnNlZC5ob3N0ID09PSBvcmlnaW5VUkwuaG9zdCk7XG4gICAgICB9O1xuICAgIH0pKCkgOlxuXG4gIC8vIE5vbiBzdGFuZGFyZCBicm93c2VyIGVudnMgKHdlYiB3b3JrZXJzLCByZWFjdC1uYXRpdmUpIGxhY2sgbmVlZGVkIHN1cHBvcnQuXG4gICAgKGZ1bmN0aW9uIG5vblN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiBpc1VSTFNhbWVPcmlnaW4oKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfTtcbiAgICB9KSgpXG4pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIG5vcm1hbGl6ZUhlYWRlck5hbWUoaGVhZGVycywgbm9ybWFsaXplZE5hbWUpIHtcbiAgdXRpbHMuZm9yRWFjaChoZWFkZXJzLCBmdW5jdGlvbiBwcm9jZXNzSGVhZGVyKHZhbHVlLCBuYW1lKSB7XG4gICAgaWYgKG5hbWUgIT09IG5vcm1hbGl6ZWROYW1lICYmIG5hbWUudG9VcHBlckNhc2UoKSA9PT0gbm9ybWFsaXplZE5hbWUudG9VcHBlckNhc2UoKSkge1xuICAgICAgaGVhZGVyc1tub3JtYWxpemVkTmFtZV0gPSB2YWx1ZTtcbiAgICAgIGRlbGV0ZSBoZWFkZXJzW25hbWVdO1xuICAgIH1cbiAgfSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbi8vIEhlYWRlcnMgd2hvc2UgZHVwbGljYXRlcyBhcmUgaWdub3JlZCBieSBub2RlXG4vLyBjLmYuIGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvaHR0cC5odG1sI2h0dHBfbWVzc2FnZV9oZWFkZXJzXG52YXIgaWdub3JlRHVwbGljYXRlT2YgPSBbXG4gICdhZ2UnLCAnYXV0aG9yaXphdGlvbicsICdjb250ZW50LWxlbmd0aCcsICdjb250ZW50LXR5cGUnLCAnZXRhZycsXG4gICdleHBpcmVzJywgJ2Zyb20nLCAnaG9zdCcsICdpZi1tb2RpZmllZC1zaW5jZScsICdpZi11bm1vZGlmaWVkLXNpbmNlJyxcbiAgJ2xhc3QtbW9kaWZpZWQnLCAnbG9jYXRpb24nLCAnbWF4LWZvcndhcmRzJywgJ3Byb3h5LWF1dGhvcml6YXRpb24nLFxuICAncmVmZXJlcicsICdyZXRyeS1hZnRlcicsICd1c2VyLWFnZW50J1xuXTtcblxuLyoqXG4gKiBQYXJzZSBoZWFkZXJzIGludG8gYW4gb2JqZWN0XG4gKlxuICogYGBgXG4gKiBEYXRlOiBXZWQsIDI3IEF1ZyAyMDE0IDA4OjU4OjQ5IEdNVFxuICogQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uXG4gKiBDb25uZWN0aW9uOiBrZWVwLWFsaXZlXG4gKiBUcmFuc2Zlci1FbmNvZGluZzogY2h1bmtlZFxuICogYGBgXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGhlYWRlcnMgSGVhZGVycyBuZWVkaW5nIHRvIGJlIHBhcnNlZFxuICogQHJldHVybnMge09iamVjdH0gSGVhZGVycyBwYXJzZWQgaW50byBhbiBvYmplY3RcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBwYXJzZUhlYWRlcnMoaGVhZGVycykge1xuICB2YXIgcGFyc2VkID0ge307XG4gIHZhciBrZXk7XG4gIHZhciB2YWw7XG4gIHZhciBpO1xuXG4gIGlmICghaGVhZGVycykgeyByZXR1cm4gcGFyc2VkOyB9XG5cbiAgdXRpbHMuZm9yRWFjaChoZWFkZXJzLnNwbGl0KCdcXG4nKSwgZnVuY3Rpb24gcGFyc2VyKGxpbmUpIHtcbiAgICBpID0gbGluZS5pbmRleE9mKCc6Jyk7XG4gICAga2V5ID0gdXRpbHMudHJpbShsaW5lLnN1YnN0cigwLCBpKSkudG9Mb3dlckNhc2UoKTtcbiAgICB2YWwgPSB1dGlscy50cmltKGxpbmUuc3Vic3RyKGkgKyAxKSk7XG5cbiAgICBpZiAoa2V5KSB7XG4gICAgICBpZiAocGFyc2VkW2tleV0gJiYgaWdub3JlRHVwbGljYXRlT2YuaW5kZXhPZihrZXkpID49IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKGtleSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gKHBhcnNlZFtrZXldID8gcGFyc2VkW2tleV0gOiBbXSkuY29uY2F0KFt2YWxdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gcGFyc2VkW2tleV0gPyBwYXJzZWRba2V5XSArICcsICcgKyB2YWwgOiB2YWw7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gcGFyc2VkO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTeW50YWN0aWMgc3VnYXIgZm9yIGludm9raW5nIGEgZnVuY3Rpb24gYW5kIGV4cGFuZGluZyBhbiBhcnJheSBmb3IgYXJndW1lbnRzLlxuICpcbiAqIENvbW1vbiB1c2UgY2FzZSB3b3VsZCBiZSB0byB1c2UgYEZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseWAuXG4gKlxuICogIGBgYGpzXG4gKiAgZnVuY3Rpb24gZih4LCB5LCB6KSB7fVxuICogIHZhciBhcmdzID0gWzEsIDIsIDNdO1xuICogIGYuYXBwbHkobnVsbCwgYXJncyk7XG4gKiAgYGBgXG4gKlxuICogV2l0aCBgc3ByZWFkYCB0aGlzIGV4YW1wbGUgY2FuIGJlIHJlLXdyaXR0ZW4uXG4gKlxuICogIGBgYGpzXG4gKiAgc3ByZWFkKGZ1bmN0aW9uKHgsIHksIHopIHt9KShbMSwgMiwgM10pO1xuICogIGBgYFxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc3ByZWFkKGNhbGxiYWNrKSB7XG4gIHJldHVybiBmdW5jdGlvbiB3cmFwKGFycikge1xuICAgIHJldHVybiBjYWxsYmFjay5hcHBseShudWxsLCBhcnIpO1xuICB9O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGJpbmQgPSByZXF1aXJlKCcuL2hlbHBlcnMvYmluZCcpO1xuXG4vKmdsb2JhbCB0b1N0cmluZzp0cnVlKi9cblxuLy8gdXRpbHMgaXMgYSBsaWJyYXJ5IG9mIGdlbmVyaWMgaGVscGVyIGZ1bmN0aW9ucyBub24tc3BlY2lmaWMgdG8gYXhpb3NcblxudmFyIHRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhbiBBcnJheVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGFuIEFycmF5LCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNBcnJheSh2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyB1bmRlZmluZWRcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgdmFsdWUgaXMgdW5kZWZpbmVkLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNVbmRlZmluZWQodmFsKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsID09PSAndW5kZWZpbmVkJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIEJ1ZmZlclxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgQnVmZmVyLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNCdWZmZXIodmFsKSB7XG4gIHJldHVybiB2YWwgIT09IG51bGwgJiYgIWlzVW5kZWZpbmVkKHZhbCkgJiYgdmFsLmNvbnN0cnVjdG9yICE9PSBudWxsICYmICFpc1VuZGVmaW5lZCh2YWwuY29uc3RydWN0b3IpXG4gICAgJiYgdHlwZW9mIHZhbC5jb25zdHJ1Y3Rvci5pc0J1ZmZlciA9PT0gJ2Z1bmN0aW9uJyAmJiB2YWwuY29uc3RydWN0b3IuaXNCdWZmZXIodmFsKTtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhbiBBcnJheUJ1ZmZlclxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGFuIEFycmF5QnVmZmVyLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNBcnJheUJ1ZmZlcih2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgQXJyYXlCdWZmZXJdJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIEZvcm1EYXRhXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYW4gRm9ybURhdGEsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0Zvcm1EYXRhKHZhbCkge1xuICByZXR1cm4gKHR5cGVvZiBGb3JtRGF0YSAhPT0gJ3VuZGVmaW5lZCcpICYmICh2YWwgaW5zdGFuY2VvZiBGb3JtRGF0YSk7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSB2aWV3IG9uIGFuIEFycmF5QnVmZmVyXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSB2aWV3IG9uIGFuIEFycmF5QnVmZmVyLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNBcnJheUJ1ZmZlclZpZXcodmFsKSB7XG4gIHZhciByZXN1bHQ7XG4gIGlmICgodHlwZW9mIEFycmF5QnVmZmVyICE9PSAndW5kZWZpbmVkJykgJiYgKEFycmF5QnVmZmVyLmlzVmlldykpIHtcbiAgICByZXN1bHQgPSBBcnJheUJ1ZmZlci5pc1ZpZXcodmFsKTtcbiAgfSBlbHNlIHtcbiAgICByZXN1bHQgPSAodmFsKSAmJiAodmFsLmJ1ZmZlcikgJiYgKHZhbC5idWZmZXIgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcik7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIFN0cmluZ1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgU3RyaW5nLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNTdHJpbmcodmFsKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsID09PSAnc3RyaW5nJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIE51bWJlclxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgTnVtYmVyLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNOdW1iZXIodmFsKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsID09PSAnbnVtYmVyJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhbiBPYmplY3RcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhbiBPYmplY3QsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc09iamVjdCh2YWwpIHtcbiAgcmV0dXJuIHZhbCAhPT0gbnVsbCAmJiB0eXBlb2YgdmFsID09PSAnb2JqZWN0Jztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIHBsYWluIE9iamVjdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm4ge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBwbGFpbiBPYmplY3QsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1BsYWluT2JqZWN0KHZhbCkge1xuICBpZiAodG9TdHJpbmcuY2FsbCh2YWwpICE9PSAnW29iamVjdCBPYmplY3RdJykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBwcm90b3R5cGUgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YodmFsKTtcbiAgcmV0dXJuIHByb3RvdHlwZSA9PT0gbnVsbCB8fCBwcm90b3R5cGUgPT09IE9iamVjdC5wcm90b3R5cGU7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBEYXRlXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBEYXRlLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNEYXRlKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBEYXRlXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBGaWxlXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBGaWxlLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGaWxlKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBGaWxlXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBCbG9iXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBCbG9iLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNCbG9iKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBCbG9iXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBGdW5jdGlvblxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgRnVuY3Rpb24sIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0Z1bmN0aW9uKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBGdW5jdGlvbl0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgU3RyZWFtXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBTdHJlYW0sIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1N0cmVhbSh2YWwpIHtcbiAgcmV0dXJuIGlzT2JqZWN0KHZhbCkgJiYgaXNGdW5jdGlvbih2YWwucGlwZSk7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBVUkxTZWFyY2hQYXJhbXMgb2JqZWN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBVUkxTZWFyY2hQYXJhbXMgb2JqZWN0LCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNVUkxTZWFyY2hQYXJhbXModmFsKSB7XG4gIHJldHVybiB0eXBlb2YgVVJMU2VhcmNoUGFyYW1zICE9PSAndW5kZWZpbmVkJyAmJiB2YWwgaW5zdGFuY2VvZiBVUkxTZWFyY2hQYXJhbXM7XG59XG5cbi8qKlxuICogVHJpbSBleGNlc3Mgd2hpdGVzcGFjZSBvZmYgdGhlIGJlZ2lubmluZyBhbmQgZW5kIG9mIGEgc3RyaW5nXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0ciBUaGUgU3RyaW5nIHRvIHRyaW1cbiAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSBTdHJpbmcgZnJlZWQgb2YgZXhjZXNzIHdoaXRlc3BhY2VcbiAqL1xuZnVuY3Rpb24gdHJpbShzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9eXFxzKi8sICcnKS5yZXBsYWNlKC9cXHMqJC8sICcnKTtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgd2UncmUgcnVubmluZyBpbiBhIHN0YW5kYXJkIGJyb3dzZXIgZW52aXJvbm1lbnRcbiAqXG4gKiBUaGlzIGFsbG93cyBheGlvcyB0byBydW4gaW4gYSB3ZWIgd29ya2VyLCBhbmQgcmVhY3QtbmF0aXZlLlxuICogQm90aCBlbnZpcm9ubWVudHMgc3VwcG9ydCBYTUxIdHRwUmVxdWVzdCwgYnV0IG5vdCBmdWxseSBzdGFuZGFyZCBnbG9iYWxzLlxuICpcbiAqIHdlYiB3b3JrZXJzOlxuICogIHR5cGVvZiB3aW5kb3cgLT4gdW5kZWZpbmVkXG4gKiAgdHlwZW9mIGRvY3VtZW50IC0+IHVuZGVmaW5lZFxuICpcbiAqIHJlYWN0LW5hdGl2ZTpcbiAqICBuYXZpZ2F0b3IucHJvZHVjdCAtPiAnUmVhY3ROYXRpdmUnXG4gKiBuYXRpdmVzY3JpcHRcbiAqICBuYXZpZ2F0b3IucHJvZHVjdCAtPiAnTmF0aXZlU2NyaXB0JyBvciAnTlMnXG4gKi9cbmZ1bmN0aW9uIGlzU3RhbmRhcmRCcm93c2VyRW52KCkge1xuICBpZiAodHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgKG5hdmlnYXRvci5wcm9kdWN0ID09PSAnUmVhY3ROYXRpdmUnIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmF2aWdhdG9yLnByb2R1Y3QgPT09ICdOYXRpdmVTY3JpcHQnIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmF2aWdhdG9yLnByb2R1Y3QgPT09ICdOUycpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiAoXG4gICAgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnXG4gICk7XG59XG5cbi8qKlxuICogSXRlcmF0ZSBvdmVyIGFuIEFycmF5IG9yIGFuIE9iamVjdCBpbnZva2luZyBhIGZ1bmN0aW9uIGZvciBlYWNoIGl0ZW0uXG4gKlxuICogSWYgYG9iamAgaXMgYW4gQXJyYXkgY2FsbGJhY2sgd2lsbCBiZSBjYWxsZWQgcGFzc2luZ1xuICogdGhlIHZhbHVlLCBpbmRleCwgYW5kIGNvbXBsZXRlIGFycmF5IGZvciBlYWNoIGl0ZW0uXG4gKlxuICogSWYgJ29iaicgaXMgYW4gT2JqZWN0IGNhbGxiYWNrIHdpbGwgYmUgY2FsbGVkIHBhc3NpbmdcbiAqIHRoZSB2YWx1ZSwga2V5LCBhbmQgY29tcGxldGUgb2JqZWN0IGZvciBlYWNoIHByb3BlcnR5LlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fEFycmF5fSBvYmogVGhlIG9iamVjdCB0byBpdGVyYXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgY2FsbGJhY2sgdG8gaW52b2tlIGZvciBlYWNoIGl0ZW1cbiAqL1xuZnVuY3Rpb24gZm9yRWFjaChvYmosIGZuKSB7XG4gIC8vIERvbid0IGJvdGhlciBpZiBubyB2YWx1ZSBwcm92aWRlZFxuICBpZiAob2JqID09PSBudWxsIHx8IHR5cGVvZiBvYmogPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gRm9yY2UgYW4gYXJyYXkgaWYgbm90IGFscmVhZHkgc29tZXRoaW5nIGl0ZXJhYmxlXG4gIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0Jykge1xuICAgIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICAgIG9iaiA9IFtvYmpdO1xuICB9XG5cbiAgaWYgKGlzQXJyYXkob2JqKSkge1xuICAgIC8vIEl0ZXJhdGUgb3ZlciBhcnJheSB2YWx1ZXNcbiAgICBmb3IgKHZhciBpID0gMCwgbCA9IG9iai5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIGZuLmNhbGwobnVsbCwgb2JqW2ldLCBpLCBvYmopO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBJdGVyYXRlIG92ZXIgb2JqZWN0IGtleXNcbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkge1xuICAgICAgICBmbi5jYWxsKG51bGwsIG9ialtrZXldLCBrZXksIG9iaik7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogQWNjZXB0cyB2YXJhcmdzIGV4cGVjdGluZyBlYWNoIGFyZ3VtZW50IHRvIGJlIGFuIG9iamVjdCwgdGhlblxuICogaW1tdXRhYmx5IG1lcmdlcyB0aGUgcHJvcGVydGllcyBvZiBlYWNoIG9iamVjdCBhbmQgcmV0dXJucyByZXN1bHQuXG4gKlxuICogV2hlbiBtdWx0aXBsZSBvYmplY3RzIGNvbnRhaW4gdGhlIHNhbWUga2V5IHRoZSBsYXRlciBvYmplY3QgaW5cbiAqIHRoZSBhcmd1bWVudHMgbGlzdCB3aWxsIHRha2UgcHJlY2VkZW5jZS5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYGpzXG4gKiB2YXIgcmVzdWx0ID0gbWVyZ2Uoe2ZvbzogMTIzfSwge2ZvbzogNDU2fSk7XG4gKiBjb25zb2xlLmxvZyhyZXN1bHQuZm9vKTsgLy8gb3V0cHV0cyA0NTZcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmoxIE9iamVjdCB0byBtZXJnZVxuICogQHJldHVybnMge09iamVjdH0gUmVzdWx0IG9mIGFsbCBtZXJnZSBwcm9wZXJ0aWVzXG4gKi9cbmZ1bmN0aW9uIG1lcmdlKC8qIG9iajEsIG9iajIsIG9iajMsIC4uLiAqLykge1xuICB2YXIgcmVzdWx0ID0ge307XG4gIGZ1bmN0aW9uIGFzc2lnblZhbHVlKHZhbCwga2V5KSB7XG4gICAgaWYgKGlzUGxhaW5PYmplY3QocmVzdWx0W2tleV0pICYmIGlzUGxhaW5PYmplY3QodmFsKSkge1xuICAgICAgcmVzdWx0W2tleV0gPSBtZXJnZShyZXN1bHRba2V5XSwgdmFsKTtcbiAgICB9IGVsc2UgaWYgKGlzUGxhaW5PYmplY3QodmFsKSkge1xuICAgICAgcmVzdWx0W2tleV0gPSBtZXJnZSh7fSwgdmFsKTtcbiAgICB9IGVsc2UgaWYgKGlzQXJyYXkodmFsKSkge1xuICAgICAgcmVzdWx0W2tleV0gPSB2YWwuc2xpY2UoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzdWx0W2tleV0gPSB2YWw7XG4gICAgfVxuICB9XG5cbiAgZm9yICh2YXIgaSA9IDAsIGwgPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgZm9yRWFjaChhcmd1bWVudHNbaV0sIGFzc2lnblZhbHVlKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIEV4dGVuZHMgb2JqZWN0IGEgYnkgbXV0YWJseSBhZGRpbmcgdG8gaXQgdGhlIHByb3BlcnRpZXMgb2Ygb2JqZWN0IGIuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGEgVGhlIG9iamVjdCB0byBiZSBleHRlbmRlZFxuICogQHBhcmFtIHtPYmplY3R9IGIgVGhlIG9iamVjdCB0byBjb3B5IHByb3BlcnRpZXMgZnJvbVxuICogQHBhcmFtIHtPYmplY3R9IHRoaXNBcmcgVGhlIG9iamVjdCB0byBiaW5kIGZ1bmN0aW9uIHRvXG4gKiBAcmV0dXJuIHtPYmplY3R9IFRoZSByZXN1bHRpbmcgdmFsdWUgb2Ygb2JqZWN0IGFcbiAqL1xuZnVuY3Rpb24gZXh0ZW5kKGEsIGIsIHRoaXNBcmcpIHtcbiAgZm9yRWFjaChiLCBmdW5jdGlvbiBhc3NpZ25WYWx1ZSh2YWwsIGtleSkge1xuICAgIGlmICh0aGlzQXJnICYmIHR5cGVvZiB2YWwgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGFba2V5XSA9IGJpbmQodmFsLCB0aGlzQXJnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYVtrZXldID0gdmFsO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBhO1xufVxuXG4vKipcbiAqIFJlbW92ZSBieXRlIG9yZGVyIG1hcmtlci4gVGhpcyBjYXRjaGVzIEVGIEJCIEJGICh0aGUgVVRGLTggQk9NKVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBjb250ZW50IHdpdGggQk9NXG4gKiBAcmV0dXJuIHtzdHJpbmd9IGNvbnRlbnQgdmFsdWUgd2l0aG91dCBCT01cbiAqL1xuZnVuY3Rpb24gc3RyaXBCT00oY29udGVudCkge1xuICBpZiAoY29udGVudC5jaGFyQ29kZUF0KDApID09PSAweEZFRkYpIHtcbiAgICBjb250ZW50ID0gY29udGVudC5zbGljZSgxKTtcbiAgfVxuICByZXR1cm4gY29udGVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGlzQXJyYXk6IGlzQXJyYXksXG4gIGlzQXJyYXlCdWZmZXI6IGlzQXJyYXlCdWZmZXIsXG4gIGlzQnVmZmVyOiBpc0J1ZmZlcixcbiAgaXNGb3JtRGF0YTogaXNGb3JtRGF0YSxcbiAgaXNBcnJheUJ1ZmZlclZpZXc6IGlzQXJyYXlCdWZmZXJWaWV3LFxuICBpc1N0cmluZzogaXNTdHJpbmcsXG4gIGlzTnVtYmVyOiBpc051bWJlcixcbiAgaXNPYmplY3Q6IGlzT2JqZWN0LFxuICBpc1BsYWluT2JqZWN0OiBpc1BsYWluT2JqZWN0LFxuICBpc1VuZGVmaW5lZDogaXNVbmRlZmluZWQsXG4gIGlzRGF0ZTogaXNEYXRlLFxuICBpc0ZpbGU6IGlzRmlsZSxcbiAgaXNCbG9iOiBpc0Jsb2IsXG4gIGlzRnVuY3Rpb246IGlzRnVuY3Rpb24sXG4gIGlzU3RyZWFtOiBpc1N0cmVhbSxcbiAgaXNVUkxTZWFyY2hQYXJhbXM6IGlzVVJMU2VhcmNoUGFyYW1zLFxuICBpc1N0YW5kYXJkQnJvd3NlckVudjogaXNTdGFuZGFyZEJyb3dzZXJFbnYsXG4gIGZvckVhY2g6IGZvckVhY2gsXG4gIG1lcmdlOiBtZXJnZSxcbiAgZXh0ZW5kOiBleHRlbmQsXG4gIHRyaW06IHRyaW0sXG4gIHN0cmlwQk9NOiBzdHJpcEJPTVxufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4vKipcbiAqIENvcHlyaWdodCAyMDE1LCBZYWhvbyEgSW5jLlxuICogQ29weXJpZ2h0cyBsaWNlbnNlZCB1bmRlciB0aGUgTmV3IEJTRCBMaWNlbnNlLiBTZWUgdGhlIGFjY29tcGFueWluZyBMSUNFTlNFIGZpbGUgZm9yIHRlcm1zLlxuICovXG52YXIgUkVBQ1RfU1RBVElDUyA9IHtcbiAgY2hpbGRDb250ZXh0VHlwZXM6IHRydWUsXG4gIGNvbnRleHRUeXBlOiB0cnVlLFxuICBjb250ZXh0VHlwZXM6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIGdldERlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM6IHRydWUsXG4gIG1peGluczogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gIG5hbWU6IHRydWUsXG4gIGxlbmd0aDogdHJ1ZSxcbiAgcHJvdG90eXBlOiB0cnVlLFxuICBjYWxsZXI6IHRydWUsXG4gIGNhbGxlZTogdHJ1ZSxcbiAgYXJndW1lbnRzOiB0cnVlLFxuICBhcml0eTogdHJ1ZVxufTtcbnZhciBGT1JXQVJEX1JFRl9TVEFUSUNTID0ge1xuICAnJCR0eXBlb2YnOiB0cnVlLFxuICByZW5kZXI6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZVxufTtcbnZhciBNRU1PX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIGNvbXBhcmU6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcbnZhciBUWVBFX1NUQVRJQ1MgPSB7fTtcblRZUEVfU1RBVElDU1tyZWFjdElzLkZvcndhcmRSZWZdID0gRk9SV0FSRF9SRUZfU1RBVElDUztcblRZUEVfU1RBVElDU1tyZWFjdElzLk1lbW9dID0gTUVNT19TVEFUSUNTO1xuXG5mdW5jdGlvbiBnZXRTdGF0aWNzKGNvbXBvbmVudCkge1xuICAvLyBSZWFjdCB2MTYuMTEgYW5kIGJlbG93XG4gIGlmIChyZWFjdElzLmlzTWVtbyhjb21wb25lbnQpKSB7XG4gICAgcmV0dXJuIE1FTU9fU1RBVElDUztcbiAgfSAvLyBSZWFjdCB2MTYuMTIgYW5kIGFib3ZlXG5cblxuICByZXR1cm4gVFlQRV9TVEFUSUNTW2NvbXBvbmVudFsnJCR0eXBlb2YnXV0gfHwgUkVBQ1RfU1RBVElDUztcbn1cblxudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIGdldE93blByb3BlcnR5TmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG52YXIgb2JqZWN0UHJvdG90eXBlID0gT2JqZWN0LnByb3RvdHlwZTtcbmZ1bmN0aW9uIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgc291cmNlQ29tcG9uZW50LCBibGFja2xpc3QpIHtcbiAgaWYgKHR5cGVvZiBzb3VyY2VDb21wb25lbnQgIT09ICdzdHJpbmcnKSB7XG4gICAgLy8gZG9uJ3QgaG9pc3Qgb3ZlciBzdHJpbmcgKGh0bWwpIGNvbXBvbmVudHNcbiAgICBpZiAob2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICB2YXIgaW5oZXJpdGVkQ29tcG9uZW50ID0gZ2V0UHJvdG90eXBlT2Yoc291cmNlQ29tcG9uZW50KTtcblxuICAgICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIGluaGVyaXRlZENvbXBvbmVudCwgYmxhY2tsaXN0KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIga2V5cyA9IGdldE93blByb3BlcnR5TmFtZXMoc291cmNlQ29tcG9uZW50KTtcblxuICAgIGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICAgIGtleXMgPSBrZXlzLmNvbmNhdChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlQ29tcG9uZW50KSk7XG4gICAgfVxuXG4gICAgdmFyIHRhcmdldFN0YXRpY3MgPSBnZXRTdGF0aWNzKHRhcmdldENvbXBvbmVudCk7XG4gICAgdmFyIHNvdXJjZVN0YXRpY3MgPSBnZXRTdGF0aWNzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuXG4gICAgICBpZiAoIUtOT1dOX1NUQVRJQ1Nba2V5XSAmJiAhKGJsYWNrbGlzdCAmJiBibGFja2xpc3Rba2V5XSkgJiYgIShzb3VyY2VTdGF0aWNzICYmIHNvdXJjZVN0YXRpY3Nba2V5XSkgJiYgISh0YXJnZXRTdGF0aWNzICYmIHRhcmdldFN0YXRpY3Nba2V5XSkpIHtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlQ29tcG9uZW50LCBrZXkpO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgICAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldENvbXBvbmVudCwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhvaXN0Tm9uUmVhY3RTdGF0aWNzO1xuIiwiZnVuY3Rpb24gbihuKXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxyPUFycmF5KHQ+MT90LTE6MCksZT0xO2U8dDtlKyspcltlLTFdPWFyZ3VtZW50c1tlXTtpZihcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WKXt2YXIgaT1ZW25dLG89aT9cImZ1bmN0aW9uXCI9PXR5cGVvZiBpP2kuYXBwbHkobnVsbCxyKTppOlwidW5rbm93biBlcnJvciBucjogXCIrbjt0aHJvdyBFcnJvcihcIltJbW1lcl0gXCIrbyl9dGhyb3cgRXJyb3IoXCJbSW1tZXJdIG1pbmlmaWVkIGVycm9yIG5yOiBcIituKyhyLmxlbmd0aD9cIiBcIityLm1hcCgoZnVuY3Rpb24obil7cmV0dXJuXCInXCIrbitcIidcIn0pKS5qb2luKFwiLFwiKTpcIlwiKStcIi4gRmluZCB0aGUgZnVsbCBlcnJvciBhdDogaHR0cHM6Ly9iaXQubHkvM2NYRUtXZlwiKX1mdW5jdGlvbiB0KG4pe3JldHVybiEhbiYmISFuW1FdfWZ1bmN0aW9uIHIobil7cmV0dXJuISFuJiYoZnVuY3Rpb24obil7aWYoIW58fFwib2JqZWN0XCIhPXR5cGVvZiBuKXJldHVybiExO3ZhciB0PU9iamVjdC5nZXRQcm90b3R5cGVPZihuKTtpZihudWxsPT09dClyZXR1cm4hMDt2YXIgcj1PYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbCh0LFwiY29uc3RydWN0b3JcIikmJnQuY29uc3RydWN0b3I7cmV0dXJuIHI9PT1PYmplY3R8fFwiZnVuY3Rpb25cIj09dHlwZW9mIHImJkZ1bmN0aW9uLnRvU3RyaW5nLmNhbGwocik9PT1afShuKXx8QXJyYXkuaXNBcnJheShuKXx8ISFuW0xdfHwhIW4uY29uc3RydWN0b3JbTF18fHMobil8fHYobikpfWZ1bmN0aW9uIGUocil7cmV0dXJuIHQocil8fG4oMjMscikscltRXS50fWZ1bmN0aW9uIGkobix0LHIpe3ZvaWQgMD09PXImJihyPSExKSwwPT09byhuKT8ocj9PYmplY3Qua2V5czpubikobikuZm9yRWFjaCgoZnVuY3Rpb24oZSl7ciYmXCJzeW1ib2xcIj09dHlwZW9mIGV8fHQoZSxuW2VdLG4pfSkpOm4uZm9yRWFjaCgoZnVuY3Rpb24ocixlKXtyZXR1cm4gdChlLHIsbil9KSl9ZnVuY3Rpb24gbyhuKXt2YXIgdD1uW1FdO3JldHVybiB0P3QuaT4zP3QuaS00OnQuaTpBcnJheS5pc0FycmF5KG4pPzE6cyhuKT8yOnYobik/MzowfWZ1bmN0aW9uIHUobix0KXtyZXR1cm4gMj09PW8obik/bi5oYXModCk6T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4sdCl9ZnVuY3Rpb24gYShuLHQpe3JldHVybiAyPT09byhuKT9uLmdldCh0KTpuW3RdfWZ1bmN0aW9uIGYobix0LHIpe3ZhciBlPW8obik7Mj09PWU/bi5zZXQodCxyKTozPT09ZT8obi5kZWxldGUodCksbi5hZGQocikpOm5bdF09cn1mdW5jdGlvbiBjKG4sdCl7cmV0dXJuIG49PT10PzAhPT1ufHwxL249PTEvdDpuIT1uJiZ0IT10fWZ1bmN0aW9uIHMobil7cmV0dXJuIFgmJm4gaW5zdGFuY2VvZiBNYXB9ZnVuY3Rpb24gdihuKXtyZXR1cm4gcSYmbiBpbnN0YW5jZW9mIFNldH1mdW5jdGlvbiBwKG4pe3JldHVybiBuLm98fG4udH1mdW5jdGlvbiBsKG4pe2lmKEFycmF5LmlzQXJyYXkobikpcmV0dXJuIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKG4pO3ZhciB0PXRuKG4pO2RlbGV0ZSB0W1FdO2Zvcih2YXIgcj1ubih0KSxlPTA7ZTxyLmxlbmd0aDtlKyspe3ZhciBpPXJbZV0sbz10W2ldOyExPT09by53cml0YWJsZSYmKG8ud3JpdGFibGU9ITAsby5jb25maWd1cmFibGU9ITApLChvLmdldHx8by5zZXQpJiYodFtpXT17Y29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLGVudW1lcmFibGU6by5lbnVtZXJhYmxlLHZhbHVlOm5baV19KX1yZXR1cm4gT2JqZWN0LmNyZWF0ZShPYmplY3QuZ2V0UHJvdG90eXBlT2YobiksdCl9ZnVuY3Rpb24gZChuLGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT0hMSkseShuKXx8dChuKXx8IXIobik/bjoobyhuKT4xJiYobi5zZXQ9bi5hZGQ9bi5jbGVhcj1uLmRlbGV0ZT1oKSxPYmplY3QuZnJlZXplKG4pLGUmJmkobiwoZnVuY3Rpb24obix0KXtyZXR1cm4gZCh0LCEwKX0pLCEwKSxuKX1mdW5jdGlvbiBoKCl7bigyKX1mdW5jdGlvbiB5KG4pe3JldHVybiBudWxsPT1ufHxcIm9iamVjdFwiIT10eXBlb2Ygbnx8T2JqZWN0LmlzRnJvemVuKG4pfWZ1bmN0aW9uIGIodCl7dmFyIHI9cm5bdF07cmV0dXJuIHJ8fG4oMTgsdCkscn1mdW5jdGlvbiBtKG4sdCl7cm5bbl18fChybltuXT10KX1mdW5jdGlvbiBfKCl7cmV0dXJuXCJwcm9kdWN0aW9uXCI9PT1wcm9jZXNzLmVudi5OT0RFX0VOVnx8VXx8bigwKSxVfWZ1bmN0aW9uIGoobix0KXt0JiYoYihcIlBhdGNoZXNcIiksbi51PVtdLG4ucz1bXSxuLnY9dCl9ZnVuY3Rpb24gTyhuKXtnKG4pLG4ucC5mb3JFYWNoKFMpLG4ucD1udWxsfWZ1bmN0aW9uIGcobil7bj09PVUmJihVPW4ubCl9ZnVuY3Rpb24gdyhuKXtyZXR1cm4gVT17cDpbXSxsOlUsaDpuLG06ITAsXzowfX1mdW5jdGlvbiBTKG4pe3ZhciB0PW5bUV07MD09PXQuaXx8MT09PXQuaT90LmooKTp0Lk89ITB9ZnVuY3Rpb24gUCh0LGUpe2UuXz1lLnAubGVuZ3RoO3ZhciBpPWUucFswXSxvPXZvaWQgMCE9PXQmJnQhPT1pO3JldHVybiBlLmguZ3x8YihcIkVTNVwiKS5TKGUsdCxvKSxvPyhpW1FdLlAmJihPKGUpLG4oNCkpLHIodCkmJih0PU0oZSx0KSxlLmx8fHgoZSx0KSksZS51JiZiKFwiUGF0Y2hlc1wiKS5NKGlbUV0sdCxlLnUsZS5zKSk6dD1NKGUsaSxbXSksTyhlKSxlLnUmJmUudihlLnUsZS5zKSx0IT09SD90OnZvaWQgMH1mdW5jdGlvbiBNKG4sdCxyKXtpZih5KHQpKXJldHVybiB0O3ZhciBlPXRbUV07aWYoIWUpcmV0dXJuIGkodCwoZnVuY3Rpb24oaSxvKXtyZXR1cm4gQShuLGUsdCxpLG8scil9KSwhMCksdDtpZihlLkEhPT1uKXJldHVybiB0O2lmKCFlLlApcmV0dXJuIHgobixlLnQsITApLGUudDtpZighZS5JKXtlLkk9ITAsZS5BLl8tLTt2YXIgbz00PT09ZS5pfHw1PT09ZS5pP2Uubz1sKGUuayk6ZS5vO2koMz09PWUuaT9uZXcgU2V0KG8pOm8sKGZ1bmN0aW9uKHQsaSl7cmV0dXJuIEEobixlLG8sdCxpLHIpfSkpLHgobixvLCExKSxyJiZuLnUmJmIoXCJQYXRjaGVzXCIpLlIoZSxyLG4udSxuLnMpfXJldHVybiBlLm99ZnVuY3Rpb24gQShlLGksbyxhLGMscyl7aWYoXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmYz09PW8mJm4oNSksdChjKSl7dmFyIHY9TShlLGMscyYmaSYmMyE9PWkuaSYmIXUoaS5ELGEpP3MuY29uY2F0KGEpOnZvaWQgMCk7aWYoZihvLGEsdiksIXQodikpcmV0dXJuO2UubT0hMX1pZihyKGMpJiYheShjKSl7aWYoIWUuaC5GJiZlLl88MSlyZXR1cm47TShlLGMpLGkmJmkuQS5sfHx4KGUsYyl9fWZ1bmN0aW9uIHgobix0LHIpe3ZvaWQgMD09PXImJihyPSExKSxuLmguRiYmbi5tJiZkKHQscil9ZnVuY3Rpb24geihuLHQpe3ZhciByPW5bUV07cmV0dXJuKHI/cChyKTpuKVt0XX1mdW5jdGlvbiBJKG4sdCl7aWYodCBpbiBuKWZvcih2YXIgcj1PYmplY3QuZ2V0UHJvdG90eXBlT2Yobik7cjspe3ZhciBlPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iocix0KTtpZihlKXJldHVybiBlO3I9T2JqZWN0LmdldFByb3RvdHlwZU9mKHIpfX1mdW5jdGlvbiBrKG4pe24uUHx8KG4uUD0hMCxuLmwmJmsobi5sKSl9ZnVuY3Rpb24gRShuKXtuLm98fChuLm89bChuLnQpKX1mdW5jdGlvbiBSKG4sdCxyKXt2YXIgZT1zKHQpP2IoXCJNYXBTZXRcIikuTih0LHIpOnYodCk/YihcIk1hcFNldFwiKS5UKHQscik6bi5nP2Z1bmN0aW9uKG4sdCl7dmFyIHI9QXJyYXkuaXNBcnJheShuKSxlPXtpOnI/MTowLEE6dD90LkE6XygpLFA6ITEsSTohMSxEOnt9LGw6dCx0Om4sazpudWxsLG86bnVsbCxqOm51bGwsQzohMX0saT1lLG89ZW47ciYmKGk9W2VdLG89b24pO3ZhciB1PVByb3h5LnJldm9jYWJsZShpLG8pLGE9dS5yZXZva2UsZj11LnByb3h5O3JldHVybiBlLms9ZixlLmo9YSxmfSh0LHIpOmIoXCJFUzVcIikuSih0LHIpO3JldHVybihyP3IuQTpfKCkpLnAucHVzaChlKSxlfWZ1bmN0aW9uIEQoZSl7cmV0dXJuIHQoZSl8fG4oMjIsZSksZnVuY3Rpb24gbih0KXtpZighcih0KSlyZXR1cm4gdDt2YXIgZSx1PXRbUV0sYz1vKHQpO2lmKHUpe2lmKCF1LlAmJih1Lmk8NHx8IWIoXCJFUzVcIikuSyh1KSkpcmV0dXJuIHUudDt1Lkk9ITAsZT1GKHQsYyksdS5JPSExfWVsc2UgZT1GKHQsYyk7cmV0dXJuIGkoZSwoZnVuY3Rpb24odCxyKXt1JiZhKHUudCx0KT09PXJ8fGYoZSx0LG4ocikpfSkpLDM9PT1jP25ldyBTZXQoZSk6ZX0oZSl9ZnVuY3Rpb24gRihuLHQpe3N3aXRjaCh0KXtjYXNlIDI6cmV0dXJuIG5ldyBNYXAobik7Y2FzZSAzOnJldHVybiBBcnJheS5mcm9tKG4pfXJldHVybiBsKG4pfWZ1bmN0aW9uIE4oKXtmdW5jdGlvbiByKG4sdCl7dmFyIHI9c1tuXTtyZXR1cm4gcj9yLmVudW1lcmFibGU9dDpzW25dPXI9e2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOnQsZ2V0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpc1tRXTtyZXR1cm5cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZmKHQpLGVuLmdldCh0LG4pfSxzZXQ6ZnVuY3Rpb24odCl7dmFyIHI9dGhpc1tRXTtcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZmKHIpLGVuLnNldChyLG4sdCl9fSxyfWZ1bmN0aW9uIGUobil7Zm9yKHZhciB0PW4ubGVuZ3RoLTE7dD49MDt0LS0pe3ZhciByPW5bdF1bUV07aWYoIXIuUClzd2l0Y2goci5pKXtjYXNlIDU6YShyKSYmayhyKTticmVhaztjYXNlIDQ6byhyKSYmayhyKX19fWZ1bmN0aW9uIG8obil7Zm9yKHZhciB0PW4udCxyPW4uayxlPW5uKHIpLGk9ZS5sZW5ndGgtMTtpPj0wO2ktLSl7dmFyIG89ZVtpXTtpZihvIT09USl7dmFyIGE9dFtvXTtpZih2b2lkIDA9PT1hJiYhdSh0LG8pKXJldHVybiEwO3ZhciBmPXJbb10scz1mJiZmW1FdO2lmKHM/cy50IT09YTohYyhmLGEpKXJldHVybiEwfX12YXIgdj0hIXRbUV07cmV0dXJuIGUubGVuZ3RoIT09bm4odCkubGVuZ3RoKyh2PzA6MSl9ZnVuY3Rpb24gYShuKXt2YXIgdD1uLms7aWYodC5sZW5ndGghPT1uLnQubGVuZ3RoKXJldHVybiEwO3ZhciByPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCx0Lmxlbmd0aC0xKTtyZXR1cm4hKCFyfHxyLmdldCl9ZnVuY3Rpb24gZih0KXt0Lk8mJm4oMyxKU09OLnN0cmluZ2lmeShwKHQpKSl9dmFyIHM9e307bShcIkVTNVwiLHtKOmZ1bmN0aW9uKG4sdCl7dmFyIGU9QXJyYXkuaXNBcnJheShuKSxpPWZ1bmN0aW9uKG4sdCl7aWYobil7Zm9yKHZhciBlPUFycmF5KHQubGVuZ3RoKSxpPTA7aTx0Lmxlbmd0aDtpKyspT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJcIitpLHIoaSwhMCkpO3JldHVybiBlfXZhciBvPXRuKHQpO2RlbGV0ZSBvW1FdO2Zvcih2YXIgdT1ubihvKSxhPTA7YTx1Lmxlbmd0aDthKyspe3ZhciBmPXVbYV07b1tmXT1yKGYsbnx8ISFvW2ZdLmVudW1lcmFibGUpfXJldHVybiBPYmplY3QuY3JlYXRlKE9iamVjdC5nZXRQcm90b3R5cGVPZih0KSxvKX0oZSxuKSxvPXtpOmU/NTo0LEE6dD90LkE6XygpLFA6ITEsSTohMSxEOnt9LGw6dCx0Om4sazppLG86bnVsbCxPOiExLEM6ITF9O3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoaSxRLHt2YWx1ZTpvLHdyaXRhYmxlOiEwfSksaX0sUzpmdW5jdGlvbihuLHIsbyl7bz90KHIpJiZyW1FdLkE9PT1uJiZlKG4ucCk6KG4udSYmZnVuY3Rpb24gbih0KXtpZih0JiZcIm9iamVjdFwiPT10eXBlb2YgdCl7dmFyIHI9dFtRXTtpZihyKXt2YXIgZT1yLnQsbz1yLmssZj1yLkQsYz1yLmk7aWYoND09PWMpaShvLChmdW5jdGlvbih0KXt0IT09USYmKHZvaWQgMCE9PWVbdF18fHUoZSx0KT9mW3RdfHxuKG9bdF0pOihmW3RdPSEwLGsocikpKX0pKSxpKGUsKGZ1bmN0aW9uKG4pe3ZvaWQgMCE9PW9bbl18fHUobyxuKXx8KGZbbl09ITEsayhyKSl9KSk7ZWxzZSBpZig1PT09Yyl7aWYoYShyKSYmKGsociksZi5sZW5ndGg9ITApLG8ubGVuZ3RoPGUubGVuZ3RoKWZvcih2YXIgcz1vLmxlbmd0aDtzPGUubGVuZ3RoO3MrKylmW3NdPSExO2Vsc2UgZm9yKHZhciB2PWUubGVuZ3RoO3Y8by5sZW5ndGg7disrKWZbdl09ITA7Zm9yKHZhciBwPU1hdGgubWluKG8ubGVuZ3RoLGUubGVuZ3RoKSxsPTA7bDxwO2wrKyl2b2lkIDA9PT1mW2xdJiZuKG9bbF0pfX19fShuLnBbMF0pLGUobi5wKSl9LEs6ZnVuY3Rpb24obil7cmV0dXJuIDQ9PT1uLmk/byhuKTphKG4pfX0pfWZ1bmN0aW9uIFQoKXtmdW5jdGlvbiBlKG4pe2lmKCFyKG4pKXJldHVybiBuO2lmKEFycmF5LmlzQXJyYXkobikpcmV0dXJuIG4ubWFwKGUpO2lmKHMobikpcmV0dXJuIG5ldyBNYXAoQXJyYXkuZnJvbShuLmVudHJpZXMoKSkubWFwKChmdW5jdGlvbihuKXtyZXR1cm5bblswXSxlKG5bMV0pXX0pKSk7aWYodihuKSlyZXR1cm4gbmV3IFNldChBcnJheS5mcm9tKG4pLm1hcChlKSk7dmFyIHQ9T2JqZWN0LmNyZWF0ZShPYmplY3QuZ2V0UHJvdG90eXBlT2YobikpO2Zvcih2YXIgaSBpbiBuKXRbaV09ZShuW2ldKTtyZXR1cm4gdShuLEwpJiYodFtMXT1uW0xdKSx0fWZ1bmN0aW9uIGYobil7cmV0dXJuIHQobik/ZShuKTpufXZhciBjPVwiYWRkXCI7bShcIlBhdGNoZXNcIix7JDpmdW5jdGlvbih0LHIpe3JldHVybiByLmZvckVhY2goKGZ1bmN0aW9uKHIpe2Zvcih2YXIgaT1yLnBhdGgsdT1yLm9wLGY9dCxzPTA7czxpLmxlbmd0aC0xO3MrKyl7dmFyIHY9byhmKSxwPWlbc107MCE9PXYmJjEhPT12fHxcIl9fcHJvdG9fX1wiIT09cCYmXCJjb25zdHJ1Y3RvclwiIT09cHx8bigyNCksXCJmdW5jdGlvblwiPT10eXBlb2YgZiYmXCJwcm90b3R5cGVcIj09PXAmJm4oMjQpLFwib2JqZWN0XCIhPXR5cGVvZihmPWEoZixwKSkmJm4oMTUsaS5qb2luKFwiL1wiKSl9dmFyIGw9byhmKSxkPWUoci52YWx1ZSksaD1pW2kubGVuZ3RoLTFdO3N3aXRjaCh1KXtjYXNlXCJyZXBsYWNlXCI6c3dpdGNoKGwpe2Nhc2UgMjpyZXR1cm4gZi5zZXQoaCxkKTtjYXNlIDM6bigxNik7ZGVmYXVsdDpyZXR1cm4gZltoXT1kfWNhc2UgYzpzd2l0Y2gobCl7Y2FzZSAxOnJldHVybiBmLnNwbGljZShoLDAsZCk7Y2FzZSAyOnJldHVybiBmLnNldChoLGQpO2Nhc2UgMzpyZXR1cm4gZi5hZGQoZCk7ZGVmYXVsdDpyZXR1cm4gZltoXT1kfWNhc2VcInJlbW92ZVwiOnN3aXRjaChsKXtjYXNlIDE6cmV0dXJuIGYuc3BsaWNlKGgsMSk7Y2FzZSAyOnJldHVybiBmLmRlbGV0ZShoKTtjYXNlIDM6cmV0dXJuIGYuZGVsZXRlKHIudmFsdWUpO2RlZmF1bHQ6cmV0dXJuIGRlbGV0ZSBmW2hdfWRlZmF1bHQ6bigxNyx1KX19KSksdH0sUjpmdW5jdGlvbihuLHQscixlKXtzd2l0Y2gobi5pKXtjYXNlIDA6Y2FzZSA0OmNhc2UgMjpyZXR1cm4gZnVuY3Rpb24obix0LHIsZSl7dmFyIG89bi50LHM9bi5vO2kobi5ELChmdW5jdGlvbihuLGkpe3ZhciB2PWEobyxuKSxwPWEocyxuKSxsPWk/dShvLG4pP1wicmVwbGFjZVwiOmM6XCJyZW1vdmVcIjtpZih2IT09cHx8XCJyZXBsYWNlXCIhPT1sKXt2YXIgZD10LmNvbmNhdChuKTtyLnB1c2goXCJyZW1vdmVcIj09PWw/e29wOmwscGF0aDpkfTp7b3A6bCxwYXRoOmQsdmFsdWU6cH0pLGUucHVzaChsPT09Yz97b3A6XCJyZW1vdmVcIixwYXRoOmR9OlwicmVtb3ZlXCI9PT1sP3tvcDpjLHBhdGg6ZCx2YWx1ZTpmKHYpfTp7b3A6XCJyZXBsYWNlXCIscGF0aDpkLHZhbHVlOmYodil9KX19KSl9KG4sdCxyLGUpO2Nhc2UgNTpjYXNlIDE6cmV0dXJuIGZ1bmN0aW9uKG4sdCxyLGUpe3ZhciBpPW4udCxvPW4uRCx1PW4ubztpZih1Lmxlbmd0aDxpLmxlbmd0aCl7dmFyIGE9W3UsaV07aT1hWzBdLHU9YVsxXTt2YXIgcz1bZSxyXTtyPXNbMF0sZT1zWzFdfWZvcih2YXIgdj0wO3Y8aS5sZW5ndGg7disrKWlmKG9bdl0mJnVbdl0hPT1pW3ZdKXt2YXIgcD10LmNvbmNhdChbdl0pO3IucHVzaCh7b3A6XCJyZXBsYWNlXCIscGF0aDpwLHZhbHVlOmYodVt2XSl9KSxlLnB1c2goe29wOlwicmVwbGFjZVwiLHBhdGg6cCx2YWx1ZTpmKGlbdl0pfSl9Zm9yKHZhciBsPWkubGVuZ3RoO2w8dS5sZW5ndGg7bCsrKXt2YXIgZD10LmNvbmNhdChbbF0pO3IucHVzaCh7b3A6YyxwYXRoOmQsdmFsdWU6Zih1W2xdKX0pfWkubGVuZ3RoPHUubGVuZ3RoJiZlLnB1c2goe29wOlwicmVwbGFjZVwiLHBhdGg6dC5jb25jYXQoW1wibGVuZ3RoXCJdKSx2YWx1ZTppLmxlbmd0aH0pfShuLHQscixlKTtjYXNlIDM6cmV0dXJuIGZ1bmN0aW9uKG4sdCxyLGUpe3ZhciBpPW4udCxvPW4ubyx1PTA7aS5mb3JFYWNoKChmdW5jdGlvbihuKXtpZighby5oYXMobikpe3ZhciBpPXQuY29uY2F0KFt1XSk7ci5wdXNoKHtvcDpcInJlbW92ZVwiLHBhdGg6aSx2YWx1ZTpufSksZS51bnNoaWZ0KHtvcDpjLHBhdGg6aSx2YWx1ZTpufSl9dSsrfSkpLHU9MCxvLmZvckVhY2goKGZ1bmN0aW9uKG4pe2lmKCFpLmhhcyhuKSl7dmFyIG89dC5jb25jYXQoW3VdKTtyLnB1c2goe29wOmMscGF0aDpvLHZhbHVlOm59KSxlLnVuc2hpZnQoe29wOlwicmVtb3ZlXCIscGF0aDpvLHZhbHVlOm59KX11Kyt9KSl9KG4sdCxyLGUpfX0sTTpmdW5jdGlvbihuLHQscixlKXtyLnB1c2goe29wOlwicmVwbGFjZVwiLHBhdGg6W10sdmFsdWU6dD09PUg/dm9pZCAwOnR9KSxlLnB1c2goe29wOlwicmVwbGFjZVwiLHBhdGg6W10sdmFsdWU6bi50fSl9fSl9ZnVuY3Rpb24gQygpe2Z1bmN0aW9uIHQobix0KXtmdW5jdGlvbiByKCl7dGhpcy5jb25zdHJ1Y3Rvcj1ufWEobix0KSxuLnByb3RvdHlwZT0oci5wcm90b3R5cGU9dC5wcm90b3R5cGUsbmV3IHIpfWZ1bmN0aW9uIGUobil7bi5vfHwobi5EPW5ldyBNYXAsbi5vPW5ldyBNYXAobi50KSl9ZnVuY3Rpb24gbyhuKXtuLm98fChuLm89bmV3IFNldCxuLnQuZm9yRWFjaCgoZnVuY3Rpb24odCl7aWYocih0KSl7dmFyIGU9UihuLkEuaCx0LG4pO24ucC5zZXQodCxlKSxuLm8uYWRkKGUpfWVsc2Ugbi5vLmFkZCh0KX0pKSl9ZnVuY3Rpb24gdSh0KXt0Lk8mJm4oMyxKU09OLnN0cmluZ2lmeShwKHQpKSl9dmFyIGE9ZnVuY3Rpb24obix0KXtyZXR1cm4oYT1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24obix0KXtuLl9fcHJvdG9fXz10fXx8ZnVuY3Rpb24obix0KXtmb3IodmFyIHIgaW4gdCl0Lmhhc093blByb3BlcnR5KHIpJiYobltyXT10W3JdKX0pKG4sdCl9LGY9ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKG4sdCl7cmV0dXJuIHRoaXNbUV09e2k6MixsOnQsQTp0P3QuQTpfKCksUDohMSxJOiExLG86dm9pZCAwLEQ6dm9pZCAwLHQ6bixrOnRoaXMsQzohMSxPOiExfSx0aGlzfXQobixNYXApO3ZhciBvPW4ucHJvdG90eXBlO3JldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkobyxcInNpemVcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHAodGhpc1tRXSkuc2l6ZX19KSxvLmhhcz1mdW5jdGlvbihuKXtyZXR1cm4gcCh0aGlzW1FdKS5oYXMobil9LG8uc2V0PWZ1bmN0aW9uKG4sdCl7dmFyIHI9dGhpc1tRXTtyZXR1cm4gdShyKSxwKHIpLmhhcyhuKSYmcChyKS5nZXQobik9PT10fHwoZShyKSxrKHIpLHIuRC5zZXQobiwhMCksci5vLnNldChuLHQpLHIuRC5zZXQobiwhMCkpLHRoaXN9LG8uZGVsZXRlPWZ1bmN0aW9uKG4pe2lmKCF0aGlzLmhhcyhuKSlyZXR1cm4hMTt2YXIgdD10aGlzW1FdO3JldHVybiB1KHQpLGUodCksayh0KSx0LkQuc2V0KG4sITEpLHQuby5kZWxldGUobiksITB9LG8uY2xlYXI9ZnVuY3Rpb24oKXt2YXIgbj10aGlzW1FdO3UobikscChuKS5zaXplJiYoZShuKSxrKG4pLG4uRD1uZXcgTWFwLGkobi50LChmdW5jdGlvbih0KXtuLkQuc2V0KHQsITEpfSkpLG4uby5jbGVhcigpKX0sby5mb3JFYWNoPWZ1bmN0aW9uKG4sdCl7dmFyIHI9dGhpcztwKHRoaXNbUV0pLmZvckVhY2goKGZ1bmN0aW9uKGUsaSl7bi5jYWxsKHQsci5nZXQoaSksaSxyKX0pKX0sby5nZXQ9ZnVuY3Rpb24obil7dmFyIHQ9dGhpc1tRXTt1KHQpO3ZhciBpPXAodCkuZ2V0KG4pO2lmKHQuSXx8IXIoaSkpcmV0dXJuIGk7aWYoaSE9PXQudC5nZXQobikpcmV0dXJuIGk7dmFyIG89Uih0LkEuaCxpLHQpO3JldHVybiBlKHQpLHQuby5zZXQobixvKSxvfSxvLmtleXM9ZnVuY3Rpb24oKXtyZXR1cm4gcCh0aGlzW1FdKS5rZXlzKCl9LG8udmFsdWVzPWZ1bmN0aW9uKCl7dmFyIG4sdD10aGlzLHI9dGhpcy5rZXlzKCk7cmV0dXJuKG49e30pW1ZdPWZ1bmN0aW9uKCl7cmV0dXJuIHQudmFsdWVzKCl9LG4ubmV4dD1mdW5jdGlvbigpe3ZhciBuPXIubmV4dCgpO3JldHVybiBuLmRvbmU/bjp7ZG9uZTohMSx2YWx1ZTp0LmdldChuLnZhbHVlKX19LG59LG8uZW50cmllcz1mdW5jdGlvbigpe3ZhciBuLHQ9dGhpcyxyPXRoaXMua2V5cygpO3JldHVybihuPXt9KVtWXT1mdW5jdGlvbigpe3JldHVybiB0LmVudHJpZXMoKX0sbi5uZXh0PWZ1bmN0aW9uKCl7dmFyIG49ci5uZXh0KCk7aWYobi5kb25lKXJldHVybiBuO3ZhciBlPXQuZ2V0KG4udmFsdWUpO3JldHVybntkb25lOiExLHZhbHVlOltuLnZhbHVlLGVdfX0sbn0sb1tWXT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmVudHJpZXMoKX0sbn0oKSxjPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gbihuLHQpe3JldHVybiB0aGlzW1FdPXtpOjMsbDp0LEE6dD90LkE6XygpLFA6ITEsSTohMSxvOnZvaWQgMCx0Om4sazp0aGlzLHA6bmV3IE1hcCxPOiExLEM6ITF9LHRoaXN9dChuLFNldCk7dmFyIHI9bi5wcm90b3R5cGU7cmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwic2l6ZVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gcCh0aGlzW1FdKS5zaXplfX0pLHIuaGFzPWZ1bmN0aW9uKG4pe3ZhciB0PXRoaXNbUV07cmV0dXJuIHUodCksdC5vPyEhdC5vLmhhcyhuKXx8ISghdC5wLmhhcyhuKXx8IXQuby5oYXModC5wLmdldChuKSkpOnQudC5oYXMobil9LHIuYWRkPWZ1bmN0aW9uKG4pe3ZhciB0PXRoaXNbUV07cmV0dXJuIHUodCksdGhpcy5oYXMobil8fChvKHQpLGsodCksdC5vLmFkZChuKSksdGhpc30sci5kZWxldGU9ZnVuY3Rpb24obil7aWYoIXRoaXMuaGFzKG4pKXJldHVybiExO3ZhciB0PXRoaXNbUV07cmV0dXJuIHUodCksbyh0KSxrKHQpLHQuby5kZWxldGUobil8fCEhdC5wLmhhcyhuKSYmdC5vLmRlbGV0ZSh0LnAuZ2V0KG4pKX0sci5jbGVhcj1mdW5jdGlvbigpe3ZhciBuPXRoaXNbUV07dShuKSxwKG4pLnNpemUmJihvKG4pLGsobiksbi5vLmNsZWFyKCkpfSxyLnZhbHVlcz1mdW5jdGlvbigpe3ZhciBuPXRoaXNbUV07cmV0dXJuIHUobiksbyhuKSxuLm8udmFsdWVzKCl9LHIuZW50cmllcz1mdW5jdGlvbigpe3ZhciBuPXRoaXNbUV07cmV0dXJuIHUobiksbyhuKSxuLm8uZW50cmllcygpfSxyLmtleXM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy52YWx1ZXMoKX0scltWXT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnZhbHVlcygpfSxyLmZvckVhY2g9ZnVuY3Rpb24obix0KXtmb3IodmFyIHI9dGhpcy52YWx1ZXMoKSxlPXIubmV4dCgpOyFlLmRvbmU7KW4uY2FsbCh0LGUudmFsdWUsZS52YWx1ZSx0aGlzKSxlPXIubmV4dCgpfSxufSgpO20oXCJNYXBTZXRcIix7TjpmdW5jdGlvbihuLHQpe3JldHVybiBuZXcgZihuLHQpfSxUOmZ1bmN0aW9uKG4sdCl7cmV0dXJuIG5ldyBjKG4sdCl9fSl9ZnVuY3Rpb24gSigpe04oKSxDKCksVCgpfWZ1bmN0aW9uIEsobil7cmV0dXJuIG59ZnVuY3Rpb24gJChuKXtyZXR1cm4gbn12YXIgRyxVLFc9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbChcInhcIiksWD1cInVuZGVmaW5lZFwiIT10eXBlb2YgTWFwLHE9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFNldCxCPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBQcm94eSYmdm9pZCAwIT09UHJveHkucmV2b2NhYmxlJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgUmVmbGVjdCxIPVc/U3ltYm9sLmZvcihcImltbWVyLW5vdGhpbmdcIik6KChHPXt9KVtcImltbWVyLW5vdGhpbmdcIl09ITAsRyksTD1XP1N5bWJvbC5mb3IoXCJpbW1lci1kcmFmdGFibGVcIik6XCJfXyRpbW1lcl9kcmFmdGFibGVcIixRPVc/U3ltYm9sLmZvcihcImltbWVyLXN0YXRlXCIpOlwiX18kaW1tZXJfc3RhdGVcIixWPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcnx8XCJAQGl0ZXJhdG9yXCIsWT17MDpcIklsbGVnYWwgc3RhdGVcIiwxOlwiSW1tZXIgZHJhZnRzIGNhbm5vdCBoYXZlIGNvbXB1dGVkIHByb3BlcnRpZXNcIiwyOlwiVGhpcyBvYmplY3QgaGFzIGJlZW4gZnJvemVuIGFuZCBzaG91bGQgbm90IGJlIG11dGF0ZWRcIiwzOmZ1bmN0aW9uKG4pe3JldHVyblwiQ2Fubm90IHVzZSBhIHByb3h5IHRoYXQgaGFzIGJlZW4gcmV2b2tlZC4gRGlkIHlvdSBwYXNzIGFuIG9iamVjdCBmcm9tIGluc2lkZSBhbiBpbW1lciBmdW5jdGlvbiB0byBhbiBhc3luYyBwcm9jZXNzPyBcIitufSw0OlwiQW4gaW1tZXIgcHJvZHVjZXIgcmV0dXJuZWQgYSBuZXcgdmFsdWUgKmFuZCogbW9kaWZpZWQgaXRzIGRyYWZ0LiBFaXRoZXIgcmV0dXJuIGEgbmV3IHZhbHVlICpvciogbW9kaWZ5IHRoZSBkcmFmdC5cIiw1OlwiSW1tZXIgZm9yYmlkcyBjaXJjdWxhciByZWZlcmVuY2VzXCIsNjpcIlRoZSBmaXJzdCBvciBzZWNvbmQgYXJndW1lbnQgdG8gYHByb2R1Y2VgIG11c3QgYmUgYSBmdW5jdGlvblwiLDc6XCJUaGUgdGhpcmQgYXJndW1lbnQgdG8gYHByb2R1Y2VgIG11c3QgYmUgYSBmdW5jdGlvbiBvciB1bmRlZmluZWRcIiw4OlwiRmlyc3QgYXJndW1lbnQgdG8gYGNyZWF0ZURyYWZ0YCBtdXN0IGJlIGEgcGxhaW4gb2JqZWN0LCBhbiBhcnJheSwgb3IgYW4gaW1tZXJhYmxlIG9iamVjdFwiLDk6XCJGaXJzdCBhcmd1bWVudCB0byBgZmluaXNoRHJhZnRgIG11c3QgYmUgYSBkcmFmdCByZXR1cm5lZCBieSBgY3JlYXRlRHJhZnRgXCIsMTA6XCJUaGUgZ2l2ZW4gZHJhZnQgaXMgYWxyZWFkeSBmaW5hbGl6ZWRcIiwxMTpcIk9iamVjdC5kZWZpbmVQcm9wZXJ0eSgpIGNhbm5vdCBiZSB1c2VkIG9uIGFuIEltbWVyIGRyYWZ0XCIsMTI6XCJPYmplY3Quc2V0UHJvdG90eXBlT2YoKSBjYW5ub3QgYmUgdXNlZCBvbiBhbiBJbW1lciBkcmFmdFwiLDEzOlwiSW1tZXIgb25seSBzdXBwb3J0cyBkZWxldGluZyBhcnJheSBpbmRpY2VzXCIsMTQ6XCJJbW1lciBvbmx5IHN1cHBvcnRzIHNldHRpbmcgYXJyYXkgaW5kaWNlcyBhbmQgdGhlICdsZW5ndGgnIHByb3BlcnR5XCIsMTU6ZnVuY3Rpb24obil7cmV0dXJuXCJDYW5ub3QgYXBwbHkgcGF0Y2gsIHBhdGggZG9lc24ndCByZXNvbHZlOiBcIitufSwxNjonU2V0cyBjYW5ub3QgaGF2ZSBcInJlcGxhY2VcIiBwYXRjaGVzLicsMTc6ZnVuY3Rpb24obil7cmV0dXJuXCJVbnN1cHBvcnRlZCBwYXRjaCBvcGVyYXRpb246IFwiK259LDE4OmZ1bmN0aW9uKG4pe3JldHVyblwiVGhlIHBsdWdpbiBmb3IgJ1wiK24rXCInIGhhcyBub3QgYmVlbiBsb2FkZWQgaW50byBJbW1lci4gVG8gZW5hYmxlIHRoZSBwbHVnaW4sIGltcG9ydCBhbmQgY2FsbCBgZW5hYmxlXCIrbitcIigpYCB3aGVuIGluaXRpYWxpemluZyB5b3VyIGFwcGxpY2F0aW9uLlwifSwyMDpcIkNhbm5vdCB1c2UgcHJveGllcyBpZiBQcm94eSwgUHJveHkucmV2b2NhYmxlIG9yIFJlZmxlY3QgYXJlIG5vdCBhdmFpbGFibGVcIiwyMTpmdW5jdGlvbihuKXtyZXR1cm5cInByb2R1Y2UgY2FuIG9ubHkgYmUgY2FsbGVkIG9uIHRoaW5ncyB0aGF0IGFyZSBkcmFmdGFibGU6IHBsYWluIG9iamVjdHMsIGFycmF5cywgTWFwLCBTZXQgb3IgY2xhc3NlcyB0aGF0IGFyZSBtYXJrZWQgd2l0aCAnW2ltbWVyYWJsZV06IHRydWUnLiBHb3QgJ1wiK24rXCInXCJ9LDIyOmZ1bmN0aW9uKG4pe3JldHVyblwiJ2N1cnJlbnQnIGV4cGVjdHMgYSBkcmFmdCwgZ290OiBcIitufSwyMzpmdW5jdGlvbihuKXtyZXR1cm5cIidvcmlnaW5hbCcgZXhwZWN0cyBhIGRyYWZ0LCBnb3Q6IFwiK259LDI0OlwiUGF0Y2hpbmcgcmVzZXJ2ZWQgYXR0cmlidXRlcyBsaWtlIF9fcHJvdG9fXywgcHJvdG90eXBlIGFuZCBjb25zdHJ1Y3RvciBpcyBub3QgYWxsb3dlZFwifSxaPVwiXCIrT2JqZWN0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcixubj1cInVuZGVmaW5lZFwiIT10eXBlb2YgUmVmbGVjdCYmUmVmbGVjdC5vd25LZXlzP1JlZmxlY3Qub3duS2V5czp2b2lkIDAhPT1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzP2Z1bmN0aW9uKG4pe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhuKS5jb25jYXQoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhuKSl9Ok9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzLHRuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzfHxmdW5jdGlvbihuKXt2YXIgdD17fTtyZXR1cm4gbm4obikuZm9yRWFjaCgoZnVuY3Rpb24ocil7dFtyXT1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG4scil9KSksdH0scm49e30sZW49e2dldDpmdW5jdGlvbihuLHQpe2lmKHQ9PT1RKXJldHVybiBuO3ZhciBlPXAobik7aWYoIXUoZSx0KSlyZXR1cm4gZnVuY3Rpb24obix0LHIpe3ZhciBlLGk9SSh0LHIpO3JldHVybiBpP1widmFsdWVcImluIGk/aS52YWx1ZTpudWxsPT09KGU9aS5nZXQpfHx2b2lkIDA9PT1lP3ZvaWQgMDplLmNhbGwobi5rKTp2b2lkIDB9KG4sZSx0KTt2YXIgaT1lW3RdO3JldHVybiBuLkl8fCFyKGkpP2k6aT09PXoobi50LHQpPyhFKG4pLG4ub1t0XT1SKG4uQS5oLGksbikpOml9LGhhczpmdW5jdGlvbihuLHQpe3JldHVybiB0IGluIHAobil9LG93bktleXM6ZnVuY3Rpb24obil7cmV0dXJuIFJlZmxlY3Qub3duS2V5cyhwKG4pKX0sc2V0OmZ1bmN0aW9uKG4sdCxyKXt2YXIgZT1JKHAobiksdCk7aWYobnVsbD09ZT92b2lkIDA6ZS5zZXQpcmV0dXJuIGUuc2V0LmNhbGwobi5rLHIpLCEwO2lmKCFuLlApe3ZhciBpPXoocChuKSx0KSxvPW51bGw9PWk/dm9pZCAwOmlbUV07aWYobyYmby50PT09cilyZXR1cm4gbi5vW3RdPXIsbi5EW3RdPSExLCEwO2lmKGMocixpKSYmKHZvaWQgMCE9PXJ8fHUobi50LHQpKSlyZXR1cm4hMDtFKG4pLGsobil9cmV0dXJuIG4ub1t0XT09PXImJlwibnVtYmVyXCIhPXR5cGVvZiByJiYodm9pZCAwIT09cnx8dCBpbiBuLm8pfHwobi5vW3RdPXIsbi5EW3RdPSEwLCEwKX0sZGVsZXRlUHJvcGVydHk6ZnVuY3Rpb24obix0KXtyZXR1cm4gdm9pZCAwIT09eihuLnQsdCl8fHQgaW4gbi50PyhuLkRbdF09ITEsRShuKSxrKG4pKTpkZWxldGUgbi5EW3RdLG4ubyYmZGVsZXRlIG4ub1t0XSwhMH0sZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOmZ1bmN0aW9uKG4sdCl7dmFyIHI9cChuKSxlPVJlZmxlY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHIsdCk7cmV0dXJuIGU/e3dyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZToxIT09bi5pfHxcImxlbmd0aFwiIT09dCxlbnVtZXJhYmxlOmUuZW51bWVyYWJsZSx2YWx1ZTpyW3RdfTplfSxkZWZpbmVQcm9wZXJ0eTpmdW5jdGlvbigpe24oMTEpfSxnZXRQcm90b3R5cGVPZjpmdW5jdGlvbihuKXtyZXR1cm4gT2JqZWN0LmdldFByb3RvdHlwZU9mKG4udCl9LHNldFByb3RvdHlwZU9mOmZ1bmN0aW9uKCl7bigxMil9fSxvbj17fTtpKGVuLChmdW5jdGlvbihuLHQpe29uW25dPWZ1bmN0aW9uKCl7cmV0dXJuIGFyZ3VtZW50c1swXT1hcmd1bWVudHNbMF1bMF0sdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fSkpLG9uLmRlbGV0ZVByb3BlcnR5PWZ1bmN0aW9uKHQscil7cmV0dXJuXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmaXNOYU4ocGFyc2VJbnQocikpJiZuKDEzKSxlbi5kZWxldGVQcm9wZXJ0eS5jYWxsKHRoaXMsdFswXSxyKX0sb24uc2V0PWZ1bmN0aW9uKHQscixlKXtyZXR1cm5cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZcImxlbmd0aFwiIT09ciYmaXNOYU4ocGFyc2VJbnQocikpJiZuKDE0KSxlbi5zZXQuY2FsbCh0aGlzLHRbMF0scixlLHRbMF0pfTt2YXIgdW49ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQpe3ZhciBlPXRoaXM7dGhpcy5nPUIsdGhpcy5GPSEwLHRoaXMucHJvZHVjZT1mdW5jdGlvbih0LGksbyl7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgdCYmXCJmdW5jdGlvblwiIT10eXBlb2YgaSl7dmFyIHU9aTtpPXQ7dmFyIGE9ZTtyZXR1cm4gZnVuY3Rpb24obil7dmFyIHQ9dGhpczt2b2lkIDA9PT1uJiYobj11KTtmb3IodmFyIHI9YXJndW1lbnRzLmxlbmd0aCxlPUFycmF5KHI+MT9yLTE6MCksbz0xO288cjtvKyspZVtvLTFdPWFyZ3VtZW50c1tvXTtyZXR1cm4gYS5wcm9kdWNlKG4sKGZ1bmN0aW9uKG4pe3ZhciByO3JldHVybihyPWkpLmNhbGwuYXBwbHkocixbdCxuXS5jb25jYXQoZSkpfSkpfX12YXIgZjtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBpJiZuKDYpLHZvaWQgMCE9PW8mJlwiZnVuY3Rpb25cIiE9dHlwZW9mIG8mJm4oNykscih0KSl7dmFyIGM9dyhlKSxzPVIoZSx0LHZvaWQgMCksdj0hMDt0cnl7Zj1pKHMpLHY9ITF9ZmluYWxseXt2P08oYyk6ZyhjKX1yZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgUHJvbWlzZSYmZiBpbnN0YW5jZW9mIFByb21pc2U/Zi50aGVuKChmdW5jdGlvbihuKXtyZXR1cm4gaihjLG8pLFAobixjKX0pLChmdW5jdGlvbihuKXt0aHJvdyBPKGMpLG59KSk6KGooYyxvKSxQKGYsYykpfWlmKCF0fHxcIm9iamVjdFwiIT10eXBlb2YgdCl7aWYoKGY9aSh0KSk9PT1IKXJldHVybjtyZXR1cm4gdm9pZCAwPT09ZiYmKGY9dCksZS5GJiZkKGYsITApLGZ9bigyMSx0KX0sdGhpcy5wcm9kdWNlV2l0aFBhdGNoZXM9ZnVuY3Rpb24obix0KXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBuP2Z1bmN0aW9uKHQpe2Zvcih2YXIgcj1hcmd1bWVudHMubGVuZ3RoLGk9QXJyYXkocj4xP3ItMTowKSxvPTE7bzxyO28rKylpW28tMV09YXJndW1lbnRzW29dO3JldHVybiBlLnByb2R1Y2VXaXRoUGF0Y2hlcyh0LChmdW5jdGlvbih0KXtyZXR1cm4gbi5hcHBseSh2b2lkIDAsW3RdLmNvbmNhdChpKSl9KSl9OltlLnByb2R1Y2Uobix0LChmdW5jdGlvbihuLHQpe3I9bixpPXR9KSkscixpXTt2YXIgcixpfSxcImJvb2xlYW5cIj09dHlwZW9mKG51bGw9PXQ/dm9pZCAwOnQudXNlUHJveGllcykmJnRoaXMuc2V0VXNlUHJveGllcyh0LnVzZVByb3hpZXMpLFwiYm9vbGVhblwiPT10eXBlb2YobnVsbD09dD92b2lkIDA6dC5hdXRvRnJlZXplKSYmdGhpcy5zZXRBdXRvRnJlZXplKHQuYXV0b0ZyZWV6ZSl9dmFyIGk9ZS5wcm90b3R5cGU7cmV0dXJuIGkuY3JlYXRlRHJhZnQ9ZnVuY3Rpb24oZSl7cihlKXx8big4KSx0KGUpJiYoZT1EKGUpKTt2YXIgaT13KHRoaXMpLG89Uih0aGlzLGUsdm9pZCAwKTtyZXR1cm4gb1tRXS5DPSEwLGcoaSksb30saS5maW5pc2hEcmFmdD1mdW5jdGlvbih0LHIpe3ZhciBlPXQmJnRbUV07XCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmKGUmJmUuQ3x8big5KSxlLkkmJm4oMTApKTt2YXIgaT1lLkE7cmV0dXJuIGooaSxyKSxQKHZvaWQgMCxpKX0saS5zZXRBdXRvRnJlZXplPWZ1bmN0aW9uKG4pe3RoaXMuRj1ufSxpLnNldFVzZVByb3hpZXM9ZnVuY3Rpb24odCl7dCYmIUImJm4oMjApLHRoaXMuZz10fSxpLmFwcGx5UGF0Y2hlcz1mdW5jdGlvbihuLHIpe3ZhciBlO2ZvcihlPXIubGVuZ3RoLTE7ZT49MDtlLS0pe3ZhciBpPXJbZV07aWYoMD09PWkucGF0aC5sZW5ndGgmJlwicmVwbGFjZVwiPT09aS5vcCl7bj1pLnZhbHVlO2JyZWFrfX12YXIgbz1iKFwiUGF0Y2hlc1wiKS4kO3JldHVybiB0KG4pP28obixyKTp0aGlzLnByb2R1Y2UobiwoZnVuY3Rpb24obil7cmV0dXJuIG8obixyLnNsaWNlKGUrMSkpfSkpfSxlfSgpLGFuPW5ldyB1bixmbj1hbi5wcm9kdWNlLGNuPWFuLnByb2R1Y2VXaXRoUGF0Y2hlcy5iaW5kKGFuKSxzbj1hbi5zZXRBdXRvRnJlZXplLmJpbmQoYW4pLHZuPWFuLnNldFVzZVByb3hpZXMuYmluZChhbikscG49YW4uYXBwbHlQYXRjaGVzLmJpbmQoYW4pLGxuPWFuLmNyZWF0ZURyYWZ0LmJpbmQoYW4pLGRuPWFuLmZpbmlzaERyYWZ0LmJpbmQoYW4pO2V4cG9ydCBkZWZhdWx0IGZuO2V4cG9ydHt1biBhcyBJbW1lcixwbiBhcyBhcHBseVBhdGNoZXMsSyBhcyBjYXN0RHJhZnQsJCBhcyBjYXN0SW1tdXRhYmxlLGxuIGFzIGNyZWF0ZURyYWZ0LEQgYXMgY3VycmVudCxKIGFzIGVuYWJsZUFsbFBsdWdpbnMsTiBhcyBlbmFibGVFUzUsQyBhcyBlbmFibGVNYXBTZXQsVCBhcyBlbmFibGVQYXRjaGVzLGRuIGFzIGZpbmlzaERyYWZ0LGQgYXMgZnJlZXplLEwgYXMgaW1tZXJhYmxlLHQgYXMgaXNEcmFmdCxyIGFzIGlzRHJhZnRhYmxlLEggYXMgbm90aGluZyxlIGFzIG9yaWdpbmFsLGZuIGFzIHByb2R1Y2UsY24gYXMgcHJvZHVjZVdpdGhQYXRjaGVzLHNuIGFzIHNldEF1dG9GcmVlemUsdm4gYXMgc2V0VXNlUHJveGllc307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbW1lci5lc20uanMubWFwXG4iLCJcbiAgICAod2luZG93Ll9fTkVYVF9QID0gd2luZG93Ll9fTkVYVF9QIHx8IFtdKS5wdXNoKFtcbiAgICAgIFwiL19hcHBcIixcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHJlcXVpcmUoXCJwcml2YXRlLW5leHQtcGFnZXMvX2FwcC5qc1wiKTtcbiAgICAgIH1cbiAgICBdKTtcbiAgIiwidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vLi4vbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXN0eWxlLWxvYWRlci9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbmV4dC9kaXN0L2NvbXBpbGVkL2Nzcy1sb2FkZXIvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzVdLnVzZVsxXSEuLi8uLi9uZXh0L2Rpc3QvY29tcGlsZWQvcG9zdGNzcy1sb2FkZXIvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzVdLnVzZVsyXSEuL3RhaWx3aW5kLmNzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IGZ1bmN0aW9uKGVsZW1lbnQpey8vIFRoZXNlIGVsZW1lbnRzIHNob3VsZCBhbHdheXMgZXhpc3QuIElmIHRoZXkgZG8gbm90LFxuLy8gdGhpcyBjb2RlIHNob3VsZCBmYWlsLlxudmFyIGFuY2hvckVsZW1lbnQ9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI19fbmV4dF9jc3NfX0RPX05PVF9VU0VfXycpO3ZhciBwYXJlbnROb2RlPWFuY2hvckVsZW1lbnQucGFyZW50Tm9kZTsvLyBOb3JtYWxseSA8aGVhZD5cbi8vIEVhY2ggc3R5bGUgdGFnIHNob3VsZCBiZSBwbGFjZWQgcmlnaHQgYmVmb3JlIG91clxuLy8gYW5jaG9yLiBCeSBpbnNlcnRpbmcgYmVmb3JlIGFuZCBub3QgYWZ0ZXIsIHdlIGRvIG5vdFxuLy8gbmVlZCB0byB0cmFjayB0aGUgbGFzdCBpbnNlcnRlZCBlbGVtZW50LlxucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZWxlbWVudCxhbmNob3JFbGVtZW50KTt9O1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5pZiAobW9kdWxlLmhvdCkge1xuICBpZiAoIWNvbnRlbnQubG9jYWxzIHx8IG1vZHVsZS5ob3QuaW52YWxpZGF0ZSkge1xuICAgIHZhciBpc0VxdWFsTG9jYWxzID0gZnVuY3Rpb24gaXNFcXVhbExvY2FscyhhLGIsaXNOYW1lZEV4cG9ydCl7aWYoIWEmJmJ8fGEmJiFiKXtyZXR1cm4gZmFsc2U7fWxldCBwO2ZvcihwIGluIGEpe2lmKGlzTmFtZWRFeHBvcnQmJnA9PT0nZGVmYXVsdCcpey8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuY29udGludWU7fWlmKGFbcF0hPT1iW3BdKXtyZXR1cm4gZmFsc2U7fX1mb3IocCBpbiBiKXtpZihpc05hbWVkRXhwb3J0JiZwPT09J2RlZmF1bHQnKXsvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbmNvbnRpbnVlO31pZighYVtwXSl7cmV0dXJuIGZhbHNlO319cmV0dXJuIHRydWU7fTtcbiAgICB2YXIgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcbiAgICAgIFwiISEuLi8uLi9uZXh0L2Rpc3QvY29tcGlsZWQvY3NzLWxvYWRlci9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbNV0udXNlWzFdIS4uLy4uL25leHQvZGlzdC9jb21waWxlZC9wb3N0Y3NzLWxvYWRlci9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbNV0udXNlWzJdIS4vdGFpbHdpbmQuY3NzXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9uZXh0L2Rpc3QvY29tcGlsZWQvY3NzLWxvYWRlci9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbNV0udXNlWzFdIS4uLy4uL25leHQvZGlzdC9jb21waWxlZC9wb3N0Y3NzLWxvYWRlci9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbNV0udXNlWzJdIS4vdGFpbHdpbmQuY3NzXCIpO1xuXG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoIWlzRXF1YWxMb2NhbHMob2xkTG9jYWxzLCBjb250ZW50LmxvY2FscykpIHtcbiAgICAgICAgICAgICAgICBtb2R1bGUuaG90LmludmFsaWRhdGUoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgICAgICAgICAgIHVwZGF0ZShjb250ZW50KTtcbiAgICAgIH1cbiAgICApXG4gIH1cblxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7XG4gICAgdXBkYXRlKCk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyIsInZhciBhcGkgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtc3R5bGUtbG9hZGVyL3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL2Nzcy1sb2FkZXIvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzZdLnVzZVsxXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Bvc3Rjc3MtbG9hZGVyL2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls2XS51c2VbMl0hLi9nbG9iYWxzLmNzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IGZ1bmN0aW9uKGVsZW1lbnQpey8vIFRoZXNlIGVsZW1lbnRzIHNob3VsZCBhbHdheXMgZXhpc3QuIElmIHRoZXkgZG8gbm90LFxuLy8gdGhpcyBjb2RlIHNob3VsZCBmYWlsLlxudmFyIGFuY2hvckVsZW1lbnQ9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI19fbmV4dF9jc3NfX0RPX05PVF9VU0VfXycpO3ZhciBwYXJlbnROb2RlPWFuY2hvckVsZW1lbnQucGFyZW50Tm9kZTsvLyBOb3JtYWxseSA8aGVhZD5cbi8vIEVhY2ggc3R5bGUgdGFnIHNob3VsZCBiZSBwbGFjZWQgcmlnaHQgYmVmb3JlIG91clxuLy8gYW5jaG9yLiBCeSBpbnNlcnRpbmcgYmVmb3JlIGFuZCBub3QgYWZ0ZXIsIHdlIGRvIG5vdFxuLy8gbmVlZCB0byB0cmFjayB0aGUgbGFzdCBpbnNlcnRlZCBlbGVtZW50LlxucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZWxlbWVudCxhbmNob3JFbGVtZW50KTt9O1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5pZiAobW9kdWxlLmhvdCkge1xuICBpZiAoIWNvbnRlbnQubG9jYWxzIHx8IG1vZHVsZS5ob3QuaW52YWxpZGF0ZSkge1xuICAgIHZhciBpc0VxdWFsTG9jYWxzID0gZnVuY3Rpb24gaXNFcXVhbExvY2FscyhhLGIsaXNOYW1lZEV4cG9ydCl7aWYoIWEmJmJ8fGEmJiFiKXtyZXR1cm4gZmFsc2U7fWxldCBwO2ZvcihwIGluIGEpe2lmKGlzTmFtZWRFeHBvcnQmJnA9PT0nZGVmYXVsdCcpey8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuY29udGludWU7fWlmKGFbcF0hPT1iW3BdKXtyZXR1cm4gZmFsc2U7fX1mb3IocCBpbiBiKXtpZihpc05hbWVkRXhwb3J0JiZwPT09J2RlZmF1bHQnKXsvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbmNvbnRpbnVlO31pZighYVtwXSl7cmV0dXJuIGZhbHNlO319cmV0dXJuIHRydWU7fTtcbiAgICB2YXIgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcbiAgICAgIFwiISEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL2Nzcy1sb2FkZXIvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzZdLnVzZVsxXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Bvc3Rjc3MtbG9hZGVyL2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls2XS51c2VbMl0hLi9nbG9iYWxzLmNzc1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9jc3MtbG9hZGVyL2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls2XS51c2VbMV0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9wb3N0Y3NzLWxvYWRlci9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbNl0udXNlWzJdIS4vZ2xvYmFscy5jc3NcIik7XG5cbiAgICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmICghaXNFcXVhbExvY2FscyhvbGRMb2NhbHMsIGNvbnRlbnQubG9jYWxzKSkge1xuICAgICAgICAgICAgICAgIG1vZHVsZS5ob3QuaW52YWxpZGF0ZSgpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICAgICAgICAgICAgdXBkYXRlKGNvbnRlbnQpO1xuICAgICAgfVxuICAgIClcbiAgfVxuXG4gIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHtcbiAgICB1cGRhdGUoKTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307IiwiXCJ1c2Ugc3RyaWN0XCI7Y29uc3QgaXNPbGRJRT1mdW5jdGlvbiBpc09sZElFKCl7bGV0IG1lbW87cmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKCl7aWYodHlwZW9mIG1lbW89PT0ndW5kZWZpbmVkJyl7Ly8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3Ncbi8vIEBzZWUgaHR0cDovL2Jyb3dzZXJoYWNrcy5jb20vI2hhY2stZTcxZDg2OTJmNjUzMzQxNzNmZWU3MTVjMjIyY2I4MDVcbi8vIFRlc3RzIGZvciBleGlzdGVuY2Ugb2Ygc3RhbmRhcmQgZ2xvYmFscyBpcyB0byBhbGxvdyBzdHlsZS1sb2FkZXJcbi8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuLy8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlci9pc3N1ZXMvMTc3XG5tZW1vPUJvb2xlYW4od2luZG93JiZkb2N1bWVudCYmZG9jdW1lbnQuYWxsJiYhd2luZG93LmF0b2IpO31yZXR1cm4gbWVtbzt9O30oKTtjb25zdCBnZXRUYXJnZXQ9ZnVuY3Rpb24gZ2V0VGFyZ2V0KCl7Y29uc3QgbWVtbz17fTtyZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUodGFyZ2V0KXtpZih0eXBlb2YgbWVtb1t0YXJnZXRdPT09J3VuZGVmaW5lZCcpe2xldCBzdHlsZVRhcmdldD1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7Ly8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbmlmKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCYmc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpe3RyeXsvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbnN0eWxlVGFyZ2V0PXN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO31jYXRjaChlKXsvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuc3R5bGVUYXJnZXQ9bnVsbDt9fW1lbW9bdGFyZ2V0XT1zdHlsZVRhcmdldDt9cmV0dXJuIG1lbW9bdGFyZ2V0XTt9O30oKTtjb25zdCBzdHlsZXNJbkRvbT1bXTtmdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKXtsZXQgcmVzdWx0PS0xO2ZvcihsZXQgaT0wO2k8c3R5bGVzSW5Eb20ubGVuZ3RoO2krKyl7aWYoc3R5bGVzSW5Eb21baV0uaWRlbnRpZmllcj09PWlkZW50aWZpZXIpe3Jlc3VsdD1pO2JyZWFrO319cmV0dXJuIHJlc3VsdDt9ZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3Qsb3B0aW9ucyl7Y29uc3QgaWRDb3VudE1hcD17fTtjb25zdCBpZGVudGlmaWVycz1bXTtmb3IobGV0IGk9MDtpPGxpc3QubGVuZ3RoO2krKyl7Y29uc3QgaXRlbT1saXN0W2ldO2NvbnN0IGlkPW9wdGlvbnMuYmFzZT9pdGVtWzBdK29wdGlvbnMuYmFzZTppdGVtWzBdO2NvbnN0IGNvdW50PWlkQ291bnRNYXBbaWRdfHwwO2NvbnN0IGlkZW50aWZpZXI9aWQrJyAnK2NvdW50LnRvU3RyaW5nKCk7aWRDb3VudE1hcFtpZF09Y291bnQrMTtjb25zdCBpbmRleD1nZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtjb25zdCBvYmo9e2NzczppdGVtWzFdLG1lZGlhOml0ZW1bMl0sc291cmNlTWFwOml0ZW1bM119O2lmKGluZGV4IT09LTEpe3N0eWxlc0luRG9tW2luZGV4XS5yZWZlcmVuY2VzKys7c3R5bGVzSW5Eb21baW5kZXhdLnVwZGF0ZXIob2JqKTt9ZWxzZXtzdHlsZXNJbkRvbS5wdXNoKHtpZGVudGlmaWVyOmlkZW50aWZpZXIsdXBkYXRlcjphZGRTdHlsZShvYmosb3B0aW9ucykscmVmZXJlbmNlczoxfSk7fWlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7fXJldHVybiBpZGVudGlmaWVyczt9ZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpe2NvbnN0IHN0eWxlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7Y29uc3QgYXR0cmlidXRlcz1vcHRpb25zLmF0dHJpYnV0ZXN8fHt9O2lmKHR5cGVvZiBhdHRyaWJ1dGVzLm5vbmNlPT09J3VuZGVmaW5lZCcpe2NvbnN0IG5vbmNlPS8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxudHlwZW9mIF9fd2VicGFja19ub25jZV9fIT09J3VuZGVmaW5lZCc/X193ZWJwYWNrX25vbmNlX186bnVsbDtpZihub25jZSl7YXR0cmlidXRlcy5ub25jZT1ub25jZTt9fU9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24oa2V5KXtzdHlsZS5zZXRBdHRyaWJ1dGUoa2V5LGF0dHJpYnV0ZXNba2V5XSk7fSk7aWYodHlwZW9mIG9wdGlvbnMuaW5zZXJ0PT09J2Z1bmN0aW9uJyl7b3B0aW9ucy5pbnNlcnQoc3R5bGUpO31lbHNle2NvbnN0IHRhcmdldD1nZXRUYXJnZXQob3B0aW9ucy5pbnNlcnR8fCdoZWFkJyk7aWYoIXRhcmdldCl7dGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTt9dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTt9cmV0dXJuIHN0eWxlO31mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpey8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuaWYoc3R5bGUucGFyZW50Tm9kZT09PW51bGwpe3JldHVybiBmYWxzZTt9c3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7fS8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL2NvbnN0IHJlcGxhY2VUZXh0PWZ1bmN0aW9uIHJlcGxhY2VUZXh0KCl7Y29uc3QgdGV4dFN0b3JlPVtdO3JldHVybiBmdW5jdGlvbiByZXBsYWNlKGluZGV4LHJlcGxhY2VtZW50KXt0ZXh0U3RvcmVbaW5kZXhdPXJlcGxhY2VtZW50O3JldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO307fSgpO2Z1bmN0aW9uIGFwcGx5VG9TaW5nbGV0b25UYWcoc3R5bGUsaW5kZXgscmVtb3ZlLG9iail7Y29uc3QgY3NzPXJlbW92ZT8nJzpvYmoubWVkaWE/J0BtZWRpYSAnK29iai5tZWRpYSsnIHsnK29iai5jc3MrJ30nOm9iai5jc3M7Ly8gRm9yIG9sZCBJRVxuLyogaXN0YW5idWwgaWdub3JlIGlmICAqL2lmKHN0eWxlLnN0eWxlU2hlZXQpe3N0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dD1yZXBsYWNlVGV4dChpbmRleCxjc3MpO31lbHNle2NvbnN0IGNzc05vZGU9ZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtjb25zdCBjaGlsZE5vZGVzPXN0eWxlLmNoaWxkTm9kZXM7aWYoY2hpbGROb2Rlc1tpbmRleF0pe3N0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTt9aWYoY2hpbGROb2Rlcy5sZW5ndGgpe3N0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLGNoaWxkTm9kZXNbaW5kZXhdKTt9ZWxzZXtzdHlsZS5hcHBlbmRDaGlsZChjc3NOb2RlKTt9fX1mdW5jdGlvbiBhcHBseVRvVGFnKHN0eWxlLG9wdGlvbnMsb2JqKXtsZXQgY3NzPW9iai5jc3M7Y29uc3QgbWVkaWE9b2JqLm1lZGlhO2NvbnN0IHNvdXJjZU1hcD1vYmouc291cmNlTWFwO2lmKG1lZGlhKXtzdHlsZS5zZXRBdHRyaWJ1dGUoJ21lZGlhJyxtZWRpYSk7fWVsc2V7c3R5bGUucmVtb3ZlQXR0cmlidXRlKCdtZWRpYScpO31pZihzb3VyY2VNYXAmJnR5cGVvZiBidG9hIT09J3VuZGVmaW5lZCcpe2Nzcys9J1xcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsJytidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpKycgKi8nO30vLyBGb3Igb2xkIElFXG4vKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovaWYoc3R5bGUuc3R5bGVTaGVldCl7c3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0PWNzczt9ZWxzZXt3aGlsZShzdHlsZS5maXJzdENoaWxkKXtzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTt9c3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7fX1sZXQgc2luZ2xldG9uPW51bGw7bGV0IHNpbmdsZXRvbkNvdW50ZXI9MDtmdW5jdGlvbiBhZGRTdHlsZShvYmosb3B0aW9ucyl7bGV0IHN0eWxlO2xldCB1cGRhdGU7bGV0IHJlbW92ZTtpZihvcHRpb25zLnNpbmdsZXRvbil7Y29uc3Qgc3R5bGVJbmRleD1zaW5nbGV0b25Db3VudGVyKys7c3R5bGU9c2luZ2xldG9ufHwoc2luZ2xldG9uPWluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSk7dXBkYXRlPWFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLHN0eWxlLHN0eWxlSW5kZXgsZmFsc2UpO3JlbW92ZT1hcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCxzdHlsZSxzdHlsZUluZGV4LHRydWUpO31lbHNle3N0eWxlPWluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTt1cGRhdGU9YXBwbHlUb1RhZy5iaW5kKG51bGwsc3R5bGUsb3B0aW9ucyk7cmVtb3ZlPWZ1bmN0aW9uKCl7cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTt9O311cGRhdGUob2JqKTtyZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUobmV3T2JqKXtpZihuZXdPYmope2lmKG5ld09iai5jc3M9PT1vYmouY3NzJiZuZXdPYmoubWVkaWE9PT1vYmoubWVkaWEmJm5ld09iai5zb3VyY2VNYXA9PT1vYmouc291cmNlTWFwKXtyZXR1cm47fXVwZGF0ZShvYmo9bmV3T2JqKTt9ZWxzZXtyZW1vdmUoKTt9fTt9bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24obGlzdCxvcHRpb25zKXtvcHRpb25zPW9wdGlvbnN8fHt9Oy8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuLy8gdGFncyBpdCB3aWxsIGFsbG93IG9uIGEgcGFnZVxuaWYoIW9wdGlvbnMuc2luZ2xldG9uJiZ0eXBlb2Ygb3B0aW9ucy5zaW5nbGV0b24hPT0nYm9vbGVhbicpe29wdGlvbnMuc2luZ2xldG9uPWlzT2xkSUUoKTt9bGlzdD1saXN0fHxbXTtsZXQgbGFzdElkZW50aWZpZXJzPW1vZHVsZXNUb0RvbShsaXN0LG9wdGlvbnMpO3JldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCl7bmV3TGlzdD1uZXdMaXN0fHxbXTtpZihPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobmV3TGlzdCkhPT0nW29iamVjdCBBcnJheV0nKXtyZXR1cm47fWZvcihsZXQgaT0wO2k8bGFzdElkZW50aWZpZXJzLmxlbmd0aDtpKyspe2NvbnN0IGlkZW50aWZpZXI9bGFzdElkZW50aWZpZXJzW2ldO2NvbnN0IGluZGV4PWdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO3N0eWxlc0luRG9tW2luZGV4XS5yZWZlcmVuY2VzLS07fWNvbnN0IG5ld0xhc3RJZGVudGlmaWVycz1tb2R1bGVzVG9Eb20obmV3TGlzdCxvcHRpb25zKTtmb3IobGV0IGk9MDtpPGxhc3RJZGVudGlmaWVycy5sZW5ndGg7aSsrKXtjb25zdCBpZGVudGlmaWVyPWxhc3RJZGVudGlmaWVyc1tpXTtjb25zdCBpbmRleD1nZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtpZihzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcz09PTApe3N0eWxlc0luRG9tW2luZGV4XS51cGRhdGVyKCk7c3R5bGVzSW5Eb20uc3BsaWNlKGluZGV4LDEpO319bGFzdElkZW50aWZpZXJzPW5ld0xhc3RJZGVudGlmaWVyczt9O307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMubWFwIiwibW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjt2YXIgbj17NzYyOmZ1bmN0aW9uKG4pe24uZXhwb3J0cz1mdW5jdGlvbihuKXt2YXIgdD1bXTt0LnRvU3RyaW5nPWZ1bmN0aW9uIHRvU3RyaW5nKCl7cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uKHQpe3ZhciByPWNzc1dpdGhNYXBwaW5nVG9TdHJpbmcodCxuKTtpZih0WzJdKXtyZXR1cm5cIkBtZWRpYSBcIi5jb25jYXQodFsyXSxcIiB7XCIpLmNvbmNhdChyLFwifVwiKX1yZXR1cm4gcn0pLmpvaW4oXCJcIil9O3QuaT1mdW5jdGlvbihuLHIsbyl7aWYodHlwZW9mIG49PT1cInN0cmluZ1wiKXtuPVtbbnVsbCxuLFwiXCJdXX12YXIgZT17fTtpZihvKXtmb3IodmFyIGE9MDthPHRoaXMubGVuZ3RoO2ErKyl7dmFyIGM9dGhpc1thXVswXTtpZihjIT1udWxsKXtlW2NdPXRydWV9fX1mb3IodmFyIGk9MDtpPG4ubGVuZ3RoO2krKyl7dmFyIHU9W10uY29uY2F0KG5baV0pO2lmKG8mJmVbdVswXV0pe2NvbnRpbnVlfWlmKHIpe2lmKCF1WzJdKXt1WzJdPXJ9ZWxzZXt1WzJdPVwiXCIuY29uY2F0KHIsXCIgYW5kIFwiKS5jb25jYXQodVsyXSl9fXQucHVzaCh1KX19O3JldHVybiB0fTtmdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKG4sdCl7dmFyIHI9blsxXXx8XCJcIjt2YXIgbz1uWzNdO2lmKCFvKXtyZXR1cm4gcn1pZih0JiZ0eXBlb2YgYnRvYT09PVwiZnVuY3Rpb25cIil7dmFyIGU9dG9Db21tZW50KG8pO3ZhciBhPW8uc291cmNlcy5tYXAoZnVuY3Rpb24obil7cmV0dXJuXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChvLnNvdXJjZVJvb3R8fFwiXCIpLmNvbmNhdChuLFwiICovXCIpfSk7cmV0dXJuW3JdLmNvbmNhdChhKS5jb25jYXQoW2VdKS5qb2luKFwiXFxuXCIpfXJldHVybltyXS5qb2luKFwiXFxuXCIpfWZ1bmN0aW9uIHRvQ29tbWVudChuKXt2YXIgdD1idG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShuKSkpKTt2YXIgcj1cInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdCh0KTtyZXR1cm5cIi8qIyBcIi5jb25jYXQocixcIiAqL1wiKX19fTt2YXIgdD17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKHIpe2lmKHRbcl0pe3JldHVybiB0W3JdLmV4cG9ydHN9dmFyIG89dFtyXT17ZXhwb3J0czp7fX07dmFyIGU9dHJ1ZTt0cnl7bltyXShvLG8uZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTtlPWZhbHNlfWZpbmFsbHl7aWYoZSlkZWxldGUgdFtyXX1yZXR1cm4gby5leHBvcnRzfV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3JldHVybiBfX25jY3dwY2tfcmVxdWlyZV9fKDc2Mil9KCk7IiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbmV4dC9kaXN0L2NvbXBpbGVkL2Nzcy1sb2FkZXIvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18odHJ1ZSk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Sb2JvdG8rU2xhYjp3Z2h0QDEwMDsyMDA7MzAwOzQwMDs1MDA7NjAwOzcwMDs4MDA7OTAwJmZhbWlseT1Sb2JvdG86aXRhbCx3Z2h0QDAsMTAwOzAsMzAwOzAsNDAwOzAsNTAwOzAsNzAwOzAsOTAwOzEsMTAwOzEsMzAwOzEsNDAwOzEsNTAwOzEsNzAwOzEsOTAwJmRpc3BsYXk9c3dhcCk7XCJdKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi50aXBweS1ib3hbZGF0YS1wbGFjZW1lbnRePXRvcF0+LnRpcHB5LXN2Zy1hcnJvd3tib3R0b206MH1cXG4udGlwcHktYm94W2RhdGEtcGxhY2VtZW50Xj10b3BdPi50aXBweS1zdmctYXJyb3c6YWZ0ZXIsLnRpcHB5LWJveFtkYXRhLXBsYWNlbWVudF49dG9wXT4udGlwcHktc3ZnLWFycm93PnN2Z3t0b3A6MTZweDt0cmFuc2Zvcm06cm90YXRlKDE4MGRlZyl9XFxuLnRpcHB5LWJveFtkYXRhLXBsYWNlbWVudF49Ym90dG9tXT4udGlwcHktc3ZnLWFycm93e3RvcDowfVxcbi50aXBweS1ib3hbZGF0YS1wbGFjZW1lbnRePWJvdHRvbV0+LnRpcHB5LXN2Zy1hcnJvdz5zdmd7Ym90dG9tOjE2cHh9XFxuLnRpcHB5LWJveFtkYXRhLXBsYWNlbWVudF49bGVmdF0+LnRpcHB5LXN2Zy1hcnJvd3tyaWdodDowfVxcbi50aXBweS1ib3hbZGF0YS1wbGFjZW1lbnRePWxlZnRdPi50aXBweS1zdmctYXJyb3c6YWZ0ZXIsLnRpcHB5LWJveFtkYXRhLXBsYWNlbWVudF49bGVmdF0+LnRpcHB5LXN2Zy1hcnJvdz5zdmd7dHJhbnNmb3JtOnJvdGF0ZSg5MGRlZyk7dG9wOmNhbGMoNTAlIC0gM3B4KTtsZWZ0OjExcHh9XFxuLnRpcHB5LWJveFtkYXRhLXBsYWNlbWVudF49cmlnaHRdPi50aXBweS1zdmctYXJyb3d7bGVmdDowfVxcbi50aXBweS1ib3hbZGF0YS1wbGFjZW1lbnRePXJpZ2h0XT4udGlwcHktc3ZnLWFycm93OmFmdGVyLC50aXBweS1ib3hbZGF0YS1wbGFjZW1lbnRePXJpZ2h0XT4udGlwcHktc3ZnLWFycm93PnN2Z3t0cmFuc2Zvcm06cm90YXRlKC05MGRlZyk7dG9wOmNhbGMoNTAlIC0gM3B4KTtyaWdodDoxMXB4fVxcbi50aXBweS1zdmctYXJyb3d7d2lkdGg6MTZweDtoZWlnaHQ6MTZweDtmaWxsOiMzMzM7dGV4dC1hbGlnbjppbml0aWFsfVxcbi50aXBweS1zdmctYXJyb3csLnRpcHB5LXN2Zy1hcnJvdz5zdmd7cG9zaXRpb246YWJzb2x1dGV9XFxuLnRpcHB5LWJveFtkYXRhLWFuaW1hdGlvbj1zY2FsZV1bZGF0YS1wbGFjZW1lbnRePXRvcF17dHJhbnNmb3JtLW9yaWdpbjpib3R0b219XFxuLnRpcHB5LWJveFtkYXRhLWFuaW1hdGlvbj1zY2FsZV1bZGF0YS1wbGFjZW1lbnRePWJvdHRvbV17dHJhbnNmb3JtLW9yaWdpbjp0b3B9XFxuLnRpcHB5LWJveFtkYXRhLWFuaW1hdGlvbj1zY2FsZV1bZGF0YS1wbGFjZW1lbnRePWxlZnRde3RyYW5zZm9ybS1vcmlnaW46cmlnaHR9XFxuLnRpcHB5LWJveFtkYXRhLWFuaW1hdGlvbj1zY2FsZV1bZGF0YS1wbGFjZW1lbnRePXJpZ2h0XXt0cmFuc2Zvcm0tb3JpZ2luOmxlZnR9XFxuLnRpcHB5LWJveFtkYXRhLWFuaW1hdGlvbj1zY2FsZV1bZGF0YS1zdGF0ZT1oaWRkZW5de3RyYW5zZm9ybTpzY2FsZSguNSk7b3BhY2l0eTowfVxcbi50aXBweS1ib3hbZGF0YS1hbmltYXRpb249c2hpZnQtYXdheV1bZGF0YS1zdGF0ZT1oaWRkZW5de29wYWNpdHk6MH1cXG4udGlwcHktYm94W2RhdGEtYW5pbWF0aW9uPXNoaWZ0LWF3YXldW2RhdGEtc3RhdGU9aGlkZGVuXVtkYXRhLXBsYWNlbWVudF49dG9wXXt0cmFuc2Zvcm06dHJhbnNsYXRlWSgxMHB4KX1cXG4udGlwcHktYm94W2RhdGEtYW5pbWF0aW9uPXNoaWZ0LWF3YXldW2RhdGEtc3RhdGU9aGlkZGVuXVtkYXRhLXBsYWNlbWVudF49Ym90dG9tXXt0cmFuc2Zvcm06dHJhbnNsYXRlWSgtMTBweCl9XFxuLnRpcHB5LWJveFtkYXRhLWFuaW1hdGlvbj1zaGlmdC1hd2F5XVtkYXRhLXN0YXRlPWhpZGRlbl1bZGF0YS1wbGFjZW1lbnRePWxlZnRde3RyYW5zZm9ybTp0cmFuc2xhdGVYKDEwcHgpfVxcbi50aXBweS1ib3hbZGF0YS1hbmltYXRpb249c2hpZnQtYXdheV1bZGF0YS1zdGF0ZT1oaWRkZW5dW2RhdGEtcGxhY2VtZW50Xj1yaWdodF17dHJhbnNmb3JtOnRyYW5zbGF0ZVgoLTEwcHgpfVxcbi8qISB0YWlsd2luZGNzcyB2Mi4xLjQgfCBNSVQgTGljZW5zZSB8IGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tICovXFxuLyohIG1vZGVybi1ub3JtYWxpemUgdjEuMS4wIHwgTUlUIExpY2Vuc2UgfCBodHRwczovL2dpdGh1Yi5jb20vc2luZHJlc29yaHVzL21vZGVybi1ub3JtYWxpemUgKi9cXG4vKlxcbkRvY3VtZW50XFxuPT09PT09PT1cXG4qL1xcbi8qKlxcblVzZSBhIGJldHRlciBib3ggbW9kZWwgKG9waW5pb25hdGVkKS5cXG4qL1xcbiosXFxuOjpiZWZvcmUsXFxuOjphZnRlciB7XFxuXFx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuLyoqXFxuVXNlIGEgbW9yZSByZWFkYWJsZSB0YWIgc2l6ZSAob3BpbmlvbmF0ZWQpLlxcbiovXFxuaHRtbCB7XFxuXFx0LW1vei10YWItc2l6ZTogNDtcXG5cXHQtby10YWItc2l6ZTogNDtcXG5cXHQgICB0YWItc2l6ZTogNDtcXG59XFxuLyoqXFxuMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxcbjIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxcbiovXFxuaHRtbCB7XFxuXFx0bGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cXG5cXHQtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cXG59XFxuLypcXG5TZWN0aW9uc1xcbj09PT09PT09XFxuKi9cXG4vKipcXG5SZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXFxuKi9cXG5ib2R5IHtcXG5cXHRtYXJnaW46IDA7XFxufVxcbi8qKlxcbkltcHJvdmUgY29uc2lzdGVuY3kgb2YgZGVmYXVsdCBmb250cyBpbiBhbGwgYnJvd3NlcnMuIChodHRwczovL2dpdGh1Yi5jb20vc2luZHJlc29yaHVzL21vZGVybi1ub3JtYWxpemUvaXNzdWVzLzMpXFxuKi9cXG5ib2R5IHtcXG5cXHRmb250LWZhbWlseTpcXG5cXHRcXHRzeXN0ZW0tdWksXFxuXFx0XFx0LWFwcGxlLXN5c3RlbSwgLyogRmlyZWZveCBzdXBwb3J0cyB0aGlzIGJ1dCBub3QgeWV0IGBzeXN0ZW0tdWlgICovXFxuXFx0XFx0J1NlZ29lIFVJJyxcXG5cXHRcXHRSb2JvdG8sXFxuXFx0XFx0SGVsdmV0aWNhLFxcblxcdFxcdEFyaWFsLFxcblxcdFxcdHNhbnMtc2VyaWYsXFxuXFx0XFx0J0FwcGxlIENvbG9yIEVtb2ppJyxcXG5cXHRcXHQnU2Vnb2UgVUkgRW1vamknO1xcbn1cXG4vKlxcbkdyb3VwaW5nIGNvbnRlbnRcXG49PT09PT09PT09PT09PT09XFxuKi9cXG4vKipcXG4xLiBBZGQgdGhlIGNvcnJlY3QgaGVpZ2h0IGluIEZpcmVmb3guXFxuMi4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2Ugb2YgYm9yZGVyIGNvbG9yIGluIEZpcmVmb3guIChodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD0xOTA2NTUpXFxuKi9cXG5ociB7XFxuXFx0aGVpZ2h0OiAwOyAvKiAxICovXFxuXFx0Y29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cXG59XFxuLypcXG5UZXh0LWxldmVsIHNlbWFudGljc1xcbj09PT09PT09PT09PT09PT09PT09XFxuKi9cXG4vKipcXG5BZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cXG4qL1xcbmFiYnJbdGl0bGVdIHtcXG5cXHQtd2Via2l0LXRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcXG5cXHQgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcXG59XFxuLyoqXFxuQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIEVkZ2UgYW5kIFNhZmFyaS5cXG4qL1xcbmIsXFxuc3Ryb25nIHtcXG5cXHRmb250LXdlaWdodDogYm9sZGVyO1xcbn1cXG4vKipcXG4xLiBJbXByb3ZlIGNvbnNpc3RlbmN5IG9mIGRlZmF1bHQgZm9udHMgaW4gYWxsIGJyb3dzZXJzLiAoaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9tb2Rlcm4tbm9ybWFsaXplL2lzc3Vlcy8zKVxcbjIuIENvcnJlY3QgdGhlIG9kZCAnZW0nIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cXG4qL1xcbmNvZGUsXFxua2JkLFxcbnNhbXAsXFxucHJlIHtcXG5cXHRmb250LWZhbWlseTpcXG5cXHRcXHR1aS1tb25vc3BhY2UsXFxuXFx0XFx0U0ZNb25vLVJlZ3VsYXIsXFxuXFx0XFx0Q29uc29sYXMsXFxuXFx0XFx0J0xpYmVyYXRpb24gTW9ubycsXFxuXFx0XFx0TWVubG8sXFxuXFx0XFx0bW9ub3NwYWNlOyAvKiAxICovXFxuXFx0Zm9udC1zaXplOiAxZW07IC8qIDIgKi9cXG59XFxuLyoqXFxuQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXFxuKi9cXG5zbWFsbCB7XFxuXFx0Zm9udC1zaXplOiA4MCU7XFxufVxcbi8qKlxcblByZXZlbnQgJ3N1YicgYW5kICdzdXAnIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXFxuKi9cXG5zdWIsXFxuc3VwIHtcXG5cXHRmb250LXNpemU6IDc1JTtcXG5cXHRsaW5lLWhlaWdodDogMDtcXG5cXHRwb3NpdGlvbjogcmVsYXRpdmU7XFxuXFx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xcbn1cXG5zdWIge1xcblxcdGJvdHRvbTogLTAuMjVlbTtcXG59XFxuc3VwIHtcXG5cXHR0b3A6IC0wLjVlbTtcXG59XFxuLypcXG5UYWJ1bGFyIGRhdGFcXG49PT09PT09PT09PT1cXG4qL1xcbi8qKlxcbjEuIFJlbW92ZSB0ZXh0IGluZGVudGF0aW9uIGZyb20gdGFibGUgY29udGVudHMgaW4gQ2hyb21lIGFuZCBTYWZhcmkuIChodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD05OTkwODgsIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0yMDEyOTcpXFxuMi4gQ29ycmVjdCB0YWJsZSBib3JkZXIgY29sb3IgaW5oZXJpdGFuY2UgaW4gYWxsIENocm9tZSBhbmQgU2FmYXJpLiAoaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9OTM1NzI5LCBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTk1MDE2KVxcbiovXFxudGFibGUge1xcblxcdHRleHQtaW5kZW50OiAwOyAvKiAxICovXFxuXFx0Ym9yZGVyLWNvbG9yOiBpbmhlcml0OyAvKiAyICovXFxufVxcbi8qXFxuRm9ybXNcXG49PT09PVxcbiovXFxuLyoqXFxuMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXFxuMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxcbiovXFxuYnV0dG9uLFxcbmlucHV0LFxcbm9wdGdyb3VwLFxcbnNlbGVjdCxcXG50ZXh0YXJlYSB7XFxuXFx0Zm9udC1mYW1pbHk6IGluaGVyaXQ7IC8qIDEgKi9cXG5cXHRmb250LXNpemU6IDEwMCU7IC8qIDEgKi9cXG5cXHRsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xcblxcdG1hcmdpbjogMDsgLyogMiAqL1xcbn1cXG4vKipcXG5SZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UgYW5kIEZpcmVmb3guXFxuMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxcbiovXFxuYnV0dG9uLFxcbnNlbGVjdCB7IC8qIDEgKi9cXG5cXHR0ZXh0LXRyYW5zZm9ybTogbm9uZTtcXG59XFxuLyoqXFxuQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cXG4qL1xcbmJ1dHRvbixcXG5bdHlwZT0nYnV0dG9uJ10sXFxuW3R5cGU9J3Jlc2V0J10sXFxuW3R5cGU9J3N1Ym1pdCddIHtcXG5cXHQtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcXG59XFxuLyoqXFxuUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cXG4qL1xcbjo6LW1vei1mb2N1cy1pbm5lciB7XFxuXFx0Ym9yZGVyLXN0eWxlOiBub25lO1xcblxcdHBhZGRpbmc6IDA7XFxufVxcbi8qKlxcblJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cXG4qL1xcbjotbW96LWZvY3VzcmluZyB7XFxuXFx0b3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xcbn1cXG4vKipcXG5SZW1vdmUgdGhlIGFkZGl0aW9uYWwgJzppbnZhbGlkJyBzdHlsZXMgaW4gRmlyZWZveC5cXG5TZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9tb3ppbGxhL2dlY2tvLWRldi9ibG9iLzJmOWVhY2Q5ZDNkOTk1YzkzN2I0MjUxYTU1NTdkOTVkNDk0YzliZTEvbGF5b3V0L3N0eWxlL3Jlcy9mb3Jtcy5jc3MjTDcyOC1MNzM3XFxuKi9cXG46LW1vei11aS1pbnZhbGlkIHtcXG5cXHRib3gtc2hhZG93OiBub25lO1xcbn1cXG4vKipcXG5SZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0ICdmaWVsZHNldCcgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxcbiovXFxubGVnZW5kIHtcXG5cXHRwYWRkaW5nOiAwO1xcbn1cXG4vKipcXG5BZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSBhbmQgRmlyZWZveC5cXG4qL1xcbnByb2dyZXNzIHtcXG5cXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XFxufVxcbi8qKlxcbkNvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIFNhZmFyaS5cXG4qL1xcbjo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcXG46Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xcblxcdGhlaWdodDogYXV0bztcXG59XFxuLyoqXFxuMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXFxuMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXFxuKi9cXG5bdHlwZT0nc2VhcmNoJ10ge1xcblxcdC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXFxuXFx0b3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cXG59XFxuLyoqXFxuUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxcbiovXFxuOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcXG5cXHQtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XFxufVxcbi8qKlxcbjEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXFxuMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byAnaW5oZXJpdCcgaW4gU2FmYXJpLlxcbiovXFxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XFxuXFx0LXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cXG5cXHRmb250OiBpbmhlcml0OyAvKiAyICovXFxufVxcbi8qXFxuSW50ZXJhY3RpdmVcXG49PT09PT09PT09PVxcbiovXFxuLypcXG5BZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cXG4qL1xcbnN1bW1hcnkge1xcblxcdGRpc3BsYXk6IGxpc3QtaXRlbTtcXG59XFxuLyoqXFxuICogTWFudWFsbHkgZm9ya2VkIGZyb20gU1VJVCBDU1MgQmFzZTogaHR0cHM6Ly9naXRodWIuY29tL3N1aXRjc3MvYmFzZVxcbiAqIEEgdGhpbiBsYXllciBvbiB0b3Agb2Ygbm9ybWFsaXplLmNzcyB0aGF0IHByb3ZpZGVzIGEgc3RhcnRpbmcgcG9pbnQgbW9yZVxcbiAqIHN1aXRhYmxlIGZvciB3ZWIgYXBwbGljYXRpb25zLlxcbiAqL1xcbi8qKlxcbiAqIFJlbW92ZXMgdGhlIGRlZmF1bHQgc3BhY2luZyBhbmQgYm9yZGVyIGZvciBhcHByb3ByaWF0ZSBlbGVtZW50cy5cXG4gKi9cXG5ibG9ja3F1b3RlLFxcbmRsLFxcbmRkLFxcbmgxLFxcbmgyLFxcbmgzLFxcbmg0LFxcbmg1LFxcbmg2LFxcbmhyLFxcbmZpZ3VyZSxcXG5wLFxcbnByZSB7XFxuICBtYXJnaW46IDA7XFxufVxcbmJ1dHRvbiB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XFxufVxcbi8qKlxcbiAqIFdvcmsgYXJvdW5kIGEgRmlyZWZveC9JRSBidWcgd2hlcmUgdGhlIHRyYW5zcGFyZW50IGBidXR0b25gIGJhY2tncm91bmRcXG4gKiByZXN1bHRzIGluIGEgbG9zcyBvZiB0aGUgZGVmYXVsdCBgYnV0dG9uYCBmb2N1cyBzdHlsZXMuXFxuICovXFxuYnV0dG9uOmZvY3VzIHtcXG4gIG91dGxpbmU6IDFweCBkb3R0ZWQ7XFxuICBvdXRsaW5lOiA1cHggYXV0byAtd2Via2l0LWZvY3VzLXJpbmctY29sb3I7XFxufVxcbmZpZWxkc2V0IHtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7XFxufVxcbm9sLFxcbnVsIHtcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbn1cXG4vKipcXG4gKiBUYWlsd2luZCBjdXN0b20gcmVzZXQgc3R5bGVzXFxuICovXFxuLyoqXFxuICogMS4gVXNlIHRoZSB1c2VyJ3MgY29uZmlndXJlZCBgc2Fuc2AgZm9udC1mYW1pbHkgKHdpdGggVGFpbHdpbmQncyBkZWZhdWx0XFxuICogICAgc2Fucy1zZXJpZiBmb250IHN0YWNrIGFzIGEgZmFsbGJhY2spIGFzIGEgc2FuZSBkZWZhdWx0LlxcbiAqIDIuIFVzZSBUYWlsd2luZCdzIGRlZmF1bHQgXFxcIm5vcm1hbFxcXCIgbGluZS1oZWlnaHQgc28gdGhlIHVzZXIgaXNuJ3QgZm9yY2VkXFxuICogICAgdG8gb3ZlcnJpZGUgaXQgdG8gZW5zdXJlIGNvbnNpc3RlbmN5IGV2ZW4gd2hlbiB1c2luZyB0aGUgZGVmYXVsdCB0aGVtZS5cXG4gKi9cXG5odG1sIHtcXG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8sIHNhbnMtc2VyaWY7IC8qIDEgKi9cXG4gIGxpbmUtaGVpZ2h0OiAxLjU7IC8qIDIgKi9cXG59XFxuLyoqXFxuICogSW5oZXJpdCBmb250LWZhbWlseSBhbmQgbGluZS1oZWlnaHQgZnJvbSBgaHRtbGAgc28gdXNlcnMgY2FuIHNldCB0aGVtIGFzXFxuICogYSBjbGFzcyBkaXJlY3RseSBvbiB0aGUgYGh0bWxgIGVsZW1lbnQuXFxuICovXFxuYm9keSB7XFxuICBmb250LWZhbWlseTogaW5oZXJpdDtcXG4gIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xcbn1cXG4vKipcXG4gKiAxLiBQcmV2ZW50IHBhZGRpbmcgYW5kIGJvcmRlciBmcm9tIGFmZmVjdGluZyBlbGVtZW50IHdpZHRoLlxcbiAqXFxuICogICAgV2UgdXNlZCB0byBzZXQgdGhpcyBpbiB0aGUgaHRtbCBlbGVtZW50IGFuZCBpbmhlcml0IGZyb21cXG4gKiAgICB0aGUgcGFyZW50IGVsZW1lbnQgZm9yIGV2ZXJ5dGhpbmcgZWxzZS4gVGhpcyBjYXVzZWQgaXNzdWVzXFxuICogICAgaW4gc2hhZG93LWRvbS1lbmhhbmNlZCBlbGVtZW50cyBsaWtlIDxkZXRhaWxzPiB3aGVyZSB0aGUgY29udGVudFxcbiAqICAgIGlzIHdyYXBwZWQgYnkgYSBkaXYgd2l0aCBib3gtc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgLlxcbiAqXFxuICogICAgaHR0cHM6Ly9naXRodWIuY29tL21vemRldnMvY3NzcmVtZWR5L2lzc3Vlcy80XFxuICpcXG4gKlxcbiAqIDIuIEFsbG93IGFkZGluZyBhIGJvcmRlciB0byBhbiBlbGVtZW50IGJ5IGp1c3QgYWRkaW5nIGEgYm9yZGVyLXdpZHRoLlxcbiAqXFxuICogICAgQnkgZGVmYXVsdCwgdGhlIHdheSB0aGUgYnJvd3NlciBzcGVjaWZpZXMgdGhhdCBhbiBlbGVtZW50IHNob3VsZCBoYXZlIG5vXFxuICogICAgYm9yZGVyIGlzIGJ5IHNldHRpbmcgaXQncyBib3JkZXItc3R5bGUgdG8gYG5vbmVgIGluIHRoZSB1c2VyLWFnZW50XFxuICogICAgc3R5bGVzaGVldC5cXG4gKlxcbiAqICAgIEluIG9yZGVyIHRvIGVhc2lseSBhZGQgYm9yZGVycyB0byBlbGVtZW50cyBieSBqdXN0IHNldHRpbmcgdGhlIGBib3JkZXItd2lkdGhgXFxuICogICAgcHJvcGVydHksIHdlIGNoYW5nZSB0aGUgZGVmYXVsdCBib3JkZXItc3R5bGUgZm9yIGFsbCBlbGVtZW50cyB0byBgc29saWRgLCBhbmRcXG4gKiAgICB1c2UgYm9yZGVyLXdpZHRoIHRvIGhpZGUgdGhlbSBpbnN0ZWFkLiBUaGlzIHdheSBvdXIgYGJvcmRlcmAgdXRpbGl0aWVzIG9ubHlcXG4gKiAgICBuZWVkIHRvIHNldCB0aGUgYGJvcmRlci13aWR0aGAgcHJvcGVydHkgaW5zdGVhZCBvZiB0aGUgZW50aXJlIGBib3JkZXJgXFxuICogICAgc2hvcnRoYW5kLCBtYWtpbmcgb3VyIGJvcmRlciB1dGlsaXRpZXMgbXVjaCBtb3JlIHN0cmFpZ2h0Zm9yd2FyZCB0byBjb21wb3NlLlxcbiAqXFxuICogICAgaHR0cHM6Ly9naXRodWIuY29tL3RhaWx3aW5kY3NzL3RhaWx3aW5kY3NzL3B1bGwvMTE2XFxuICovXFxuKixcXG46OmJlZm9yZSxcXG46OmFmdGVyIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cXG4gIGJvcmRlci13aWR0aDogMDsgLyogMiAqL1xcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDsgLyogMiAqL1xcbiAgYm9yZGVyLWNvbG9yOiAjZWVlZWVlOyAvKiAyICovXFxufVxcbi8qXFxuICogRW5zdXJlIGhvcml6b250YWwgcnVsZXMgYXJlIHZpc2libGUgYnkgZGVmYXVsdFxcbiAqL1xcbmhyIHtcXG4gIGJvcmRlci10b3Atd2lkdGg6IDFweDtcXG59XFxuLyoqXFxuICogVW5kbyB0aGUgYGJvcmRlci1zdHlsZTogbm9uZWAgcmVzZXQgdGhhdCBOb3JtYWxpemUgYXBwbGllcyB0byBpbWFnZXMgc28gdGhhdFxcbiAqIG91ciBgYm9yZGVyLXt3aWR0aH1gIHV0aWxpdGllcyBoYXZlIHRoZSBleHBlY3RlZCBlZmZlY3QuXFxuICpcXG4gKiBUaGUgTm9ybWFsaXplIHJlc2V0IGlzIHVubmVjZXNzYXJ5IGZvciB1cyBzaW5jZSB3ZSBkZWZhdWx0IHRoZSBib3JkZXItd2lkdGhcXG4gKiB0byAwIG9uIGFsbCBlbGVtZW50cy5cXG4gKlxcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS90YWlsd2luZGNzcy90YWlsd2luZGNzcy9pc3N1ZXMvMzYyXFxuICovXFxuaW1nIHtcXG4gIGJvcmRlci1zdHlsZTogc29saWQ7XFxufVxcbnRleHRhcmVhIHtcXG4gIHJlc2l6ZTogdmVydGljYWw7XFxufVxcbmlucHV0OjotbW96LXBsYWNlaG9sZGVyLCB0ZXh0YXJlYTo6LW1vei1wbGFjZWhvbGRlciB7XFxuICBvcGFjaXR5OiAxO1xcbiAgY29sb3I6ICNiZGJkYmQ7XFxufVxcbmlucHV0Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciwgdGV4dGFyZWE6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcXG4gIG9wYWNpdHk6IDE7XFxuICBjb2xvcjogI2JkYmRiZDtcXG59XFxuaW5wdXQ6OnBsYWNlaG9sZGVyLFxcbnRleHRhcmVhOjpwbGFjZWhvbGRlciB7XFxuICBvcGFjaXR5OiAxO1xcbiAgY29sb3I6ICNiZGJkYmQ7XFxufVxcbmJ1dHRvbixcXG5bcm9sZT1cXFwiYnV0dG9uXFxcIl0ge1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG50YWJsZSB7XFxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xcbn1cXG5oMSxcXG5oMixcXG5oMyxcXG5oNCxcXG5oNSxcXG5oNiB7XFxuICBmb250LXNpemU6IGluaGVyaXQ7XFxuICBmb250LXdlaWdodDogaW5oZXJpdDtcXG59XFxuLyoqXFxuICogUmVzZXQgbGlua3MgdG8gb3B0aW1pemUgZm9yIG9wdC1pbiBzdHlsaW5nIGluc3RlYWQgb2ZcXG4gKiBvcHQtb3V0LlxcbiAqL1xcbmEge1xcbiAgY29sb3I6IGluaGVyaXQ7XFxuICB0ZXh0LWRlY29yYXRpb246IGluaGVyaXQ7XFxufVxcbi8qKlxcbiAqIFJlc2V0IGZvcm0gZWxlbWVudCBwcm9wZXJ0aWVzIHRoYXQgYXJlIGVhc3kgdG8gZm9yZ2V0IHRvXFxuICogc3R5bGUgZXhwbGljaXRseSBzbyB5b3UgZG9uJ3QgaW5hZHZlcnRlbnRseSBpbnRyb2R1Y2VcXG4gKiBzdHlsZXMgdGhhdCBkZXZpYXRlIGZyb20geW91ciBkZXNpZ24gc3lzdGVtLiBUaGVzZSBzdHlsZXNcXG4gKiBzdXBwbGVtZW50IGEgcGFydGlhbCByZXNldCB0aGF0IGlzIGFscmVhZHkgYXBwbGllZCBieVxcbiAqIG5vcm1hbGl6ZS5jc3MuXFxuICovXFxuYnV0dG9uLFxcbmlucHV0LFxcbm9wdGdyb3VwLFxcbnNlbGVjdCxcXG50ZXh0YXJlYSB7XFxuICBwYWRkaW5nOiAwO1xcbiAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XFxuICBjb2xvcjogaW5oZXJpdDtcXG59XFxuLyoqXFxuICogVXNlIHRoZSBjb25maWd1cmVkICdtb25vJyBmb250IGZhbWlseSBmb3IgZWxlbWVudHMgdGhhdFxcbiAqIGFyZSBleHBlY3RlZCB0byBiZSByZW5kZXJlZCB3aXRoIGEgbW9ub3NwYWNlIGZvbnQsIGZhbGxpbmdcXG4gKiBiYWNrIHRvIHRoZSBzeXN0ZW0gbW9ub3NwYWNlIHN0YWNrIGlmIHRoZXJlIGlzIG5vIGNvbmZpZ3VyZWRcXG4gKiAnbW9ubycgZm9udCBmYW1pbHkuXFxuICovXFxucHJlLFxcbmNvZGUsXFxua2JkLFxcbnNhbXAge1xcbiAgZm9udC1mYW1pbHk6IHVpLW1vbm9zcGFjZSwgU0ZNb25vLVJlZ3VsYXIsIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLCBcXFwiTGliZXJhdGlvbiBNb25vXFxcIiwgXFxcIkNvdXJpZXIgTmV3XFxcIiwgbW9ub3NwYWNlO1xcbn1cXG4vKipcXG4gKiBNYWtlIHJlcGxhY2VkIGVsZW1lbnRzIGBkaXNwbGF5OiBibG9ja2AgYnkgZGVmYXVsdCBhcyB0aGF0J3NcXG4gKiB0aGUgYmVoYXZpb3IgeW91IHdhbnQgYWxtb3N0IGFsbCBvZiB0aGUgdGltZS4gSW5zcGlyZWQgYnlcXG4gKiBDU1MgUmVtZWR5LCB3aXRoIGBzdmdgIGFkZGVkIGFzIHdlbGwuXFxuICpcXG4gKiBodHRwczovL2dpdGh1Yi5jb20vbW96ZGV2cy9jc3NyZW1lZHkvaXNzdWVzLzE0XFxuICovXFxuaW1nLFxcbnN2ZyxcXG52aWRlbyxcXG5jYW52YXMsXFxuYXVkaW8sXFxuaWZyYW1lLFxcbmVtYmVkLFxcbm9iamVjdCB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XFxufVxcbi8qKlxcbiAqIENvbnN0cmFpbiBpbWFnZXMgYW5kIHZpZGVvcyB0byB0aGUgcGFyZW50IHdpZHRoIGFuZCBwcmVzZXJ2ZVxcbiAqIHRoZWlyIGludHJpbnNpYyBhc3BlY3QgcmF0aW8uXFxuICpcXG4gKiBodHRwczovL2dpdGh1Yi5jb20vbW96ZGV2cy9jc3NyZW1lZHkvaXNzdWVzLzE0XFxuICovXFxuaW1nLFxcbnZpZGVvIHtcXG4gIG1heC13aWR0aDogMTAwJTtcXG4gIGhlaWdodDogYXV0bztcXG59XFxuKnstLXR3LXNoYWRvdzowIDAgIzAwMDA7LS10dy1yaW5nLWluc2V0OnZhcigtLXR3LWVtcHR5LC8qISovIC8qISovKTstLXR3LXJpbmctb2Zmc2V0LXdpZHRoOjBweDstLXR3LXJpbmctb2Zmc2V0LWNvbG9yOiNmZmY7LS10dy1yaW5nLWNvbG9yOnJnYmEoMzMsIDE1MCwgMjQzLCAwLjUpOy0tdHctcmluZy1vZmZzZXQtc2hhZG93OjAgMCAjMDAwMDstLXR3LXJpbmctc2hhZG93OjAgMCAjMDAwMH1cXG4uY29udGFpbmVye3dpZHRoOjEwMCV9XFxuQG1lZGlhIChtaW4td2lkdGg6IDY0MHB4KXtcXG4uY29udGFpbmVye21heC13aWR0aDo2NDBweH19XFxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KXtcXG4uY29udGFpbmVye21heC13aWR0aDo3NjhweH19XFxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCl7XFxuLmNvbnRhaW5lcnttYXgtd2lkdGg6MTAyNHB4fX1cXG5AbWVkaWEgKG1pbi13aWR0aDogMTI4MHB4KXtcXG4uY29udGFpbmVye21heC13aWR0aDoxMjgwcHh9fVxcbkBtZWRpYSAobWluLXdpZHRoOiAxNTM2cHgpe1xcbi5jb250YWluZXJ7bWF4LXdpZHRoOjE1MzZweH19XFxuLnBvaW50ZXItZXZlbnRzLW5vbmV7cG9pbnRlci1ldmVudHM6bm9uZX1cXG4ucG9pbnRlci1ldmVudHMtYXV0b3twb2ludGVyLWV2ZW50czphdXRvfVxcbi5yZWxhdGl2ZXtwb3NpdGlvbjpyZWxhdGl2ZX1cXG4uYWJzb2x1dGV7cG9zaXRpb246YWJzb2x1dGV9XFxuLnN0aWNreXtwb3NpdGlvbjpzdGlja3l9XFxuLmZpeGVke3Bvc2l0aW9uOmZpeGVkfVxcbi5pbnNldC0we3RvcDowcHg7cmlnaHQ6MHB4O2JvdHRvbTowcHg7bGVmdDowcHh9XFxuLnJpZ2h0LTR7cmlnaHQ6MXJlbX1cXG4udG9wLTFcXFxcLzN7dG9wOjMzLjMzMzMzMyV9XFxuLmxlZnQtMHtsZWZ0OjBweH1cXG4ucmlnaHQtMHtyaWdodDowcHh9XFxuLnRvcC0xNnt0b3A6NHJlbX1cXG4uLXRvcC0xXFxcXC41e3RvcDotMC4zNzVyZW19XFxuLi10b3AtMFxcXFwuNXt0b3A6LTAuMTI1cmVtfVxcbi4tdG9wLTF7dG9wOi0wLjI1cmVtfVxcbi4tdG9wLTB7dG9wOjBweH1cXG4udG9wLTFcXFxcLzR7dG9wOjI1JX1cXG4udG9wLTFcXFxcLzJ7dG9wOjUwJX1cXG4ucmlnaHQtMntyaWdodDowLjVyZW19XFxuLnJpZ2h0LTN7cmlnaHQ6MC43NXJlbX1cXG4udG9wLTJ7dG9wOjAuNXJlbX1cXG4udG9wLTB7dG9wOjBweH1cXG4uLWJvdHRvbS00e2JvdHRvbTotMXJlbX1cXG4uLWJvdHRvbS01e2JvdHRvbTotMS4yNXJlbX1cXG4uei0zMHt6LWluZGV4OjMwfVxcbi56LTIwe3otaW5kZXg6MjB9XFxuLnotMTB7ei1pbmRleDoxMH1cXG4uei01MHt6LWluZGV4OjUwfVxcbi56LTQwe3otaW5kZXg6NDB9XFxuLmZsb2F0LWxlZnR7ZmxvYXQ6bGVmdH1cXG4uZmxvYXQtcmlnaHR7ZmxvYXQ6cmlnaHR9XFxuLm14LWF1dG97bWFyZ2luLWxlZnQ6YXV0bzttYXJnaW4tcmlnaHQ6YXV0b31cXG4ubXktMTZ7bWFyZ2luLXRvcDo0cmVtO21hcmdpbi1ib3R0b206NHJlbX1cXG4ubXktNHttYXJnaW4tdG9wOjFyZW07bWFyZ2luLWJvdHRvbToxcmVtfVxcbi5teS02e21hcmdpbi10b3A6MS41cmVtO21hcmdpbi1ib3R0b206MS41cmVtfVxcbi5teC00e21hcmdpbi1sZWZ0OjFyZW07bWFyZ2luLXJpZ2h0OjFyZW19XFxuLm14LTF7bWFyZ2luLWxlZnQ6MC4yNXJlbTttYXJnaW4tcmlnaHQ6MC4yNXJlbX1cXG4ubXktOHttYXJnaW4tdG9wOjJyZW07bWFyZ2luLWJvdHRvbToycmVtfVxcbi5teC01e21hcmdpbi1sZWZ0OjEuMjVyZW07bWFyZ2luLXJpZ2h0OjEuMjVyZW19XFxuLm1iLTE2e21hcmdpbi1ib3R0b206NHJlbX1cXG4ubXQtMzZ7bWFyZ2luLXRvcDo5cmVtfVxcbi5tdC0xMHttYXJnaW4tdG9wOjIuNXJlbX1cXG4ubXQtNXttYXJnaW4tdG9wOjEuMjVyZW19XFxuLm10LTE2e21hcmdpbi10b3A6NHJlbX1cXG4ubXQtNHttYXJnaW4tdG9wOjFyZW19XFxuLm10LTIwe21hcmdpbi10b3A6NXJlbX1cXG4ubWItMTB7bWFyZ2luLWJvdHRvbToyLjVyZW19XFxuLm10LTh7bWFyZ2luLXRvcDoycmVtfVxcbi5tdC0xMnttYXJnaW4tdG9wOjNyZW19XFxuLm1iLTI0e21hcmdpbi1ib3R0b206NnJlbX1cXG4ubXQtNDh7bWFyZ2luLXRvcDoxMnJlbX1cXG4ubXItYXV0b3ttYXJnaW4tcmlnaHQ6YXV0b31cXG4ubWwtYXV0b3ttYXJnaW4tbGVmdDphdXRvfVxcbi5tYi02e21hcmdpbi1ib3R0b206MS41cmVtfVxcbi5tci0ye21hcmdpbi1yaWdodDowLjVyZW19XFxuLm10LTJ7bWFyZ2luLXRvcDowLjVyZW19XFxuLm10LTMye21hcmdpbi10b3A6OHJlbX1cXG4ubXQtNnttYXJnaW4tdG9wOjEuNXJlbX1cXG4ubXItM3ttYXJnaW4tcmlnaHQ6MC43NXJlbX1cXG4uLW10LTY0e21hcmdpbi10b3A6LTE2cmVtfVxcbi5tYi01e21hcmdpbi1ib3R0b206MS4yNXJlbX1cXG4ubWItMTJ7bWFyZ2luLWJvdHRvbTozcmVtfVxcbi5tYi04e21hcmdpbi1ib3R0b206MnJlbX1cXG4ubWItNHttYXJnaW4tYm90dG9tOjFyZW19XFxuLm1iLTJ7bWFyZ2luLWJvdHRvbTowLjVyZW19XFxuLi1tdC0xMHttYXJnaW4tdG9wOi0yLjVyZW19XFxuLi1tdC05e21hcmdpbi10b3A6LTIuMjVyZW19XFxuLm1iLTF7bWFyZ2luLWJvdHRvbTowLjI1cmVtfVxcbi5tbC0xe21hcmdpbi1sZWZ0OjAuMjVyZW19XFxuLm1yLTF7bWFyZ2luLXJpZ2h0OjAuMjVyZW19XFxuLm10LTF7bWFyZ2luLXRvcDowLjI1cmVtfVxcbi5tYi0we21hcmdpbi1ib3R0b206MHB4fVxcbi5tdC0ze21hcmdpbi10b3A6MC43NXJlbX1cXG4ubWwtN3ttYXJnaW4tbGVmdDoxLjc1cmVtfVxcbi5tbC0ye21hcmdpbi1sZWZ0OjAuNXJlbX1cXG4ubXQtMHttYXJnaW4tdG9wOjBweH1cXG4ubWItM3ttYXJnaW4tYm90dG9tOjAuNzVyZW19XFxuLm1yLTR7bWFyZ2luLXJpZ2h0OjFyZW19XFxuLi1tdC0xMnttYXJnaW4tdG9wOi0zcmVtfVxcbi5tci0xMHttYXJnaW4tcmlnaHQ6Mi41cmVtfVxcbi5ibG9ja3tkaXNwbGF5OmJsb2NrfVxcbi5pbmxpbmUtYmxvY2t7ZGlzcGxheTppbmxpbmUtYmxvY2t9XFxuLmZsZXh7ZGlzcGxheTpmbGV4fVxcbi5pbmxpbmUtZmxleHtkaXNwbGF5OmlubGluZS1mbGV4fVxcbi5ncmlke2Rpc3BsYXk6Z3JpZH1cXG4uaGlkZGVue2Rpc3BsYXk6bm9uZX1cXG4uaC0xNntoZWlnaHQ6NHJlbX1cXG4uaC03e2hlaWdodDoxLjc1cmVtfVxcbi5oLTEwe2hlaWdodDoyLjVyZW19XFxuLmgtMzJ7aGVpZ2h0OjhyZW19XFxuLmgtMjB7aGVpZ2h0OjVyZW19XFxuLmgtMTJ7aGVpZ2h0OjNyZW19XFxuLmgtNntoZWlnaHQ6MS41cmVtfVxcbi5oLTh7aGVpZ2h0OjJyZW19XFxuLmgtMjR7aGVpZ2h0OjZyZW19XFxuLmgtMjh7aGVpZ2h0OjdyZW19XFxuLmgtNXtoZWlnaHQ6MS4yNXJlbX1cXG4uaC1zY3JlZW57aGVpZ2h0OjEwMHZofVxcbi5oLWF1dG97aGVpZ2h0OmF1dG99XFxuLmgtZnVsbHtoZWlnaHQ6MTAwJX1cXG4uaC05e2hlaWdodDoyLjI1cmVtfVxcbi5oLTExe2hlaWdodDoyLjc1cmVtfVxcbi5oLTR7aGVpZ2h0OjFyZW19XFxuLmgtcHh7aGVpZ2h0OjFweH1cXG4uaC0ye2hlaWdodDowLjVyZW19XFxuLnctZnVsbHt3aWR0aDoxMDAlfVxcbi53LTQwe3dpZHRoOjEwcmVtfVxcbi53LTcye3dpZHRoOjE4cmVtfVxcbi53LVxcXFxbMjhyZW1cXFxcXXt3aWR0aDoyOHJlbX1cXG4udy02NHt3aWR0aDoxNnJlbX1cXG4udy05Nnt3aWR0aDoyNHJlbX1cXG4udy00OHt3aWR0aDoxMnJlbX1cXG4udy0xNnt3aWR0aDo0cmVtfVxcbi53LTd7d2lkdGg6MS43NXJlbX1cXG4udy0zMnt3aWR0aDo4cmVtfVxcbi53LTEye3dpZHRoOjNyZW19XFxuLnctMTB7d2lkdGg6Mi41cmVtfVxcbi53LTZ7d2lkdGg6MS41cmVtfVxcbi53LTh7d2lkdGg6MnJlbX1cXG4udy0yMHt3aWR0aDo1cmVtfVxcbi53LTI0e3dpZHRoOjZyZW19XFxuLnctMjh7d2lkdGg6N3JlbX1cXG4udy01e3dpZHRoOjEuMjVyZW19XFxuLnctMTBcXFxcLzEye3dpZHRoOjgzLjMzMzMzMyV9XFxuLnctNHt3aWR0aDoxcmVtfVxcbi53LWF1dG97d2lkdGg6YXV0b31cXG4udy0xNHt3aWR0aDozLjVyZW19XFxuLm1pbi13LTB7bWluLXdpZHRoOjBweH1cXG4ubWF4LXctN3hse21heC13aWR0aDo4MHJlbX1cXG4ubWF4LXctZnVsbHttYXgtd2lkdGg6MTAwJX1cXG4ubWF4LXctbWF4e21heC13aWR0aDotd2Via2l0LW1heC1jb250ZW50O21heC13aWR0aDotbW96LW1heC1jb250ZW50O21heC13aWR0aDptYXgtY29udGVudH1cXG4ubWF4LXctc217bWF4LXdpZHRoOjI0cmVtfVxcbi5tYXgtdy02eGx7bWF4LXdpZHRoOjcycmVtfVxcbi5tYXgtdy0zeGx7bWF4LXdpZHRoOjQ4cmVtfVxcbi5tYXgtdy14c3ttYXgtd2lkdGg6MjByZW19XFxuLmZsZXgtYXV0b3tmbGV4OjEgMSBhdXRvfVxcbi5mbGV4LTF7ZmxleDoxIDEgMCV9XFxuLmZsZXgtbm9uZXtmbGV4Om5vbmV9XFxuLmZsZXgtZ3Jvd3tmbGV4LWdyb3c6MX1cXG4udHJhbnNmb3Jtey0tdHctdHJhbnNsYXRlLXg6MDstLXR3LXRyYW5zbGF0ZS15OjA7LS10dy1yb3RhdGU6MDstLXR3LXNrZXcteDowOy0tdHctc2tldy15OjA7LS10dy1zY2FsZS14OjE7LS10dy1zY2FsZS15OjE7dHJhbnNmb3JtOnRyYW5zbGF0ZVgodmFyKC0tdHctdHJhbnNsYXRlLXgpKSB0cmFuc2xhdGVZKHZhcigtLXR3LXRyYW5zbGF0ZS15KSkgcm90YXRlKHZhcigtLXR3LXJvdGF0ZSkpIHNrZXdYKHZhcigtLXR3LXNrZXcteCkpIHNrZXdZKHZhcigtLXR3LXNrZXcteSkpIHNjYWxlWCh2YXIoLS10dy1zY2FsZS14KSkgc2NhbGVZKHZhcigtLXR3LXNjYWxlLXkpKX1cXG4uLXRyYW5zbGF0ZS15LTFcXFxcLzN7LS10dy10cmFuc2xhdGUteTotMzMuMzMzMzMzJX1cXG4uLXRyYW5zbGF0ZS15LTFcXFxcLzJ7LS10dy10cmFuc2xhdGUteTotNTAlfVxcbi50cmFuc2xhdGUteS0wey0tdHctdHJhbnNsYXRlLXk6MHB4fVxcbi4tdHJhbnNsYXRlLXktMTB7LS10dy10cmFuc2xhdGUteTotMi41cmVtfVxcbi5jdXJzb3ItcG9pbnRlcntjdXJzb3I6cG9pbnRlcn1cXG4uY3Vyc29yLW5vdC1hbGxvd2Vke2N1cnNvcjpub3QtYWxsb3dlZH1cXG4uc2VsZWN0LW5vbmV7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lfVxcbi5yZXNpemUtbm9uZXtyZXNpemU6bm9uZX1cXG4ubGlzdC1ub25le2xpc3Qtc3R5bGUtdHlwZTpub25lfVxcbi5mbGV4LWNvbHtmbGV4LWRpcmVjdGlvbjpjb2x1bW59XFxuLmZsZXgtd3JhcHtmbGV4LXdyYXA6d3JhcH1cXG4ucGxhY2UtaXRlbXMtY2VudGVye3BsYWNlLWl0ZW1zOmNlbnRlcn1cXG4uaXRlbXMtY2VudGVye2FsaWduLWl0ZW1zOmNlbnRlcn1cXG4uaXRlbXMtZW5ke2FsaWduLWl0ZW1zOmZsZXgtZW5kfVxcbi5pdGVtcy1zdGFydHthbGlnbi1pdGVtczpmbGV4LXN0YXJ0fVxcbi5qdXN0aWZ5LWJldHdlZW57anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW59XFxuLmp1c3RpZnktY2VudGVye2p1c3RpZnktY29udGVudDpjZW50ZXJ9XFxuLmp1c3RpZnktc3RhcnR7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnR9XFxuLmp1c3RpZnktZW5ke2p1c3RpZnktY29udGVudDpmbGV4LWVuZH1cXG4uZ2FwLTh7Z2FwOjJyZW19XFxuLmdhcC0xMHtnYXA6Mi41cmVtfVxcbi5nYXAtNHtnYXA6MXJlbX1cXG4uZ2FwLTJ7Z2FwOjAuNXJlbX1cXG4uZ2FwLTN7Z2FwOjAuNzVyZW19XFxuLmdhcC0xe2dhcDowLjI1cmVtfVxcbi5nYXAteC0yey1tb3otY29sdW1uLWdhcDowLjVyZW07Y29sdW1uLWdhcDowLjVyZW19XFxuLmdhcC15LTh7cm93LWdhcDoycmVtfVxcbi5nYXAteC0yNHstbW96LWNvbHVtbi1nYXA6NnJlbTtjb2x1bW4tZ2FwOjZyZW19XFxuLmdhcC15LTR7cm93LWdhcDoxcmVtfVxcbi5nYXAteC04ey1tb3otY29sdW1uLWdhcDoycmVtO2NvbHVtbi1nYXA6MnJlbX1cXG4uc3BhY2UteS00ID4gOm5vdChbaGlkZGVuXSkgfiA6bm90KFtoaWRkZW5dKXstLXR3LXNwYWNlLXktcmV2ZXJzZTowO21hcmdpbi10b3A6Y2FsYygxcmVtICogY2FsYygxIC0gdmFyKC0tdHctc3BhY2UteS1yZXZlcnNlKSkpO21hcmdpbi1ib3R0b206Y2FsYygxcmVtICogdmFyKC0tdHctc3BhY2UteS1yZXZlcnNlKSl9XFxuLm92ZXJmbG93LWhpZGRlbntvdmVyZmxvdzpoaWRkZW59XFxuLm92ZXJmbG93LXktc2Nyb2xse292ZXJmbG93LXk6c2Nyb2xsfVxcbi5vdmVyZmxvdy14LWhpZGRlbntvdmVyZmxvdy14OmhpZGRlbn1cXG4ub3ZlcmZsb3cteS1hdXRve292ZXJmbG93LXk6YXV0b31cXG4ud2hpdGVzcGFjZS1ub3dyYXB7d2hpdGUtc3BhY2U6bm93cmFwfVxcbi5icmVhay13b3Jkc3tvdmVyZmxvdy13cmFwOmJyZWFrLXdvcmR9XFxuLnJvdW5kZWR7Ym9yZGVyLXJhZGl1czowLjI1cmVtfVxcbi5yb3VuZGVkLWxne2JvcmRlci1yYWRpdXM6MC41cmVtfVxcbi5yb3VuZGVkLWZ1bGx7Ym9yZGVyLXJhZGl1czo5OTk5cHh9XFxuLnJvdW5kZWQteGx7Ym9yZGVyLXJhZGl1czowLjc1cmVtfVxcbi5yb3VuZGVkLW1ke2JvcmRlci1yYWRpdXM6MC4zNzVyZW19XFxuLnJvdW5kZWQtc217Ym9yZGVyLXJhZGl1czowLjEyNXJlbX1cXG4ucm91bmRlZC10e2JvcmRlci10b3AtbGVmdC1yYWRpdXM6MC4yNXJlbTtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowLjI1cmVtfVxcbi5ib3JkZXJ7Ym9yZGVyLXdpZHRoOjFweH1cXG4uYm9yZGVyLTB7Ym9yZGVyLXdpZHRoOjBweH1cXG4uYm9yZGVyLXQtMHtib3JkZXItdG9wLXdpZHRoOjBweH1cXG4uYm9yZGVyLXItMHtib3JkZXItcmlnaHQtd2lkdGg6MHB4fVxcbi5ib3JkZXItbC0we2JvcmRlci1sZWZ0LXdpZHRoOjBweH1cXG4uYm9yZGVyLXR7Ym9yZGVyLXRvcC13aWR0aDoxcHh9XFxuLmJvcmRlci1ie2JvcmRlci1ib3R0b20td2lkdGg6MXB4fVxcbi5ib3JkZXItYi0we2JvcmRlci1ib3R0b20td2lkdGg6MHB4fVxcbi5ib3JkZXItcntib3JkZXItcmlnaHQtd2lkdGg6MXB4fVxcbi5ib3JkZXItc29saWR7Ym9yZGVyLXN0eWxlOnNvbGlkfVxcbi5ib3JkZXItbm9uZXtib3JkZXItc3R5bGU6bm9uZX1cXG4uYm9yZGVyLWJsdWUtZ3JheS01MHstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjM2LCAyMzksIDI0MSwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uYm9yZGVyLWdyYXktMjAwey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyMzgsIDIzOCwgMjM4LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ib3JkZXItZ3JheS0zMDB7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDIyNCwgMjI0LCAyMjQsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmJvcmRlci1ibHVlLWdyYXktNTAwey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSg5NiwgMTI1LCAxMzksIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmJvcmRlci1ncmF5LTUwMHstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMTU4LCAxNTgsIDE1OCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uYm9yZGVyLWJyb3duLTUwMHstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMTIxLCA4NSwgNzIsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmJvcmRlci1kZWVwLW9yYW5nZS01MDB7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDI1NSwgODcsIDM0LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ib3JkZXItb3JhbmdlLTUwMHstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjU1LCAxNTIsIDAsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmJvcmRlci1hbWJlci01MDB7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDI1NSwgMTkzLCA3LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ib3JkZXIteWVsbG93LTYwMHstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjUzLCAyMTYsIDUzLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ib3JkZXItbGltZS01MDB7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDIwNSwgMjIwLCA1NywgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uYm9yZGVyLWxpZ2h0LWdyZWVuLTUwMHstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMTM5LCAxOTUsIDc0LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ib3JkZXItZ3JlZW4tNTAwey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSg3NiwgMTc1LCA4MCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uYm9yZGVyLXRlYWwtNTAwey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgwLCAxNTAsIDEzNiwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uYm9yZGVyLWN5YW4tNTAwey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgwLCAxODgsIDIxMiwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uYm9yZGVyLWxpZ2h0LWJsdWUtNTAwey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgzLCAxNjksIDI0NCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uYm9yZGVyLWJsdWUtNTAwey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgzMywgMTUwLCAyNDMsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmJvcmRlci1pbmRpZ28tNTAwey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSg2MywgODEsIDE4MSwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uYm9yZGVyLWRlZXAtcHVycGxlLTUwMHstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMTAzLCA1OCwgMTgzLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ib3JkZXItcHVycGxlLTUwMHstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMTU2LCAzOSwgMTc2LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ib3JkZXItcGluay01MDB7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDIzMywgMzAsIDk5LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ib3JkZXItcmVkLTUwMHstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjQ0LCA2NywgNTQsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmJvcmRlci10cmFuc3BhcmVudHtib3JkZXItY29sb3I6dHJhbnNwYXJlbnR9XFxuLmJnLXdoaXRley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDI1NSwgMjU1LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWdyYXktMTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNDUsIDI0NSwgMjQ1LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLW9yYW5nZS05MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIzMCwgODEsIDAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctbGlnaHQtYmx1ZS01MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDMsIDE2OSwgMjQ0LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWdyYXktOTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgzMywgMzMsIDMzLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLXllbGxvdy02MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1MywgMjE2LCA1MywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1yZWQtNzAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMTEsIDQ3LCA0NywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1ncmVlbi01MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDc2LCAxNzUsIDgwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWJsdWUtZ3JheS04MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDU1LCA3MSwgNzksIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctYmx1ZS1ncmF5LTUwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoOTYsIDEyNSwgMTM5LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWdyYXktNTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxNTgsIDE1OCwgMTU4LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWJyb3duLTUwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTIxLCA4NSwgNzIsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctZGVlcC1vcmFuZ2UtNTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDg3LCAzNCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1vcmFuZ2UtNTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDE1MiwgMCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1hbWJlci01MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwgMTkzLCA3LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWxpbWUtNTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMDUsIDIyMCwgNTcsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctbGlnaHQtZ3JlZW4tNTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxMzksIDE5NSwgNzQsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctdGVhbC01MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsIDE1MCwgMTM2LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWN5YW4tNTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLCAxODgsIDIxMiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1ibHVlLTUwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMzMsIDE1MCwgMjQzLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWluZGlnby01MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDYzLCA4MSwgMTgxLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWRlZXAtcHVycGxlLTUwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTAzLCA1OCwgMTgzLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLXB1cnBsZS01MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDE1NiwgMzksIDE3NiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1waW5rLTUwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjMzLCAzMCwgOTksIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctcmVkLTUwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjQ0LCA2NywgNTQsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctdHJhbnNwYXJlbnR7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudH1cXG4uYmctZ3JheS0yMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIzOCwgMjM4LCAyMzgsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctYmx1ZS1ncmF5LTEwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjA3LCAyMTYsIDIyMCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1icm93bi0xMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIxNSwgMjA0LCAyMDAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctZGVlcC1vcmFuZ2UtMTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDIwNCwgMTg4LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLW9yYW5nZS0xMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwgMjI0LCAxNzgsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctYW1iZXItMTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDIzNiwgMTc5LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLXllbGxvdy0xMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwgMjQ5LCAxOTYsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctbGltZS0xMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI0MCwgMjQ0LCAxOTUsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctbGlnaHQtZ3JlZW4tMTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMjAsIDIzNywgMjAwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWdyZWVuLTEwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjAwLCAyMzAsIDIwMSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy10ZWFsLTEwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTc4LCAyMjMsIDIxOSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1jeWFuLTEwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTc4LCAyMzUsIDI0MiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1saWdodC1ibHVlLTEwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTc5LCAyMjksIDI1MiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1ibHVlLTEwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTg3LCAyMjIsIDI1MSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1pbmRpZ28tMTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxOTcsIDIwMiwgMjMzLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWRlZXAtcHVycGxlLTEwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjA5LCAxOTYsIDIzMywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1wdXJwbGUtMTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMjUsIDE5MCwgMjMxLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLXBpbmstMTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNDgsIDE4NywgMjA4LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLXJlZC0xMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwgMjA1LCAyMTAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctYmx1ZS1ncmF5LTkwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMzgsIDUwLCA1NiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1icm93bi05MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDYyLCAzOSwgMzUsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctZGVlcC1vcmFuZ2UtOTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxOTEsIDU0LCAxMiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1hbWJlci05MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwgMTExLCAwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLXllbGxvdy05MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI0NSwgMTI3LCAyMywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1saW1lLTkwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTMwLCAxMTksIDIzLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWxpZ2h0LWdyZWVuLTkwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoNTEsIDEwNSwgMzAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctZ3JlZW4tOTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNywgOTQsIDMyLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLXRlYWwtOTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLCA3NywgNjQsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctY3lhbi05MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsIDk2LCAxMDAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctbGlnaHQtYmx1ZS05MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEsIDg3LCAxNTUsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctYmx1ZS05MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEzLCA3MSwgMTYxLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWluZGlnby05MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI2LCAzNSwgMTI2LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWRlZXAtcHVycGxlLTkwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoNDksIDI3LCAxNDYsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctcHVycGxlLTkwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoNzQsIDIwLCAxNDAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctcGluay05MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEzNiwgMTQsIDc5LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLXJlZC05MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDE4MywgMjgsIDI4LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWJsYWNrey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLCAwLCAwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWdyYXktNzAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSg5NywgOTcsIDk3LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWJsdWUtZ3JheS0yMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDE3NiwgMTkwLCAxOTcsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctYnJvd24tMjAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxODgsIDE3MCwgMTY0LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWRlZXAtb3JhbmdlLTIwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAxNzEsIDE0NSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1vcmFuZ2UtMjAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDIwNCwgMTI4LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWFtYmVyLTIwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAyMjQsIDEzMCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy15ZWxsb3ctMjAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDI0NSwgMTU3LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWxpbWUtMjAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMzAsIDIzOCwgMTU2LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWxpZ2h0LWdyZWVuLTIwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTk3LCAyMjUsIDE2NSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1ncmVlbi0yMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDE2NSwgMjE0LCAxNjcsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctdGVhbC0yMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEyOCwgMjAzLCAxOTYsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctY3lhbi0yMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEyOCwgMjIyLCAyMzQsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctbGlnaHQtYmx1ZS0yMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEyOSwgMjEyLCAyNTAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctYmx1ZS0yMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDE0NCwgMjAyLCAyNDksIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctaW5kaWdvLTIwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTU5LCAxNjgsIDIxOCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1kZWVwLXB1cnBsZS0yMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDE3OSwgMTU3LCAyMTksIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctcHVycGxlLTIwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjA2LCAxNDcsIDIxNiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1waW5rLTIwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjQ0LCAxNDMsIDE3NywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1yZWQtMjAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMzksIDE1NCwgMTU0LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLW9wYWNpdHktMjB7LS10dy1iZy1vcGFjaXR5OjAuMn1cXG4uYmctb3BhY2l0eS04MHstLXR3LWJnLW9wYWNpdHk6MC44fVxcbi5iZy1ncmFkaWVudC10by10cntiYWNrZ3JvdW5kLWltYWdlOmxpbmVhci1ncmFkaWVudCh0byB0b3AgcmlnaHQsIHZhcigtLXR3LWdyYWRpZW50LXN0b3BzKSl9XFxuLmZyb20tYmx1ZS1ncmF5LTUwMHstLXR3LWdyYWRpZW50LWZyb206IzYwN2Q4YjstLXR3LWdyYWRpZW50LXN0b3BzOnZhcigtLXR3LWdyYWRpZW50LWZyb20pLCB2YXIoLS10dy1ncmFkaWVudC10bywgcmdiYSg5NiwgMTI1LCAxMzksIDApKX1cXG4uZnJvbS1ncmF5LTUwMHstLXR3LWdyYWRpZW50LWZyb206IzllOWU5ZTstLXR3LWdyYWRpZW50LXN0b3BzOnZhcigtLXR3LWdyYWRpZW50LWZyb20pLCB2YXIoLS10dy1ncmFkaWVudC10bywgcmdiYSgxNTgsIDE1OCwgMTU4LCAwKSl9XFxuLmZyb20tYnJvd24tNTAwey0tdHctZ3JhZGllbnQtZnJvbTojNzk1NTQ4Oy0tdHctZ3JhZGllbnQtc3RvcHM6dmFyKC0tdHctZ3JhZGllbnQtZnJvbSksIHZhcigtLXR3LWdyYWRpZW50LXRvLCByZ2JhKDEyMSwgODUsIDcyLCAwKSl9XFxuLmZyb20tZGVlcC1vcmFuZ2UtNTAwey0tdHctZ3JhZGllbnQtZnJvbTojZmY1NzIyOy0tdHctZ3JhZGllbnQtc3RvcHM6dmFyKC0tdHctZ3JhZGllbnQtZnJvbSksIHZhcigtLXR3LWdyYWRpZW50LXRvLCByZ2JhKDI1NSwgODcsIDM0LCAwKSl9XFxuLmZyb20tb3JhbmdlLTUwMHstLXR3LWdyYWRpZW50LWZyb206I2ZmOTgwMDstLXR3LWdyYWRpZW50LXN0b3BzOnZhcigtLXR3LWdyYWRpZW50LWZyb20pLCB2YXIoLS10dy1ncmFkaWVudC10bywgcmdiYSgyNTUsIDE1MiwgMCwgMCkpfVxcbi5mcm9tLWFtYmVyLTUwMHstLXR3LWdyYWRpZW50LWZyb206I2ZmYzEwNzstLXR3LWdyYWRpZW50LXN0b3BzOnZhcigtLXR3LWdyYWRpZW50LWZyb20pLCB2YXIoLS10dy1ncmFkaWVudC10bywgcmdiYSgyNTUsIDE5MywgNywgMCkpfVxcbi5mcm9tLXllbGxvdy02MDB7LS10dy1ncmFkaWVudC1mcm9tOiNmZGQ4MzU7LS10dy1ncmFkaWVudC1zdG9wczp2YXIoLS10dy1ncmFkaWVudC1mcm9tKSwgdmFyKC0tdHctZ3JhZGllbnQtdG8sIHJnYmEoMjUzLCAyMTYsIDUzLCAwKSl9XFxuLmZyb20tbGltZS01MDB7LS10dy1ncmFkaWVudC1mcm9tOiNjZGRjMzk7LS10dy1ncmFkaWVudC1zdG9wczp2YXIoLS10dy1ncmFkaWVudC1mcm9tKSwgdmFyKC0tdHctZ3JhZGllbnQtdG8sIHJnYmEoMjA1LCAyMjAsIDU3LCAwKSl9XFxuLmZyb20tbGlnaHQtZ3JlZW4tNTAwey0tdHctZ3JhZGllbnQtZnJvbTojOGJjMzRhOy0tdHctZ3JhZGllbnQtc3RvcHM6dmFyKC0tdHctZ3JhZGllbnQtZnJvbSksIHZhcigtLXR3LWdyYWRpZW50LXRvLCByZ2JhKDEzOSwgMTk1LCA3NCwgMCkpfVxcbi5mcm9tLWdyZWVuLTUwMHstLXR3LWdyYWRpZW50LWZyb206IzRjYWY1MDstLXR3LWdyYWRpZW50LXN0b3BzOnZhcigtLXR3LWdyYWRpZW50LWZyb20pLCB2YXIoLS10dy1ncmFkaWVudC10bywgcmdiYSg3NiwgMTc1LCA4MCwgMCkpfVxcbi5mcm9tLXRlYWwtNTAwey0tdHctZ3JhZGllbnQtZnJvbTojMDA5Njg4Oy0tdHctZ3JhZGllbnQtc3RvcHM6dmFyKC0tdHctZ3JhZGllbnQtZnJvbSksIHZhcigtLXR3LWdyYWRpZW50LXRvLCByZ2JhKDAsIDE1MCwgMTM2LCAwKSl9XFxuLmZyb20tY3lhbi01MDB7LS10dy1ncmFkaWVudC1mcm9tOiMwMGJjZDQ7LS10dy1ncmFkaWVudC1zdG9wczp2YXIoLS10dy1ncmFkaWVudC1mcm9tKSwgdmFyKC0tdHctZ3JhZGllbnQtdG8sIHJnYmEoMCwgMTg4LCAyMTIsIDApKX1cXG4uZnJvbS1saWdodC1ibHVlLTUwMHstLXR3LWdyYWRpZW50LWZyb206IzAzYTlmNDstLXR3LWdyYWRpZW50LXN0b3BzOnZhcigtLXR3LWdyYWRpZW50LWZyb20pLCB2YXIoLS10dy1ncmFkaWVudC10bywgcmdiYSgzLCAxNjksIDI0NCwgMCkpfVxcbi5mcm9tLWJsdWUtNTAwey0tdHctZ3JhZGllbnQtZnJvbTojMjE5NmYzOy0tdHctZ3JhZGllbnQtc3RvcHM6dmFyKC0tdHctZ3JhZGllbnQtZnJvbSksIHZhcigtLXR3LWdyYWRpZW50LXRvLCByZ2JhKDMzLCAxNTAsIDI0MywgMCkpfVxcbi5mcm9tLWluZGlnby01MDB7LS10dy1ncmFkaWVudC1mcm9tOiMzZjUxYjU7LS10dy1ncmFkaWVudC1zdG9wczp2YXIoLS10dy1ncmFkaWVudC1mcm9tKSwgdmFyKC0tdHctZ3JhZGllbnQtdG8sIHJnYmEoNjMsIDgxLCAxODEsIDApKX1cXG4uZnJvbS1kZWVwLXB1cnBsZS01MDB7LS10dy1ncmFkaWVudC1mcm9tOiM2NzNhYjc7LS10dy1ncmFkaWVudC1zdG9wczp2YXIoLS10dy1ncmFkaWVudC1mcm9tKSwgdmFyKC0tdHctZ3JhZGllbnQtdG8sIHJnYmEoMTAzLCA1OCwgMTgzLCAwKSl9XFxuLmZyb20tcHVycGxlLTUwMHstLXR3LWdyYWRpZW50LWZyb206IzljMjdiMDstLXR3LWdyYWRpZW50LXN0b3BzOnZhcigtLXR3LWdyYWRpZW50LWZyb20pLCB2YXIoLS10dy1ncmFkaWVudC10bywgcmdiYSgxNTYsIDM5LCAxNzYsIDApKX1cXG4uZnJvbS1waW5rLTUwMHstLXR3LWdyYWRpZW50LWZyb206I2U5MWU2MzstLXR3LWdyYWRpZW50LXN0b3BzOnZhcigtLXR3LWdyYWRpZW50LWZyb20pLCB2YXIoLS10dy1ncmFkaWVudC10bywgcmdiYSgyMzMsIDMwLCA5OSwgMCkpfVxcbi5mcm9tLXJlZC01MDB7LS10dy1ncmFkaWVudC1mcm9tOiNmNDQzMzY7LS10dy1ncmFkaWVudC1zdG9wczp2YXIoLS10dy1ncmFkaWVudC1mcm9tKSwgdmFyKC0tdHctZ3JhZGllbnQtdG8sIHJnYmEoMjQ0LCA2NywgNTQsIDApKX1cXG4uZnJvbS1saWdodC1ibHVlLTcwMHstLXR3LWdyYWRpZW50LWZyb206IzAyODhkMTstLXR3LWdyYWRpZW50LXN0b3BzOnZhcigtLXR3LWdyYWRpZW50LWZyb20pLCB2YXIoLS10dy1ncmFkaWVudC10bywgcmdiYSgyLCAxMzYsIDIwOSwgMCkpfVxcbi50by1ibHVlLWdyYXktNzAwey0tdHctZ3JhZGllbnQtdG86IzQ1NWE2NH1cXG4udG8tZ3JheS03MDB7LS10dy1ncmFkaWVudC10bzojNjE2MTYxfVxcbi50by1icm93bi03MDB7LS10dy1ncmFkaWVudC10bzojNWQ0MDM3fVxcbi50by1kZWVwLW9yYW5nZS03MDB7LS10dy1ncmFkaWVudC10bzojZTY0YTE5fVxcbi50by1vcmFuZ2UtNzAwey0tdHctZ3JhZGllbnQtdG86I2Y1N2MwMH1cXG4udG8tYW1iZXItNzAwey0tdHctZ3JhZGllbnQtdG86I2ZmYTAwMH1cXG4udG8teWVsbG93LTgwMHstLXR3LWdyYWRpZW50LXRvOiNmOWE4MjV9XFxuLnRvLWxpbWUtNzAwey0tdHctZ3JhZGllbnQtdG86I2FmYjQyYn1cXG4udG8tbGlnaHQtZ3JlZW4tNzAwey0tdHctZ3JhZGllbnQtdG86IzY4OWYzOH1cXG4udG8tZ3JlZW4tNzAwey0tdHctZ3JhZGllbnQtdG86IzM4OGUzY31cXG4udG8tdGVhbC03MDB7LS10dy1ncmFkaWVudC10bzojMDA3OTZifVxcbi50by1jeWFuLTcwMHstLXR3LWdyYWRpZW50LXRvOiMwMDk3YTd9XFxuLnRvLWxpZ2h0LWJsdWUtNzAwey0tdHctZ3JhZGllbnQtdG86IzAyODhkMX1cXG4udG8tYmx1ZS03MDB7LS10dy1ncmFkaWVudC10bzojMTk3NmQyfVxcbi50by1pbmRpZ28tNzAwey0tdHctZ3JhZGllbnQtdG86IzMwM2Y5Zn1cXG4udG8tZGVlcC1wdXJwbGUtNzAwey0tdHctZ3JhZGllbnQtdG86IzUxMmRhOH1cXG4udG8tcHVycGxlLTcwMHstLXR3LWdyYWRpZW50LXRvOiM3YjFmYTJ9XFxuLnRvLXBpbmstNzAwey0tdHctZ3JhZGllbnQtdG86I2MyMTg1Yn1cXG4udG8tcmVkLTcwMHstLXR3LWdyYWRpZW50LXRvOiNkMzJmMmZ9XFxuLnRvLWxpZ2h0LWJsdWUtNTAwey0tdHctZ3JhZGllbnQtdG86IzAzYTlmNH1cXG4ucC00e3BhZGRpbmc6MXJlbX1cXG4ucC0ze3BhZGRpbmc6MC43NXJlbX1cXG4ucC04e3BhZGRpbmc6MnJlbX1cXG4ucC0ye3BhZGRpbmc6MC41cmVtfVxcbi5wLTB7cGFkZGluZzowcHh9XFxuLnAtMlxcXFwuNXtwYWRkaW5nOjAuNjI1cmVtfVxcbi5wLTZ7cGFkZGluZzoxLjVyZW19XFxuLnAtMXtwYWRkaW5nOjAuMjVyZW19XFxuLnAtNXtwYWRkaW5nOjEuMjVyZW19XFxuLnAtMTB7cGFkZGluZzoyLjVyZW19XFxuLnB4LTR7cGFkZGluZy1sZWZ0OjFyZW07cGFkZGluZy1yaWdodDoxcmVtfVxcbi5weS0xNntwYWRkaW5nLXRvcDo0cmVtO3BhZGRpbmctYm90dG9tOjRyZW19XFxuLnB5LTF7cGFkZGluZy10b3A6MC4yNXJlbTtwYWRkaW5nLWJvdHRvbTowLjI1cmVtfVxcbi5weS04e3BhZGRpbmctdG9wOjJyZW07cGFkZGluZy1ib3R0b206MnJlbX1cXG4ucHktMjh7cGFkZGluZy10b3A6N3JlbTtwYWRkaW5nLWJvdHRvbTo3cmVtfVxcbi5weC0xMntwYWRkaW5nLWxlZnQ6M3JlbTtwYWRkaW5nLXJpZ2h0OjNyZW19XFxuLnB4LTJcXFxcLjV7cGFkZGluZy1sZWZ0OjAuNjI1cmVtO3BhZGRpbmctcmlnaHQ6MC42MjVyZW19XFxuLnB4LTJ7cGFkZGluZy1sZWZ0OjAuNXJlbTtwYWRkaW5nLXJpZ2h0OjAuNXJlbX1cXG4ucHktMntwYWRkaW5nLXRvcDowLjVyZW07cGFkZGluZy1ib3R0b206MC41cmVtfVxcbi5weS0yMHtwYWRkaW5nLXRvcDo1cmVtO3BhZGRpbmctYm90dG9tOjVyZW19XFxuLnB5LTI0e3BhZGRpbmctdG9wOjZyZW07cGFkZGluZy1ib3R0b206NnJlbX1cXG4ucHktNXtwYWRkaW5nLXRvcDoxLjI1cmVtO3BhZGRpbmctYm90dG9tOjEuMjVyZW19XFxuLnB5LTFcXFxcLjV7cGFkZGluZy10b3A6MC4zNzVyZW07cGFkZGluZy1ib3R0b206MC4zNzVyZW19XFxuLnB5LTJcXFxcLjV7cGFkZGluZy10b3A6MC42MjVyZW07cGFkZGluZy1ib3R0b206MC42MjVyZW19XFxuLnB4LTZ7cGFkZGluZy1sZWZ0OjEuNXJlbTtwYWRkaW5nLXJpZ2h0OjEuNXJlbX1cXG4ucHktM3twYWRkaW5nLXRvcDowLjc1cmVtO3BhZGRpbmctYm90dG9tOjAuNzVyZW19XFxuLnB4LTd7cGFkZGluZy1sZWZ0OjEuNzVyZW07cGFkZGluZy1yaWdodDoxLjc1cmVtfVxcbi5weS00e3BhZGRpbmctdG9wOjFyZW07cGFkZGluZy1ib3R0b206MXJlbX1cXG4ucHgtOHtwYWRkaW5nLWxlZnQ6MnJlbTtwYWRkaW5nLXJpZ2h0OjJyZW19XFxuLnB4LTl7cGFkZGluZy1sZWZ0OjIuMjVyZW07cGFkZGluZy1yaWdodDoyLjI1cmVtfVxcbi5weC0ze3BhZGRpbmctbGVmdDowLjc1cmVtO3BhZGRpbmctcmlnaHQ6MC43NXJlbX1cXG4ucHgtMHtwYWRkaW5nLWxlZnQ6MHB4O3BhZGRpbmctcmlnaHQ6MHB4fVxcbi5weC01e3BhZGRpbmctbGVmdDoxLjI1cmVtO3BhZGRpbmctcmlnaHQ6MS4yNXJlbX1cXG4ucHgtMVxcXFwuNXtwYWRkaW5nLWxlZnQ6MC4zNzVyZW07cGFkZGluZy1yaWdodDowLjM3NXJlbX1cXG4ucHgtMXtwYWRkaW5nLWxlZnQ6MC4yNXJlbTtwYWRkaW5nLXJpZ2h0OjAuMjVyZW19XFxuLnB0LTI4e3BhZGRpbmctdG9wOjdyZW19XFxuLnBiLTM2e3BhZGRpbmctYm90dG9tOjlyZW19XFxuLnB0LTh7cGFkZGluZy10b3A6MnJlbX1cXG4ucGItNntwYWRkaW5nLWJvdHRvbToxLjVyZW19XFxuLnBiLTJ7cGFkZGluZy1ib3R0b206MC41cmVtfVxcbi5wdC02e3BhZGRpbmctdG9wOjEuNXJlbX1cXG4ucGItNHtwYWRkaW5nLWJvdHRvbToxcmVtfVxcbi5wYi0yMHtwYWRkaW5nLWJvdHRvbTo1cmVtfVxcbi5wdC0zMntwYWRkaW5nLXRvcDo4cmVtfVxcbi5wdC00OHtwYWRkaW5nLXRvcDoxMnJlbX1cXG4ucHQtMjR7cGFkZGluZy10b3A6NnJlbX1cXG4ucGItNjR7cGFkZGluZy1ib3R0b206MTZyZW19XFxuLnBiLTE2e3BhZGRpbmctYm90dG9tOjRyZW19XFxuLnByLTEye3BhZGRpbmctcmlnaHQ6M3JlbX1cXG4ucGwtNHtwYWRkaW5nLWxlZnQ6MXJlbX1cXG4ucHQtNHtwYWRkaW5nLXRvcDoxcmVtfVxcbi5wdC05e3BhZGRpbmctdG9wOjIuMjVyZW19XFxuLnBsLTB7cGFkZGluZy1sZWZ0OjBweH1cXG4ucHQtMTB7cGFkZGluZy10b3A6Mi41cmVtfVxcbi5wbC01e3BhZGRpbmctbGVmdDoxLjI1cmVtfVxcbi5wci0ze3BhZGRpbmctcmlnaHQ6MC43NXJlbX1cXG4ucGwtN3twYWRkaW5nLWxlZnQ6MS43NXJlbX1cXG4ucHItNXtwYWRkaW5nLXJpZ2h0OjEuMjVyZW19XFxuLnBsLTh7cGFkZGluZy1sZWZ0OjJyZW19XFxuLnByLTZ7cGFkZGluZy1yaWdodDoxLjVyZW19XFxuLnB0LTFcXFxcLjV7cGFkZGluZy10b3A6MC4zNzVyZW19XFxuLnBiLTBcXFxcLjV7cGFkZGluZy1ib3R0b206MC4xMjVyZW19XFxuLnB0LTF7cGFkZGluZy10b3A6MC4yNXJlbX1cXG4ucGItMHtwYWRkaW5nLWJvdHRvbTowcHh9XFxuLnB0LTJcXFxcLjV7cGFkZGluZy10b3A6MC42MjVyZW19XFxuLnBiLTFcXFxcLjV7cGFkZGluZy1ib3R0b206MC4zNzVyZW19XFxuLnB0LTJ7cGFkZGluZy10b3A6MC41cmVtfVxcbi5wYi0xe3BhZGRpbmctYm90dG9tOjAuMjVyZW19XFxuLnB0LTNcXFxcLjV7cGFkZGluZy10b3A6MC44NzVyZW19XFxuLnBiLTJcXFxcLjV7cGFkZGluZy1ib3R0b206MC42MjVyZW19XFxuLnB0LTN7cGFkZGluZy10b3A6MC43NXJlbX1cXG4ucGwtMntwYWRkaW5nLWxlZnQ6MC41cmVtfVxcbi5wci03e3BhZGRpbmctcmlnaHQ6MS43NXJlbX1cXG4ucGwtM3twYWRkaW5nLWxlZnQ6MC43NXJlbX1cXG4ucHItOXtwYWRkaW5nLXJpZ2h0OjIuMjVyZW19XFxuLnByLTF7cGFkZGluZy1yaWdodDowLjI1cmVtfVxcbi5wYi0xMHtwYWRkaW5nLWJvdHRvbToyLjVyZW19XFxuLnB0LTE2e3BhZGRpbmctdG9wOjRyZW19XFxuLnRleHQtY2VudGVye3RleHQtYWxpZ246Y2VudGVyfVxcbi50ZXh0LXJpZ2h0e3RleHQtYWxpZ246cmlnaHR9XFxuLnRleHQtbGVmdHt0ZXh0LWFsaWduOmxlZnR9XFxuLmFsaWduLW1pZGRsZXt2ZXJ0aWNhbC1hbGlnbjptaWRkbGV9XFxuLmZvbnQtc2VyaWZ7Zm9udC1mYW1pbHk6XFxcIlJvYm90byBTbGFiXFxcIiwgc2VyaWZ9XFxuLnRleHQteGx7Zm9udC1zaXplOjEuMjVyZW07bGluZS1oZWlnaHQ6MS43NXJlbX1cXG4udGV4dC1zbXtmb250LXNpemU6MC44NzVyZW07bGluZS1oZWlnaHQ6MS4yNXJlbX1cXG4udGV4dC14c3tmb250LXNpemU6MC43NXJlbTtsaW5lLWhlaWdodDoxcmVtfVxcbi50ZXh0LTZ4bHtmb250LXNpemU6My43NXJlbTtsaW5lLWhlaWdodDoxfVxcbi50ZXh0LWxne2ZvbnQtc2l6ZToxLjEyNXJlbTtsaW5lLWhlaWdodDoxLjc1cmVtfVxcbi50ZXh0LWJhc2V7Zm9udC1zaXplOjFyZW07bGluZS1oZWlnaHQ6MS41cmVtfVxcbi50ZXh0LTJ4bHtmb250LXNpemU6MS41cmVtO2xpbmUtaGVpZ2h0OjJyZW19XFxuLnRleHQtNHhse2ZvbnQtc2l6ZToyLjI1cmVtO2xpbmUtaGVpZ2h0OjIuNXJlbX1cXG4udGV4dC0zeGx7Zm9udC1zaXplOjEuODc1cmVtO2xpbmUtaGVpZ2h0OjIuMjVyZW19XFxuLnRleHQtNXhse2ZvbnQtc2l6ZTozcmVtO2xpbmUtaGVpZ2h0OjF9XFxuLnRleHQtN3hse2ZvbnQtc2l6ZTo0LjVyZW07bGluZS1oZWlnaHQ6MX1cXG4udGV4dC04eGx7Zm9udC1zaXplOjZyZW07bGluZS1oZWlnaHQ6MX1cXG4udGV4dC05eGx7Zm9udC1zaXplOjhyZW07bGluZS1oZWlnaHQ6MX1cXG4uZm9udC1tZWRpdW17Zm9udC13ZWlnaHQ6NTAwfVxcbi5mb250LXNlbWlib2xke2ZvbnQtd2VpZ2h0OjYwMH1cXG4uZm9udC1ib2xke2ZvbnQtd2VpZ2h0OjcwMH1cXG4uZm9udC1saWdodHtmb250LXdlaWdodDozMDB9XFxuLmZvbnQtbm9ybWFse2ZvbnQtd2VpZ2h0OjQwMH1cXG4udXBwZXJjYXNle3RleHQtdHJhbnNmb3JtOnVwcGVyY2FzZX1cXG4uY2FwaXRhbGl6ZXt0ZXh0LXRyYW5zZm9ybTpjYXBpdGFsaXplfVxcbi5sZWFkaW5nLXJlbGF4ZWR7bGluZS1oZWlnaHQ6MS42MjV9XFxuLmxlYWRpbmctbm9uZXtsaW5lLWhlaWdodDoxfVxcbi5sZWFkaW5nLW5vcm1hbHtsaW5lLWhlaWdodDoxLjV9XFxuLmxlYWRpbmctMTB7bGluZS1oZWlnaHQ6Mi41cmVtfVxcbi5sZWFkaW5nLXNudWd7bGluZS1oZWlnaHQ6MS4zNzV9XFxuLnRyYWNraW5nLXdpZGVye2xldHRlci1zcGFjaW5nOjAuMDVlbX1cXG4udHJhY2tpbmctd2lkZXtsZXR0ZXItc3BhY2luZzowLjAyNWVtfVxcbi50ZXh0LWdyYXktNzAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSg5NywgOTcsIDk3LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1ibHVlLWdyYXktNzAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSg2OSwgOTAsIDEwMCwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtbGlnaHQtYmx1ZS01MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDMsIDE2OSwgMjQ0LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1ibHVlLWdyYXktODAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSg1NSwgNzEsIDc5LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1ibHVlLWdyYXktOTAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgzOCwgNTAsIDU2LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1ibHVlLWdyYXktMjAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgxNzYsIDE5MCwgMTk3LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1ibHVlLWdyYXktNTB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDIzNiwgMjM5LCAyNDEsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWN5YW4tNjAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgwLCAxNzIsIDE5MywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtZ3JheS01MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDE1OCwgMTU4LCAxNTgsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWdyYXktOTAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgzMywgMzMsIDMzLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1ibHVlLTYwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMzAsIDEzNiwgMjI5LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1ibHVlLTQwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoNjYsIDE2NSwgMjQ1LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1pbmRpZ28tNTAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSg2MywgODEsIDE4MSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtcGluay00MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDIzNiwgNjQsIDEyMiwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtcmVkLTYwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjI5LCA1NywgNTMsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWdyYXktNjAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgxMTcsIDExNywgMTE3LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC13aGl0ZXstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjU1LCAyNTUsIDI1NSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtYmx1ZS1ncmF5LTUwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoOTYsIDEyNSwgMTM5LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1icm93bi01MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDEyMSwgODUsIDcyLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1kZWVwLW9yYW5nZS01MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDI1NSwgODcsIDM0LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1vcmFuZ2UtNTAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyNTUsIDE1MiwgMCwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtYW1iZXItNTAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyNTUsIDE5MywgNywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQteWVsbG93LTYwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjUzLCAyMTYsIDUzLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1saW1lLTUwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjA1LCAyMjAsIDU3LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1saWdodC1ncmVlbi01MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDEzOSwgMTk1LCA3NCwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtZ3JlZW4tNTAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSg3NiwgMTc1LCA4MCwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtdGVhbC01MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDAsIDE1MCwgMTM2LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1jeWFuLTUwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMCwgMTg4LCAyMTIsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWJsdWUtNTAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgzMywgMTUwLCAyNDMsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWRlZXAtcHVycGxlLTUwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMTAzLCA1OCwgMTgzLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1wdXJwbGUtNTAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgxNTYsIDM5LCAxNzYsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LXBpbmstNTAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyMzMsIDMwLCA5OSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtcmVkLTUwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjQ0LCA2NywgNTQsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWdyYXktNDAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgxODksIDE4OSwgMTg5LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1ncmF5LTgwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoNjYsIDY2LCA2NiwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtYnJvd24tNzAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSg5MywgNjQsIDU1LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1kZWVwLW9yYW5nZS03MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDIzMCwgNzQsIDI1LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1vcmFuZ2UtNzAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyNDUsIDEyNCwgMCwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtYW1iZXItNzAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyNTUsIDE2MCwgMCwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQteWVsbG93LTcwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjUxLCAxOTIsIDQ1LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1saW1lLTcwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMTc1LCAxODAsIDQzLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1saWdodC1ncmVlbi03MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDEwNCwgMTU5LCA1NiwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtZ3JlZW4tNzAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSg1NiwgMTQyLCA2MCwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtdGVhbC03MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDAsIDEyMSwgMTA3LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1jeWFuLTcwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMCwgMTUxLCAxNjcsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWxpZ2h0LWJsdWUtNzAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyLCAxMzYsIDIwOSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtYmx1ZS03MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDI1LCAxMTgsIDIxMCwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtaW5kaWdvLTcwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoNDgsIDYzLCAxNTksIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWRlZXAtcHVycGxlLTcwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoODEsIDQ1LCAxNjgsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LXB1cnBsZS03MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDEyMywgMzEsIDE2MiwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtcGluay03MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDE5NCwgMjQsIDkxLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1yZWQtNzAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyMTEsIDQ3LCA0NywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtZ3JheS0yMDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDIzOCwgMjM4LCAyMzgsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWJyb3duLTgwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoNzgsIDUyLCA0NiwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtZGVlcC1vcmFuZ2UtODAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyMTYsIDY3LCAyMSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtb3JhbmdlLTgwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjM5LCAxMDgsIDAsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWFtYmVyLTgwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjU1LCAxNDMsIDAsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LXllbGxvdy04MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDI0OSwgMTY4LCAzNywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtbGltZS04MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDE1OCwgMTU3LCAzNiwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtbGlnaHQtZ3JlZW4tODAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSg4NSwgMTM5LCA0NywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtZ3JlZW4tODAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSg0NiwgMTI1LCA1MCwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtdGVhbC04MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDAsIDEwNSwgOTIsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWN5YW4tODAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgwLCAxMzEsIDE0MywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtbGlnaHQtYmx1ZS04MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDIsIDExOSwgMTg5LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1ibHVlLTgwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjEsIDEwMSwgMTkyLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1pbmRpZ28tODAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSg0MCwgNTMsIDE0NywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtZGVlcC1wdXJwbGUtODAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSg2OSwgMzksIDE2MCwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtcHVycGxlLTgwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMTA2LCAyNywgMTU0LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1waW5rLTgwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMTczLCAyMCwgODcsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LXJlZC04MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDE5OCwgNDAsIDQwLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1ibGFja3stLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMCwgMCwgMCwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtb3BhY2l0eS02MHstLXR3LXRleHQtb3BhY2l0eTowLjZ9XFxuLm5vLXVuZGVybGluZXt0ZXh0LWRlY29yYXRpb246bm9uZX1cXG4uYW50aWFsaWFzZWR7LXdlYmtpdC1mb250LXNtb290aGluZzphbnRpYWxpYXNlZDstbW96LW9zeC1mb250LXNtb290aGluZzpncmF5c2NhbGV9XFxuLnBsYWNlaG9sZGVyLXdoaXRlOjotbW96LXBsYWNlaG9sZGVyey0tdHctcGxhY2Vob2xkZXItb3BhY2l0eToxO2NvbG9yOnJnYmEoMjU1LCAyNTUsIDI1NSwgdmFyKC0tdHctcGxhY2Vob2xkZXItb3BhY2l0eSkpfVxcbi5wbGFjZWhvbGRlci13aGl0ZTotbXMtaW5wdXQtcGxhY2Vob2xkZXJ7LS10dy1wbGFjZWhvbGRlci1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyNTUsIDI1NSwgMjU1LCB2YXIoLS10dy1wbGFjZWhvbGRlci1vcGFjaXR5KSl9XFxuLnBsYWNlaG9sZGVyLXdoaXRlOjpwbGFjZWhvbGRlcnstLXR3LXBsYWNlaG9sZGVyLW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDI1NSwgMjU1LCAyNTUsIHZhcigtLXR3LXBsYWNlaG9sZGVyLW9wYWNpdHkpKX1cXG4ucGxhY2Vob2xkZXItb3BhY2l0eS01MDo6LW1vei1wbGFjZWhvbGRlcnstLXR3LXBsYWNlaG9sZGVyLW9wYWNpdHk6MC41fVxcbi5wbGFjZWhvbGRlci1vcGFjaXR5LTUwOi1tcy1pbnB1dC1wbGFjZWhvbGRlcnstLXR3LXBsYWNlaG9sZGVyLW9wYWNpdHk6MC41fVxcbi5wbGFjZWhvbGRlci1vcGFjaXR5LTUwOjpwbGFjZWhvbGRlcnstLXR3LXBsYWNlaG9sZGVyLW9wYWNpdHk6MC41fVxcbi5vcGFjaXR5LTUwe29wYWNpdHk6MC41fVxcbi5vcGFjaXR5LTB7b3BhY2l0eTowfVxcbi5vcGFjaXR5LTEwMHtvcGFjaXR5OjF9XFxuLm9wYWNpdHktMjV7b3BhY2l0eTowLjI1fVxcbi5vcGFjaXR5LTV7b3BhY2l0eTowLjA1fVxcbi5zaGFkb3ctbWR7LS10dy1zaGFkb3c6MCA0cHggNnB4IC0xcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDJweCA0cHggLTFweCByZ2JhKDAsIDAsIDAsIDAuMDYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LWxney0tdHctc2hhZG93OjAgMTBweCAxNXB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA2cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LXhsey0tdHctc2hhZG93OjAgMjBweCAyNXB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCk7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbWQtYmx1ZS1ncmF5ey0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoOTYsIDEyNSwgMTM5LCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LW1kLWdyYXl7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgxNTgsIDE1OCwgMTU4LCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LW1kLWJyb3duey0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoMTIxLCA4NSwgNzIsIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbWQtZGVlcC1vcmFuZ2V7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgyNTUsIDg3LCAzNiwgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1tZC1vcmFuZ2V7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgyNTUsIDE1MiwgMCwgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1tZC1hbWJlcnstLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDI1NSwgMTkzLCA3LCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LW1kLXllbGxvd3stLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDI1NSwgMjM1LCA1OSwgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1tZC1saW1ley0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoMjA1LCAyMjAsIDU3LCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LW1kLWxpZ2h0LWdyZWVuey0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoMTM5LCAxOTUsIDc0LCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LW1kLWdyZWVuey0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoNzYsIDE3NSwgODAsIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbWQtdGVhbHstLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDAsIDE1MCwgMTM2LCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LW1kLWN5YW57LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgwLCAxODgsIDIxMiwgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1tZC1saWdodC1ibHVley0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoMywgMTY5LCAyNDQsIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbWQtYmx1ZXstLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDMzLCAxNTAsIDI0MywgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1tZC1pbmRpZ297LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSg2MywgODEsIDE4MSwgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1tZC1kZWVwLXB1cnBsZXstLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDEwMywgNTgsIDE4MywgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1tZC1wdXJwbGV7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgxNTYsIDM5LCAxNzYsIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbWQtcGlua3stLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDIzMywgMzAsIDk5LCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LW1kLXJlZHstLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDI0NCwgNjcsIDU0LCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LW5vbmV7LS10dy1zaGFkb3c6MCAwICMwMDAwO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LWxnLWJsdWUtZ3JheXstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSg2OSwgOTAsIDEwMCwgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1sZy1ncmF5ey0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDk3LCA5NywgOTcsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbGctYnJvd257LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoOTMsIDY0LCA1NSwgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1sZy1kZWVwLW9yYW5nZXstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSgyMzAsIDc0LCAyNSwgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1sZy1vcmFuZ2V7LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoMjQ1LCAxMjIsIDAsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbGctYW1iZXJ7LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoMjU1LCAxNjAsIDAsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbGcteWVsbG93ey0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDI1MSwgMTkyLCA0NSwgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1sZy1saW1ley0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDE3NSwgMTgwLCA0MywgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1sZy1saWdodC1ncmVlbnstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSgxMDQsIDE1OSwgNTYsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbGctZ3JlZW57LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoNTYsIDE0MiwgNjAsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbGctdGVhbHstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSgwLCAxMjEsIDEwNywgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1sZy1jeWFuey0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDAsIDE1MSwgMTY3LCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LWxnLWxpZ2h0LWJsdWV7LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoMiwgMTM2LCAyMDksIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbGctYmx1ZXstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSgyNSwgMTE4LCAyMTAsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbGctaW5kaWdvey0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDQ4LCA2MywgMTU5LCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LWxnLWRlZXAtcHVycGxley0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDgxLCA0NSwgMTY4LCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LWxnLXB1cnBsZXstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSgxMjMsIDMxLCAxNjIsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbGctcGlua3stLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSgxOTQsIDI0LCA5MSwgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1sZy1yZWR7LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoMjExLCA0NywgNDcsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctc217LS10dy1zaGFkb3c6MCAxcHggMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjA1KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLm91dGxpbmUtbm9uZXtvdXRsaW5lOjJweCBzb2xpZCB0cmFuc3BhcmVudDtvdXRsaW5lLW9mZnNldDoycHh9XFxuLnRyYW5zaXRpb24tYWxse3RyYW5zaXRpb24tcHJvcGVydHk6YWxsO3RyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSk7dHJhbnNpdGlvbi1kdXJhdGlvbjoxNTBtc31cXG4uZHVyYXRpb24tMzAwe3RyYW5zaXRpb24tZHVyYXRpb246MzAwbXN9XFxuLmR1cmF0aW9ue3RyYW5zaXRpb24tZHVyYXRpb246MTUwbXN9XFxuLmR1cmF0aW9uLTUwMHt0cmFuc2l0aW9uLWR1cmF0aW9uOjUwMG1zfVxcbi8qIE1hdGVyaWFsIFRhaWx3aW5kIElucHV0ICovXFxuLm10LWlucHV0ICsgbGFiZWw6YWZ0ZXIge1xcbiAgICAgICAgY29udGVudDogJyc7XFxuICAgICAgICBwb2ludGVyLWV2ZW50czpub25lO1xcbiAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XFxuICAgICAgICB0b3A6MC4xMjVyZW07XFxuICAgICAgICBsZWZ0OjBweDtcXG4gICAgICAgIGhlaWdodDoxMDAlO1xcbiAgICAgICAgd2lkdGg6MTAwJTtcXG4gICAgICAgIC0tdHctdHJhbnNsYXRlLXg6MDtcXG4gICAgICAgIC0tdHctdHJhbnNsYXRlLXk6MDtcXG4gICAgICAgIC0tdHctcm90YXRlOjA7XFxuICAgICAgICAtLXR3LXNrZXcteDowO1xcbiAgICAgICAgLS10dy1za2V3LXk6MDtcXG4gICAgICAgIC0tdHctc2NhbGUteDoxO1xcbiAgICAgICAgLS10dy1zY2FsZS15OjE7XFxuICAgICAgICB0cmFuc2Zvcm06dHJhbnNsYXRlWCh2YXIoLS10dy10cmFuc2xhdGUteCkpIHRyYW5zbGF0ZVkodmFyKC0tdHctdHJhbnNsYXRlLXkpKSByb3RhdGUodmFyKC0tdHctcm90YXRlKSkgc2tld1godmFyKC0tdHctc2tldy14KSkgc2tld1kodmFyKC0tdHctc2tldy15KSkgc2NhbGVYKHZhcigtLXR3LXNjYWxlLXgpKSBzY2FsZVkodmFyKC0tdHctc2NhbGUteSkpO1xcbiAgICAgICAgLS10dy1zY2FsZS14OjA7XFxuICAgICAgICBib3JkZXItd2lkdGg6MXB4O1xcbiAgICAgICAgYm9yZGVyLXRvcC13aWR0aDowcHg7XFxuICAgICAgICBib3JkZXItbGVmdC13aWR0aDowcHg7XFxuICAgICAgICBib3JkZXItcmlnaHQtd2lkdGg6MHB4O1xcbiAgICAgICAgYm9yZGVyLWJvdHRvbS13aWR0aDoycHg7XFxuICAgICAgICB0cmFuc2l0aW9uLXByb3BlcnR5OmFsbDtcXG4gICAgICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSk7XFxuICAgICAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOjE1MG1zO1xcbiAgICAgICAgdHJhbnNpdGlvbi1kdXJhdGlvbjozMDBtcztcXG4gICAgfVxcbi5tdC1pbnB1dDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctc2NhbGUteDoxfVxcbi5tdC1pbnB1dDpub3QoOi1tb3otcGxhY2Vob2xkZXItc2hvd24pICsgbGFiZWwgc3BhbiB7XFxuICAgICAgICB0b3A6IC0xNCU7XFxuICAgIH1cXG4ubXQtaW5wdXQ6bm90KDotbXMtaW5wdXQtcGxhY2Vob2xkZXIpICsgbGFiZWwgc3BhbiB7XFxuICAgICAgICB0b3A6IC0xNCU7XFxuICAgIH1cXG4ubXQtaW5wdXQ6Zm9jdXMgKyBsYWJlbCBzcGFuLFxcbiAgICAubXQtaW5wdXQ6bm90KDpwbGFjZWhvbGRlci1zaG93bikgKyBsYWJlbCBzcGFuIHtcXG4gICAgICAgIHRvcDogLTE0JTtcXG4gICAgfVxcbi5tdC1pbnB1dDpub3QoOi1tb3otcGxhY2Vob2xkZXItc2hvd24pICsgbGFiZWwgc3Bhbntmb250LXNpemU6MC43NXJlbTtsaW5lLWhlaWdodDoxcmVtO2xpbmUtaGVpZ2h0OjEuMjV9XFxuLm10LWlucHV0Om5vdCg6LW1zLWlucHV0LXBsYWNlaG9sZGVyKSArIGxhYmVsIHNwYW57Zm9udC1zaXplOjAuNzVyZW07bGluZS1oZWlnaHQ6MXJlbTtsaW5lLWhlaWdodDoxLjI1fVxcbi5tdC1pbnB1dDpmb2N1cyArIGxhYmVsIHNwYW4sIC5tdC1pbnB1dDpub3QoOnBsYWNlaG9sZGVyLXNob3duKSArIGxhYmVsIHNwYW57Zm9udC1zaXplOjAuNzVyZW07bGluZS1oZWlnaHQ6MXJlbTtsaW5lLWhlaWdodDoxLjI1fVxcbi50ZXh0ZXJlYTpub3QoOi1tb3otcGxhY2Vob2xkZXItc2hvd24pICsgbGFiZWwgc3BhbiB7XFxuICAgICAgICB0b3A6IC0yMnB4ICFpbXBvcnRhbnQ7XFxuICAgIH1cXG4udGV4dGVyZWE6bm90KDotbXMtaW5wdXQtcGxhY2Vob2xkZXIpICsgbGFiZWwgc3BhbiB7XFxuICAgICAgICB0b3A6IC0yMnB4ICFpbXBvcnRhbnQ7XFxuICAgIH1cXG4udGV4dGVyZWE6Zm9jdXMgKyBsYWJlbCBzcGFuLFxcbiAgICAudGV4dGVyZWE6bm90KDpwbGFjZWhvbGRlci1zaG93bikgKyBsYWJlbCBzcGFuIHtcXG4gICAgICAgIHRvcDogLTIycHggIWltcG9ydGFudDtcXG4gICAgfVxcbi8qIE1hdGVyaWFsIFRhaWx3aW5kIElucHV0IE91dGxpbmUgKi9cXG4ubXQtaW5wdXQtb3V0bGluZTpub3QoOi1tb3otcGxhY2Vob2xkZXItc2hvd24pIHtcXG4gICAgICAgIGJvcmRlci10b3A6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XFxuICAgIH1cXG4ubXQtaW5wdXQtb3V0bGluZTpub3QoOi1tcy1pbnB1dC1wbGFjZWhvbGRlcikge1xcbiAgICAgICAgYm9yZGVyLXRvcDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcXG4gICAgfVxcbi5tdC1pbnB1dC1vdXRsaW5lOmZvY3VzLFxcbiAgICAubXQtaW5wdXQtb3V0bGluZTpub3QoOnBsYWNlaG9sZGVyLXNob3duKSB7XFxuICAgICAgICBib3JkZXItdG9wOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xcbiAgICB9XFxuLm10LWlucHV0LW91dGxpbmUgKyBsYWJlbCB7XFxuICAgICAgICBsaW5lLWhlaWdodDogMy42MjUgIWltcG9ydGFudDtcXG4gICAgfVxcbi5tdC1pbnB1dC1vdXRsaW5lOm5vdCg6LW1vei1wbGFjZWhvbGRlci1zaG93bikgKyBsYWJlbHtmb250LXNpemU6MC43NXJlbSAhaW1wb3J0YW50O2xpbmUtaGVpZ2h0OjFyZW0gIWltcG9ydGFudDtsaW5lLWhlaWdodDoxLjI1ICFpbXBvcnRhbnR9XFxuLm10LWlucHV0LW91dGxpbmU6bm90KDotbXMtaW5wdXQtcGxhY2Vob2xkZXIpICsgbGFiZWx7Zm9udC1zaXplOjAuNzVyZW0gIWltcG9ydGFudDtsaW5lLWhlaWdodDoxcmVtICFpbXBvcnRhbnQ7bGluZS1oZWlnaHQ6MS4yNSAhaW1wb3J0YW50fVxcbi5tdC1pbnB1dC1vdXRsaW5lOmZvY3VzICsgbGFiZWwsIC5tdC1pbnB1dC1vdXRsaW5lOm5vdCg6cGxhY2Vob2xkZXItc2hvd24pICsgbGFiZWx7Zm9udC1zaXplOjAuNzVyZW0gIWltcG9ydGFudDtsaW5lLWhlaWdodDoxcmVtICFpbXBvcnRhbnQ7bGluZS1oZWlnaHQ6MS4yNSAhaW1wb3J0YW50fVxcbi5tdC1pbnB1dC1vdXRsaW5lICsgbGFiZWw6YmVmb3JlLFxcbiAgICAubXQtaW5wdXQtb3V0bGluZSArIGxhYmVsOmFmdGVyIHtcXG4gICAgICAgIGNvbnRlbnQ6ICcnO3BvaW50ZXItZXZlbnRzOm5vbmU7bWFyZ2luLXRvcDowLjM3NXJlbTtib3gtc2l6aW5nOmJvcmRlci1ib3g7ZGlzcGxheTpibG9jaztoZWlnaHQ6MC41cmVtO3dpZHRoOjAuNjI1cmVtO2JvcmRlci13aWR0aDoxcHg7Ym9yZGVyLXRvcC13aWR0aDoycHg7Ym9yZGVyLWJvdHRvbS13aWR0aDowcHg7Ym9yZGVyLWxlZnQtd2lkdGg6MHB4O2JvcmRlci1yaWdodC13aWR0aDowcHg7Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50O1xcbiAgICB9XFxuLm10LWlucHV0LW91dGxpbmU6bm90KDotbW96LXBsYWNlaG9sZGVyLXNob3duKSArIGxhYmVsOmJlZm9yZSwgLm10LWlucHV0LW91dGxpbmU6bm90KDotbW96LXBsYWNlaG9sZGVyLXNob3duKSArIGxhYmVsOmFmdGVye2JvcmRlci10b3Atd2lkdGg6MXB4Oy0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyMjQsIDIyNCwgMjI0LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lOm5vdCg6LW1zLWlucHV0LXBsYWNlaG9sZGVyKSArIGxhYmVsOmJlZm9yZSwgLm10LWlucHV0LW91dGxpbmU6bm90KDotbXMtaW5wdXQtcGxhY2Vob2xkZXIpICsgbGFiZWw6YWZ0ZXJ7Ym9yZGVyLXRvcC13aWR0aDoxcHg7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDIyNCwgMjI0LCAyMjQsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLm10LWlucHV0LW91dGxpbmU6bm90KDpwbGFjZWhvbGRlci1zaG93bikgKyBsYWJlbDpiZWZvcmUsIC5tdC1pbnB1dC1vdXRsaW5lOm5vdCg6cGxhY2Vob2xkZXItc2hvd24pICsgbGFiZWw6YWZ0ZXJ7Ym9yZGVyLXRvcC13aWR0aDoxcHg7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDIyNCwgMjI0LCAyMjQsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLm10LWlucHV0LW91dGxpbmU6Zm9jdXMgKyBsYWJlbDo6YmVmb3JlLCAubXQtaW5wdXQtb3V0bGluZTpmb2N1cyArIGxhYmVsOjphZnRlcntib3JkZXItdG9wLXdpZHRoOjJweH1cXG4ubXQtaW5wdXQtb3V0bGluZSArIGxhYmVsOmJlZm9yZXttYXJnaW4tcmlnaHQ6MC4yNXJlbTtib3JkZXItdG9wLWxlZnQtcmFkaXVzOjAuNXJlbX1cXG4ubXQtaW5wdXQtb3V0bGluZSArIGxhYmVsOmFmdGVye21hcmdpbi1sZWZ0OjAuMjVyZW07ZmxleC1ncm93OjE7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6MC41cmVtfVxcbi8qIE1hdGVyaWFsIFRhaWx3aW5kIFJhZGlvIEJ1dHRvbiAqL1xcbi5tdC1yYWRpbzpjaGVja2VkICsgbGFiZWwgc3BhbiB7XFxuICAgICAgICBib3gtc2hhZG93OiAwcHggMHB4IDBweCAycHggd2hpdGUgaW5zZXQ7XFxuICAgICAgICAtLXR3LWJnLW9wYWNpdHk6MSAhaW1wb3J0YW50O1xcbiAgICB9XFxuLm10LXJhZGlvOmNoZWNrZWQgKyBsYWJlbHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoOTcsIDk3LCA5NywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLm10LXJhZGlvICsgbGFiZWwgc3Bhbjo6YmVmb3JlIHtcXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xcbiAgICAgICAgdG9wOiAtMS41cHg7XFxuICAgICAgICBsZWZ0OiAtMS41cHg7XFxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMSwgMSwgMSk7XFxuICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcXG4gICAgICAgIHotaW5kZXg6MTA7XFxuICAgICAgICBtYXJnaW46MHB4O1xcbiAgICAgICAgZGlzcGxheTpibG9jaztcXG4gICAgICAgIGhlaWdodDoxcmVtO1xcbiAgICAgICAgd2lkdGg6MXJlbTtcXG4gICAgICAgIGJvcmRlci1yYWRpdXM6OTk5OXB4O1xcbiAgICAgICAgb3BhY2l0eTowO1xcbiAgICB9XFxuLm10LXJhZGlvOmNoZWNrZWQgKyBsYWJlbCBzcGFuOjpiZWZvcmUge1xcbiAgICAgICAgLXdlYmtpdC1hbmltYXRpb246IHJhZGlvLXJpcHBsZSAwLjNzIGxpbmVhcjtcXG4gICAgICAgICAgICAgICAgYW5pbWF0aW9uOiByYWRpby1yaXBwbGUgMC4zcyBsaW5lYXI7XFxuICAgIH1cXG4vKiBNYXRlcmlhbCBUYWlsd2luZCBDaGVja2JveCAqL1xcbi5tdC1jaGVja2JveDpjaGVja2VkICsgbGFiZWwgc3BhbnstLXR3LWJnLW9wYWNpdHk6MSAhaW1wb3J0YW50fVxcbi5tdC1jaGVja2JveDpjaGVja2VkICsgbGFiZWx7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDk3LCA5NywgOTcsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5tdC1jaGVja2JveCArIGxhYmVsIHNwYW46OmJlZm9yZSB7XFxuICAgICAgICBjb250ZW50OiAnJztcXG4gICAgICAgIHRvcDogLTFweDtcXG4gICAgICAgIGxlZnQ6IC0xLjVweDtcXG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUzZCgyLCAyLCAxKTtcXG4gICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xcbiAgICAgICAgei1pbmRleDoxMDtcXG4gICAgICAgIG1hcmdpbjowcHg7XFxuICAgICAgICBkaXNwbGF5OmJsb2NrO1xcbiAgICAgICAgaGVpZ2h0OjEuMjVyZW07XFxuICAgICAgICB3aWR0aDoxLjI1cmVtO1xcbiAgICAgICAgYm9yZGVyLXJhZGl1czo5OTk5cHg7XFxuICAgICAgICBvcGFjaXR5OjA7XFxuICAgIH1cXG4ubXQtY2hlY2tib3ggKyBsYWJlbCBzcGFuOjphZnRlciB7XFxuICAgICAgICBjb250ZW50OiAnJztcXG4gICAgICAgIHRvcDogMXB4O1xcbiAgICAgICAgbGVmdDogNnB4O1xcbiAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XFxuICAgICAgICBoZWlnaHQ6MC44NzVyZW07XFxuICAgICAgICB3aWR0aDowLjM3NXJlbTtcXG4gICAgICAgIC0tdHctdHJhbnNsYXRlLXg6MDtcXG4gICAgICAgIC0tdHctdHJhbnNsYXRlLXk6MDtcXG4gICAgICAgIC0tdHctcm90YXRlOjA7XFxuICAgICAgICAtLXR3LXNrZXcteDowO1xcbiAgICAgICAgLS10dy1za2V3LXk6MDtcXG4gICAgICAgIC0tdHctc2NhbGUteDoxO1xcbiAgICAgICAgLS10dy1zY2FsZS15OjE7XFxuICAgICAgICB0cmFuc2Zvcm06dHJhbnNsYXRlWCh2YXIoLS10dy10cmFuc2xhdGUteCkpIHRyYW5zbGF0ZVkodmFyKC0tdHctdHJhbnNsYXRlLXkpKSByb3RhdGUodmFyKC0tdHctcm90YXRlKSkgc2tld1godmFyKC0tdHctc2tldy14KSkgc2tld1kodmFyKC0tdHctc2tldy15KSkgc2NhbGVYKHZhcigtLXR3LXNjYWxlLXgpKSBzY2FsZVkodmFyKC0tdHctc2NhbGUteSkpO1xcbiAgICAgICAgLS10dy1yb3RhdGU6NDVkZWc7XFxuICAgICAgICBib3JkZXItYm90dG9tLXdpZHRoOjJweDtcXG4gICAgICAgIGJvcmRlci1yaWdodC13aWR0aDoycHg7XFxuICAgICAgICBib3JkZXItY29sb3I6dHJhbnNwYXJlbnQ7XFxuICAgICAgICB0cmFuc2l0aW9uLXByb3BlcnR5OmFsbDtcXG4gICAgICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSk7XFxuICAgICAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOjE1MG1zO1xcbiAgICAgICAgdHJhbnNpdGlvbi1kdXJhdGlvbjoyMDBtcztcXG4gICAgfVxcbi5tdC1jaGVja2JveDpjaGVja2VkICsgbGFiZWwgc3Bhbjo6YmVmb3JlIHtcXG4gICAgICAgIC13ZWJraXQtYW5pbWF0aW9uOiByYWRpby1yaXBwbGUgMC4zcyBsaW5lYXI7XFxuICAgICAgICAgICAgICAgIGFuaW1hdGlvbjogcmFkaW8tcmlwcGxlIDAuM3MgbGluZWFyO1xcbiAgICB9XFxuLm10LWNoZWNrYm94OmNoZWNrZWQgKyBsYWJlbCBzcGFuOjphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjU1LCAyNTUsIDI1NSwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4vKiBNYXRlcmlhbCBUYWlsd2luZCBJbnB1dCBDb2xvcnMgKi9cXG4ubXQtaW5wdXQtYmx1ZS1ncmF5LTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSg5NiwgMTI1LCAxMzksIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLm10LWlucHV0LWdyYXktNTAwOmZvY3VzICsgbGFiZWw6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDE1OCwgMTU4LCAxNTgsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLm10LWlucHV0LW9yYW5nZS01MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjU1LCAxNTIsIDAsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLm10LWlucHV0LWRlZXAtb3JhbmdlLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNTUsIDg3LCAzNCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtYW1iZXItNTAwOmZvY3VzICsgbGFiZWw6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDI1NSwgMTkzLCA3LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC15ZWxsb3ctNjAwOmZvY3VzICsgbGFiZWw6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDI1MywgMjE2LCA1MywgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtbGltZS01MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjA1LCAyMjAsIDU3LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1saWdodC1ncmVlbi01MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMTM5LCAxOTUsIDc0LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1ncmVlbi01MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoNzYsIDE3NSwgODAsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLm10LWlucHV0LXRlYWwtNTAwOmZvY3VzICsgbGFiZWw6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDAsIDE1MCwgMTM2LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1jeWFuLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgwLCAxODgsIDIxMiwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtbGlnaHQtYmx1ZS01MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMywgMTY5LCAyNDQsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLm10LWlucHV0LWJsdWUtNTAwOmZvY3VzICsgbGFiZWw6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDMzLCAxNTAsIDI0MywgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtaW5kaWdvLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSg2MywgODEsIDE4MSwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtcHVycGxlLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgxNTYsIDM5LCAxNzYsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLm10LWlucHV0LWRlZXAtcHVycGxlLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgxMDMsIDU4LCAxODMsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLm10LWlucHV0LXBpbmstNTAwOmZvY3VzICsgbGFiZWw6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDIzMywgMzAsIDk5LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1yZWQtNTAwOmZvY3VzICsgbGFiZWw6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDI0NCwgNjcsIDU0LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi8qIE1hdGVyaWFsIFRhaWx3aW5kIElucHV0IE91dGxpbmUgQ29sb3JzICovXFxuLm10LWlucHV0LW91dGxpbmUtYmx1ZS1ncmF5LTUwMDpmb2N1cywgLm10LWlucHV0LW91dGxpbmUtYmx1ZS1ncmF5LTUwMDpmb2N1cyArIGxhYmVsLCAubXQtaW5wdXQtb3V0bGluZS1ibHVlLWdyYXktNTAwOmZvY3VzICsgbGFiZWw6YmVmb3JlLCAubXQtaW5wdXQtb3V0bGluZS1ibHVlLWdyYXktNTAwOmZvY3VzICsgbGFiZWw6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDk2LCAxMjUsIDEzOSwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoOTYsIDEyNSwgMTM5LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtb3V0bGluZS1ncmF5LTUwMDpmb2N1cywgLm10LWlucHV0LW91dGxpbmUtZ3JheS01MDA6Zm9jdXMgKyBsYWJlbCwgLm10LWlucHV0LW91dGxpbmUtZ3JheS01MDA6Zm9jdXMgKyBsYWJlbDpiZWZvcmUsIC5tdC1pbnB1dC1vdXRsaW5lLWdyYXktNTAwOmZvY3VzICsgbGFiZWw6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDE1OCwgMTU4LCAxNTgsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDE1OCwgMTU4LCAxNTgsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lLW9yYW5nZS01MDA6Zm9jdXMsIC5tdC1pbnB1dC1vdXRsaW5lLW9yYW5nZS01MDA6Zm9jdXMgKyBsYWJlbCwgLm10LWlucHV0LW91dGxpbmUtb3JhbmdlLTUwMDpmb2N1cyArIGxhYmVsOmJlZm9yZSwgLm10LWlucHV0LW91dGxpbmUtb3JhbmdlLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNTUsIDE1MiwgMCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjU1LCAxNTIsIDAsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lLWRlZXAtb3JhbmdlLTUwMDpmb2N1cywgLm10LWlucHV0LW91dGxpbmUtZGVlcC1vcmFuZ2UtNTAwOmZvY3VzICsgbGFiZWwsIC5tdC1pbnB1dC1vdXRsaW5lLWRlZXAtb3JhbmdlLTUwMDpmb2N1cyArIGxhYmVsOmJlZm9yZSwgLm10LWlucHV0LW91dGxpbmUtZGVlcC1vcmFuZ2UtNTAwOmZvY3VzICsgbGFiZWw6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDI1NSwgODcsIDM0LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyNTUsIDg3LCAzNCwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLm10LWlucHV0LW91dGxpbmUtYnJvd24tNTAwOmZvY3VzLCAubXQtaW5wdXQtb3V0bGluZS1icm93bi01MDA6Zm9jdXMgKyBsYWJlbCwgLm10LWlucHV0LW91dGxpbmUtYnJvd24tNTAwOmZvY3VzICsgbGFiZWw6YmVmb3JlLCAubXQtaW5wdXQtb3V0bGluZS1icm93bi01MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMTIxLCA4NSwgNzIsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDEyMSwgODUsIDcyLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtb3V0bGluZS1hbWJlci01MDA6Zm9jdXMsIC5tdC1pbnB1dC1vdXRsaW5lLWFtYmVyLTUwMDpmb2N1cyArIGxhYmVsLCAubXQtaW5wdXQtb3V0bGluZS1hbWJlci01MDA6Zm9jdXMgKyBsYWJlbDpiZWZvcmUsIC5tdC1pbnB1dC1vdXRsaW5lLWFtYmVyLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNTUsIDE5MywgNywgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjU1LCAxOTMsIDcsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lLXllbGxvdy02MDA6Zm9jdXMsIC5tdC1pbnB1dC1vdXRsaW5lLXllbGxvdy02MDA6Zm9jdXMgKyBsYWJlbCwgLm10LWlucHV0LW91dGxpbmUteWVsbG93LTYwMDpmb2N1cyArIGxhYmVsOmJlZm9yZSwgLm10LWlucHV0LW91dGxpbmUteWVsbG93LTYwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNTMsIDIxNiwgNTMsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDI1MywgMjE2LCA1MywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLm10LWlucHV0LW91dGxpbmUtbGltZS01MDA6Zm9jdXMsIC5tdC1pbnB1dC1vdXRsaW5lLWxpbWUtNTAwOmZvY3VzICsgbGFiZWwsIC5tdC1pbnB1dC1vdXRsaW5lLWxpbWUtNTAwOmZvY3VzICsgbGFiZWw6YmVmb3JlLCAubXQtaW5wdXQtb3V0bGluZS1saW1lLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyMDUsIDIyMCwgNTcsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDIwNSwgMjIwLCA1NywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLm10LWlucHV0LW91dGxpbmUtbGlnaHQtZ3JlZW4tNTAwOmZvY3VzLCAubXQtaW5wdXQtb3V0bGluZS1saWdodC1ncmVlbi01MDA6Zm9jdXMgKyBsYWJlbCwgLm10LWlucHV0LW91dGxpbmUtbGlnaHQtZ3JlZW4tNTAwOmZvY3VzICsgbGFiZWw6YmVmb3JlLCAubXQtaW5wdXQtb3V0bGluZS1saWdodC1ncmVlbi01MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMTM5LCAxOTUsIDc0LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgxMzksIDE5NSwgNzQsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lLWdyZWVuLTUwMDpmb2N1cywgLm10LWlucHV0LW91dGxpbmUtZ3JlZW4tNTAwOmZvY3VzICsgbGFiZWwsIC5tdC1pbnB1dC1vdXRsaW5lLWdyZWVuLTUwMDpmb2N1cyArIGxhYmVsOmJlZm9yZSwgLm10LWlucHV0LW91dGxpbmUtZ3JlZW4tNTAwOmZvY3VzICsgbGFiZWw6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDc2LCAxNzUsIDgwLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSg3NiwgMTc1LCA4MCwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLm10LWlucHV0LW91dGxpbmUtdGVhbC01MDA6Zm9jdXMsIC5tdC1pbnB1dC1vdXRsaW5lLXRlYWwtNTAwOmZvY3VzICsgbGFiZWwsIC5tdC1pbnB1dC1vdXRsaW5lLXRlYWwtNTAwOmZvY3VzICsgbGFiZWw6YmVmb3JlLCAubXQtaW5wdXQtb3V0bGluZS10ZWFsLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgwLCAxNTAsIDEzNiwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMCwgMTUwLCAxMzYsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lLWN5YW4tNTAwOmZvY3VzLCAubXQtaW5wdXQtb3V0bGluZS1jeWFuLTUwMDpmb2N1cyArIGxhYmVsLCAubXQtaW5wdXQtb3V0bGluZS1jeWFuLTUwMDpmb2N1cyArIGxhYmVsOmJlZm9yZSwgLm10LWlucHV0LW91dGxpbmUtY3lhbi01MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMCwgMTg4LCAyMTIsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDAsIDE4OCwgMjEyLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtb3V0bGluZS1saWdodC1ibHVlLTUwMDpmb2N1cywgLm10LWlucHV0LW91dGxpbmUtbGlnaHQtYmx1ZS01MDA6Zm9jdXMgKyBsYWJlbCwgLm10LWlucHV0LW91dGxpbmUtbGlnaHQtYmx1ZS01MDA6Zm9jdXMgKyBsYWJlbDpiZWZvcmUsIC5tdC1pbnB1dC1vdXRsaW5lLWxpZ2h0LWJsdWUtNTAwOmZvY3VzICsgbGFiZWw6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDMsIDE2OSwgMjQ0LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgzLCAxNjksIDI0NCwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLm10LWlucHV0LW91dGxpbmUtYmx1ZS01MDA6Zm9jdXMsIC5tdC1pbnB1dC1vdXRsaW5lLWJsdWUtNTAwOmZvY3VzICsgbGFiZWwsIC5tdC1pbnB1dC1vdXRsaW5lLWJsdWUtNTAwOmZvY3VzICsgbGFiZWw6YmVmb3JlLCAubXQtaW5wdXQtb3V0bGluZS1ibHVlLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgzMywgMTUwLCAyNDMsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDMzLCAxNTAsIDI0MywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLm10LWlucHV0LW91dGxpbmUtaW5kaWdvLTUwMDpmb2N1cywgLm10LWlucHV0LW91dGxpbmUtaW5kaWdvLTUwMDpmb2N1cyArIGxhYmVsLCAubXQtaW5wdXQtb3V0bGluZS1pbmRpZ28tNTAwOmZvY3VzICsgbGFiZWw6YmVmb3JlLCAubXQtaW5wdXQtb3V0bGluZS1pbmRpZ28tNTAwOmZvY3VzICsgbGFiZWw6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDYzLCA4MSwgMTgxLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSg2MywgODEsIDE4MSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLm10LWlucHV0LW91dGxpbmUtcHVycGxlLTUwMDpmb2N1cywgLm10LWlucHV0LW91dGxpbmUtcHVycGxlLTUwMDpmb2N1cyArIGxhYmVsLCAubXQtaW5wdXQtb3V0bGluZS1wdXJwbGUtNTAwOmZvY3VzICsgbGFiZWw6YmVmb3JlLCAubXQtaW5wdXQtb3V0bGluZS1wdXJwbGUtNTAwOmZvY3VzICsgbGFiZWw6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDE1NiwgMzksIDE3NiwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMTU2LCAzOSwgMTc2LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtb3V0bGluZS1kZWVwLXB1cnBsZS01MDA6Zm9jdXMsIC5tdC1pbnB1dC1vdXRsaW5lLWRlZXAtcHVycGxlLTUwMDpmb2N1cyArIGxhYmVsLCAubXQtaW5wdXQtb3V0bGluZS1kZWVwLXB1cnBsZS01MDA6Zm9jdXMgKyBsYWJlbDpiZWZvcmUsIC5tdC1pbnB1dC1vdXRsaW5lLWRlZXAtcHVycGxlLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgxMDMsIDU4LCAxODMsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDEwMywgNTgsIDE4MywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLm10LWlucHV0LW91dGxpbmUtcGluay01MDA6Zm9jdXMsIC5tdC1pbnB1dC1vdXRsaW5lLXBpbmstNTAwOmZvY3VzICsgbGFiZWwsIC5tdC1pbnB1dC1vdXRsaW5lLXBpbmstNTAwOmZvY3VzICsgbGFiZWw6YmVmb3JlLCAubXQtaW5wdXQtb3V0bGluZS1waW5rLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyMzMsIDMwLCA5OSwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjMzLCAzMCwgOTksIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lLXJlZC01MDA6Zm9jdXMsIC5tdC1pbnB1dC1vdXRsaW5lLXJlZC01MDA6Zm9jdXMgKyBsYWJlbCwgLm10LWlucHV0LW91dGxpbmUtcmVkLTUwMDpmb2N1cyArIGxhYmVsOmJlZm9yZSwgLm10LWlucHV0LW91dGxpbmUtcmVkLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNDQsIDY3LCA1NCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjQ0LCA2NywgNTQsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lLWVycm9yOm5vdCg6LW1vei1wbGFjZWhvbGRlci1zaG93bikgKyBsYWJlbCwgLm10LWlucHV0LW91dGxpbmUtZXJyb3I6bm90KDotbW96LXBsYWNlaG9sZGVyLXNob3duKSArIGxhYmVsOmJlZm9yZSwgLm10LWlucHV0LW91dGxpbmUtZXJyb3I6bm90KDotbW96LXBsYWNlaG9sZGVyLXNob3duKSArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNDQsIDY3LCA1NCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjQ0LCA2NywgNTQsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lLWVycm9yOm5vdCg6LW1zLWlucHV0LXBsYWNlaG9sZGVyKSArIGxhYmVsLCAubXQtaW5wdXQtb3V0bGluZS1lcnJvcjpub3QoOi1tcy1pbnB1dC1wbGFjZWhvbGRlcikgKyBsYWJlbDpiZWZvcmUsIC5tdC1pbnB1dC1vdXRsaW5lLWVycm9yOm5vdCg6LW1zLWlucHV0LXBsYWNlaG9sZGVyKSArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNDQsIDY3LCA1NCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjQ0LCA2NywgNTQsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lLWVycm9yOm5vdCg6cGxhY2Vob2xkZXItc2hvd24pICsgbGFiZWwsIC5tdC1pbnB1dC1vdXRsaW5lLWVycm9yOm5vdCg6cGxhY2Vob2xkZXItc2hvd24pICsgbGFiZWw6YmVmb3JlLCAubXQtaW5wdXQtb3V0bGluZS1lcnJvcjpub3QoOnBsYWNlaG9sZGVyLXNob3duKSArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNDQsIDY3LCA1NCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjQ0LCA2NywgNTQsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lLXN1Y2Nlc3M6bm90KDotbW96LXBsYWNlaG9sZGVyLXNob3duKSArIGxhYmVsLCAubXQtaW5wdXQtb3V0bGluZS1zdWNjZXNzOm5vdCg6LW1vei1wbGFjZWhvbGRlci1zaG93bikgKyBsYWJlbDpiZWZvcmUsIC5tdC1pbnB1dC1vdXRsaW5lLXN1Y2Nlc3M6bm90KDotbW96LXBsYWNlaG9sZGVyLXNob3duKSArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSg3NiwgMTc1LCA4MCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoNzYsIDE3NSwgODAsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lLXN1Y2Nlc3M6bm90KDotbXMtaW5wdXQtcGxhY2Vob2xkZXIpICsgbGFiZWwsIC5tdC1pbnB1dC1vdXRsaW5lLXN1Y2Nlc3M6bm90KDotbXMtaW5wdXQtcGxhY2Vob2xkZXIpICsgbGFiZWw6YmVmb3JlLCAubXQtaW5wdXQtb3V0bGluZS1zdWNjZXNzOm5vdCg6LW1zLWlucHV0LXBsYWNlaG9sZGVyKSArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSg3NiwgMTc1LCA4MCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoNzYsIDE3NSwgODAsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lLXN1Y2Nlc3M6bm90KDpwbGFjZWhvbGRlci1zaG93bikgKyBsYWJlbCwgLm10LWlucHV0LW91dGxpbmUtc3VjY2Vzczpub3QoOnBsYWNlaG9sZGVyLXNob3duKSArIGxhYmVsOmJlZm9yZSwgLm10LWlucHV0LW91dGxpbmUtc3VjY2Vzczpub3QoOnBsYWNlaG9sZGVyLXNob3duKSArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSg3NiwgMTc1LCA4MCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoNzYsIDE3NSwgODAsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi8qIE1hdGVyaWFsIFRhaWx3aW5kIFJhZGlvIEJ1dHRvbiBhbmQgQ2hlY2tib3ggQ29sb3JzICovXFxuLm10LXJhZGlvLWJsdWUtZ3JheS01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1yYWRpby1ibHVlLWdyYXktNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3JlLCAubXQtY2hlY2tib3gtYmx1ZS1ncmF5LTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LWNoZWNrYm94LWJsdWUtZ3JheS01MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmV7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDk2LCAxMjUsIDEzOSwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoOTYsIDEyNSwgMTM5LCB2YXIoLS10dy1iZy1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjAuMn1cXG4ubXQtcmFkaW8tZ3JheS01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1yYWRpby1ncmF5LTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZSwgLm10LWNoZWNrYm94LWdyYXktNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtY2hlY2tib3gtZ3JheS01MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmV7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDE1OCwgMTU4LCAxNTgsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDE1OCwgMTU4LCAxNTgsIHZhcigtLXR3LWJnLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MC4yfVxcbi5tdC1yYWRpby1vcmFuZ2UtNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtcmFkaW8tb3JhbmdlLTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZSwgLm10LWNoZWNrYm94LW9yYW5nZS01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1jaGVja2JveC1vcmFuZ2UtNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3Jley0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNTUsIDE1MiwgMCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAxNTIsIDAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MC4yfVxcbi5tdC1yYWRpby1kZWVwLW9yYW5nZS01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1yYWRpby1kZWVwLW9yYW5nZS01MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmUsIC5tdC1jaGVja2JveC1kZWVwLW9yYW5nZS01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1jaGVja2JveC1kZWVwLW9yYW5nZS01MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmV7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDI1NSwgODcsIDM0LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDg3LCAzNCwgdmFyKC0tdHctYmctb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eTowLjJ9XFxuLm10LXJhZGlvLWJyb3duLTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LXJhZGlvLWJyb3duLTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZSwgLm10LWNoZWNrYm94LWJyb3duLTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LWNoZWNrYm94LWJyb3duLTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZXstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMTIxLCA4NSwgNzIsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEyMSwgODUsIDcyLCB2YXIoLS10dy1iZy1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjAuMn1cXG4ubXQtcmFkaW8tYW1iZXItNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtcmFkaW8tYW1iZXItNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3JlLCAubXQtY2hlY2tib3gtYW1iZXItNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtY2hlY2tib3gtYW1iZXItNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3Jley0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNTUsIDE5MywgNywgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAxOTMsIDcsIHZhcigtLXR3LWJnLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MC4yfVxcbi5tdC1yYWRpby15ZWxsb3ctNjAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtcmFkaW8teWVsbG93LTYwMCArIGxhYmVsIHNwYW46OmJlZm9yZSwgLm10LWNoZWNrYm94LXllbGxvdy02MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1jaGVja2JveC15ZWxsb3ctNjAwICsgbGFiZWwgc3Bhbjo6YmVmb3Jley0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNTMsIDIxNiwgNTMsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1MywgMjE2LCA1MywgdmFyKC0tdHctYmctb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eTowLjJ9XFxuLm10LXJhZGlvLWxpbWUtNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtcmFkaW8tbGltZS01MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmUsIC5tdC1jaGVja2JveC1saW1lLTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LWNoZWNrYm94LWxpbWUtNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3Jley0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyMDUsIDIyMCwgNTcsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIwNSwgMjIwLCA1NywgdmFyKC0tdHctYmctb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eTowLjJ9XFxuLm10LXJhZGlvLWxpZ2h0LWdyZWVuLTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LXJhZGlvLWxpZ2h0LWdyZWVuLTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZSwgLm10LWNoZWNrYm94LWxpZ2h0LWdyZWVuLTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LWNoZWNrYm94LWxpZ2h0LWdyZWVuLTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZXstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMTM5LCAxOTUsIDc0LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxMzksIDE5NSwgNzQsIHZhcigtLXR3LWJnLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MC4yfVxcbi5tdC1yYWRpby1ncmVlbi01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1yYWRpby1ncmVlbi01MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmUsIC5tdC1jaGVja2JveC1ncmVlbi01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1jaGVja2JveC1ncmVlbi01MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmV7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDc2LCAxNzUsIDgwLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSg3NiwgMTc1LCA4MCwgdmFyKC0tdHctYmctb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eTowLjJ9XFxuLm10LXJhZGlvLXRlYWwtNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtcmFkaW8tdGVhbC01MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmUsIC5tdC1jaGVja2JveC10ZWFsLTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LWNoZWNrYm94LXRlYWwtNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3Jley0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgwLCAxNTAsIDEzNiwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwgMTUwLCAxMzYsIHZhcigtLXR3LWJnLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MC4yfVxcbi5tdC1yYWRpby1jeWFuLTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LXJhZGlvLWN5YW4tNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3JlLCAubXQtY2hlY2tib3gtY3lhbi01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1jaGVja2JveC1jeWFuLTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZXstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMCwgMTg4LCAyMTIsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsIDE4OCwgMjEyLCB2YXIoLS10dy1iZy1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjAuMn1cXG4ubXQtcmFkaW8tbGlnaHQtYmx1ZS01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1yYWRpby1saWdodC1ibHVlLTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZSwgLm10LWNoZWNrYm94LWxpZ2h0LWJsdWUtNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtY2hlY2tib3gtbGlnaHQtYmx1ZS01MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmV7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDMsIDE2OSwgMjQ0LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgzLCAxNjksIDI0NCwgdmFyKC0tdHctYmctb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eTowLjJ9XFxuLm10LXJhZGlvLWJsdWUtNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtcmFkaW8tYmx1ZS01MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmUsIC5tdC1jaGVja2JveC1ibHVlLTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LWNoZWNrYm94LWJsdWUtNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3Jley0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgzMywgMTUwLCAyNDMsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDMzLCAxNTAsIDI0MywgdmFyKC0tdHctYmctb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eTowLjJ9XFxuLm10LXJhZGlvLWluZGlnby01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1yYWRpby1pbmRpZ28tNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3JlLCAubXQtY2hlY2tib3gtaW5kaWdvLTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LWNoZWNrYm94LWluZGlnby01MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmV7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDYzLCA4MSwgMTgxLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSg2MywgODEsIDE4MSwgdmFyKC0tdHctYmctb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eTowLjJ9XFxuLm10LXJhZGlvLXB1cnBsZS01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1yYWRpby1wdXJwbGUtNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3JlLCAubXQtY2hlY2tib3gtcHVycGxlLTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LWNoZWNrYm94LXB1cnBsZS01MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmV7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDE1NiwgMzksIDE3NiwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTU2LCAzOSwgMTc2LCB2YXIoLS10dy1iZy1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjAuMn1cXG4ubXQtcmFkaW8tZGVlcC1wdXJwbGUtNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtcmFkaW8tZGVlcC1wdXJwbGUtNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3JlLCAubXQtY2hlY2tib3gtZGVlcC1wdXJwbGUtNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtY2hlY2tib3gtZGVlcC1wdXJwbGUtNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3Jley0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgxMDMsIDU4LCAxODMsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEwMywgNTgsIDE4MywgdmFyKC0tdHctYmctb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eTowLjJ9XFxuLm10LXJhZGlvLXBpbmstNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtcmFkaW8tcGluay01MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmUsIC5tdC1jaGVja2JveC1waW5rLTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LWNoZWNrYm94LXBpbmstNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3Jley0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyMzMsIDMwLCA5OSwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjMzLCAzMCwgOTksIHZhcigtLXR3LWJnLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MC4yfVxcbi5tdC1yYWRpby1yZWQtNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtcmFkaW8tcmVkLTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZSwgLm10LWNoZWNrYm94LXJlZC01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1jaGVja2JveC1yZWQtNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3Jley0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNDQsIDY3LCA1NCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjQ0LCA2NywgNTQsIHZhcigtLXR3LWJnLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MC4yfVxcbi8qIFRpcHB5IEJveHggKi9cXG4udGlwcHktYm94OmZvY3VzIHtcXG4gICAgb3V0bGluZTogbm9uZTtcXG59XFxuLyogVGlwcHkgQW5pbWF0aW9uICovXFxuLnRpcHB5LWJveFtkYXRhLWFuaW1hdGlvbj0nc2NhbGUnXSB7XFxuICAgIHRyYW5zZm9ybS1vcmlnaW46IHRvcCBsZWZ0ICFpbXBvcnRhbnQ7XFxufVxcbi8qIFRpcHB5IEFycm93ICovXFxuLmFycm93LWxpZ2h0IC50aXBweS1zdmctYXJyb3cge1xcbiAgICBmaWxsOiAjZmZmO1xcbn1cXG4uYXJyb3ctZGFyayAudGlwcHktc3ZnLWFycm93IHtcXG4gICAgZmlsbDogcmdiYSgwLCAwLCAwLCAwLjgpO1xcbn1cXG4vKiBNYXRlcmlhbCBUYWlsd2luZCBSYWRpbyBCdXR0b24gUmlwcGxlIEVmZmVjdCBBbmltYXRpb24gKi9cXG5ALXdlYmtpdC1rZXlmcmFtZXMgcmFkaW8tcmlwcGxlIHtcXG4gICAgZnJvbSB7XFxuICAgICAgICBvcGFjaXR5OiAwO1xcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZTNkKDEsIDEsIDEpO1xcbiAgICB9XFxuICAgIDUwJSB7XFxuICAgICAgICBvcGFjaXR5OiAxO1xcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZTNkKDIsIDIsIDEpO1xcbiAgICB9XFxuICAgIHRvIHtcXG4gICAgICAgIG9wYWNpdHk6IDA7XFxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMywgMywgMSk7XFxuICAgIH1cXG59XFxuQGtleWZyYW1lcyByYWRpby1yaXBwbGUge1xcbiAgICBmcm9tIHtcXG4gICAgICAgIG9wYWNpdHk6IDA7XFxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMSwgMSwgMSk7XFxuICAgIH1cXG4gICAgNTAlIHtcXG4gICAgICAgIG9wYWNpdHk6IDE7XFxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMiwgMiwgMSk7XFxuICAgIH1cXG4gICAgdG8ge1xcbiAgICAgICAgb3BhY2l0eTogMDtcXG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUzZCgzLCAzLCAxKTtcXG4gICAgfVxcbn1cXG4ubGFzdFxcXFw6bXItMDpsYXN0LWNoaWxke21hcmdpbi1yaWdodDowcHh9XFxuLmhvdmVyXFxcXDpib3JkZXItYmx1ZS1ncmF5LTcwMDpob3ZlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoNjksIDkwLCAxMDAsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpib3JkZXItZ3JheS03MDA6aG92ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDk3LCA5NywgOTcsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpib3JkZXItYnJvd24tNzAwOmhvdmVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSg5MywgNjQsIDU1LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6Ym9yZGVyLWRlZXAtb3JhbmdlLTcwMDpob3ZlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjMwLCA3NCwgMjUsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpib3JkZXItb3JhbmdlLTcwMDpob3ZlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjQ1LCAxMjQsIDAsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpib3JkZXItYW1iZXItNzAwOmhvdmVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNTUsIDE2MCwgMCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJvcmRlci15ZWxsb3ctNzAwOmhvdmVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNTEsIDE5MiwgNDUsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpib3JkZXItbGltZS03MDA6aG92ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDE3NSwgMTgwLCA0MywgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJvcmRlci1saWdodC1ncmVlbi03MDA6aG92ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDEwNCwgMTU5LCA1NiwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJvcmRlci1ncmVlbi03MDA6aG92ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDU2LCAxNDIsIDYwLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6Ym9yZGVyLXRlYWwtNzAwOmhvdmVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgwLCAxMjEsIDEwNywgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJvcmRlci1jeWFuLTcwMDpob3ZlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMCwgMTUxLCAxNjcsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpib3JkZXItbGlnaHQtYmx1ZS03MDA6aG92ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDIsIDEzNiwgMjA5LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6Ym9yZGVyLWJsdWUtNzAwOmhvdmVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNSwgMTE4LCAyMTAsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpib3JkZXItaW5kaWdvLTcwMDpob3ZlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoNDgsIDYzLCAxNTksIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpib3JkZXItZGVlcC1wdXJwbGUtNzAwOmhvdmVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSg4MSwgNDUsIDE2OCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJvcmRlci1wdXJwbGUtNzAwOmhvdmVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgxMjMsIDMxLCAxNjIsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpib3JkZXItcGluay03MDA6aG92ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDE5NCwgMjQsIDkxLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6Ym9yZGVyLXJlZC03MDA6aG92ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDIxMSwgNDcsIDQ3LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctYmx1ZS1ncmF5LTcwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoNjksIDkwLCAxMDAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWdyYXktNzAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSg5NywgOTcsIDk3LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1icm93bi03MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDkzLCA2NCwgNTUsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWRlZXAtb3JhbmdlLTcwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjMwLCA3NCwgMjUsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLW9yYW5nZS03MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI0NSwgMTI0LCAwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1hbWJlci03MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwgMTYwLCAwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy15ZWxsb3ctNzAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTEsIDE5MiwgNDUsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWxpbWUtNzAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxNzUsIDE4MCwgNDMsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWxpZ2h0LWdyZWVuLTcwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTA0LCAxNTksIDU2LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1ncmVlbi03MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDU2LCAxNDIsIDYwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy10ZWFsLTcwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwgMTIxLCAxMDcsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWN5YW4tNzAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLCAxNTEsIDE2NywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctbGlnaHQtYmx1ZS03MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIsIDEzNiwgMjA5LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1ibHVlLTcwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjUsIDExOCwgMjEwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1pbmRpZ28tNzAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSg0OCwgNjMsIDE1OSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctZGVlcC1wdXJwbGUtNzAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSg4MSwgNDUsIDE2OCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctcHVycGxlLTcwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTIzLCAzMSwgMTYyLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1waW5rLTcwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTk0LCAyNCwgOTEsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLXJlZC03MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIxMSwgNDcsIDQ3LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1ibHVlLWdyYXktNTA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIzNiwgMjM5LCAyNDEsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWdyYXktNTA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1MCwgMjUwLCAyNTAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWJyb3duLTUwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMzksIDIzNSwgMjMzLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1kZWVwLW9yYW5nZS01MDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjUxLCAyMzMsIDIzMSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6Ymctb3JhbmdlLTUwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDI0MywgMjI0LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1hbWJlci01MDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAyNDgsIDIyNSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmcteWVsbG93LTUwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDI1MywgMjMxLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1saW1lLTUwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNDksIDI1MSwgMjMxLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1saWdodC1ncmVlbi01MDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjQxLCAyNDgsIDIzMywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctZ3JlZW4tNTA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIzMiwgMjQ1LCAyMzMsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLXRlYWwtNTA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIyNCwgMjQyLCAyNDEsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWN5YW4tNTA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIyNCwgMjQ3LCAyNTAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWxpZ2h0LWJsdWUtNTA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIyNSwgMjQ1LCAyNTQsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWJsdWUtNTA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIyNywgMjQyLCAyNTMsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWluZGlnby01MDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjMyLCAyMzQsIDI0NiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctZGVlcC1wdXJwbGUtNTA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIzNywgMjMxLCAyNDYsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLXB1cnBsZS01MDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjQzLCAyMjksIDI0NSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctcGluay01MDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjUyLCAyMjgsIDIzNiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctcmVkLTUwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDIzNSwgMjM4LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1ibHVlLWdyYXktNTAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSg5NiwgMTI1LCAxMzksIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWdyYXktNTAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxNTgsIDE1OCwgMTU4LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1icm93bi01MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEyMSwgODUsIDcyLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1kZWVwLW9yYW5nZS01MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwgODcsIDM0LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1vcmFuZ2UtNTAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDE1MiwgMCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctYW1iZXItNTAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDE5MywgNywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmcteWVsbG93LTYwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjUzLCAyMTYsIDUzLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1saW1lLTUwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjA1LCAyMjAsIDU3LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1saWdodC1ncmVlbi01MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEzOSwgMTk1LCA3NCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctZ3JlZW4tNTAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSg3NiwgMTc1LCA4MCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctdGVhbC01MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsIDE1MCwgMTM2LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1jeWFuLTUwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwgMTg4LCAyMTIsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWxpZ2h0LWJsdWUtNTAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgzLCAxNjksIDI0NCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctYmx1ZS01MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDMzLCAxNTAsIDI0MywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctaW5kaWdvLTUwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoNjMsIDgxLCAxODEsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWRlZXAtcHVycGxlLTUwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTAzLCA1OCwgMTgzLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1wdXJwbGUtNTAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxNTYsIDM5LCAxNzYsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLXBpbmstNTAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMzMsIDMwLCA5OSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctcmVkLTUwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjQ0LCA2NywgNTQsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLXdoaXRlOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDI1NSwgMjU1LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1vcGFjaXR5LTIwOmhvdmVyey0tdHctYmctb3BhY2l0eTowLjJ9XFxuLmhvdmVyXFxcXDp0ZXh0LWdyYXktOTAwOmhvdmVyey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgzMywgMzMsIDMzLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOnRleHQtYmx1ZS1ncmF5LTgwMDpob3ZlcnstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoNTUsIDcxLCA3OSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDp0ZXh0LWJsdWUtZ3JheS03MDA6aG92ZXJ7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDY5LCA5MCwgMTAwLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOnRleHQtZ3JheS03MDA6aG92ZXJ7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDk3LCA5NywgOTcsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6dGV4dC1icm93bi03MDA6aG92ZXJ7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDkzLCA2NCwgNTUsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6dGV4dC1kZWVwLW9yYW5nZS03MDA6aG92ZXJ7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDIzMCwgNzQsIDI1LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOnRleHQtb3JhbmdlLTcwMDpob3ZlcnstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjQ1LCAxMjQsIDAsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6dGV4dC1hbWJlci03MDA6aG92ZXJ7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDI1NSwgMTYwLCAwLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOnRleHQteWVsbG93LTcwMDpob3ZlcnstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjUxLCAxOTIsIDQ1LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOnRleHQtbGltZS03MDA6aG92ZXJ7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDE3NSwgMTgwLCA0MywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDp0ZXh0LWxpZ2h0LWdyZWVuLTcwMDpob3ZlcnstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMTA0LCAxNTksIDU2LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOnRleHQtZ3JlZW4tNzAwOmhvdmVyey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSg1NiwgMTQyLCA2MCwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDp0ZXh0LXRlYWwtNzAwOmhvdmVyey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgwLCAxMjEsIDEwNywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDp0ZXh0LWN5YW4tNzAwOmhvdmVyey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgwLCAxNTEsIDE2NywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDp0ZXh0LWxpZ2h0LWJsdWUtNzAwOmhvdmVyey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyLCAxMzYsIDIwOSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDp0ZXh0LWJsdWUtNzAwOmhvdmVyey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyNSwgMTE4LCAyMTAsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6dGV4dC1pbmRpZ28tNzAwOmhvdmVyey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSg0OCwgNjMsIDE1OSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDp0ZXh0LWRlZXAtcHVycGxlLTcwMDpob3ZlcnstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoODEsIDQ1LCAxNjgsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6dGV4dC1wdXJwbGUtNzAwOmhvdmVyey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgxMjMsIDMxLCAxNjIsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6dGV4dC1waW5rLTcwMDpob3ZlcnstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMTk0LCAyNCwgOTEsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6dGV4dC1yZWQtNzAwOmhvdmVyey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyMTEsIDQ3LCA0NywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDp0ZXh0LXdoaXRlOmhvdmVyey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyNTUsIDI1NSwgMjU1LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1sZy1ibHVlLWdyYXk6aG92ZXJ7LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoNjksIDkwLCAxMDAsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LWxnLWdyYXk6aG92ZXJ7LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoOTcsIDk3LCA5NywgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbGctYnJvd246aG92ZXJ7LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoOTMsIDY0LCA1NSwgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbGctZGVlcC1vcmFuZ2U6aG92ZXJ7LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoMjMwLCA3NCwgMjUsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LWxnLW9yYW5nZTpob3ZlcnstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSgyNDUsIDEyMiwgMCwgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbGctYW1iZXI6aG92ZXJ7LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoMjU1LCAxNjAsIDAsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LWxnLXllbGxvdzpob3ZlcnstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSgyNTEsIDE5MiwgNDUsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LWxnLWxpbWU6aG92ZXJ7LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoMTc1LCAxODAsIDQzLCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1sZy1saWdodC1ncmVlbjpob3ZlcnstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSgxMDQsIDE1OSwgNTYsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LWxnLWdyZWVuOmhvdmVyey0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDU2LCAxNDIsIDYwLCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1sZy10ZWFsOmhvdmVyey0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDAsIDEyMSwgMTA3LCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1sZy1jeWFuOmhvdmVyey0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDAsIDE1MSwgMTY3LCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1sZy1saWdodC1ibHVlOmhvdmVyey0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDIsIDEzNiwgMjA5LCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1sZy1ibHVlOmhvdmVyey0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDI1LCAxMTgsIDIxMCwgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbGctaW5kaWdvOmhvdmVyey0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDQ4LCA2MywgMTU5LCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1sZy1kZWVwLXB1cnBsZTpob3ZlcnstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSg4MSwgNDUsIDE2OCwgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbGctcHVycGxlOmhvdmVyey0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDEyMywgMzEsIDE2MiwgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbGctcGluazpob3ZlcnstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSgxOTQsIDI0LCA5MSwgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbGctcmVkOmhvdmVyey0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDIxMSwgNDcsIDQ3LCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1tZC1ibHVlLWdyYXk6aG92ZXJ7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSg5NiwgMTI1LCAxMzksIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LW1kLWdyYXk6aG92ZXJ7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgxNTgsIDE1OCwgMTU4LCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1tZC1icm93bjpob3ZlcnstLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDEyMSwgODUsIDcyLCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1tZC1kZWVwLW9yYW5nZTpob3ZlcnstLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDI1NSwgODcsIDM2LCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1tZC1vcmFuZ2U6aG92ZXJ7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgyNTUsIDE1MiwgMCwgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbWQtYW1iZXI6aG92ZXJ7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgyNTUsIDE5MywgNywgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbWQteWVsbG93OmhvdmVyey0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoMjU1LCAyMzUsIDU5LCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1tZC1saW1lOmhvdmVyey0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoMjA1LCAyMjAsIDU3LCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1tZC1saWdodC1ncmVlbjpob3ZlcnstLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDEzOSwgMTk1LCA3NCwgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbWQtZ3JlZW46aG92ZXJ7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSg3NiwgMTc1LCA4MCwgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbWQtdGVhbDpob3ZlcnstLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDAsIDE1MCwgMTM2LCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1tZC1jeWFuOmhvdmVyey0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoMCwgMTg4LCAyMTIsIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LW1kLWxpZ2h0LWJsdWU6aG92ZXJ7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgzLCAxNjksIDI0NCwgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbWQtYmx1ZTpob3ZlcnstLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDMzLCAxNTAsIDI0MywgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbWQtaW5kaWdvOmhvdmVyey0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoNjMsIDgxLCAxODEsIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LW1kLWRlZXAtcHVycGxlOmhvdmVyey0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoMTAzLCA1OCwgMTgzLCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1tZC1wdXJwbGU6aG92ZXJ7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgxNTYsIDM5LCAxNzYsIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LW1kLXBpbms6aG92ZXJ7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgyMzMsIDMwLCA5OSwgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbWQtcmVkOmhvdmVyey0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoMjQ0LCA2NywgNTQsIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5mb2N1c1xcXFw6Ym9yZGVyLTI6Zm9jdXN7Ym9yZGVyLXdpZHRoOjJweH1cXG4uZm9jdXNcXFxcOmJvcmRlci1ibHVlLWdyYXktNTAwOmZvY3Vzey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSg5NiwgMTI1LCAxMzksIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpib3JkZXItZ3JheS01MDA6Zm9jdXN7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDE1OCwgMTU4LCAxNTgsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpib3JkZXItYnJvd24tNTAwOmZvY3Vzey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgxMjEsIDg1LCA3MiwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uZm9jdXNcXFxcOmJvcmRlci1kZWVwLW9yYW5nZS01MDA6Zm9jdXN7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDI1NSwgODcsIDM0LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6Ym9yZGVyLW9yYW5nZS01MDA6Zm9jdXN7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDI1NSwgMTUyLCAwLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6Ym9yZGVyLWFtYmVyLTUwMDpmb2N1c3stLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjU1LCAxOTMsIDcsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpib3JkZXIteWVsbG93LTYwMDpmb2N1c3stLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjUzLCAyMTYsIDUzLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6Ym9yZGVyLWxpbWUtNTAwOmZvY3Vzey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyMDUsIDIyMCwgNTcsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpib3JkZXItbGlnaHQtZ3JlZW4tNTAwOmZvY3Vzey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgxMzksIDE5NSwgNzQsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpib3JkZXItZ3JlZW4tNTAwOmZvY3Vzey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSg3NiwgMTc1LCA4MCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uZm9jdXNcXFxcOmJvcmRlci10ZWFsLTUwMDpmb2N1c3stLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMCwgMTUwLCAxMzYsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpib3JkZXItY3lhbi01MDA6Zm9jdXN7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDAsIDE4OCwgMjEyLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6Ym9yZGVyLWxpZ2h0LWJsdWUtNTAwOmZvY3Vzey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgzLCAxNjksIDI0NCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uZm9jdXNcXFxcOmJvcmRlci1ibHVlLTUwMDpmb2N1c3stLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMzMsIDE1MCwgMjQzLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6Ym9yZGVyLWluZGlnby01MDA6Zm9jdXN7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDYzLCA4MSwgMTgxLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6Ym9yZGVyLWRlZXAtcHVycGxlLTUwMDpmb2N1c3stLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMTAzLCA1OCwgMTgzLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6Ym9yZGVyLXB1cnBsZS01MDA6Zm9jdXN7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDE1NiwgMzksIDE3NiwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uZm9jdXNcXFxcOmJvcmRlci1waW5rLTUwMDpmb2N1c3stLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjMzLCAzMCwgOTksIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpib3JkZXItcmVkLTUwMDpmb2N1c3stLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjQ0LCA2NywgNTQsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpiZy1ibHVlLWdyYXktNDAwOmZvY3Vzey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxMjAsIDE0NCwgMTU2LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpiZy1ncmF5LTQwMDpmb2N1c3stLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTg5LCAxODksIDE4OSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6YmctYnJvd24tNDAwOmZvY3Vzey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxNDEsIDExMCwgOTksIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uZm9jdXNcXFxcOmJnLWRlZXAtb3JhbmdlLTQwMDpmb2N1c3stLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAxMTIsIDY3LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpiZy1vcmFuZ2UtNDAwOmZvY3Vzey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDE2NywgMzgsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uZm9jdXNcXFxcOmJnLWFtYmVyLTQwMDpmb2N1c3stLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAyMDIsIDQwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpiZy15ZWxsb3ctNTAwOmZvY3Vzey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDIzNSwgNTksIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uZm9jdXNcXFxcOmJnLWxpbWUtNDAwOmZvY3Vzey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMTIsIDIyNSwgODcsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uZm9jdXNcXFxcOmJnLWxpZ2h0LWdyZWVuLTQwMDpmb2N1c3stLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTU2LCAyMDQsIDEwMSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6YmctZ3JlZW4tNDAwOmZvY3Vzey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxMDIsIDE4NywgMTA2LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpiZy10ZWFsLTQwMDpmb2N1c3stLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMzgsIDE2NiwgMTU0LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpiZy1jeWFuLTQwMDpmb2N1c3stLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMzgsIDE5OCwgMjE4LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpiZy1saWdodC1ibHVlLTQwMDpmb2N1c3stLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoNDEsIDE4MiwgMjQ2LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpiZy1ibHVlLTQwMDpmb2N1c3stLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoNjYsIDE2NSwgMjQ1LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpiZy1pbmRpZ28tNDAwOmZvY3Vzey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSg5MiwgMTA3LCAxOTIsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uZm9jdXNcXFxcOmJnLWRlZXAtcHVycGxlLTQwMDpmb2N1c3stLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTI2LCA4NywgMTk0LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpiZy1wdXJwbGUtNDAwOmZvY3Vzey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxNzEsIDcxLCAxODgsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uZm9jdXNcXFxcOmJnLXBpbmstNDAwOmZvY3Vzey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMzYsIDY0LCAxMjIsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uZm9jdXNcXFxcOmJnLXJlZC00MDA6Zm9jdXN7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIzOSwgODMsIDgwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpiZy1ncmF5LTUwMDpmb2N1c3stLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTU4LCAxNTgsIDE1OCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6Ymctb3BhY2l0eS0yMDpmb2N1c3stLXR3LWJnLW9wYWNpdHk6MC4yfVxcbi5mb2N1c1xcXFw6dGV4dC1ncmF5LTgwMDpmb2N1c3stLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoNjYsIDY2LCA2NiwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpzaGFkb3ctbm9uZTpmb2N1c3stLXR3LXNoYWRvdzowIDAgIzAwMDA7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5mb2N1c1xcXFw6b3V0bGluZS1ub25lOmZvY3Vze291dGxpbmU6MnB4IHNvbGlkIHRyYW5zcGFyZW50O291dGxpbmUtb2Zmc2V0OjJweH1cXG4uZm9jdXNcXFxcOnJpbmctMDpmb2N1c3stLXR3LXJpbmctb2Zmc2V0LXNoYWRvdzp2YXIoLS10dy1yaW5nLWluc2V0KSAwIDAgMCB2YXIoLS10dy1yaW5nLW9mZnNldC13aWR0aCkgdmFyKC0tdHctcmluZy1vZmZzZXQtY29sb3IpOy0tdHctcmluZy1zaGFkb3c6dmFyKC0tdHctcmluZy1pbnNldCkgMCAwIDAgY2FsYygwcHggKyB2YXIoLS10dy1yaW5nLW9mZnNldC13aWR0aCkpIHZhcigtLXR3LXJpbmctY29sb3IpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93KSwgdmFyKC0tdHctcmluZy1zaGFkb3cpLCB2YXIoLS10dy1zaGFkb3csIDAgMCAjMDAwMCl9XFxuLmFjdGl2ZVxcXFw6YmctYmx1ZS1ncmF5LTgwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDU1LCA3MSwgNzksIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy1ncmF5LTgwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDY2LCA2NiwgNjYsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy1icm93bi04MDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSg3OCwgNTIsIDQ2LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctZGVlcC1vcmFuZ2UtODAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjE2LCA2NywgMjEsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy1vcmFuZ2UtODAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjM5LCAxMDgsIDAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy1hbWJlci04MDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDE0MywgMCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLXllbGxvdy04MDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNDksIDE2OCwgMzcsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy1saW1lLTgwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDE1OCwgMTU3LCAzNiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLWxpZ2h0LWdyZWVuLTgwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDg1LCAxMzksIDQ3LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctZ3JlZW4tODAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoNDYsIDEyNSwgNTAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy10ZWFsLTgwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsIDEwNSwgOTIsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy1jeWFuLTgwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsIDEzMSwgMTQzLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctbGlnaHQtYmx1ZS04MDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyLCAxMTksIDE4OSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLWJsdWUtODAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjEsIDEwMSwgMTkyLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctaW5kaWdvLTgwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDQwLCA1MywgMTQ3LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctZGVlcC1wdXJwbGUtODAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoNjksIDM5LCAxNjAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy1wdXJwbGUtODAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTA2LCAyNywgMTU0LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctcGluay04MDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxNzMsIDIwLCA4NywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLXJlZC04MDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxOTgsIDQwLCA0MCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLWJsdWUtZ3JheS0xMDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMDcsIDIxNiwgMjIwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctZ3JheS0xMDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNDUsIDI0NSwgMjQ1LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctYnJvd24tMTAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjE1LCAyMDQsIDIwMCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLWRlZXAtb3JhbmdlLTEwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwgMjA0LCAxODgsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy1vcmFuZ2UtMTAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAyMjQsIDE3OCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLWFtYmVyLTEwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwgMjM2LCAxNzksIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy15ZWxsb3ctMTAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAyNDksIDE5NiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLWxpbWUtMTAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjQwLCAyNDQsIDE5NSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLWxpZ2h0LWdyZWVuLTEwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIyMCwgMjM3LCAyMDAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy1ncmVlbi0xMDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMDAsIDIzMCwgMjAxLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctdGVhbC0xMDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxNzgsIDIyMywgMjE5LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctY3lhbi0xMDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxNzgsIDIzNSwgMjQyLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctbGlnaHQtYmx1ZS0xMDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxNzksIDIyOSwgMjUyLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctYmx1ZS0xMDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxODcsIDIyMiwgMjUxLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctaW5kaWdvLTEwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDE5NywgMjAyLCAyMzMsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy1kZWVwLXB1cnBsZS0xMDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMDksIDE5NiwgMjMzLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctcHVycGxlLTEwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIyNSwgMTkwLCAyMzEsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy1waW5rLTEwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI0OCwgMTg3LCAyMDgsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy1yZWQtMTAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAyMDUsIDIxMCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLWdyYXktNTAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTU4LCAxNTgsIDE1OCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLW9wYWNpdHktNDA6YWN0aXZley0tdHctYmctb3BhY2l0eTowLjR9XFxuQG1lZGlhIChtaW4td2lkdGg6IDY0MHB4KXtcXG4uc21cXFxcOmxlZnQtYXV0b3tsZWZ0OmF1dG99XFxuLnNtXFxcXDp3LWZ1bGx7d2lkdGg6MTAwJX19XFxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KXtcXG4ubWRcXFxcOm10LTQwe21hcmdpbi10b3A6MTByZW19XFxuLm1kXFxcXDptdC0we21hcmdpbi10b3A6MHB4fVxcbi5tZFxcXFw6bXQtNjR7bWFyZ2luLXRvcDoxNnJlbX1cXG4ubWRcXFxcOm1iLTB7bWFyZ2luLWJvdHRvbTowcHh9XFxuLm1kXFxcXDp3LTlcXFxcLzEye3dpZHRoOjc1JX1cXG4ubWRcXFxcOnctNDh7d2lkdGg6MTJyZW19XFxuLm1kXFxcXDp3LTZcXFxcLzEye3dpZHRoOjUwJX1cXG4ubWRcXFxcOnctNFxcXFwvMTJ7d2lkdGg6MzMuMzMzMzMzJX1cXG4ubWRcXFxcOnctNVxcXFwvMTJ7d2lkdGg6NDEuNjY2NjY3JX1cXG4ubWRcXFxcOnctOFxcXFwvMTJ7d2lkdGg6NjYuNjY2NjY3JX1cXG4ubWRcXFxcOmZsZXgtcm93e2ZsZXgtZGlyZWN0aW9uOnJvd31cXG4ubWRcXFxcOmp1c3RpZnktc3RhcnR7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnR9XFxuLm1kXFxcXDpqdXN0aWZ5LWJldHdlZW57anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW59XFxuLm1kXFxcXDpnYXAtNntnYXA6MS41cmVtfVxcbi5tZFxcXFw6cHgtOHtwYWRkaW5nLWxlZnQ6MnJlbTtwYWRkaW5nLXJpZ2h0OjJyZW19XFxuLm1kXFxcXDpweC00e3BhZGRpbmctbGVmdDoxcmVtO3BhZGRpbmctcmlnaHQ6MXJlbX1cXG4ubWRcXFxcOnByLTEye3BhZGRpbmctcmlnaHQ6M3JlbX1cXG4ubWRcXFxcOnB0LTB7cGFkZGluZy10b3A6MHB4fX1cXG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KXtcXG4ubGdcXFxcOnN0YXRpY3twb3NpdGlvbjpzdGF0aWN9XFxuLmxnXFxcXDptci01e21hcmdpbi1yaWdodDoxLjI1cmVtfVxcbi5sZ1xcXFw6bWwtNXttYXJnaW4tbGVmdDoxLjI1cmVtfVxcbi5sZ1xcXFw6bXQtMTZ7bWFyZ2luLXRvcDo0cmVtfVxcbi5sZ1xcXFw6YmxvY2t7ZGlzcGxheTpibG9ja31cXG4ubGdcXFxcOmZsZXh7ZGlzcGxheTpmbGV4fVxcbi5sZ1xcXFw6aGlkZGVue2Rpc3BsYXk6bm9uZX1cXG4ubGdcXFxcOnctNFxcXFwvMTJ7d2lkdGg6MzMuMzMzMzMzJX1cXG4ubGdcXFxcOnctNlxcXFwvMTJ7d2lkdGg6NTAlfVxcbi5sZ1xcXFw6dy04XFxcXC8xMnt3aWR0aDo2Ni42NjY2NjclfVxcbi5sZ1xcXFw6dy02MHt3aWR0aDoxNXJlbX1cXG4ubGdcXFxcOnctYXV0b3t3aWR0aDphdXRvfVxcbi5sZ1xcXFw6ZmxleC1yb3d7ZmxleC1kaXJlY3Rpb246cm93fVxcbi5sZ1xcXFw6aXRlbXMtY2VudGVye2FsaWduLWl0ZW1zOmNlbnRlcn1cXG4ubGdcXFxcOmp1c3RpZnktYmV0d2VlbntqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbn1cXG4ubGdcXFxcOmp1c3RpZnktc3RhcnR7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnR9XFxuLmxnXFxcXDpweC0zNntwYWRkaW5nLWxlZnQ6OXJlbTtwYWRkaW5nLXJpZ2h0OjlyZW19XFxuLmxnXFxcXDp0ZXh0LWxlZnR7dGV4dC1hbGlnbjpsZWZ0fX1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vbm9kZV9tb2R1bGVzL0BtYXRlcmlhbC10YWlsd2luZC9yZWFjdC90YWlsd2luZC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQ0EsaURBQWlELFFBQVE7QUFDekQsNEdBQTRHLFFBQVEsQ0FBQyx3QkFBd0I7QUFDN0ksb0RBQW9ELEtBQUs7QUFDekQsd0RBQXdELFdBQVc7QUFDbkUsa0RBQWtELE9BQU87QUFDekQsOEdBQThHLHVCQUF1QixDQUFDLG1CQUFtQixDQUFDLFNBQVM7QUFDbkssbURBQW1ELE1BQU07QUFDekQsZ0hBQWdILHdCQUF3QixDQUFDLG1CQUFtQixDQUFDLFVBQVU7QUFDdkssaUJBQWlCLFVBQVUsQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLGtCQUFrQjtBQUNwRSxzQ0FBc0MsaUJBQWlCO0FBQ3ZELHNEQUFzRCx1QkFBdUI7QUFDN0UseURBQXlELG9CQUFvQjtBQUM3RSx1REFBdUQsc0JBQXNCO0FB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QUNcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9Um9ib3RvK1NsYWI6d2dodEAxMDA7MjAwOzMwMDs0MDA7NTAwOzYwMDs3MDA7ODAwOzkwMCZmYW1pbHk9Um9ib3RvOml0YWwsd2dodEAwLDEwMDswLDMwMDswLDQwMDswLDUwMDswLDcwMDswLDkwMDsxLDEwMDsxLDMwMDsxLDQwMDsxLDUwMDsxLDcwMDsxLDkwMCZkaXNwbGF5PXN3YXAnKTtcXG4udGlwcHktYm94W2RhdGEtcGxhY2VtZW50Xj10b3BdPi50aXBweS1zdmctYXJyb3d7Ym90dG9tOjB9XFxuLnRpcHB5LWJveFtkYXRhLXBsYWNlbWVudF49dG9wXT4udGlwcHktc3ZnLWFycm93OmFmdGVyLC50aXBweS1ib3hbZGF0YS1wbGFjZW1lbnRePXRvcF0+LnRpcHB5LXN2Zy1hcnJvdz5zdmd7dG9wOjE2cHg7dHJhbnNmb3JtOnJvdGF0ZSgxODBkZWcpfVxcbi50aXBweS1ib3hbZGF0YS1wbGFjZW1lbnRePWJvdHRvbV0+LnRpcHB5LXN2Zy1hcnJvd3t0b3A6MH1cXG4udGlwcHktYm94W2RhdGEtcGxhY2VtZW50Xj1ib3R0b21dPi50aXBweS1zdmctYXJyb3c+c3Zne2JvdHRvbToxNnB4fVxcbi50aXBweS1ib3hbZGF0YS1wbGFjZW1lbnRePWxlZnRdPi50aXBweS1zdmctYXJyb3d7cmlnaHQ6MH1cXG4udGlwcHktYm94W2RhdGEtcGxhY2VtZW50Xj1sZWZ0XT4udGlwcHktc3ZnLWFycm93OmFmdGVyLC50aXBweS1ib3hbZGF0YS1wbGFjZW1lbnRePWxlZnRdPi50aXBweS1zdmctYXJyb3c+c3Zne3RyYW5zZm9ybTpyb3RhdGUoOTBkZWcpO3RvcDpjYWxjKDUwJSAtIDNweCk7bGVmdDoxMXB4fVxcbi50aXBweS1ib3hbZGF0YS1wbGFjZW1lbnRePXJpZ2h0XT4udGlwcHktc3ZnLWFycm93e2xlZnQ6MH1cXG4udGlwcHktYm94W2RhdGEtcGxhY2VtZW50Xj1yaWdodF0+LnRpcHB5LXN2Zy1hcnJvdzphZnRlciwudGlwcHktYm94W2RhdGEtcGxhY2VtZW50Xj1yaWdodF0+LnRpcHB5LXN2Zy1hcnJvdz5zdmd7dHJhbnNmb3JtOnJvdGF0ZSgtOTBkZWcpO3RvcDpjYWxjKDUwJSAtIDNweCk7cmlnaHQ6MTFweH1cXG4udGlwcHktc3ZnLWFycm93e3dpZHRoOjE2cHg7aGVpZ2h0OjE2cHg7ZmlsbDojMzMzO3RleHQtYWxpZ246aW5pdGlhbH1cXG4udGlwcHktc3ZnLWFycm93LC50aXBweS1zdmctYXJyb3c+c3Zne3Bvc2l0aW9uOmFic29sdXRlfVxcbi50aXBweS1ib3hbZGF0YS1hbmltYXRpb249c2NhbGVdW2RhdGEtcGxhY2VtZW50Xj10b3Bde3RyYW5zZm9ybS1vcmlnaW46Ym90dG9tfVxcbi50aXBweS1ib3hbZGF0YS1hbmltYXRpb249c2NhbGVdW2RhdGEtcGxhY2VtZW50Xj1ib3R0b21de3RyYW5zZm9ybS1vcmlnaW46dG9wfVxcbi50aXBweS1ib3hbZGF0YS1hbmltYXRpb249c2NhbGVdW2RhdGEtcGxhY2VtZW50Xj1sZWZ0XXt0cmFuc2Zvcm0tb3JpZ2luOnJpZ2h0fVxcbi50aXBweS1ib3hbZGF0YS1hbmltYXRpb249c2NhbGVdW2RhdGEtcGxhY2VtZW50Xj1yaWdodF17dHJhbnNmb3JtLW9yaWdpbjpsZWZ0fVxcbi50aXBweS1ib3hbZGF0YS1hbmltYXRpb249c2NhbGVdW2RhdGEtc3RhdGU9aGlkZGVuXXt0cmFuc2Zvcm06c2NhbGUoLjUpO29wYWNpdHk6MH1cXG4udGlwcHktYm94W2RhdGEtYW5pbWF0aW9uPXNoaWZ0LWF3YXldW2RhdGEtc3RhdGU9aGlkZGVuXXtvcGFjaXR5OjB9XFxuLnRpcHB5LWJveFtkYXRhLWFuaW1hdGlvbj1zaGlmdC1hd2F5XVtkYXRhLXN0YXRlPWhpZGRlbl1bZGF0YS1wbGFjZW1lbnRePXRvcF17dHJhbnNmb3JtOnRyYW5zbGF0ZVkoMTBweCl9XFxuLnRpcHB5LWJveFtkYXRhLWFuaW1hdGlvbj1zaGlmdC1hd2F5XVtkYXRhLXN0YXRlPWhpZGRlbl1bZGF0YS1wbGFjZW1lbnRePWJvdHRvbV17dHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTEwcHgpfVxcbi50aXBweS1ib3hbZGF0YS1hbmltYXRpb249c2hpZnQtYXdheV1bZGF0YS1zdGF0ZT1oaWRkZW5dW2RhdGEtcGxhY2VtZW50Xj1sZWZ0XXt0cmFuc2Zvcm06dHJhbnNsYXRlWCgxMHB4KX1cXG4udGlwcHktYm94W2RhdGEtYW5pbWF0aW9uPXNoaWZ0LWF3YXldW2RhdGEtc3RhdGU9aGlkZGVuXVtkYXRhLXBsYWNlbWVudF49cmlnaHRde3RyYW5zZm9ybTp0cmFuc2xhdGVYKC0xMHB4KX1cXG4vKiEgdGFpbHdpbmRjc3MgdjIuMS40IHwgTUlUIExpY2Vuc2UgfCBodHRwczovL3RhaWx3aW5kY3NzLmNvbSAqL1xcbi8qISBtb2Rlcm4tbm9ybWFsaXplIHYxLjEuMCB8IE1JVCBMaWNlbnNlIHwgaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9tb2Rlcm4tbm9ybWFsaXplICovXFxuLypcXG5Eb2N1bWVudFxcbj09PT09PT09XFxuKi9cXG4vKipcXG5Vc2UgYSBiZXR0ZXIgYm94IG1vZGVsIChvcGluaW9uYXRlZCkuXFxuKi9cXG4qLFxcbjo6YmVmb3JlLFxcbjo6YWZ0ZXIge1xcblxcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcbi8qKlxcblVzZSBhIG1vcmUgcmVhZGFibGUgdGFiIHNpemUgKG9waW5pb25hdGVkKS5cXG4qL1xcbmh0bWwge1xcblxcdC1tb3otdGFiLXNpemU6IDQ7XFxuXFx0LW8tdGFiLXNpemU6IDQ7XFxuXFx0ICAgdGFiLXNpemU6IDQ7XFxufVxcbi8qKlxcbjEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cXG4yLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cXG4qL1xcbmh0bWwge1xcblxcdGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXFxuXFx0LXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXFxufVxcbi8qXFxuU2VjdGlvbnNcXG49PT09PT09PVxcbiovXFxuLyoqXFxuUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxcbiovXFxuYm9keSB7XFxuXFx0bWFyZ2luOiAwO1xcbn1cXG4vKipcXG5JbXByb3ZlIGNvbnNpc3RlbmN5IG9mIGRlZmF1bHQgZm9udHMgaW4gYWxsIGJyb3dzZXJzLiAoaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9tb2Rlcm4tbm9ybWFsaXplL2lzc3Vlcy8zKVxcbiovXFxuYm9keSB7XFxuXFx0Zm9udC1mYW1pbHk6XFxuXFx0XFx0c3lzdGVtLXVpLFxcblxcdFxcdC1hcHBsZS1zeXN0ZW0sIC8qIEZpcmVmb3ggc3VwcG9ydHMgdGhpcyBidXQgbm90IHlldCBgc3lzdGVtLXVpYCAqL1xcblxcdFxcdCdTZWdvZSBVSScsXFxuXFx0XFx0Um9ib3RvLFxcblxcdFxcdEhlbHZldGljYSxcXG5cXHRcXHRBcmlhbCxcXG5cXHRcXHRzYW5zLXNlcmlmLFxcblxcdFxcdCdBcHBsZSBDb2xvciBFbW9qaScsXFxuXFx0XFx0J1NlZ29lIFVJIEVtb2ppJztcXG59XFxuLypcXG5Hcm91cGluZyBjb250ZW50XFxuPT09PT09PT09PT09PT09PVxcbiovXFxuLyoqXFxuMS4gQWRkIHRoZSBjb3JyZWN0IGhlaWdodCBpbiBGaXJlZm94LlxcbjIuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIG9mIGJvcmRlciBjb2xvciBpbiBGaXJlZm94LiAoaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTkwNjU1KVxcbiovXFxuaHIge1xcblxcdGhlaWdodDogMDsgLyogMSAqL1xcblxcdGNvbG9yOiBpbmhlcml0OyAvKiAyICovXFxufVxcbi8qXFxuVGV4dC1sZXZlbCBzZW1hbnRpY3NcXG49PT09PT09PT09PT09PT09PT09PVxcbiovXFxuLyoqXFxuQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXFxuKi9cXG5hYmJyW3RpdGxlXSB7XFxuXFx0LXdlYmtpdC10ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XFxuXFx0ICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XFxufVxcbi8qKlxcbkFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBFZGdlIGFuZCBTYWZhcmkuXFxuKi9cXG5iLFxcbnN0cm9uZyB7XFxuXFx0Zm9udC13ZWlnaHQ6IGJvbGRlcjtcXG59XFxuLyoqXFxuMS4gSW1wcm92ZSBjb25zaXN0ZW5jeSBvZiBkZWZhdWx0IGZvbnRzIGluIGFsbCBicm93c2Vycy4gKGh0dHBzOi8vZ2l0aHViLmNvbS9zaW5kcmVzb3JodXMvbW9kZXJuLW5vcm1hbGl6ZS9pc3N1ZXMvMylcXG4yLiBDb3JyZWN0IHRoZSBvZGQgJ2VtJyBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXFxuKi9cXG5jb2RlLFxcbmtiZCxcXG5zYW1wLFxcbnByZSB7XFxuXFx0Zm9udC1mYW1pbHk6XFxuXFx0XFx0dWktbW9ub3NwYWNlLFxcblxcdFxcdFNGTW9uby1SZWd1bGFyLFxcblxcdFxcdENvbnNvbGFzLFxcblxcdFxcdCdMaWJlcmF0aW9uIE1vbm8nLFxcblxcdFxcdE1lbmxvLFxcblxcdFxcdG1vbm9zcGFjZTsgLyogMSAqL1xcblxcdGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXFxufVxcbi8qKlxcbkFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxcbiovXFxuc21hbGwge1xcblxcdGZvbnQtc2l6ZTogODAlO1xcbn1cXG4vKipcXG5QcmV2ZW50ICdzdWInIGFuZCAnc3VwJyBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxcbiovXFxuc3ViLFxcbnN1cCB7XFxuXFx0Zm9udC1zaXplOiA3NSU7XFxuXFx0bGluZS1oZWlnaHQ6IDA7XFxuXFx0cG9zaXRpb246IHJlbGF0aXZlO1xcblxcdHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcXG59XFxuc3ViIHtcXG5cXHRib3R0b206IC0wLjI1ZW07XFxufVxcbnN1cCB7XFxuXFx0dG9wOiAtMC41ZW07XFxufVxcbi8qXFxuVGFidWxhciBkYXRhXFxuPT09PT09PT09PT09XFxuKi9cXG4vKipcXG4xLiBSZW1vdmUgdGV4dCBpbmRlbnRhdGlvbiBmcm9tIHRhYmxlIGNvbnRlbnRzIGluIENocm9tZSBhbmQgU2FmYXJpLiAoaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9OTk5MDg4LCBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MjAxMjk3KVxcbjIuIENvcnJlY3QgdGFibGUgYm9yZGVyIGNvbG9yIGluaGVyaXRhbmNlIGluIGFsbCBDaHJvbWUgYW5kIFNhZmFyaS4gKGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTkzNTcyOSwgaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTE5NTAxNilcXG4qL1xcbnRhYmxlIHtcXG5cXHR0ZXh0LWluZGVudDogMDsgLyogMSAqL1xcblxcdGJvcmRlci1jb2xvcjogaW5oZXJpdDsgLyogMiAqL1xcbn1cXG4vKlxcbkZvcm1zXFxuPT09PT1cXG4qL1xcbi8qKlxcbjEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxcbjIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cXG4qL1xcbmJ1dHRvbixcXG5pbnB1dCxcXG5vcHRncm91cCxcXG5zZWxlY3QsXFxudGV4dGFyZWEge1xcblxcdGZvbnQtZmFtaWx5OiBpbmhlcml0OyAvKiAxICovXFxuXFx0Zm9udC1zaXplOiAxMDAlOyAvKiAxICovXFxuXFx0bGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cXG5cXHRtYXJnaW46IDA7IC8qIDIgKi9cXG59XFxuLyoqXFxuUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlIGFuZCBGaXJlZm94LlxcbjEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cXG4qL1xcbmJ1dHRvbixcXG5zZWxlY3QgeyAvKiAxICovXFxuXFx0dGV4dC10cmFuc2Zvcm06IG5vbmU7XFxufVxcbi8qKlxcbkNvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXFxuKi9cXG5idXR0b24sXFxuW3R5cGU9J2J1dHRvbiddLFxcblt0eXBlPSdyZXNldCddLFxcblt0eXBlPSdzdWJtaXQnXSB7XFxuXFx0LXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XFxufVxcbi8qKlxcblJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXFxuKi9cXG46Oi1tb3otZm9jdXMtaW5uZXIge1xcblxcdGJvcmRlci1zdHlsZTogbm9uZTtcXG5cXHRwYWRkaW5nOiAwO1xcbn1cXG4vKipcXG5SZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXFxuKi9cXG46LW1vei1mb2N1c3Jpbmcge1xcblxcdG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcXG59XFxuLyoqXFxuUmVtb3ZlIHRoZSBhZGRpdGlvbmFsICc6aW52YWxpZCcgc3R5bGVzIGluIEZpcmVmb3guXFxuU2VlOiBodHRwczovL2dpdGh1Yi5jb20vbW96aWxsYS9nZWNrby1kZXYvYmxvYi8yZjllYWNkOWQzZDk5NWM5MzdiNDI1MWE1NTU3ZDk1ZDQ5NGM5YmUxL2xheW91dC9zdHlsZS9yZXMvZm9ybXMuY3NzI0w3MjgtTDczN1xcbiovXFxuOi1tb3otdWktaW52YWxpZCB7XFxuXFx0Ym94LXNoYWRvdzogbm9uZTtcXG59XFxuLyoqXFxuUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dCAnZmllbGRzZXQnIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cXG4qL1xcbmxlZ2VuZCB7XFxuXFx0cGFkZGluZzogMDtcXG59XFxuLyoqXFxuQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUgYW5kIEZpcmVmb3guXFxuKi9cXG5wcm9ncmVzcyB7XFxuXFx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xcbn1cXG4vKipcXG5Db3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBTYWZhcmkuXFxuKi9cXG46Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXFxuOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcXG5cXHRoZWlnaHQ6IGF1dG87XFxufVxcbi8qKlxcbjEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxcbjIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxcbiovXFxuW3R5cGU9J3NlYXJjaCddIHtcXG5cXHQtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xcblxcdG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXFxufVxcbi8qKlxcblJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cXG4qL1xcbjo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XFxuXFx0LXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xcbn1cXG4vKipcXG4xLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxcbjIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gJ2luaGVyaXQnIGluIFNhZmFyaS5cXG4qL1xcbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xcblxcdC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXFxuXFx0Zm9udDogaW5oZXJpdDsgLyogMiAqL1xcbn1cXG4vKlxcbkludGVyYWN0aXZlXFxuPT09PT09PT09PT1cXG4qL1xcbi8qXFxuQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXFxuKi9cXG5zdW1tYXJ5IHtcXG5cXHRkaXNwbGF5OiBsaXN0LWl0ZW07XFxufVxcbi8qKlxcbiAqIE1hbnVhbGx5IGZvcmtlZCBmcm9tIFNVSVQgQ1NTIEJhc2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9zdWl0Y3NzL2Jhc2VcXG4gKiBBIHRoaW4gbGF5ZXIgb24gdG9wIG9mIG5vcm1hbGl6ZS5jc3MgdGhhdCBwcm92aWRlcyBhIHN0YXJ0aW5nIHBvaW50IG1vcmVcXG4gKiBzdWl0YWJsZSBmb3Igd2ViIGFwcGxpY2F0aW9ucy5cXG4gKi9cXG4vKipcXG4gKiBSZW1vdmVzIHRoZSBkZWZhdWx0IHNwYWNpbmcgYW5kIGJvcmRlciBmb3IgYXBwcm9wcmlhdGUgZWxlbWVudHMuXFxuICovXFxuYmxvY2txdW90ZSxcXG5kbCxcXG5kZCxcXG5oMSxcXG5oMixcXG5oMyxcXG5oNCxcXG5oNSxcXG5oNixcXG5ocixcXG5maWd1cmUsXFxucCxcXG5wcmUge1xcbiAgbWFyZ2luOiAwO1xcbn1cXG5idXR0b24ge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xcbn1cXG4vKipcXG4gKiBXb3JrIGFyb3VuZCBhIEZpcmVmb3gvSUUgYnVnIHdoZXJlIHRoZSB0cmFuc3BhcmVudCBgYnV0dG9uYCBiYWNrZ3JvdW5kXFxuICogcmVzdWx0cyBpbiBhIGxvc3Mgb2YgdGhlIGRlZmF1bHQgYGJ1dHRvbmAgZm9jdXMgc3R5bGVzLlxcbiAqL1xcbmJ1dHRvbjpmb2N1cyB7XFxuICBvdXRsaW5lOiAxcHggZG90dGVkO1xcbiAgb3V0bGluZTogNXB4IGF1dG8gLXdlYmtpdC1mb2N1cy1yaW5nLWNvbG9yO1xcbn1cXG5maWVsZHNldCB7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbn1cXG5vbCxcXG51bCB7XFxuICBsaXN0LXN0eWxlOiBub25lO1xcbiAgbWFyZ2luOiAwO1xcbiAgcGFkZGluZzogMDtcXG59XFxuLyoqXFxuICogVGFpbHdpbmQgY3VzdG9tIHJlc2V0IHN0eWxlc1xcbiAqL1xcbi8qKlxcbiAqIDEuIFVzZSB0aGUgdXNlcidzIGNvbmZpZ3VyZWQgYHNhbnNgIGZvbnQtZmFtaWx5ICh3aXRoIFRhaWx3aW5kJ3MgZGVmYXVsdFxcbiAqICAgIHNhbnMtc2VyaWYgZm9udCBzdGFjayBhcyBhIGZhbGxiYWNrKSBhcyBhIHNhbmUgZGVmYXVsdC5cXG4gKiAyLiBVc2UgVGFpbHdpbmQncyBkZWZhdWx0IFxcXCJub3JtYWxcXFwiIGxpbmUtaGVpZ2h0IHNvIHRoZSB1c2VyIGlzbid0IGZvcmNlZFxcbiAqICAgIHRvIG92ZXJyaWRlIGl0IHRvIGVuc3VyZSBjb25zaXN0ZW5jeSBldmVuIHdoZW4gdXNpbmcgdGhlIGRlZmF1bHQgdGhlbWUuXFxuICovXFxuaHRtbCB7XFxuICBmb250LWZhbWlseTogUm9ib3RvLCBzYW5zLXNlcmlmOyAvKiAxICovXFxuICBsaW5lLWhlaWdodDogMS41OyAvKiAyICovXFxufVxcbi8qKlxcbiAqIEluaGVyaXQgZm9udC1mYW1pbHkgYW5kIGxpbmUtaGVpZ2h0IGZyb20gYGh0bWxgIHNvIHVzZXJzIGNhbiBzZXQgdGhlbSBhc1xcbiAqIGEgY2xhc3MgZGlyZWN0bHkgb24gdGhlIGBodG1sYCBlbGVtZW50LlxcbiAqL1xcbmJvZHkge1xcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XFxuICBsaW5lLWhlaWdodDogaW5oZXJpdDtcXG59XFxuLyoqXFxuICogMS4gUHJldmVudCBwYWRkaW5nIGFuZCBib3JkZXIgZnJvbSBhZmZlY3RpbmcgZWxlbWVudCB3aWR0aC5cXG4gKlxcbiAqICAgIFdlIHVzZWQgdG8gc2V0IHRoaXMgaW4gdGhlIGh0bWwgZWxlbWVudCBhbmQgaW5oZXJpdCBmcm9tXFxuICogICAgdGhlIHBhcmVudCBlbGVtZW50IGZvciBldmVyeXRoaW5nIGVsc2UuIFRoaXMgY2F1c2VkIGlzc3Vlc1xcbiAqICAgIGluIHNoYWRvdy1kb20tZW5oYW5jZWQgZWxlbWVudHMgbGlrZSA8ZGV0YWlscz4gd2hlcmUgdGhlIGNvbnRlbnRcXG4gKiAgICBpcyB3cmFwcGVkIGJ5IGEgZGl2IHdpdGggYm94LXNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YC5cXG4gKlxcbiAqICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9tb3pkZXZzL2Nzc3JlbWVkeS9pc3N1ZXMvNFxcbiAqXFxuICpcXG4gKiAyLiBBbGxvdyBhZGRpbmcgYSBib3JkZXIgdG8gYW4gZWxlbWVudCBieSBqdXN0IGFkZGluZyBhIGJvcmRlci13aWR0aC5cXG4gKlxcbiAqICAgIEJ5IGRlZmF1bHQsIHRoZSB3YXkgdGhlIGJyb3dzZXIgc3BlY2lmaWVzIHRoYXQgYW4gZWxlbWVudCBzaG91bGQgaGF2ZSBub1xcbiAqICAgIGJvcmRlciBpcyBieSBzZXR0aW5nIGl0J3MgYm9yZGVyLXN0eWxlIHRvIGBub25lYCBpbiB0aGUgdXNlci1hZ2VudFxcbiAqICAgIHN0eWxlc2hlZXQuXFxuICpcXG4gKiAgICBJbiBvcmRlciB0byBlYXNpbHkgYWRkIGJvcmRlcnMgdG8gZWxlbWVudHMgYnkganVzdCBzZXR0aW5nIHRoZSBgYm9yZGVyLXdpZHRoYFxcbiAqICAgIHByb3BlcnR5LCB3ZSBjaGFuZ2UgdGhlIGRlZmF1bHQgYm9yZGVyLXN0eWxlIGZvciBhbGwgZWxlbWVudHMgdG8gYHNvbGlkYCwgYW5kXFxuICogICAgdXNlIGJvcmRlci13aWR0aCB0byBoaWRlIHRoZW0gaW5zdGVhZC4gVGhpcyB3YXkgb3VyIGBib3JkZXJgIHV0aWxpdGllcyBvbmx5XFxuICogICAgbmVlZCB0byBzZXQgdGhlIGBib3JkZXItd2lkdGhgIHByb3BlcnR5IGluc3RlYWQgb2YgdGhlIGVudGlyZSBgYm9yZGVyYFxcbiAqICAgIHNob3J0aGFuZCwgbWFraW5nIG91ciBib3JkZXIgdXRpbGl0aWVzIG11Y2ggbW9yZSBzdHJhaWdodGZvcndhcmQgdG8gY29tcG9zZS5cXG4gKlxcbiAqICAgIGh0dHBzOi8vZ2l0aHViLmNvbS90YWlsd2luZGNzcy90YWlsd2luZGNzcy9wdWxsLzExNlxcbiAqL1xcbiosXFxuOjpiZWZvcmUsXFxuOjphZnRlciB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXFxuICBib3JkZXItd2lkdGg6IDA7IC8qIDIgKi9cXG4gIGJvcmRlci1zdHlsZTogc29saWQ7IC8qIDIgKi9cXG4gIGJvcmRlci1jb2xvcjogI2VlZWVlZTsgLyogMiAqL1xcbn1cXG4vKlxcbiAqIEVuc3VyZSBob3Jpem9udGFsIHJ1bGVzIGFyZSB2aXNpYmxlIGJ5IGRlZmF1bHRcXG4gKi9cXG5ociB7XFxuICBib3JkZXItdG9wLXdpZHRoOiAxcHg7XFxufVxcbi8qKlxcbiAqIFVuZG8gdGhlIGBib3JkZXItc3R5bGU6IG5vbmVgIHJlc2V0IHRoYXQgTm9ybWFsaXplIGFwcGxpZXMgdG8gaW1hZ2VzIHNvIHRoYXRcXG4gKiBvdXIgYGJvcmRlci17d2lkdGh9YCB1dGlsaXRpZXMgaGF2ZSB0aGUgZXhwZWN0ZWQgZWZmZWN0LlxcbiAqXFxuICogVGhlIE5vcm1hbGl6ZSByZXNldCBpcyB1bm5lY2Vzc2FyeSBmb3IgdXMgc2luY2Ugd2UgZGVmYXVsdCB0aGUgYm9yZGVyLXdpZHRoXFxuICogdG8gMCBvbiBhbGwgZWxlbWVudHMuXFxuICpcXG4gKiBodHRwczovL2dpdGh1Yi5jb20vdGFpbHdpbmRjc3MvdGFpbHdpbmRjc3MvaXNzdWVzLzM2MlxcbiAqL1xcbmltZyB7XFxuICBib3JkZXItc3R5bGU6IHNvbGlkO1xcbn1cXG50ZXh0YXJlYSB7XFxuICByZXNpemU6IHZlcnRpY2FsO1xcbn1cXG5pbnB1dDo6LW1vei1wbGFjZWhvbGRlciwgdGV4dGFyZWE6Oi1tb3otcGxhY2Vob2xkZXIge1xcbiAgb3BhY2l0eTogMTtcXG4gIGNvbG9yOiAjYmRiZGJkO1xcbn1cXG5pbnB1dDotbXMtaW5wdXQtcGxhY2Vob2xkZXIsIHRleHRhcmVhOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XFxuICBvcGFjaXR5OiAxO1xcbiAgY29sb3I6ICNiZGJkYmQ7XFxufVxcbmlucHV0OjpwbGFjZWhvbGRlcixcXG50ZXh0YXJlYTo6cGxhY2Vob2xkZXIge1xcbiAgb3BhY2l0eTogMTtcXG4gIGNvbG9yOiAjYmRiZGJkO1xcbn1cXG5idXR0b24sXFxuW3JvbGU9XFxcImJ1dHRvblxcXCJdIHtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxudGFibGUge1xcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcXG59XFxuaDEsXFxuaDIsXFxuaDMsXFxuaDQsXFxuaDUsXFxuaDYge1xcbiAgZm9udC1zaXplOiBpbmhlcml0O1xcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XFxufVxcbi8qKlxcbiAqIFJlc2V0IGxpbmtzIHRvIG9wdGltaXplIGZvciBvcHQtaW4gc3R5bGluZyBpbnN0ZWFkIG9mXFxuICogb3B0LW91dC5cXG4gKi9cXG5hIHtcXG4gIGNvbG9yOiBpbmhlcml0O1xcbiAgdGV4dC1kZWNvcmF0aW9uOiBpbmhlcml0O1xcbn1cXG4vKipcXG4gKiBSZXNldCBmb3JtIGVsZW1lbnQgcHJvcGVydGllcyB0aGF0IGFyZSBlYXN5IHRvIGZvcmdldCB0b1xcbiAqIHN0eWxlIGV4cGxpY2l0bHkgc28geW91IGRvbid0IGluYWR2ZXJ0ZW50bHkgaW50cm9kdWNlXFxuICogc3R5bGVzIHRoYXQgZGV2aWF0ZSBmcm9tIHlvdXIgZGVzaWduIHN5c3RlbS4gVGhlc2Ugc3R5bGVzXFxuICogc3VwcGxlbWVudCBhIHBhcnRpYWwgcmVzZXQgdGhhdCBpcyBhbHJlYWR5IGFwcGxpZWQgYnlcXG4gKiBub3JtYWxpemUuY3NzLlxcbiAqL1xcbmJ1dHRvbixcXG5pbnB1dCxcXG5vcHRncm91cCxcXG5zZWxlY3QsXFxudGV4dGFyZWEge1xcbiAgcGFkZGluZzogMDtcXG4gIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xcbiAgY29sb3I6IGluaGVyaXQ7XFxufVxcbi8qKlxcbiAqIFVzZSB0aGUgY29uZmlndXJlZCAnbW9ubycgZm9udCBmYW1pbHkgZm9yIGVsZW1lbnRzIHRoYXRcXG4gKiBhcmUgZXhwZWN0ZWQgdG8gYmUgcmVuZGVyZWQgd2l0aCBhIG1vbm9zcGFjZSBmb250LCBmYWxsaW5nXFxuICogYmFjayB0byB0aGUgc3lzdGVtIG1vbm9zcGFjZSBzdGFjayBpZiB0aGVyZSBpcyBubyBjb25maWd1cmVkXFxuICogJ21vbm8nIGZvbnQgZmFtaWx5LlxcbiAqL1xcbnByZSxcXG5jb2RlLFxcbmtiZCxcXG5zYW1wIHtcXG4gIGZvbnQtZmFtaWx5OiB1aS1tb25vc3BhY2UsIFNGTW9uby1SZWd1bGFyLCBNZW5sbywgTW9uYWNvLCBDb25zb2xhcywgXFxcIkxpYmVyYXRpb24gTW9ub1xcXCIsIFxcXCJDb3VyaWVyIE5ld1xcXCIsIG1vbm9zcGFjZTtcXG59XFxuLyoqXFxuICogTWFrZSByZXBsYWNlZCBlbGVtZW50cyBgZGlzcGxheTogYmxvY2tgIGJ5IGRlZmF1bHQgYXMgdGhhdCdzXFxuICogdGhlIGJlaGF2aW9yIHlvdSB3YW50IGFsbW9zdCBhbGwgb2YgdGhlIHRpbWUuIEluc3BpcmVkIGJ5XFxuICogQ1NTIFJlbWVkeSwgd2l0aCBgc3ZnYCBhZGRlZCBhcyB3ZWxsLlxcbiAqXFxuICogaHR0cHM6Ly9naXRodWIuY29tL21vemRldnMvY3NzcmVtZWR5L2lzc3Vlcy8xNFxcbiAqL1xcbmltZyxcXG5zdmcsXFxudmlkZW8sXFxuY2FudmFzLFxcbmF1ZGlvLFxcbmlmcmFtZSxcXG5lbWJlZCxcXG5vYmplY3Qge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbn1cXG4vKipcXG4gKiBDb25zdHJhaW4gaW1hZ2VzIGFuZCB2aWRlb3MgdG8gdGhlIHBhcmVudCB3aWR0aCBhbmQgcHJlc2VydmVcXG4gKiB0aGVpciBpbnRyaW5zaWMgYXNwZWN0IHJhdGlvLlxcbiAqXFxuICogaHR0cHM6Ly9naXRodWIuY29tL21vemRldnMvY3NzcmVtZWR5L2lzc3Vlcy8xNFxcbiAqL1xcbmltZyxcXG52aWRlbyB7XFxuICBtYXgtd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IGF1dG87XFxufVxcbip7LS10dy1zaGFkb3c6MCAwICMwMDAwOy0tdHctcmluZy1pbnNldDp2YXIoLS10dy1lbXB0eSwvKiEqLyAvKiEqLyk7LS10dy1yaW5nLW9mZnNldC13aWR0aDowcHg7LS10dy1yaW5nLW9mZnNldC1jb2xvcjojZmZmOy0tdHctcmluZy1jb2xvcjpyZ2JhKDMzLCAxNTAsIDI0MywgMC41KTstLXR3LXJpbmctb2Zmc2V0LXNoYWRvdzowIDAgIzAwMDA7LS10dy1yaW5nLXNoYWRvdzowIDAgIzAwMDB9XFxuLmNvbnRhaW5lcnt3aWR0aDoxMDAlfVxcbkBtZWRpYSAobWluLXdpZHRoOiA2NDBweCl7XFxuLmNvbnRhaW5lcnttYXgtd2lkdGg6NjQwcHh9fVxcbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCl7XFxuLmNvbnRhaW5lcnttYXgtd2lkdGg6NzY4cHh9fVxcbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpe1xcbi5jb250YWluZXJ7bWF4LXdpZHRoOjEwMjRweH19XFxuQG1lZGlhIChtaW4td2lkdGg6IDEyODBweCl7XFxuLmNvbnRhaW5lcnttYXgtd2lkdGg6MTI4MHB4fX1cXG5AbWVkaWEgKG1pbi13aWR0aDogMTUzNnB4KXtcXG4uY29udGFpbmVye21heC13aWR0aDoxNTM2cHh9fVxcbi5wb2ludGVyLWV2ZW50cy1ub25le3BvaW50ZXItZXZlbnRzOm5vbmV9XFxuLnBvaW50ZXItZXZlbnRzLWF1dG97cG9pbnRlci1ldmVudHM6YXV0b31cXG4ucmVsYXRpdmV7cG9zaXRpb246cmVsYXRpdmV9XFxuLmFic29sdXRle3Bvc2l0aW9uOmFic29sdXRlfVxcbi5zdGlja3l7cG9zaXRpb246c3RpY2t5fVxcbi5maXhlZHtwb3NpdGlvbjpmaXhlZH1cXG4uaW5zZXQtMHt0b3A6MHB4O3JpZ2h0OjBweDtib3R0b206MHB4O2xlZnQ6MHB4fVxcbi5yaWdodC00e3JpZ2h0OjFyZW19XFxuLnRvcC0xXFxcXC8ze3RvcDozMy4zMzMzMzMlfVxcbi5sZWZ0LTB7bGVmdDowcHh9XFxuLnJpZ2h0LTB7cmlnaHQ6MHB4fVxcbi50b3AtMTZ7dG9wOjRyZW19XFxuLi10b3AtMVxcXFwuNXt0b3A6LTAuMzc1cmVtfVxcbi4tdG9wLTBcXFxcLjV7dG9wOi0wLjEyNXJlbX1cXG4uLXRvcC0xe3RvcDotMC4yNXJlbX1cXG4uLXRvcC0we3RvcDowcHh9XFxuLnRvcC0xXFxcXC80e3RvcDoyNSV9XFxuLnRvcC0xXFxcXC8ye3RvcDo1MCV9XFxuLnJpZ2h0LTJ7cmlnaHQ6MC41cmVtfVxcbi5yaWdodC0ze3JpZ2h0OjAuNzVyZW19XFxuLnRvcC0ye3RvcDowLjVyZW19XFxuLnRvcC0we3RvcDowcHh9XFxuLi1ib3R0b20tNHtib3R0b206LTFyZW19XFxuLi1ib3R0b20tNXtib3R0b206LTEuMjVyZW19XFxuLnotMzB7ei1pbmRleDozMH1cXG4uei0yMHt6LWluZGV4OjIwfVxcbi56LTEwe3otaW5kZXg6MTB9XFxuLnotNTB7ei1pbmRleDo1MH1cXG4uei00MHt6LWluZGV4OjQwfVxcbi5mbG9hdC1sZWZ0e2Zsb2F0OmxlZnR9XFxuLmZsb2F0LXJpZ2h0e2Zsb2F0OnJpZ2h0fVxcbi5teC1hdXRve21hcmdpbi1sZWZ0OmF1dG87bWFyZ2luLXJpZ2h0OmF1dG99XFxuLm15LTE2e21hcmdpbi10b3A6NHJlbTttYXJnaW4tYm90dG9tOjRyZW19XFxuLm15LTR7bWFyZ2luLXRvcDoxcmVtO21hcmdpbi1ib3R0b206MXJlbX1cXG4ubXktNnttYXJnaW4tdG9wOjEuNXJlbTttYXJnaW4tYm90dG9tOjEuNXJlbX1cXG4ubXgtNHttYXJnaW4tbGVmdDoxcmVtO21hcmdpbi1yaWdodDoxcmVtfVxcbi5teC0xe21hcmdpbi1sZWZ0OjAuMjVyZW07bWFyZ2luLXJpZ2h0OjAuMjVyZW19XFxuLm15LTh7bWFyZ2luLXRvcDoycmVtO21hcmdpbi1ib3R0b206MnJlbX1cXG4ubXgtNXttYXJnaW4tbGVmdDoxLjI1cmVtO21hcmdpbi1yaWdodDoxLjI1cmVtfVxcbi5tYi0xNnttYXJnaW4tYm90dG9tOjRyZW19XFxuLm10LTM2e21hcmdpbi10b3A6OXJlbX1cXG4ubXQtMTB7bWFyZ2luLXRvcDoyLjVyZW19XFxuLm10LTV7bWFyZ2luLXRvcDoxLjI1cmVtfVxcbi5tdC0xNnttYXJnaW4tdG9wOjRyZW19XFxuLm10LTR7bWFyZ2luLXRvcDoxcmVtfVxcbi5tdC0yMHttYXJnaW4tdG9wOjVyZW19XFxuLm1iLTEwe21hcmdpbi1ib3R0b206Mi41cmVtfVxcbi5tdC04e21hcmdpbi10b3A6MnJlbX1cXG4ubXQtMTJ7bWFyZ2luLXRvcDozcmVtfVxcbi5tYi0yNHttYXJnaW4tYm90dG9tOjZyZW19XFxuLm10LTQ4e21hcmdpbi10b3A6MTJyZW19XFxuLm1yLWF1dG97bWFyZ2luLXJpZ2h0OmF1dG99XFxuLm1sLWF1dG97bWFyZ2luLWxlZnQ6YXV0b31cXG4ubWItNnttYXJnaW4tYm90dG9tOjEuNXJlbX1cXG4ubXItMnttYXJnaW4tcmlnaHQ6MC41cmVtfVxcbi5tdC0ye21hcmdpbi10b3A6MC41cmVtfVxcbi5tdC0zMnttYXJnaW4tdG9wOjhyZW19XFxuLm10LTZ7bWFyZ2luLXRvcDoxLjVyZW19XFxuLm1yLTN7bWFyZ2luLXJpZ2h0OjAuNzVyZW19XFxuLi1tdC02NHttYXJnaW4tdG9wOi0xNnJlbX1cXG4ubWItNXttYXJnaW4tYm90dG9tOjEuMjVyZW19XFxuLm1iLTEye21hcmdpbi1ib3R0b206M3JlbX1cXG4ubWItOHttYXJnaW4tYm90dG9tOjJyZW19XFxuLm1iLTR7bWFyZ2luLWJvdHRvbToxcmVtfVxcbi5tYi0ye21hcmdpbi1ib3R0b206MC41cmVtfVxcbi4tbXQtMTB7bWFyZ2luLXRvcDotMi41cmVtfVxcbi4tbXQtOXttYXJnaW4tdG9wOi0yLjI1cmVtfVxcbi5tYi0xe21hcmdpbi1ib3R0b206MC4yNXJlbX1cXG4ubWwtMXttYXJnaW4tbGVmdDowLjI1cmVtfVxcbi5tci0xe21hcmdpbi1yaWdodDowLjI1cmVtfVxcbi5tdC0xe21hcmdpbi10b3A6MC4yNXJlbX1cXG4ubWItMHttYXJnaW4tYm90dG9tOjBweH1cXG4ubXQtM3ttYXJnaW4tdG9wOjAuNzVyZW19XFxuLm1sLTd7bWFyZ2luLWxlZnQ6MS43NXJlbX1cXG4ubWwtMnttYXJnaW4tbGVmdDowLjVyZW19XFxuLm10LTB7bWFyZ2luLXRvcDowcHh9XFxuLm1iLTN7bWFyZ2luLWJvdHRvbTowLjc1cmVtfVxcbi5tci00e21hcmdpbi1yaWdodDoxcmVtfVxcbi4tbXQtMTJ7bWFyZ2luLXRvcDotM3JlbX1cXG4ubXItMTB7bWFyZ2luLXJpZ2h0OjIuNXJlbX1cXG4uYmxvY2t7ZGlzcGxheTpibG9ja31cXG4uaW5saW5lLWJsb2Nre2Rpc3BsYXk6aW5saW5lLWJsb2NrfVxcbi5mbGV4e2Rpc3BsYXk6ZmxleH1cXG4uaW5saW5lLWZsZXh7ZGlzcGxheTppbmxpbmUtZmxleH1cXG4uZ3JpZHtkaXNwbGF5OmdyaWR9XFxuLmhpZGRlbntkaXNwbGF5Om5vbmV9XFxuLmgtMTZ7aGVpZ2h0OjRyZW19XFxuLmgtN3toZWlnaHQ6MS43NXJlbX1cXG4uaC0xMHtoZWlnaHQ6Mi41cmVtfVxcbi5oLTMye2hlaWdodDo4cmVtfVxcbi5oLTIwe2hlaWdodDo1cmVtfVxcbi5oLTEye2hlaWdodDozcmVtfVxcbi5oLTZ7aGVpZ2h0OjEuNXJlbX1cXG4uaC04e2hlaWdodDoycmVtfVxcbi5oLTI0e2hlaWdodDo2cmVtfVxcbi5oLTI4e2hlaWdodDo3cmVtfVxcbi5oLTV7aGVpZ2h0OjEuMjVyZW19XFxuLmgtc2NyZWVue2hlaWdodDoxMDB2aH1cXG4uaC1hdXRve2hlaWdodDphdXRvfVxcbi5oLWZ1bGx7aGVpZ2h0OjEwMCV9XFxuLmgtOXtoZWlnaHQ6Mi4yNXJlbX1cXG4uaC0xMXtoZWlnaHQ6Mi43NXJlbX1cXG4uaC00e2hlaWdodDoxcmVtfVxcbi5oLXB4e2hlaWdodDoxcHh9XFxuLmgtMntoZWlnaHQ6MC41cmVtfVxcbi53LWZ1bGx7d2lkdGg6MTAwJX1cXG4udy00MHt3aWR0aDoxMHJlbX1cXG4udy03Mnt3aWR0aDoxOHJlbX1cXG4udy1cXFxcWzI4cmVtXFxcXF17d2lkdGg6MjhyZW19XFxuLnctNjR7d2lkdGg6MTZyZW19XFxuLnctOTZ7d2lkdGg6MjRyZW19XFxuLnctNDh7d2lkdGg6MTJyZW19XFxuLnctMTZ7d2lkdGg6NHJlbX1cXG4udy03e3dpZHRoOjEuNzVyZW19XFxuLnctMzJ7d2lkdGg6OHJlbX1cXG4udy0xMnt3aWR0aDozcmVtfVxcbi53LTEwe3dpZHRoOjIuNXJlbX1cXG4udy02e3dpZHRoOjEuNXJlbX1cXG4udy04e3dpZHRoOjJyZW19XFxuLnctMjB7d2lkdGg6NXJlbX1cXG4udy0yNHt3aWR0aDo2cmVtfVxcbi53LTI4e3dpZHRoOjdyZW19XFxuLnctNXt3aWR0aDoxLjI1cmVtfVxcbi53LTEwXFxcXC8xMnt3aWR0aDo4My4zMzMzMzMlfVxcbi53LTR7d2lkdGg6MXJlbX1cXG4udy1hdXRve3dpZHRoOmF1dG99XFxuLnctMTR7d2lkdGg6My41cmVtfVxcbi5taW4tdy0we21pbi13aWR0aDowcHh9XFxuLm1heC13LTd4bHttYXgtd2lkdGg6ODByZW19XFxuLm1heC13LWZ1bGx7bWF4LXdpZHRoOjEwMCV9XFxuLm1heC13LW1heHttYXgtd2lkdGg6LXdlYmtpdC1tYXgtY29udGVudDttYXgtd2lkdGg6LW1vei1tYXgtY29udGVudDttYXgtd2lkdGg6bWF4LWNvbnRlbnR9XFxuLm1heC13LXNte21heC13aWR0aDoyNHJlbX1cXG4ubWF4LXctNnhse21heC13aWR0aDo3MnJlbX1cXG4ubWF4LXctM3hse21heC13aWR0aDo0OHJlbX1cXG4ubWF4LXcteHN7bWF4LXdpZHRoOjIwcmVtfVxcbi5mbGV4LWF1dG97ZmxleDoxIDEgYXV0b31cXG4uZmxleC0xe2ZsZXg6MSAxIDAlfVxcbi5mbGV4LW5vbmV7ZmxleDpub25lfVxcbi5mbGV4LWdyb3d7ZmxleC1ncm93OjF9XFxuLnRyYW5zZm9ybXstLXR3LXRyYW5zbGF0ZS14OjA7LS10dy10cmFuc2xhdGUteTowOy0tdHctcm90YXRlOjA7LS10dy1za2V3LXg6MDstLXR3LXNrZXcteTowOy0tdHctc2NhbGUteDoxOy0tdHctc2NhbGUteToxO3RyYW5zZm9ybTp0cmFuc2xhdGVYKHZhcigtLXR3LXRyYW5zbGF0ZS14KSkgdHJhbnNsYXRlWSh2YXIoLS10dy10cmFuc2xhdGUteSkpIHJvdGF0ZSh2YXIoLS10dy1yb3RhdGUpKSBza2V3WCh2YXIoLS10dy1za2V3LXgpKSBza2V3WSh2YXIoLS10dy1za2V3LXkpKSBzY2FsZVgodmFyKC0tdHctc2NhbGUteCkpIHNjYWxlWSh2YXIoLS10dy1zY2FsZS15KSl9XFxuLi10cmFuc2xhdGUteS0xXFxcXC8zey0tdHctdHJhbnNsYXRlLXk6LTMzLjMzMzMzMyV9XFxuLi10cmFuc2xhdGUteS0xXFxcXC8yey0tdHctdHJhbnNsYXRlLXk6LTUwJX1cXG4udHJhbnNsYXRlLXktMHstLXR3LXRyYW5zbGF0ZS15OjBweH1cXG4uLXRyYW5zbGF0ZS15LTEwey0tdHctdHJhbnNsYXRlLXk6LTIuNXJlbX1cXG4uY3Vyc29yLXBvaW50ZXJ7Y3Vyc29yOnBvaW50ZXJ9XFxuLmN1cnNvci1ub3QtYWxsb3dlZHtjdXJzb3I6bm90LWFsbG93ZWR9XFxuLnNlbGVjdC1ub25ley13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZX1cXG4ucmVzaXplLW5vbmV7cmVzaXplOm5vbmV9XFxuLmxpc3Qtbm9uZXtsaXN0LXN0eWxlLXR5cGU6bm9uZX1cXG4uZmxleC1jb2x7ZmxleC1kaXJlY3Rpb246Y29sdW1ufVxcbi5mbGV4LXdyYXB7ZmxleC13cmFwOndyYXB9XFxuLnBsYWNlLWl0ZW1zLWNlbnRlcntwbGFjZS1pdGVtczpjZW50ZXJ9XFxuLml0ZW1zLWNlbnRlcnthbGlnbi1pdGVtczpjZW50ZXJ9XFxuLml0ZW1zLWVuZHthbGlnbi1pdGVtczpmbGV4LWVuZH1cXG4uaXRlbXMtc3RhcnR7YWxpZ24taXRlbXM6ZmxleC1zdGFydH1cXG4uanVzdGlmeS1iZXR3ZWVue2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVufVxcbi5qdXN0aWZ5LWNlbnRlcntqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfVxcbi5qdXN0aWZ5LXN0YXJ0e2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0fVxcbi5qdXN0aWZ5LWVuZHtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmR9XFxuLmdhcC04e2dhcDoycmVtfVxcbi5nYXAtMTB7Z2FwOjIuNXJlbX1cXG4uZ2FwLTR7Z2FwOjFyZW19XFxuLmdhcC0ye2dhcDowLjVyZW19XFxuLmdhcC0ze2dhcDowLjc1cmVtfVxcbi5nYXAtMXtnYXA6MC4yNXJlbX1cXG4uZ2FwLXgtMnstbW96LWNvbHVtbi1nYXA6MC41cmVtO2NvbHVtbi1nYXA6MC41cmVtfVxcbi5nYXAteS04e3Jvdy1nYXA6MnJlbX1cXG4uZ2FwLXgtMjR7LW1vei1jb2x1bW4tZ2FwOjZyZW07Y29sdW1uLWdhcDo2cmVtfVxcbi5nYXAteS00e3Jvdy1nYXA6MXJlbX1cXG4uZ2FwLXgtOHstbW96LWNvbHVtbi1nYXA6MnJlbTtjb2x1bW4tZ2FwOjJyZW19XFxuLnNwYWNlLXktNCA+IDpub3QoW2hpZGRlbl0pIH4gOm5vdChbaGlkZGVuXSl7LS10dy1zcGFjZS15LXJldmVyc2U6MDttYXJnaW4tdG9wOmNhbGMoMXJlbSAqIGNhbGMoMSAtIHZhcigtLXR3LXNwYWNlLXktcmV2ZXJzZSkpKTttYXJnaW4tYm90dG9tOmNhbGMoMXJlbSAqIHZhcigtLXR3LXNwYWNlLXktcmV2ZXJzZSkpfVxcbi5vdmVyZmxvdy1oaWRkZW57b3ZlcmZsb3c6aGlkZGVufVxcbi5vdmVyZmxvdy15LXNjcm9sbHtvdmVyZmxvdy15OnNjcm9sbH1cXG4ub3ZlcmZsb3cteC1oaWRkZW57b3ZlcmZsb3cteDpoaWRkZW59XFxuLm92ZXJmbG93LXktYXV0b3tvdmVyZmxvdy15OmF1dG99XFxuLndoaXRlc3BhY2Utbm93cmFwe3doaXRlLXNwYWNlOm5vd3JhcH1cXG4uYnJlYWstd29yZHN7b3ZlcmZsb3ctd3JhcDpicmVhay13b3JkfVxcbi5yb3VuZGVke2JvcmRlci1yYWRpdXM6MC4yNXJlbX1cXG4ucm91bmRlZC1sZ3tib3JkZXItcmFkaXVzOjAuNXJlbX1cXG4ucm91bmRlZC1mdWxse2JvcmRlci1yYWRpdXM6OTk5OXB4fVxcbi5yb3VuZGVkLXhse2JvcmRlci1yYWRpdXM6MC43NXJlbX1cXG4ucm91bmRlZC1tZHtib3JkZXItcmFkaXVzOjAuMzc1cmVtfVxcbi5yb3VuZGVkLXNte2JvcmRlci1yYWRpdXM6MC4xMjVyZW19XFxuLnJvdW5kZWQtdHtib3JkZXItdG9wLWxlZnQtcmFkaXVzOjAuMjVyZW07Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6MC4yNXJlbX1cXG4uYm9yZGVye2JvcmRlci13aWR0aDoxcHh9XFxuLmJvcmRlci0we2JvcmRlci13aWR0aDowcHh9XFxuLmJvcmRlci10LTB7Ym9yZGVyLXRvcC13aWR0aDowcHh9XFxuLmJvcmRlci1yLTB7Ym9yZGVyLXJpZ2h0LXdpZHRoOjBweH1cXG4uYm9yZGVyLWwtMHtib3JkZXItbGVmdC13aWR0aDowcHh9XFxuLmJvcmRlci10e2JvcmRlci10b3Atd2lkdGg6MXB4fVxcbi5ib3JkZXItYntib3JkZXItYm90dG9tLXdpZHRoOjFweH1cXG4uYm9yZGVyLWItMHtib3JkZXItYm90dG9tLXdpZHRoOjBweH1cXG4uYm9yZGVyLXJ7Ym9yZGVyLXJpZ2h0LXdpZHRoOjFweH1cXG4uYm9yZGVyLXNvbGlke2JvcmRlci1zdHlsZTpzb2xpZH1cXG4uYm9yZGVyLW5vbmV7Ym9yZGVyLXN0eWxlOm5vbmV9XFxuLmJvcmRlci1ibHVlLWdyYXktNTB7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDIzNiwgMjM5LCAyNDEsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmJvcmRlci1ncmF5LTIwMHstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjM4LCAyMzgsIDIzOCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uYm9yZGVyLWdyYXktMzAwey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyMjQsIDIyNCwgMjI0LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ib3JkZXItYmx1ZS1ncmF5LTUwMHstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoOTYsIDEyNSwgMTM5LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ib3JkZXItZ3JheS01MDB7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDE1OCwgMTU4LCAxNTgsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmJvcmRlci1icm93bi01MDB7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDEyMSwgODUsIDcyLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ib3JkZXItZGVlcC1vcmFuZ2UtNTAwey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNTUsIDg3LCAzNCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uYm9yZGVyLW9yYW5nZS01MDB7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDI1NSwgMTUyLCAwLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ib3JkZXItYW1iZXItNTAwey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNTUsIDE5MywgNywgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uYm9yZGVyLXllbGxvdy02MDB7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDI1MywgMjE2LCA1MywgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uYm9yZGVyLWxpbWUtNTAwey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyMDUsIDIyMCwgNTcsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmJvcmRlci1saWdodC1ncmVlbi01MDB7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDEzOSwgMTk1LCA3NCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uYm9yZGVyLWdyZWVuLTUwMHstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoNzYsIDE3NSwgODAsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmJvcmRlci10ZWFsLTUwMHstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMCwgMTUwLCAxMzYsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmJvcmRlci1jeWFuLTUwMHstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMCwgMTg4LCAyMTIsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmJvcmRlci1saWdodC1ibHVlLTUwMHstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMywgMTY5LCAyNDQsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmJvcmRlci1ibHVlLTUwMHstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMzMsIDE1MCwgMjQzLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ib3JkZXItaW5kaWdvLTUwMHstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoNjMsIDgxLCAxODEsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmJvcmRlci1kZWVwLXB1cnBsZS01MDB7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDEwMywgNTgsIDE4MywgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uYm9yZGVyLXB1cnBsZS01MDB7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDE1NiwgMzksIDE3NiwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uYm9yZGVyLXBpbmstNTAwey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyMzMsIDMwLCA5OSwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uYm9yZGVyLXJlZC01MDB7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDI0NCwgNjcsIDU0LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ib3JkZXItdHJhbnNwYXJlbnR7Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50fVxcbi5iZy13aGl0ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAyNTUsIDI1NSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1ncmF5LTEwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjQ1LCAyNDUsIDI0NSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1vcmFuZ2UtOTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMzAsIDgxLCAwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWxpZ2h0LWJsdWUtNTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgzLCAxNjksIDI0NCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1ncmF5LTkwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMzMsIDMzLCAzMywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy15ZWxsb3ctNjAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTMsIDIxNiwgNTMsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctcmVkLTcwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjExLCA0NywgNDcsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctZ3JlZW4tNTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSg3NiwgMTc1LCA4MCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1ibHVlLWdyYXktODAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSg1NSwgNzEsIDc5LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWJsdWUtZ3JheS01MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDk2LCAxMjUsIDEzOSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1ncmF5LTUwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTU4LCAxNTgsIDE1OCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1icm93bi01MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEyMSwgODUsIDcyLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWRlZXAtb3JhbmdlLTUwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCA4NywgMzQsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctb3JhbmdlLTUwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAxNTIsIDAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctYW1iZXItNTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDE5MywgNywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1saW1lLTUwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjA1LCAyMjAsIDU3LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWxpZ2h0LWdyZWVuLTUwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTM5LCAxOTUsIDc0LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLXRlYWwtNTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLCAxNTAsIDEzNiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1jeWFuLTUwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwgMTg4LCAyMTIsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctYmx1ZS01MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDMzLCAxNTAsIDI0MywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1pbmRpZ28tNTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSg2MywgODEsIDE4MSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1kZWVwLXB1cnBsZS01MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEwMywgNTgsIDE4MywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1wdXJwbGUtNTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxNTYsIDM5LCAxNzYsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctcGluay01MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIzMywgMzAsIDk5LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLXJlZC01MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI0NCwgNjcsIDU0LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLXRyYW5zcGFyZW50e2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnR9XFxuLmJnLWdyYXktMjAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMzgsIDIzOCwgMjM4LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWJsdWUtZ3JheS0xMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIwNywgMjE2LCAyMjAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctYnJvd24tMTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMTUsIDIwNCwgMjAwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWRlZXAtb3JhbmdlLTEwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAyMDQsIDE4OCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1vcmFuZ2UtMTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDIyNCwgMTc4LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWFtYmVyLTEwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAyMzYsIDE3OSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy15ZWxsb3ctMTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDI0OSwgMTk2LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWxpbWUtMTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNDAsIDI0NCwgMTk1LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWxpZ2h0LWdyZWVuLTEwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjIwLCAyMzcsIDIwMCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1ncmVlbi0xMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIwMCwgMjMwLCAyMDEsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctdGVhbC0xMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDE3OCwgMjIzLCAyMTksIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctY3lhbi0xMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDE3OCwgMjM1LCAyNDIsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctbGlnaHQtYmx1ZS0xMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDE3OSwgMjI5LCAyNTIsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctYmx1ZS0xMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDE4NywgMjIyLCAyNTEsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctaW5kaWdvLTEwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTk3LCAyMDIsIDIzMywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1kZWVwLXB1cnBsZS0xMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIwOSwgMTk2LCAyMzMsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctcHVycGxlLTEwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjI1LCAxOTAsIDIzMSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1waW5rLTEwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjQ4LCAxODcsIDIwOCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1yZWQtMTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDIwNSwgMjEwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWJsdWUtZ3JheS05MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDM4LCA1MCwgNTYsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctYnJvd24tOTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSg2MiwgMzksIDM1LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWRlZXAtb3JhbmdlLTkwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTkxLCA1NCwgMTIsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctYW1iZXItOTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDExMSwgMCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy15ZWxsb3ctOTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNDUsIDEyNywgMjMsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctbGltZS05MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEzMCwgMTE5LCAyMywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1saWdodC1ncmVlbi05MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDUxLCAxMDUsIDMwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWdyZWVuLTkwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjcsIDk0LCAzMiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy10ZWFsLTkwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwgNzcsIDY0LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWN5YW4tOTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLCA5NiwgMTAwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWxpZ2h0LWJsdWUtOTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxLCA4NywgMTU1LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWJsdWUtOTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxMywgNzEsIDE2MSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1pbmRpZ28tOTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNiwgMzUsIDEyNiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1kZWVwLXB1cnBsZS05MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDQ5LCAyNywgMTQ2LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLXB1cnBsZS05MDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDc0LCAyMCwgMTQwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLXBpbmstOTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxMzYsIDE0LCA3OSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1yZWQtOTAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxODMsIDI4LCAyOCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1ibGFja3stLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwgMCwgMCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1ncmF5LTcwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoOTcsIDk3LCA5NywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1ibHVlLWdyYXktMjAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxNzYsIDE5MCwgMTk3LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWJyb3duLTIwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTg4LCAxNzAsIDE2NCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1kZWVwLW9yYW5nZS0yMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwgMTcxLCAxNDUsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctb3JhbmdlLTIwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAyMDQsIDEyOCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1hbWJlci0yMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwgMjI0LCAxMzAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmcteWVsbG93LTIwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAyNDUsIDE1NywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1saW1lLTIwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjMwLCAyMzgsIDE1NiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1saWdodC1ncmVlbi0yMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDE5NywgMjI1LCAxNjUsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctZ3JlZW4tMjAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxNjUsIDIxNCwgMTY3LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLXRlYWwtMjAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxMjgsIDIwMywgMTk2LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWN5YW4tMjAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxMjgsIDIyMiwgMjM0LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWxpZ2h0LWJsdWUtMjAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxMjksIDIxMiwgMjUwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWJsdWUtMjAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxNDQsIDIwMiwgMjQ5LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLWluZGlnby0yMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDE1OSwgMTY4LCAyMTgsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctZGVlcC1wdXJwbGUtMjAwey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxNzksIDE1NywgMjE5LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmJnLXB1cnBsZS0yMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIwNiwgMTQ3LCAyMTYsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctcGluay0yMDB7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI0NCwgMTQzLCAxNzcsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYmctcmVkLTIwMHstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjM5LCAxNTQsIDE1NCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5iZy1vcGFjaXR5LTIwey0tdHctYmctb3BhY2l0eTowLjJ9XFxuLmJnLW9wYWNpdHktODB7LS10dy1iZy1vcGFjaXR5OjAuOH1cXG4uYmctZ3JhZGllbnQtdG8tdHJ7YmFja2dyb3VuZC1pbWFnZTpsaW5lYXItZ3JhZGllbnQodG8gdG9wIHJpZ2h0LCB2YXIoLS10dy1ncmFkaWVudC1zdG9wcykpfVxcbi5mcm9tLWJsdWUtZ3JheS01MDB7LS10dy1ncmFkaWVudC1mcm9tOiM2MDdkOGI7LS10dy1ncmFkaWVudC1zdG9wczp2YXIoLS10dy1ncmFkaWVudC1mcm9tKSwgdmFyKC0tdHctZ3JhZGllbnQtdG8sIHJnYmEoOTYsIDEyNSwgMTM5LCAwKSl9XFxuLmZyb20tZ3JheS01MDB7LS10dy1ncmFkaWVudC1mcm9tOiM5ZTllOWU7LS10dy1ncmFkaWVudC1zdG9wczp2YXIoLS10dy1ncmFkaWVudC1mcm9tKSwgdmFyKC0tdHctZ3JhZGllbnQtdG8sIHJnYmEoMTU4LCAxNTgsIDE1OCwgMCkpfVxcbi5mcm9tLWJyb3duLTUwMHstLXR3LWdyYWRpZW50LWZyb206Izc5NTU0ODstLXR3LWdyYWRpZW50LXN0b3BzOnZhcigtLXR3LWdyYWRpZW50LWZyb20pLCB2YXIoLS10dy1ncmFkaWVudC10bywgcmdiYSgxMjEsIDg1LCA3MiwgMCkpfVxcbi5mcm9tLWRlZXAtb3JhbmdlLTUwMHstLXR3LWdyYWRpZW50LWZyb206I2ZmNTcyMjstLXR3LWdyYWRpZW50LXN0b3BzOnZhcigtLXR3LWdyYWRpZW50LWZyb20pLCB2YXIoLS10dy1ncmFkaWVudC10bywgcmdiYSgyNTUsIDg3LCAzNCwgMCkpfVxcbi5mcm9tLW9yYW5nZS01MDB7LS10dy1ncmFkaWVudC1mcm9tOiNmZjk4MDA7LS10dy1ncmFkaWVudC1zdG9wczp2YXIoLS10dy1ncmFkaWVudC1mcm9tKSwgdmFyKC0tdHctZ3JhZGllbnQtdG8sIHJnYmEoMjU1LCAxNTIsIDAsIDApKX1cXG4uZnJvbS1hbWJlci01MDB7LS10dy1ncmFkaWVudC1mcm9tOiNmZmMxMDc7LS10dy1ncmFkaWVudC1zdG9wczp2YXIoLS10dy1ncmFkaWVudC1mcm9tKSwgdmFyKC0tdHctZ3JhZGllbnQtdG8sIHJnYmEoMjU1LCAxOTMsIDcsIDApKX1cXG4uZnJvbS15ZWxsb3ctNjAwey0tdHctZ3JhZGllbnQtZnJvbTojZmRkODM1Oy0tdHctZ3JhZGllbnQtc3RvcHM6dmFyKC0tdHctZ3JhZGllbnQtZnJvbSksIHZhcigtLXR3LWdyYWRpZW50LXRvLCByZ2JhKDI1MywgMjE2LCA1MywgMCkpfVxcbi5mcm9tLWxpbWUtNTAwey0tdHctZ3JhZGllbnQtZnJvbTojY2RkYzM5Oy0tdHctZ3JhZGllbnQtc3RvcHM6dmFyKC0tdHctZ3JhZGllbnQtZnJvbSksIHZhcigtLXR3LWdyYWRpZW50LXRvLCByZ2JhKDIwNSwgMjIwLCA1NywgMCkpfVxcbi5mcm9tLWxpZ2h0LWdyZWVuLTUwMHstLXR3LWdyYWRpZW50LWZyb206IzhiYzM0YTstLXR3LWdyYWRpZW50LXN0b3BzOnZhcigtLXR3LWdyYWRpZW50LWZyb20pLCB2YXIoLS10dy1ncmFkaWVudC10bywgcmdiYSgxMzksIDE5NSwgNzQsIDApKX1cXG4uZnJvbS1ncmVlbi01MDB7LS10dy1ncmFkaWVudC1mcm9tOiM0Y2FmNTA7LS10dy1ncmFkaWVudC1zdG9wczp2YXIoLS10dy1ncmFkaWVudC1mcm9tKSwgdmFyKC0tdHctZ3JhZGllbnQtdG8sIHJnYmEoNzYsIDE3NSwgODAsIDApKX1cXG4uZnJvbS10ZWFsLTUwMHstLXR3LWdyYWRpZW50LWZyb206IzAwOTY4ODstLXR3LWdyYWRpZW50LXN0b3BzOnZhcigtLXR3LWdyYWRpZW50LWZyb20pLCB2YXIoLS10dy1ncmFkaWVudC10bywgcmdiYSgwLCAxNTAsIDEzNiwgMCkpfVxcbi5mcm9tLWN5YW4tNTAwey0tdHctZ3JhZGllbnQtZnJvbTojMDBiY2Q0Oy0tdHctZ3JhZGllbnQtc3RvcHM6dmFyKC0tdHctZ3JhZGllbnQtZnJvbSksIHZhcigtLXR3LWdyYWRpZW50LXRvLCByZ2JhKDAsIDE4OCwgMjEyLCAwKSl9XFxuLmZyb20tbGlnaHQtYmx1ZS01MDB7LS10dy1ncmFkaWVudC1mcm9tOiMwM2E5ZjQ7LS10dy1ncmFkaWVudC1zdG9wczp2YXIoLS10dy1ncmFkaWVudC1mcm9tKSwgdmFyKC0tdHctZ3JhZGllbnQtdG8sIHJnYmEoMywgMTY5LCAyNDQsIDApKX1cXG4uZnJvbS1ibHVlLTUwMHstLXR3LWdyYWRpZW50LWZyb206IzIxOTZmMzstLXR3LWdyYWRpZW50LXN0b3BzOnZhcigtLXR3LWdyYWRpZW50LWZyb20pLCB2YXIoLS10dy1ncmFkaWVudC10bywgcmdiYSgzMywgMTUwLCAyNDMsIDApKX1cXG4uZnJvbS1pbmRpZ28tNTAwey0tdHctZ3JhZGllbnQtZnJvbTojM2Y1MWI1Oy0tdHctZ3JhZGllbnQtc3RvcHM6dmFyKC0tdHctZ3JhZGllbnQtZnJvbSksIHZhcigtLXR3LWdyYWRpZW50LXRvLCByZ2JhKDYzLCA4MSwgMTgxLCAwKSl9XFxuLmZyb20tZGVlcC1wdXJwbGUtNTAwey0tdHctZ3JhZGllbnQtZnJvbTojNjczYWI3Oy0tdHctZ3JhZGllbnQtc3RvcHM6dmFyKC0tdHctZ3JhZGllbnQtZnJvbSksIHZhcigtLXR3LWdyYWRpZW50LXRvLCByZ2JhKDEwMywgNTgsIDE4MywgMCkpfVxcbi5mcm9tLXB1cnBsZS01MDB7LS10dy1ncmFkaWVudC1mcm9tOiM5YzI3YjA7LS10dy1ncmFkaWVudC1zdG9wczp2YXIoLS10dy1ncmFkaWVudC1mcm9tKSwgdmFyKC0tdHctZ3JhZGllbnQtdG8sIHJnYmEoMTU2LCAzOSwgMTc2LCAwKSl9XFxuLmZyb20tcGluay01MDB7LS10dy1ncmFkaWVudC1mcm9tOiNlOTFlNjM7LS10dy1ncmFkaWVudC1zdG9wczp2YXIoLS10dy1ncmFkaWVudC1mcm9tKSwgdmFyKC0tdHctZ3JhZGllbnQtdG8sIHJnYmEoMjMzLCAzMCwgOTksIDApKX1cXG4uZnJvbS1yZWQtNTAwey0tdHctZ3JhZGllbnQtZnJvbTojZjQ0MzM2Oy0tdHctZ3JhZGllbnQtc3RvcHM6dmFyKC0tdHctZ3JhZGllbnQtZnJvbSksIHZhcigtLXR3LWdyYWRpZW50LXRvLCByZ2JhKDI0NCwgNjcsIDU0LCAwKSl9XFxuLmZyb20tbGlnaHQtYmx1ZS03MDB7LS10dy1ncmFkaWVudC1mcm9tOiMwMjg4ZDE7LS10dy1ncmFkaWVudC1zdG9wczp2YXIoLS10dy1ncmFkaWVudC1mcm9tKSwgdmFyKC0tdHctZ3JhZGllbnQtdG8sIHJnYmEoMiwgMTM2LCAyMDksIDApKX1cXG4udG8tYmx1ZS1ncmF5LTcwMHstLXR3LWdyYWRpZW50LXRvOiM0NTVhNjR9XFxuLnRvLWdyYXktNzAwey0tdHctZ3JhZGllbnQtdG86IzYxNjE2MX1cXG4udG8tYnJvd24tNzAwey0tdHctZ3JhZGllbnQtdG86IzVkNDAzN31cXG4udG8tZGVlcC1vcmFuZ2UtNzAwey0tdHctZ3JhZGllbnQtdG86I2U2NGExOX1cXG4udG8tb3JhbmdlLTcwMHstLXR3LWdyYWRpZW50LXRvOiNmNTdjMDB9XFxuLnRvLWFtYmVyLTcwMHstLXR3LWdyYWRpZW50LXRvOiNmZmEwMDB9XFxuLnRvLXllbGxvdy04MDB7LS10dy1ncmFkaWVudC10bzojZjlhODI1fVxcbi50by1saW1lLTcwMHstLXR3LWdyYWRpZW50LXRvOiNhZmI0MmJ9XFxuLnRvLWxpZ2h0LWdyZWVuLTcwMHstLXR3LWdyYWRpZW50LXRvOiM2ODlmMzh9XFxuLnRvLWdyZWVuLTcwMHstLXR3LWdyYWRpZW50LXRvOiMzODhlM2N9XFxuLnRvLXRlYWwtNzAwey0tdHctZ3JhZGllbnQtdG86IzAwNzk2Yn1cXG4udG8tY3lhbi03MDB7LS10dy1ncmFkaWVudC10bzojMDA5N2E3fVxcbi50by1saWdodC1ibHVlLTcwMHstLXR3LWdyYWRpZW50LXRvOiMwMjg4ZDF9XFxuLnRvLWJsdWUtNzAwey0tdHctZ3JhZGllbnQtdG86IzE5NzZkMn1cXG4udG8taW5kaWdvLTcwMHstLXR3LWdyYWRpZW50LXRvOiMzMDNmOWZ9XFxuLnRvLWRlZXAtcHVycGxlLTcwMHstLXR3LWdyYWRpZW50LXRvOiM1MTJkYTh9XFxuLnRvLXB1cnBsZS03MDB7LS10dy1ncmFkaWVudC10bzojN2IxZmEyfVxcbi50by1waW5rLTcwMHstLXR3LWdyYWRpZW50LXRvOiNjMjE4NWJ9XFxuLnRvLXJlZC03MDB7LS10dy1ncmFkaWVudC10bzojZDMyZjJmfVxcbi50by1saWdodC1ibHVlLTUwMHstLXR3LWdyYWRpZW50LXRvOiMwM2E5ZjR9XFxuLnAtNHtwYWRkaW5nOjFyZW19XFxuLnAtM3twYWRkaW5nOjAuNzVyZW19XFxuLnAtOHtwYWRkaW5nOjJyZW19XFxuLnAtMntwYWRkaW5nOjAuNXJlbX1cXG4ucC0we3BhZGRpbmc6MHB4fVxcbi5wLTJcXFxcLjV7cGFkZGluZzowLjYyNXJlbX1cXG4ucC02e3BhZGRpbmc6MS41cmVtfVxcbi5wLTF7cGFkZGluZzowLjI1cmVtfVxcbi5wLTV7cGFkZGluZzoxLjI1cmVtfVxcbi5wLTEwe3BhZGRpbmc6Mi41cmVtfVxcbi5weC00e3BhZGRpbmctbGVmdDoxcmVtO3BhZGRpbmctcmlnaHQ6MXJlbX1cXG4ucHktMTZ7cGFkZGluZy10b3A6NHJlbTtwYWRkaW5nLWJvdHRvbTo0cmVtfVxcbi5weS0xe3BhZGRpbmctdG9wOjAuMjVyZW07cGFkZGluZy1ib3R0b206MC4yNXJlbX1cXG4ucHktOHtwYWRkaW5nLXRvcDoycmVtO3BhZGRpbmctYm90dG9tOjJyZW19XFxuLnB5LTI4e3BhZGRpbmctdG9wOjdyZW07cGFkZGluZy1ib3R0b206N3JlbX1cXG4ucHgtMTJ7cGFkZGluZy1sZWZ0OjNyZW07cGFkZGluZy1yaWdodDozcmVtfVxcbi5weC0yXFxcXC41e3BhZGRpbmctbGVmdDowLjYyNXJlbTtwYWRkaW5nLXJpZ2h0OjAuNjI1cmVtfVxcbi5weC0ye3BhZGRpbmctbGVmdDowLjVyZW07cGFkZGluZy1yaWdodDowLjVyZW19XFxuLnB5LTJ7cGFkZGluZy10b3A6MC41cmVtO3BhZGRpbmctYm90dG9tOjAuNXJlbX1cXG4ucHktMjB7cGFkZGluZy10b3A6NXJlbTtwYWRkaW5nLWJvdHRvbTo1cmVtfVxcbi5weS0yNHtwYWRkaW5nLXRvcDo2cmVtO3BhZGRpbmctYm90dG9tOjZyZW19XFxuLnB5LTV7cGFkZGluZy10b3A6MS4yNXJlbTtwYWRkaW5nLWJvdHRvbToxLjI1cmVtfVxcbi5weS0xXFxcXC41e3BhZGRpbmctdG9wOjAuMzc1cmVtO3BhZGRpbmctYm90dG9tOjAuMzc1cmVtfVxcbi5weS0yXFxcXC41e3BhZGRpbmctdG9wOjAuNjI1cmVtO3BhZGRpbmctYm90dG9tOjAuNjI1cmVtfVxcbi5weC02e3BhZGRpbmctbGVmdDoxLjVyZW07cGFkZGluZy1yaWdodDoxLjVyZW19XFxuLnB5LTN7cGFkZGluZy10b3A6MC43NXJlbTtwYWRkaW5nLWJvdHRvbTowLjc1cmVtfVxcbi5weC03e3BhZGRpbmctbGVmdDoxLjc1cmVtO3BhZGRpbmctcmlnaHQ6MS43NXJlbX1cXG4ucHktNHtwYWRkaW5nLXRvcDoxcmVtO3BhZGRpbmctYm90dG9tOjFyZW19XFxuLnB4LTh7cGFkZGluZy1sZWZ0OjJyZW07cGFkZGluZy1yaWdodDoycmVtfVxcbi5weC05e3BhZGRpbmctbGVmdDoyLjI1cmVtO3BhZGRpbmctcmlnaHQ6Mi4yNXJlbX1cXG4ucHgtM3twYWRkaW5nLWxlZnQ6MC43NXJlbTtwYWRkaW5nLXJpZ2h0OjAuNzVyZW19XFxuLnB4LTB7cGFkZGluZy1sZWZ0OjBweDtwYWRkaW5nLXJpZ2h0OjBweH1cXG4ucHgtNXtwYWRkaW5nLWxlZnQ6MS4yNXJlbTtwYWRkaW5nLXJpZ2h0OjEuMjVyZW19XFxuLnB4LTFcXFxcLjV7cGFkZGluZy1sZWZ0OjAuMzc1cmVtO3BhZGRpbmctcmlnaHQ6MC4zNzVyZW19XFxuLnB4LTF7cGFkZGluZy1sZWZ0OjAuMjVyZW07cGFkZGluZy1yaWdodDowLjI1cmVtfVxcbi5wdC0yOHtwYWRkaW5nLXRvcDo3cmVtfVxcbi5wYi0zNntwYWRkaW5nLWJvdHRvbTo5cmVtfVxcbi5wdC04e3BhZGRpbmctdG9wOjJyZW19XFxuLnBiLTZ7cGFkZGluZy1ib3R0b206MS41cmVtfVxcbi5wYi0ye3BhZGRpbmctYm90dG9tOjAuNXJlbX1cXG4ucHQtNntwYWRkaW5nLXRvcDoxLjVyZW19XFxuLnBiLTR7cGFkZGluZy1ib3R0b206MXJlbX1cXG4ucGItMjB7cGFkZGluZy1ib3R0b206NXJlbX1cXG4ucHQtMzJ7cGFkZGluZy10b3A6OHJlbX1cXG4ucHQtNDh7cGFkZGluZy10b3A6MTJyZW19XFxuLnB0LTI0e3BhZGRpbmctdG9wOjZyZW19XFxuLnBiLTY0e3BhZGRpbmctYm90dG9tOjE2cmVtfVxcbi5wYi0xNntwYWRkaW5nLWJvdHRvbTo0cmVtfVxcbi5wci0xMntwYWRkaW5nLXJpZ2h0OjNyZW19XFxuLnBsLTR7cGFkZGluZy1sZWZ0OjFyZW19XFxuLnB0LTR7cGFkZGluZy10b3A6MXJlbX1cXG4ucHQtOXtwYWRkaW5nLXRvcDoyLjI1cmVtfVxcbi5wbC0we3BhZGRpbmctbGVmdDowcHh9XFxuLnB0LTEwe3BhZGRpbmctdG9wOjIuNXJlbX1cXG4ucGwtNXtwYWRkaW5nLWxlZnQ6MS4yNXJlbX1cXG4ucHItM3twYWRkaW5nLXJpZ2h0OjAuNzVyZW19XFxuLnBsLTd7cGFkZGluZy1sZWZ0OjEuNzVyZW19XFxuLnByLTV7cGFkZGluZy1yaWdodDoxLjI1cmVtfVxcbi5wbC04e3BhZGRpbmctbGVmdDoycmVtfVxcbi5wci02e3BhZGRpbmctcmlnaHQ6MS41cmVtfVxcbi5wdC0xXFxcXC41e3BhZGRpbmctdG9wOjAuMzc1cmVtfVxcbi5wYi0wXFxcXC41e3BhZGRpbmctYm90dG9tOjAuMTI1cmVtfVxcbi5wdC0xe3BhZGRpbmctdG9wOjAuMjVyZW19XFxuLnBiLTB7cGFkZGluZy1ib3R0b206MHB4fVxcbi5wdC0yXFxcXC41e3BhZGRpbmctdG9wOjAuNjI1cmVtfVxcbi5wYi0xXFxcXC41e3BhZGRpbmctYm90dG9tOjAuMzc1cmVtfVxcbi5wdC0ye3BhZGRpbmctdG9wOjAuNXJlbX1cXG4ucGItMXtwYWRkaW5nLWJvdHRvbTowLjI1cmVtfVxcbi5wdC0zXFxcXC41e3BhZGRpbmctdG9wOjAuODc1cmVtfVxcbi5wYi0yXFxcXC41e3BhZGRpbmctYm90dG9tOjAuNjI1cmVtfVxcbi5wdC0ze3BhZGRpbmctdG9wOjAuNzVyZW19XFxuLnBsLTJ7cGFkZGluZy1sZWZ0OjAuNXJlbX1cXG4ucHItN3twYWRkaW5nLXJpZ2h0OjEuNzVyZW19XFxuLnBsLTN7cGFkZGluZy1sZWZ0OjAuNzVyZW19XFxuLnByLTl7cGFkZGluZy1yaWdodDoyLjI1cmVtfVxcbi5wci0xe3BhZGRpbmctcmlnaHQ6MC4yNXJlbX1cXG4ucGItMTB7cGFkZGluZy1ib3R0b206Mi41cmVtfVxcbi5wdC0xNntwYWRkaW5nLXRvcDo0cmVtfVxcbi50ZXh0LWNlbnRlcnt0ZXh0LWFsaWduOmNlbnRlcn1cXG4udGV4dC1yaWdodHt0ZXh0LWFsaWduOnJpZ2h0fVxcbi50ZXh0LWxlZnR7dGV4dC1hbGlnbjpsZWZ0fVxcbi5hbGlnbi1taWRkbGV7dmVydGljYWwtYWxpZ246bWlkZGxlfVxcbi5mb250LXNlcmlme2ZvbnQtZmFtaWx5OlxcXCJSb2JvdG8gU2xhYlxcXCIsIHNlcmlmfVxcbi50ZXh0LXhse2ZvbnQtc2l6ZToxLjI1cmVtO2xpbmUtaGVpZ2h0OjEuNzVyZW19XFxuLnRleHQtc217Zm9udC1zaXplOjAuODc1cmVtO2xpbmUtaGVpZ2h0OjEuMjVyZW19XFxuLnRleHQteHN7Zm9udC1zaXplOjAuNzVyZW07bGluZS1oZWlnaHQ6MXJlbX1cXG4udGV4dC02eGx7Zm9udC1zaXplOjMuNzVyZW07bGluZS1oZWlnaHQ6MX1cXG4udGV4dC1sZ3tmb250LXNpemU6MS4xMjVyZW07bGluZS1oZWlnaHQ6MS43NXJlbX1cXG4udGV4dC1iYXNle2ZvbnQtc2l6ZToxcmVtO2xpbmUtaGVpZ2h0OjEuNXJlbX1cXG4udGV4dC0yeGx7Zm9udC1zaXplOjEuNXJlbTtsaW5lLWhlaWdodDoycmVtfVxcbi50ZXh0LTR4bHtmb250LXNpemU6Mi4yNXJlbTtsaW5lLWhlaWdodDoyLjVyZW19XFxuLnRleHQtM3hse2ZvbnQtc2l6ZToxLjg3NXJlbTtsaW5lLWhlaWdodDoyLjI1cmVtfVxcbi50ZXh0LTV4bHtmb250LXNpemU6M3JlbTtsaW5lLWhlaWdodDoxfVxcbi50ZXh0LTd4bHtmb250LXNpemU6NC41cmVtO2xpbmUtaGVpZ2h0OjF9XFxuLnRleHQtOHhse2ZvbnQtc2l6ZTo2cmVtO2xpbmUtaGVpZ2h0OjF9XFxuLnRleHQtOXhse2ZvbnQtc2l6ZTo4cmVtO2xpbmUtaGVpZ2h0OjF9XFxuLmZvbnQtbWVkaXVte2ZvbnQtd2VpZ2h0OjUwMH1cXG4uZm9udC1zZW1pYm9sZHtmb250LXdlaWdodDo2MDB9XFxuLmZvbnQtYm9sZHtmb250LXdlaWdodDo3MDB9XFxuLmZvbnQtbGlnaHR7Zm9udC13ZWlnaHQ6MzAwfVxcbi5mb250LW5vcm1hbHtmb250LXdlaWdodDo0MDB9XFxuLnVwcGVyY2FzZXt0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2V9XFxuLmNhcGl0YWxpemV7dGV4dC10cmFuc2Zvcm06Y2FwaXRhbGl6ZX1cXG4ubGVhZGluZy1yZWxheGVke2xpbmUtaGVpZ2h0OjEuNjI1fVxcbi5sZWFkaW5nLW5vbmV7bGluZS1oZWlnaHQ6MX1cXG4ubGVhZGluZy1ub3JtYWx7bGluZS1oZWlnaHQ6MS41fVxcbi5sZWFkaW5nLTEwe2xpbmUtaGVpZ2h0OjIuNXJlbX1cXG4ubGVhZGluZy1zbnVne2xpbmUtaGVpZ2h0OjEuMzc1fVxcbi50cmFja2luZy13aWRlcntsZXR0ZXItc3BhY2luZzowLjA1ZW19XFxuLnRyYWNraW5nLXdpZGV7bGV0dGVyLXNwYWNpbmc6MC4wMjVlbX1cXG4udGV4dC1ncmF5LTcwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoOTcsIDk3LCA5NywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtYmx1ZS1ncmF5LTcwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoNjksIDkwLCAxMDAsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWxpZ2h0LWJsdWUtNTAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgzLCAxNjksIDI0NCwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtYmx1ZS1ncmF5LTgwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoNTUsIDcxLCA3OSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtYmx1ZS1ncmF5LTkwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMzgsIDUwLCA1NiwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtYmx1ZS1ncmF5LTIwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMTc2LCAxOTAsIDE5NywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtYmx1ZS1ncmF5LTUwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyMzYsIDIzOSwgMjQxLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1jeWFuLTYwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMCwgMTcyLCAxOTMsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWdyYXktNTAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgxNTgsIDE1OCwgMTU4LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1ncmF5LTkwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMzMsIDMzLCAzMywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtYmx1ZS02MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDMwLCAxMzYsIDIyOSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtYmx1ZS00MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDY2LCAxNjUsIDI0NSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtaW5kaWdvLTUwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoNjMsIDgxLCAxODEsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LXBpbmstNDAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyMzYsIDY0LCAxMjIsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LXJlZC02MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDIyOSwgNTcsIDUzLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1ncmF5LTYwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMTE3LCAxMTcsIDExNywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtd2hpdGV7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDI1NSwgMjU1LCAyNTUsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWJsdWUtZ3JheS01MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDk2LCAxMjUsIDEzOSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtYnJvd24tNTAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgxMjEsIDg1LCA3MiwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtZGVlcC1vcmFuZ2UtNTAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyNTUsIDg3LCAzNCwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtb3JhbmdlLTUwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjU1LCAxNTIsIDAsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWFtYmVyLTUwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjU1LCAxOTMsIDcsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LXllbGxvdy02MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDI1MywgMjE2LCA1MywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtbGltZS01MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDIwNSwgMjIwLCA1NywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtbGlnaHQtZ3JlZW4tNTAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgxMzksIDE5NSwgNzQsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWdyZWVuLTUwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoNzYsIDE3NSwgODAsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LXRlYWwtNTAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgwLCAxNTAsIDEzNiwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtY3lhbi01MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDAsIDE4OCwgMjEyLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1ibHVlLTUwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMzMsIDE1MCwgMjQzLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1kZWVwLXB1cnBsZS01MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDEwMywgNTgsIDE4MywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtcHVycGxlLTUwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMTU2LCAzOSwgMTc2LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1waW5rLTUwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjMzLCAzMCwgOTksIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LXJlZC01MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDI0NCwgNjcsIDU0LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1ncmF5LTQwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMTg5LCAxODksIDE4OSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtZ3JheS04MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDY2LCA2NiwgNjYsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWJyb3duLTcwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoOTMsIDY0LCA1NSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtZGVlcC1vcmFuZ2UtNzAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyMzAsIDc0LCAyNSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtb3JhbmdlLTcwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjQ1LCAxMjQsIDAsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWFtYmVyLTcwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjU1LCAxNjAsIDAsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LXllbGxvdy03MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDI1MSwgMTkyLCA0NSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtbGltZS03MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDE3NSwgMTgwLCA0MywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtbGlnaHQtZ3JlZW4tNzAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgxMDQsIDE1OSwgNTYsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWdyZWVuLTcwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoNTYsIDE0MiwgNjAsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LXRlYWwtNzAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgwLCAxMjEsIDEwNywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtY3lhbi03MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDAsIDE1MSwgMTY3LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1saWdodC1ibHVlLTcwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMiwgMTM2LCAyMDksIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWJsdWUtNzAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyNSwgMTE4LCAyMTAsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWluZGlnby03MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDQ4LCA2MywgMTU5LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1kZWVwLXB1cnBsZS03MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDgxLCA0NSwgMTY4LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1wdXJwbGUtNzAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgxMjMsIDMxLCAxNjIsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LXBpbmstNzAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgxOTQsIDI0LCA5MSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtcmVkLTcwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjExLCA0NywgNDcsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWdyYXktMjAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyMzgsIDIzOCwgMjM4LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1icm93bi04MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDc4LCA1MiwgNDYsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWRlZXAtb3JhbmdlLTgwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjE2LCA2NywgMjEsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LW9yYW5nZS04MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDIzOSwgMTA4LCAwLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1hbWJlci04MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDI1NSwgMTQzLCAwLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC15ZWxsb3ctODAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyNDksIDE2OCwgMzcsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWxpbWUtODAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgxNTgsIDE1NywgMzYsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWxpZ2h0LWdyZWVuLTgwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoODUsIDEzOSwgNDcsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWdyZWVuLTgwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoNDYsIDEyNSwgNTAsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LXRlYWwtODAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgwLCAxMDUsIDkyLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1jeWFuLTgwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMCwgMTMxLCAxNDMsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWxpZ2h0LWJsdWUtODAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyLCAxMTksIDE4OSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtYmx1ZS04MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDIxLCAxMDEsIDE5MiwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtaW5kaWdvLTgwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoNDAsIDUzLCAxNDcsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LWRlZXAtcHVycGxlLTgwMHstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoNjksIDM5LCAxNjAsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LXB1cnBsZS04MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDEwNiwgMjcsIDE1NCwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtcGluay04MDB7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDE3MywgMjAsIDg3LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4udGV4dC1yZWQtODAwey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgxOTgsIDQwLCA0MCwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLnRleHQtYmxhY2t7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDAsIDAsIDAsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi50ZXh0LW9wYWNpdHktNjB7LS10dy10ZXh0LW9wYWNpdHk6MC42fVxcbi5uby11bmRlcmxpbmV7dGV4dC1kZWNvcmF0aW9uOm5vbmV9XFxuLmFudGlhbGlhc2Vkey13ZWJraXQtZm9udC1zbW9vdGhpbmc6YW50aWFsaWFzZWQ7LW1vei1vc3gtZm9udC1zbW9vdGhpbmc6Z3JheXNjYWxlfVxcbi5wbGFjZWhvbGRlci13aGl0ZTo6LW1vei1wbGFjZWhvbGRlcnstLXR3LXBsYWNlaG9sZGVyLW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDI1NSwgMjU1LCAyNTUsIHZhcigtLXR3LXBsYWNlaG9sZGVyLW9wYWNpdHkpKX1cXG4ucGxhY2Vob2xkZXItd2hpdGU6LW1zLWlucHV0LXBsYWNlaG9sZGVyey0tdHctcGxhY2Vob2xkZXItb3BhY2l0eToxO2NvbG9yOnJnYmEoMjU1LCAyNTUsIDI1NSwgdmFyKC0tdHctcGxhY2Vob2xkZXItb3BhY2l0eSkpfVxcbi5wbGFjZWhvbGRlci13aGl0ZTo6cGxhY2Vob2xkZXJ7LS10dy1wbGFjZWhvbGRlci1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyNTUsIDI1NSwgMjU1LCB2YXIoLS10dy1wbGFjZWhvbGRlci1vcGFjaXR5KSl9XFxuLnBsYWNlaG9sZGVyLW9wYWNpdHktNTA6Oi1tb3otcGxhY2Vob2xkZXJ7LS10dy1wbGFjZWhvbGRlci1vcGFjaXR5OjAuNX1cXG4ucGxhY2Vob2xkZXItb3BhY2l0eS01MDotbXMtaW5wdXQtcGxhY2Vob2xkZXJ7LS10dy1wbGFjZWhvbGRlci1vcGFjaXR5OjAuNX1cXG4ucGxhY2Vob2xkZXItb3BhY2l0eS01MDo6cGxhY2Vob2xkZXJ7LS10dy1wbGFjZWhvbGRlci1vcGFjaXR5OjAuNX1cXG4ub3BhY2l0eS01MHtvcGFjaXR5OjAuNX1cXG4ub3BhY2l0eS0we29wYWNpdHk6MH1cXG4ub3BhY2l0eS0xMDB7b3BhY2l0eToxfVxcbi5vcGFjaXR5LTI1e29wYWNpdHk6MC4yNX1cXG4ub3BhY2l0eS01e29wYWNpdHk6MC4wNX1cXG4uc2hhZG93LW1key0tdHctc2hhZG93OjAgNHB4IDZweCAtMXB4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCAycHggNHB4IC0xcHggcmdiYSgwLCAwLCAwLCAwLjA2KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1sZ3stLXR3LXNoYWRvdzowIDEwcHggMTVweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNnB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy14bHstLXR3LXNoYWRvdzowIDIwcHggMjVweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LW1kLWJsdWUtZ3JheXstLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDk2LCAxMjUsIDEzOSwgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1tZC1ncmF5ey0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoMTU4LCAxNTgsIDE1OCwgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1tZC1icm93bnstLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDEyMSwgODUsIDcyLCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LW1kLWRlZXAtb3Jhbmdley0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoMjU1LCA4NywgMzYsIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbWQtb3Jhbmdley0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoMjU1LCAxNTIsIDAsIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbWQtYW1iZXJ7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgyNTUsIDE5MywgNywgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1tZC15ZWxsb3d7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgyNTUsIDIzNSwgNTksIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbWQtbGltZXstLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDIwNSwgMjIwLCA1NywgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1tZC1saWdodC1ncmVlbnstLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDEzOSwgMTk1LCA3NCwgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1tZC1ncmVlbnstLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDc2LCAxNzUsIDgwLCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LW1kLXRlYWx7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgwLCAxNTAsIDEzNiwgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1tZC1jeWFuey0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoMCwgMTg4LCAyMTIsIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbWQtbGlnaHQtYmx1ZXstLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDMsIDE2OSwgMjQ0LCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LW1kLWJsdWV7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgzMywgMTUwLCAyNDMsIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbWQtaW5kaWdvey0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoNjMsIDgxLCAxODEsIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbWQtZGVlcC1wdXJwbGV7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgxMDMsIDU4LCAxODMsIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbWQtcHVycGxley0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoMTU2LCAzOSwgMTc2LCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LW1kLXBpbmt7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgyMzMsIDMwLCA5OSwgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1tZC1yZWR7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgyNDQsIDY3LCA1NCwgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1ub25ley0tdHctc2hhZG93OjAgMCAjMDAwMDtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1sZy1ibHVlLWdyYXl7LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoNjksIDkwLCAxMDAsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbGctZ3JheXstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSg5NywgOTcsIDk3LCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LWxnLWJyb3duey0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDkzLCA2NCwgNTUsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbGctZGVlcC1vcmFuZ2V7LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoMjMwLCA3NCwgMjUsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbGctb3Jhbmdley0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDI0NSwgMTIyLCAwLCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LWxnLWFtYmVyey0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDI1NSwgMTYwLCAwLCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LWxnLXllbGxvd3stLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSgyNTEsIDE5MiwgNDUsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbGctbGltZXstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSgxNzUsIDE4MCwgNDMsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbGctbGlnaHQtZ3JlZW57LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoMTA0LCAxNTksIDU2LCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LWxnLWdyZWVuey0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDU2LCAxNDIsIDYwLCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LWxnLXRlYWx7LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoMCwgMTIxLCAxMDcsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbGctY3lhbnstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSgwLCAxNTEsIDE2NywgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1sZy1saWdodC1ibHVley0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDIsIDEzNiwgMjA5LCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LWxnLWJsdWV7LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoMjUsIDExOCwgMjEwLCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LWxnLWluZGlnb3stLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSg0OCwgNjMsIDE1OSwgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1sZy1kZWVwLXB1cnBsZXstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSg4MSwgNDUsIDE2OCwgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLnNoYWRvdy1sZy1wdXJwbGV7LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoMTIzLCAzMSwgMTYyLCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LWxnLXBpbmt7LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoMTk0LCAyNCwgOTEsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5zaGFkb3ctbGctcmVkey0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDIxMSwgNDcsIDQ3LCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uc2hhZG93LXNtey0tdHctc2hhZG93OjAgMXB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4wNSk7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5vdXRsaW5lLW5vbmV7b3V0bGluZToycHggc29saWQgdHJhbnNwYXJlbnQ7b3V0bGluZS1vZmZzZXQ6MnB4fVxcbi50cmFuc2l0aW9uLWFsbHt0cmFuc2l0aW9uLXByb3BlcnR5OmFsbDt0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpO3RyYW5zaXRpb24tZHVyYXRpb246MTUwbXN9XFxuLmR1cmF0aW9uLTMwMHt0cmFuc2l0aW9uLWR1cmF0aW9uOjMwMG1zfVxcbi5kdXJhdGlvbnt0cmFuc2l0aW9uLWR1cmF0aW9uOjE1MG1zfVxcbi5kdXJhdGlvbi01MDB7dHJhbnNpdGlvbi1kdXJhdGlvbjo1MDBtc31cXG4vKiBNYXRlcmlhbCBUYWlsd2luZCBJbnB1dCAqL1xcbi5tdC1pbnB1dCArIGxhYmVsOmFmdGVyIHtcXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xcbiAgICAgICAgcG9pbnRlci1ldmVudHM6bm9uZTtcXG4gICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xcbiAgICAgICAgdG9wOjAuMTI1cmVtO1xcbiAgICAgICAgbGVmdDowcHg7XFxuICAgICAgICBoZWlnaHQ6MTAwJTtcXG4gICAgICAgIHdpZHRoOjEwMCU7XFxuICAgICAgICAtLXR3LXRyYW5zbGF0ZS14OjA7XFxuICAgICAgICAtLXR3LXRyYW5zbGF0ZS15OjA7XFxuICAgICAgICAtLXR3LXJvdGF0ZTowO1xcbiAgICAgICAgLS10dy1za2V3LXg6MDtcXG4gICAgICAgIC0tdHctc2tldy15OjA7XFxuICAgICAgICAtLXR3LXNjYWxlLXg6MTtcXG4gICAgICAgIC0tdHctc2NhbGUteToxO1xcbiAgICAgICAgdHJhbnNmb3JtOnRyYW5zbGF0ZVgodmFyKC0tdHctdHJhbnNsYXRlLXgpKSB0cmFuc2xhdGVZKHZhcigtLXR3LXRyYW5zbGF0ZS15KSkgcm90YXRlKHZhcigtLXR3LXJvdGF0ZSkpIHNrZXdYKHZhcigtLXR3LXNrZXcteCkpIHNrZXdZKHZhcigtLXR3LXNrZXcteSkpIHNjYWxlWCh2YXIoLS10dy1zY2FsZS14KSkgc2NhbGVZKHZhcigtLXR3LXNjYWxlLXkpKTtcXG4gICAgICAgIC0tdHctc2NhbGUteDowO1xcbiAgICAgICAgYm9yZGVyLXdpZHRoOjFweDtcXG4gICAgICAgIGJvcmRlci10b3Atd2lkdGg6MHB4O1xcbiAgICAgICAgYm9yZGVyLWxlZnQtd2lkdGg6MHB4O1xcbiAgICAgICAgYm9yZGVyLXJpZ2h0LXdpZHRoOjBweDtcXG4gICAgICAgIGJvcmRlci1ib3R0b20td2lkdGg6MnB4O1xcbiAgICAgICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTphbGw7XFxuICAgICAgICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpO1xcbiAgICAgICAgdHJhbnNpdGlvbi1kdXJhdGlvbjoxNTBtcztcXG4gICAgICAgIHRyYW5zaXRpb24tZHVyYXRpb246MzAwbXM7XFxuICAgIH1cXG4ubXQtaW5wdXQ6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LXNjYWxlLXg6MX1cXG4ubXQtaW5wdXQ6bm90KDotbW96LXBsYWNlaG9sZGVyLXNob3duKSArIGxhYmVsIHNwYW4ge1xcbiAgICAgICAgdG9wOiAtMTQlO1xcbiAgICB9XFxuLm10LWlucHV0Om5vdCg6LW1zLWlucHV0LXBsYWNlaG9sZGVyKSArIGxhYmVsIHNwYW4ge1xcbiAgICAgICAgdG9wOiAtMTQlO1xcbiAgICB9XFxuLm10LWlucHV0OmZvY3VzICsgbGFiZWwgc3BhbixcXG4gICAgLm10LWlucHV0Om5vdCg6cGxhY2Vob2xkZXItc2hvd24pICsgbGFiZWwgc3BhbiB7XFxuICAgICAgICB0b3A6IC0xNCU7XFxuICAgIH1cXG4ubXQtaW5wdXQ6bm90KDotbW96LXBsYWNlaG9sZGVyLXNob3duKSArIGxhYmVsIHNwYW57Zm9udC1zaXplOjAuNzVyZW07bGluZS1oZWlnaHQ6MXJlbTtsaW5lLWhlaWdodDoxLjI1fVxcbi5tdC1pbnB1dDpub3QoOi1tcy1pbnB1dC1wbGFjZWhvbGRlcikgKyBsYWJlbCBzcGFue2ZvbnQtc2l6ZTowLjc1cmVtO2xpbmUtaGVpZ2h0OjFyZW07bGluZS1oZWlnaHQ6MS4yNX1cXG4ubXQtaW5wdXQ6Zm9jdXMgKyBsYWJlbCBzcGFuLCAubXQtaW5wdXQ6bm90KDpwbGFjZWhvbGRlci1zaG93bikgKyBsYWJlbCBzcGFue2ZvbnQtc2l6ZTowLjc1cmVtO2xpbmUtaGVpZ2h0OjFyZW07bGluZS1oZWlnaHQ6MS4yNX1cXG4udGV4dGVyZWE6bm90KDotbW96LXBsYWNlaG9sZGVyLXNob3duKSArIGxhYmVsIHNwYW4ge1xcbiAgICAgICAgdG9wOiAtMjJweCAhaW1wb3J0YW50O1xcbiAgICB9XFxuLnRleHRlcmVhOm5vdCg6LW1zLWlucHV0LXBsYWNlaG9sZGVyKSArIGxhYmVsIHNwYW4ge1xcbiAgICAgICAgdG9wOiAtMjJweCAhaW1wb3J0YW50O1xcbiAgICB9XFxuLnRleHRlcmVhOmZvY3VzICsgbGFiZWwgc3BhbixcXG4gICAgLnRleHRlcmVhOm5vdCg6cGxhY2Vob2xkZXItc2hvd24pICsgbGFiZWwgc3BhbiB7XFxuICAgICAgICB0b3A6IC0yMnB4ICFpbXBvcnRhbnQ7XFxuICAgIH1cXG4vKiBNYXRlcmlhbCBUYWlsd2luZCBJbnB1dCBPdXRsaW5lICovXFxuLm10LWlucHV0LW91dGxpbmU6bm90KDotbW96LXBsYWNlaG9sZGVyLXNob3duKSB7XFxuICAgICAgICBib3JkZXItdG9wOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xcbiAgICB9XFxuLm10LWlucHV0LW91dGxpbmU6bm90KDotbXMtaW5wdXQtcGxhY2Vob2xkZXIpIHtcXG4gICAgICAgIGJvcmRlci10b3A6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XFxuICAgIH1cXG4ubXQtaW5wdXQtb3V0bGluZTpmb2N1cyxcXG4gICAgLm10LWlucHV0LW91dGxpbmU6bm90KDpwbGFjZWhvbGRlci1zaG93bikge1xcbiAgICAgICAgYm9yZGVyLXRvcDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcXG4gICAgfVxcbi5tdC1pbnB1dC1vdXRsaW5lICsgbGFiZWwge1xcbiAgICAgICAgbGluZS1oZWlnaHQ6IDMuNjI1ICFpbXBvcnRhbnQ7XFxuICAgIH1cXG4ubXQtaW5wdXQtb3V0bGluZTpub3QoOi1tb3otcGxhY2Vob2xkZXItc2hvd24pICsgbGFiZWx7Zm9udC1zaXplOjAuNzVyZW0gIWltcG9ydGFudDtsaW5lLWhlaWdodDoxcmVtICFpbXBvcnRhbnQ7bGluZS1oZWlnaHQ6MS4yNSAhaW1wb3J0YW50fVxcbi5tdC1pbnB1dC1vdXRsaW5lOm5vdCg6LW1zLWlucHV0LXBsYWNlaG9sZGVyKSArIGxhYmVse2ZvbnQtc2l6ZTowLjc1cmVtICFpbXBvcnRhbnQ7bGluZS1oZWlnaHQ6MXJlbSAhaW1wb3J0YW50O2xpbmUtaGVpZ2h0OjEuMjUgIWltcG9ydGFudH1cXG4ubXQtaW5wdXQtb3V0bGluZTpmb2N1cyArIGxhYmVsLCAubXQtaW5wdXQtb3V0bGluZTpub3QoOnBsYWNlaG9sZGVyLXNob3duKSArIGxhYmVse2ZvbnQtc2l6ZTowLjc1cmVtICFpbXBvcnRhbnQ7bGluZS1oZWlnaHQ6MXJlbSAhaW1wb3J0YW50O2xpbmUtaGVpZ2h0OjEuMjUgIWltcG9ydGFudH1cXG4ubXQtaW5wdXQtb3V0bGluZSArIGxhYmVsOmJlZm9yZSxcXG4gICAgLm10LWlucHV0LW91dGxpbmUgKyBsYWJlbDphZnRlciB7XFxuICAgICAgICBjb250ZW50OiAnJztcXG4gICAgfVxcbi5tdC1pbnB1dC1vdXRsaW5lICsgbGFiZWw6YmVmb3JlLCAubXQtaW5wdXQtb3V0bGluZSArIGxhYmVsOmFmdGVye3BvaW50ZXItZXZlbnRzOm5vbmU7bWFyZ2luLXRvcDowLjM3NXJlbTtib3gtc2l6aW5nOmJvcmRlci1ib3g7ZGlzcGxheTpibG9jaztoZWlnaHQ6MC41cmVtO3dpZHRoOjAuNjI1cmVtO2JvcmRlci13aWR0aDoxcHg7Ym9yZGVyLXRvcC13aWR0aDoycHg7Ym9yZGVyLWJvdHRvbS13aWR0aDowcHg7Ym9yZGVyLWxlZnQtd2lkdGg6MHB4O2JvcmRlci1yaWdodC13aWR0aDowcHg7Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50fVxcbi5tdC1pbnB1dC1vdXRsaW5lOm5vdCg6LW1vei1wbGFjZWhvbGRlci1zaG93bikgKyBsYWJlbDpiZWZvcmUsIC5tdC1pbnB1dC1vdXRsaW5lOm5vdCg6LW1vei1wbGFjZWhvbGRlci1zaG93bikgKyBsYWJlbDphZnRlcntib3JkZXItdG9wLXdpZHRoOjFweDstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjI0LCAyMjQsIDIyNCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtb3V0bGluZTpub3QoOi1tcy1pbnB1dC1wbGFjZWhvbGRlcikgKyBsYWJlbDpiZWZvcmUsIC5tdC1pbnB1dC1vdXRsaW5lOm5vdCg6LW1zLWlucHV0LXBsYWNlaG9sZGVyKSArIGxhYmVsOmFmdGVye2JvcmRlci10b3Atd2lkdGg6MXB4Oy0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyMjQsIDIyNCwgMjI0LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lOm5vdCg6cGxhY2Vob2xkZXItc2hvd24pICsgbGFiZWw6YmVmb3JlLCAubXQtaW5wdXQtb3V0bGluZTpub3QoOnBsYWNlaG9sZGVyLXNob3duKSArIGxhYmVsOmFmdGVye2JvcmRlci10b3Atd2lkdGg6MXB4Oy0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyMjQsIDIyNCwgMjI0LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lOmZvY3VzICsgbGFiZWw6OmJlZm9yZSwgLm10LWlucHV0LW91dGxpbmU6Zm9jdXMgKyBsYWJlbDo6YWZ0ZXJ7Ym9yZGVyLXRvcC13aWR0aDoycHh9XFxuLm10LWlucHV0LW91dGxpbmUgKyBsYWJlbDpiZWZvcmV7bWFyZ2luLXJpZ2h0OjAuMjVyZW07Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czowLjVyZW19XFxuLm10LWlucHV0LW91dGxpbmUgKyBsYWJlbDphZnRlcnttYXJnaW4tbGVmdDowLjI1cmVtO2ZsZXgtZ3JvdzoxO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjAuNXJlbX1cXG4vKiBNYXRlcmlhbCBUYWlsd2luZCBSYWRpbyBCdXR0b24gKi9cXG4ubXQtcmFkaW86Y2hlY2tlZCArIGxhYmVsIHNwYW4ge1xcbiAgICAgICAgYm94LXNoYWRvdzogMHB4IDBweCAwcHggMnB4IHdoaXRlIGluc2V0O1xcbiAgICAgICAgLS10dy1iZy1vcGFjaXR5OjEgIWltcG9ydGFudDtcXG4gICAgfVxcbi5tdC1yYWRpbzpjaGVja2VkICsgbGFiZWx7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDk3LCA5NywgOTcsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5tdC1yYWRpbyArIGxhYmVsIHNwYW46OmJlZm9yZSB7XFxuICAgICAgICBjb250ZW50OiAnJztcXG4gICAgICAgIHRvcDogLTEuNXB4O1xcbiAgICAgICAgbGVmdDogLTEuNXB4O1xcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZTNkKDEsIDEsIDEpO1xcbiAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XFxuICAgICAgICB6LWluZGV4OjEwO1xcbiAgICAgICAgbWFyZ2luOjBweDtcXG4gICAgICAgIGRpc3BsYXk6YmxvY2s7XFxuICAgICAgICBoZWlnaHQ6MXJlbTtcXG4gICAgICAgIHdpZHRoOjFyZW07XFxuICAgICAgICBib3JkZXItcmFkaXVzOjk5OTlweDtcXG4gICAgICAgIG9wYWNpdHk6MDtcXG4gICAgfVxcbi5tdC1yYWRpbzpjaGVja2VkICsgbGFiZWwgc3Bhbjo6YmVmb3JlIHtcXG4gICAgICAgIC13ZWJraXQtYW5pbWF0aW9uOiByYWRpby1yaXBwbGUgMC4zcyBsaW5lYXI7XFxuICAgICAgICAgICAgICAgIGFuaW1hdGlvbjogcmFkaW8tcmlwcGxlIDAuM3MgbGluZWFyO1xcbiAgICB9XFxuLyogTWF0ZXJpYWwgVGFpbHdpbmQgQ2hlY2tib3ggKi9cXG4ubXQtY2hlY2tib3g6Y2hlY2tlZCArIGxhYmVsIHNwYW57LS10dy1iZy1vcGFjaXR5OjEgIWltcG9ydGFudH1cXG4ubXQtY2hlY2tib3g6Y2hlY2tlZCArIGxhYmVsey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSg5NywgOTcsIDk3LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4ubXQtY2hlY2tib3ggKyBsYWJlbCBzcGFuOjpiZWZvcmUge1xcbiAgICAgICAgY29udGVudDogJyc7XFxuICAgICAgICB0b3A6IC0xcHg7XFxuICAgICAgICBsZWZ0OiAtMS41cHg7XFxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMiwgMiwgMSk7XFxuICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcXG4gICAgICAgIHotaW5kZXg6MTA7XFxuICAgICAgICBtYXJnaW46MHB4O1xcbiAgICAgICAgZGlzcGxheTpibG9jaztcXG4gICAgICAgIGhlaWdodDoxLjI1cmVtO1xcbiAgICAgICAgd2lkdGg6MS4yNXJlbTtcXG4gICAgICAgIGJvcmRlci1yYWRpdXM6OTk5OXB4O1xcbiAgICAgICAgb3BhY2l0eTowO1xcbiAgICB9XFxuLm10LWNoZWNrYm94ICsgbGFiZWwgc3Bhbjo6YWZ0ZXIge1xcbiAgICAgICAgY29udGVudDogJyc7XFxuICAgICAgICB0b3A6IDFweDtcXG4gICAgICAgIGxlZnQ6IDZweDtcXG4gICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xcbiAgICAgICAgaGVpZ2h0OjAuODc1cmVtO1xcbiAgICAgICAgd2lkdGg6MC4zNzVyZW07XFxuICAgICAgICAtLXR3LXRyYW5zbGF0ZS14OjA7XFxuICAgICAgICAtLXR3LXRyYW5zbGF0ZS15OjA7XFxuICAgICAgICAtLXR3LXJvdGF0ZTowO1xcbiAgICAgICAgLS10dy1za2V3LXg6MDtcXG4gICAgICAgIC0tdHctc2tldy15OjA7XFxuICAgICAgICAtLXR3LXNjYWxlLXg6MTtcXG4gICAgICAgIC0tdHctc2NhbGUteToxO1xcbiAgICAgICAgdHJhbnNmb3JtOnRyYW5zbGF0ZVgodmFyKC0tdHctdHJhbnNsYXRlLXgpKSB0cmFuc2xhdGVZKHZhcigtLXR3LXRyYW5zbGF0ZS15KSkgcm90YXRlKHZhcigtLXR3LXJvdGF0ZSkpIHNrZXdYKHZhcigtLXR3LXNrZXcteCkpIHNrZXdZKHZhcigtLXR3LXNrZXcteSkpIHNjYWxlWCh2YXIoLS10dy1zY2FsZS14KSkgc2NhbGVZKHZhcigtLXR3LXNjYWxlLXkpKTtcXG4gICAgICAgIC0tdHctcm90YXRlOjQ1ZGVnO1xcbiAgICAgICAgYm9yZGVyLWJvdHRvbS13aWR0aDoycHg7XFxuICAgICAgICBib3JkZXItcmlnaHQtd2lkdGg6MnB4O1xcbiAgICAgICAgYm9yZGVyLWNvbG9yOnRyYW5zcGFyZW50O1xcbiAgICAgICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTphbGw7XFxuICAgICAgICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpO1xcbiAgICAgICAgdHJhbnNpdGlvbi1kdXJhdGlvbjoxNTBtcztcXG4gICAgICAgIHRyYW5zaXRpb24tZHVyYXRpb246MjAwbXM7XFxuICAgIH1cXG4ubXQtY2hlY2tib3g6Y2hlY2tlZCArIGxhYmVsIHNwYW46OmJlZm9yZSB7XFxuICAgICAgICAtd2Via2l0LWFuaW1hdGlvbjogcmFkaW8tcmlwcGxlIDAuM3MgbGluZWFyO1xcbiAgICAgICAgICAgICAgICBhbmltYXRpb246IHJhZGlvLXJpcHBsZSAwLjNzIGxpbmVhcjtcXG4gICAgfVxcbi5tdC1jaGVja2JveDpjaGVja2VkICsgbGFiZWwgc3Bhbjo6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDI1NSwgMjU1LCAyNTUsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLyogTWF0ZXJpYWwgVGFpbHdpbmQgSW5wdXQgQ29sb3JzICovXFxuLm10LWlucHV0LWJsdWUtZ3JheS01MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoOTYsIDEyNSwgMTM5LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1ncmF5LTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgxNTgsIDE1OCwgMTU4LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vcmFuZ2UtNTAwOmZvY3VzICsgbGFiZWw6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDI1NSwgMTUyLCAwLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1kZWVwLW9yYW5nZS01MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjU1LCA4NywgMzQsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLm10LWlucHV0LWFtYmVyLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNTUsIDE5MywgNywgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQteWVsbG93LTYwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNTMsIDIxNiwgNTMsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLm10LWlucHV0LWxpbWUtNTAwOmZvY3VzICsgbGFiZWw6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDIwNSwgMjIwLCA1NywgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtbGlnaHQtZ3JlZW4tNTAwOmZvY3VzICsgbGFiZWw6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDEzOSwgMTk1LCA3NCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtZ3JlZW4tNTAwOmZvY3VzICsgbGFiZWw6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDc2LCAxNzUsIDgwLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC10ZWFsLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgwLCAxNTAsIDEzNiwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtY3lhbi01MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMCwgMTg4LCAyMTIsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLm10LWlucHV0LWxpZ2h0LWJsdWUtNTAwOmZvY3VzICsgbGFiZWw6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDMsIDE2OSwgMjQ0LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1ibHVlLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgzMywgMTUwLCAyNDMsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLm10LWlucHV0LWluZGlnby01MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoNjMsIDgxLCAxODEsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLm10LWlucHV0LXB1cnBsZS01MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMTU2LCAzOSwgMTc2LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1kZWVwLXB1cnBsZS01MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMTAzLCA1OCwgMTgzLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1waW5rLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyMzMsIDMwLCA5OSwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtcmVkLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNDQsIDY3LCA1NCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4vKiBNYXRlcmlhbCBUYWlsd2luZCBJbnB1dCBPdXRsaW5lIENvbG9ycyAqL1xcbi5tdC1pbnB1dC1vdXRsaW5lLWJsdWUtZ3JheS01MDA6Zm9jdXMsIC5tdC1pbnB1dC1vdXRsaW5lLWJsdWUtZ3JheS01MDA6Zm9jdXMgKyBsYWJlbCwgLm10LWlucHV0LW91dGxpbmUtYmx1ZS1ncmF5LTUwMDpmb2N1cyArIGxhYmVsOmJlZm9yZSwgLm10LWlucHV0LW91dGxpbmUtYmx1ZS1ncmF5LTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSg5NiwgMTI1LCAxMzksIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDk2LCAxMjUsIDEzOSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLm10LWlucHV0LW91dGxpbmUtZ3JheS01MDA6Zm9jdXMsIC5tdC1pbnB1dC1vdXRsaW5lLWdyYXktNTAwOmZvY3VzICsgbGFiZWwsIC5tdC1pbnB1dC1vdXRsaW5lLWdyYXktNTAwOmZvY3VzICsgbGFiZWw6YmVmb3JlLCAubXQtaW5wdXQtb3V0bGluZS1ncmF5LTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgxNTgsIDE1OCwgMTU4LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgxNTgsIDE1OCwgMTU4LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtb3V0bGluZS1vcmFuZ2UtNTAwOmZvY3VzLCAubXQtaW5wdXQtb3V0bGluZS1vcmFuZ2UtNTAwOmZvY3VzICsgbGFiZWwsIC5tdC1pbnB1dC1vdXRsaW5lLW9yYW5nZS01MDA6Zm9jdXMgKyBsYWJlbDpiZWZvcmUsIC5tdC1pbnB1dC1vdXRsaW5lLW9yYW5nZS01MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjU1LCAxNTIsIDAsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDI1NSwgMTUyLCAwLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtb3V0bGluZS1kZWVwLW9yYW5nZS01MDA6Zm9jdXMsIC5tdC1pbnB1dC1vdXRsaW5lLWRlZXAtb3JhbmdlLTUwMDpmb2N1cyArIGxhYmVsLCAubXQtaW5wdXQtb3V0bGluZS1kZWVwLW9yYW5nZS01MDA6Zm9jdXMgKyBsYWJlbDpiZWZvcmUsIC5tdC1pbnB1dC1vdXRsaW5lLWRlZXAtb3JhbmdlLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNTUsIDg3LCAzNCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjU1LCA4NywgMzQsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lLWJyb3duLTUwMDpmb2N1cywgLm10LWlucHV0LW91dGxpbmUtYnJvd24tNTAwOmZvY3VzICsgbGFiZWwsIC5tdC1pbnB1dC1vdXRsaW5lLWJyb3duLTUwMDpmb2N1cyArIGxhYmVsOmJlZm9yZSwgLm10LWlucHV0LW91dGxpbmUtYnJvd24tNTAwOmZvY3VzICsgbGFiZWw6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDEyMSwgODUsIDcyLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgxMjEsIDg1LCA3MiwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLm10LWlucHV0LW91dGxpbmUtYW1iZXItNTAwOmZvY3VzLCAubXQtaW5wdXQtb3V0bGluZS1hbWJlci01MDA6Zm9jdXMgKyBsYWJlbCwgLm10LWlucHV0LW91dGxpbmUtYW1iZXItNTAwOmZvY3VzICsgbGFiZWw6YmVmb3JlLCAubXQtaW5wdXQtb3V0bGluZS1hbWJlci01MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjU1LCAxOTMsIDcsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDI1NSwgMTkzLCA3LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtb3V0bGluZS15ZWxsb3ctNjAwOmZvY3VzLCAubXQtaW5wdXQtb3V0bGluZS15ZWxsb3ctNjAwOmZvY3VzICsgbGFiZWwsIC5tdC1pbnB1dC1vdXRsaW5lLXllbGxvdy02MDA6Zm9jdXMgKyBsYWJlbDpiZWZvcmUsIC5tdC1pbnB1dC1vdXRsaW5lLXllbGxvdy02MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjUzLCAyMTYsIDUzLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyNTMsIDIxNiwgNTMsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lLWxpbWUtNTAwOmZvY3VzLCAubXQtaW5wdXQtb3V0bGluZS1saW1lLTUwMDpmb2N1cyArIGxhYmVsLCAubXQtaW5wdXQtb3V0bGluZS1saW1lLTUwMDpmb2N1cyArIGxhYmVsOmJlZm9yZSwgLm10LWlucHV0LW91dGxpbmUtbGltZS01MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjA1LCAyMjAsIDU3LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyMDUsIDIyMCwgNTcsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lLWxpZ2h0LWdyZWVuLTUwMDpmb2N1cywgLm10LWlucHV0LW91dGxpbmUtbGlnaHQtZ3JlZW4tNTAwOmZvY3VzICsgbGFiZWwsIC5tdC1pbnB1dC1vdXRsaW5lLWxpZ2h0LWdyZWVuLTUwMDpmb2N1cyArIGxhYmVsOmJlZm9yZSwgLm10LWlucHV0LW91dGxpbmUtbGlnaHQtZ3JlZW4tNTAwOmZvY3VzICsgbGFiZWw6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDEzOSwgMTk1LCA3NCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMTM5LCAxOTUsIDc0LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtb3V0bGluZS1ncmVlbi01MDA6Zm9jdXMsIC5tdC1pbnB1dC1vdXRsaW5lLWdyZWVuLTUwMDpmb2N1cyArIGxhYmVsLCAubXQtaW5wdXQtb3V0bGluZS1ncmVlbi01MDA6Zm9jdXMgKyBsYWJlbDpiZWZvcmUsIC5tdC1pbnB1dC1vdXRsaW5lLWdyZWVuLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSg3NiwgMTc1LCA4MCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoNzYsIDE3NSwgODAsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lLXRlYWwtNTAwOmZvY3VzLCAubXQtaW5wdXQtb3V0bGluZS10ZWFsLTUwMDpmb2N1cyArIGxhYmVsLCAubXQtaW5wdXQtb3V0bGluZS10ZWFsLTUwMDpmb2N1cyArIGxhYmVsOmJlZm9yZSwgLm10LWlucHV0LW91dGxpbmUtdGVhbC01MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMCwgMTUwLCAxMzYsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDAsIDE1MCwgMTM2LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtb3V0bGluZS1jeWFuLTUwMDpmb2N1cywgLm10LWlucHV0LW91dGxpbmUtY3lhbi01MDA6Zm9jdXMgKyBsYWJlbCwgLm10LWlucHV0LW91dGxpbmUtY3lhbi01MDA6Zm9jdXMgKyBsYWJlbDpiZWZvcmUsIC5tdC1pbnB1dC1vdXRsaW5lLWN5YW4tNTAwOmZvY3VzICsgbGFiZWw6YWZ0ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDAsIDE4OCwgMjEyLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgwLCAxODgsIDIxMiwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLm10LWlucHV0LW91dGxpbmUtbGlnaHQtYmx1ZS01MDA6Zm9jdXMsIC5tdC1pbnB1dC1vdXRsaW5lLWxpZ2h0LWJsdWUtNTAwOmZvY3VzICsgbGFiZWwsIC5tdC1pbnB1dC1vdXRsaW5lLWxpZ2h0LWJsdWUtNTAwOmZvY3VzICsgbGFiZWw6YmVmb3JlLCAubXQtaW5wdXQtb3V0bGluZS1saWdodC1ibHVlLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgzLCAxNjksIDI0NCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMywgMTY5LCAyNDQsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lLWJsdWUtNTAwOmZvY3VzLCAubXQtaW5wdXQtb3V0bGluZS1ibHVlLTUwMDpmb2N1cyArIGxhYmVsLCAubXQtaW5wdXQtb3V0bGluZS1ibHVlLTUwMDpmb2N1cyArIGxhYmVsOmJlZm9yZSwgLm10LWlucHV0LW91dGxpbmUtYmx1ZS01MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMzMsIDE1MCwgMjQzLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgzMywgMTUwLCAyNDMsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lLWluZGlnby01MDA6Zm9jdXMsIC5tdC1pbnB1dC1vdXRsaW5lLWluZGlnby01MDA6Zm9jdXMgKyBsYWJlbCwgLm10LWlucHV0LW91dGxpbmUtaW5kaWdvLTUwMDpmb2N1cyArIGxhYmVsOmJlZm9yZSwgLm10LWlucHV0LW91dGxpbmUtaW5kaWdvLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSg2MywgODEsIDE4MSwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoNjMsIDgxLCAxODEsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lLXB1cnBsZS01MDA6Zm9jdXMsIC5tdC1pbnB1dC1vdXRsaW5lLXB1cnBsZS01MDA6Zm9jdXMgKyBsYWJlbCwgLm10LWlucHV0LW91dGxpbmUtcHVycGxlLTUwMDpmb2N1cyArIGxhYmVsOmJlZm9yZSwgLm10LWlucHV0LW91dGxpbmUtcHVycGxlLTUwMDpmb2N1cyArIGxhYmVsOmFmdGVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgxNTYsIDM5LCAxNzYsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDE1NiwgMzksIDE3NiwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLm10LWlucHV0LW91dGxpbmUtZGVlcC1wdXJwbGUtNTAwOmZvY3VzLCAubXQtaW5wdXQtb3V0bGluZS1kZWVwLXB1cnBsZS01MDA6Zm9jdXMgKyBsYWJlbCwgLm10LWlucHV0LW91dGxpbmUtZGVlcC1wdXJwbGUtNTAwOmZvY3VzICsgbGFiZWw6YmVmb3JlLCAubXQtaW5wdXQtb3V0bGluZS1kZWVwLXB1cnBsZS01MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMTAzLCA1OCwgMTgzLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgxMDMsIDU4LCAxODMsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5tdC1pbnB1dC1vdXRsaW5lLXBpbmstNTAwOmZvY3VzLCAubXQtaW5wdXQtb3V0bGluZS1waW5rLTUwMDpmb2N1cyArIGxhYmVsLCAubXQtaW5wdXQtb3V0bGluZS1waW5rLTUwMDpmb2N1cyArIGxhYmVsOmJlZm9yZSwgLm10LWlucHV0LW91dGxpbmUtcGluay01MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjMzLCAzMCwgOTksIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDIzMywgMzAsIDk5LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtb3V0bGluZS1yZWQtNTAwOmZvY3VzLCAubXQtaW5wdXQtb3V0bGluZS1yZWQtNTAwOmZvY3VzICsgbGFiZWwsIC5tdC1pbnB1dC1vdXRsaW5lLXJlZC01MDA6Zm9jdXMgKyBsYWJlbDpiZWZvcmUsIC5tdC1pbnB1dC1vdXRsaW5lLXJlZC01MDA6Zm9jdXMgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjQ0LCA2NywgNTQsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDI0NCwgNjcsIDU0LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtb3V0bGluZS1lcnJvcjpub3QoOi1tb3otcGxhY2Vob2xkZXItc2hvd24pICsgbGFiZWwsIC5tdC1pbnB1dC1vdXRsaW5lLWVycm9yOm5vdCg6LW1vei1wbGFjZWhvbGRlci1zaG93bikgKyBsYWJlbDpiZWZvcmUsIC5tdC1pbnB1dC1vdXRsaW5lLWVycm9yOm5vdCg6LW1vei1wbGFjZWhvbGRlci1zaG93bikgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjQ0LCA2NywgNTQsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDI0NCwgNjcsIDU0LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtb3V0bGluZS1lcnJvcjpub3QoOi1tcy1pbnB1dC1wbGFjZWhvbGRlcikgKyBsYWJlbCwgLm10LWlucHV0LW91dGxpbmUtZXJyb3I6bm90KDotbXMtaW5wdXQtcGxhY2Vob2xkZXIpICsgbGFiZWw6YmVmb3JlLCAubXQtaW5wdXQtb3V0bGluZS1lcnJvcjpub3QoOi1tcy1pbnB1dC1wbGFjZWhvbGRlcikgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjQ0LCA2NywgNTQsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDI0NCwgNjcsIDU0LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtb3V0bGluZS1lcnJvcjpub3QoOnBsYWNlaG9sZGVyLXNob3duKSArIGxhYmVsLCAubXQtaW5wdXQtb3V0bGluZS1lcnJvcjpub3QoOnBsYWNlaG9sZGVyLXNob3duKSArIGxhYmVsOmJlZm9yZSwgLm10LWlucHV0LW91dGxpbmUtZXJyb3I6bm90KDpwbGFjZWhvbGRlci1zaG93bikgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjQ0LCA2NywgNTQsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDI0NCwgNjcsIDU0LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtb3V0bGluZS1zdWNjZXNzOm5vdCg6LW1vei1wbGFjZWhvbGRlci1zaG93bikgKyBsYWJlbCwgLm10LWlucHV0LW91dGxpbmUtc3VjY2Vzczpub3QoOi1tb3otcGxhY2Vob2xkZXItc2hvd24pICsgbGFiZWw6YmVmb3JlLCAubXQtaW5wdXQtb3V0bGluZS1zdWNjZXNzOm5vdCg6LW1vei1wbGFjZWhvbGRlci1zaG93bikgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoNzYsIDE3NSwgODAsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDc2LCAxNzUsIDgwLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtb3V0bGluZS1zdWNjZXNzOm5vdCg6LW1zLWlucHV0LXBsYWNlaG9sZGVyKSArIGxhYmVsLCAubXQtaW5wdXQtb3V0bGluZS1zdWNjZXNzOm5vdCg6LW1zLWlucHV0LXBsYWNlaG9sZGVyKSArIGxhYmVsOmJlZm9yZSwgLm10LWlucHV0LW91dGxpbmUtc3VjY2Vzczpub3QoOi1tcy1pbnB1dC1wbGFjZWhvbGRlcikgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoNzYsIDE3NSwgODAsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDc2LCAxNzUsIDgwLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4ubXQtaW5wdXQtb3V0bGluZS1zdWNjZXNzOm5vdCg6cGxhY2Vob2xkZXItc2hvd24pICsgbGFiZWwsIC5tdC1pbnB1dC1vdXRsaW5lLXN1Y2Nlc3M6bm90KDpwbGFjZWhvbGRlci1zaG93bikgKyBsYWJlbDpiZWZvcmUsIC5tdC1pbnB1dC1vdXRsaW5lLXN1Y2Nlc3M6bm90KDpwbGFjZWhvbGRlci1zaG93bikgKyBsYWJlbDphZnRlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoNzYsIDE3NSwgODAsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDc2LCAxNzUsIDgwLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4vKiBNYXRlcmlhbCBUYWlsd2luZCBSYWRpbyBCdXR0b24gYW5kIENoZWNrYm94IENvbG9ycyAqL1xcbi5tdC1yYWRpby1ibHVlLWdyYXktNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtcmFkaW8tYmx1ZS1ncmF5LTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZSwgLm10LWNoZWNrYm94LWJsdWUtZ3JheS01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1jaGVja2JveC1ibHVlLWdyYXktNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3Jley0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSg5NiwgMTI1LCAxMzksIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDk2LCAxMjUsIDEzOSwgdmFyKC0tdHctYmctb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eTowLjJ9XFxuLm10LXJhZGlvLWdyYXktNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtcmFkaW8tZ3JheS01MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmUsIC5tdC1jaGVja2JveC1ncmF5LTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LWNoZWNrYm94LWdyYXktNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3Jley0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgxNTgsIDE1OCwgMTU4LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxNTgsIDE1OCwgMTU4LCB2YXIoLS10dy1iZy1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjAuMn1cXG4ubXQtcmFkaW8tb3JhbmdlLTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LXJhZGlvLW9yYW5nZS01MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmUsIC5tdC1jaGVja2JveC1vcmFuZ2UtNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtY2hlY2tib3gtb3JhbmdlLTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZXstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjU1LCAxNTIsIDAsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwgMTUyLCAwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjAuMn1cXG4ubXQtcmFkaW8tZGVlcC1vcmFuZ2UtNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtcmFkaW8tZGVlcC1vcmFuZ2UtNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3JlLCAubXQtY2hlY2tib3gtZGVlcC1vcmFuZ2UtNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtY2hlY2tib3gtZGVlcC1vcmFuZ2UtNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3Jley0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNTUsIDg3LCAzNCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCA4NywgMzQsIHZhcigtLXR3LWJnLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MC4yfVxcbi5tdC1yYWRpby1icm93bi01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1yYWRpby1icm93bi01MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmUsIC5tdC1jaGVja2JveC1icm93bi01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1jaGVja2JveC1icm93bi01MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmV7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDEyMSwgODUsIDcyLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxMjEsIDg1LCA3MiwgdmFyKC0tdHctYmctb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eTowLjJ9XFxuLm10LXJhZGlvLWFtYmVyLTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LXJhZGlvLWFtYmVyLTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZSwgLm10LWNoZWNrYm94LWFtYmVyLTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LWNoZWNrYm94LWFtYmVyLTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZXstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjU1LCAxOTMsIDcsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwgMTkzLCA3LCB2YXIoLS10dy1iZy1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjAuMn1cXG4ubXQtcmFkaW8teWVsbG93LTYwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LXJhZGlvLXllbGxvdy02MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmUsIC5tdC1jaGVja2JveC15ZWxsb3ctNjAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtY2hlY2tib3gteWVsbG93LTYwMCArIGxhYmVsIHNwYW46OmJlZm9yZXstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjUzLCAyMTYsIDUzLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTMsIDIxNiwgNTMsIHZhcigtLXR3LWJnLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MC4yfVxcbi5tdC1yYWRpby1saW1lLTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LXJhZGlvLWxpbWUtNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3JlLCAubXQtY2hlY2tib3gtbGltZS01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1jaGVja2JveC1saW1lLTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZXstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjA1LCAyMjAsIDU3LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMDUsIDIyMCwgNTcsIHZhcigtLXR3LWJnLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MC4yfVxcbi5tdC1yYWRpby1saWdodC1ncmVlbi01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1yYWRpby1saWdodC1ncmVlbi01MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmUsIC5tdC1jaGVja2JveC1saWdodC1ncmVlbi01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1jaGVja2JveC1saWdodC1ncmVlbi01MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmV7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDEzOSwgMTk1LCA3NCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTM5LCAxOTUsIDc0LCB2YXIoLS10dy1iZy1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjAuMn1cXG4ubXQtcmFkaW8tZ3JlZW4tNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtcmFkaW8tZ3JlZW4tNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3JlLCAubXQtY2hlY2tib3gtZ3JlZW4tNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtY2hlY2tib3gtZ3JlZW4tNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3Jley0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSg3NiwgMTc1LCA4MCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoNzYsIDE3NSwgODAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MC4yfVxcbi5tdC1yYWRpby10ZWFsLTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LXJhZGlvLXRlYWwtNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3JlLCAubXQtY2hlY2tib3gtdGVhbC01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1jaGVja2JveC10ZWFsLTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZXstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMCwgMTUwLCAxMzYsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsIDE1MCwgMTM2LCB2YXIoLS10dy1iZy1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjAuMn1cXG4ubXQtcmFkaW8tY3lhbi01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1yYWRpby1jeWFuLTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZSwgLm10LWNoZWNrYm94LWN5YW4tNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtY2hlY2tib3gtY3lhbi01MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmV7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDAsIDE4OCwgMjEyLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLCAxODgsIDIxMiwgdmFyKC0tdHctYmctb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eTowLjJ9XFxuLm10LXJhZGlvLWxpZ2h0LWJsdWUtNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtcmFkaW8tbGlnaHQtYmx1ZS01MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmUsIC5tdC1jaGVja2JveC1saWdodC1ibHVlLTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LWNoZWNrYm94LWxpZ2h0LWJsdWUtNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3Jley0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgzLCAxNjksIDI0NCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMywgMTY5LCAyNDQsIHZhcigtLXR3LWJnLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MC4yfVxcbi5tdC1yYWRpby1ibHVlLTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LXJhZGlvLWJsdWUtNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3JlLCAubXQtY2hlY2tib3gtYmx1ZS01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1jaGVja2JveC1ibHVlLTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZXstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMzMsIDE1MCwgMjQzLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgzMywgMTUwLCAyNDMsIHZhcigtLXR3LWJnLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MC4yfVxcbi5tdC1yYWRpby1pbmRpZ28tNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtcmFkaW8taW5kaWdvLTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZSwgLm10LWNoZWNrYm94LWluZGlnby01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1jaGVja2JveC1pbmRpZ28tNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3Jley0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSg2MywgODEsIDE4MSwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoNjMsIDgxLCAxODEsIHZhcigtLXR3LWJnLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MC4yfVxcbi5tdC1yYWRpby1wdXJwbGUtNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtcmFkaW8tcHVycGxlLTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZSwgLm10LWNoZWNrYm94LXB1cnBsZS01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1jaGVja2JveC1wdXJwbGUtNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3Jley0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgxNTYsIDM5LCAxNzYsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDE1NiwgMzksIDE3NiwgdmFyKC0tdHctYmctb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eTowLjJ9XFxuLm10LXJhZGlvLWRlZXAtcHVycGxlLTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LXJhZGlvLWRlZXAtcHVycGxlLTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZSwgLm10LWNoZWNrYm94LWRlZXAtcHVycGxlLTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LWNoZWNrYm94LWRlZXAtcHVycGxlLTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZXstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMTAzLCA1OCwgMTgzLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpOy0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxMDMsIDU4LCAxODMsIHZhcigtLXR3LWJnLW9wYWNpdHkpKTstLXR3LWJnLW9wYWNpdHk6MC4yfVxcbi5tdC1yYWRpby1waW5rLTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LXJhZGlvLXBpbmstNTAwICsgbGFiZWwgc3Bhbjo6YmVmb3JlLCAubXQtY2hlY2tib3gtcGluay01MDA6Y2hlY2tlZCArIGxhYmVsIHNwYW4sIC5tdC1jaGVja2JveC1waW5rLTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZXstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjMzLCAzMCwgOTksIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIzMywgMzAsIDk5LCB2YXIoLS10dy1iZy1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjAuMn1cXG4ubXQtcmFkaW8tcmVkLTUwMDpjaGVja2VkICsgbGFiZWwgc3BhbiwgLm10LXJhZGlvLXJlZC01MDAgKyBsYWJlbCBzcGFuOjpiZWZvcmUsIC5tdC1jaGVja2JveC1yZWQtNTAwOmNoZWNrZWQgKyBsYWJlbCBzcGFuLCAubXQtY2hlY2tib3gtcmVkLTUwMCArIGxhYmVsIHNwYW46OmJlZm9yZXstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjQ0LCA2NywgNTQsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI0NCwgNjcsIDU0LCB2YXIoLS10dy1iZy1vcGFjaXR5KSk7LS10dy1iZy1vcGFjaXR5OjAuMn1cXG4vKiBUaXBweSBCb3h4ICovXFxuLnRpcHB5LWJveDpmb2N1cyB7XFxuICAgIG91dGxpbmU6IG5vbmU7XFxufVxcbi8qIFRpcHB5IEFuaW1hdGlvbiAqL1xcbi50aXBweS1ib3hbZGF0YS1hbmltYXRpb249J3NjYWxlJ10ge1xcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiB0b3AgbGVmdCAhaW1wb3J0YW50O1xcbn1cXG4vKiBUaXBweSBBcnJvdyAqL1xcbi5hcnJvdy1saWdodCAudGlwcHktc3ZnLWFycm93IHtcXG4gICAgZmlsbDogI2ZmZjtcXG59XFxuLmFycm93LWRhcmsgLnRpcHB5LXN2Zy1hcnJvdyB7XFxuICAgIGZpbGw6IHJnYmEoMCwgMCwgMCwgMC44KTtcXG59XFxuLyogTWF0ZXJpYWwgVGFpbHdpbmQgUmFkaW8gQnV0dG9uIFJpcHBsZSBFZmZlY3QgQW5pbWF0aW9uICovXFxuQC13ZWJraXQta2V5ZnJhbWVzIHJhZGlvLXJpcHBsZSB7XFxuICAgIGZyb20ge1xcbiAgICAgICAgb3BhY2l0eTogMDtcXG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUzZCgxLCAxLCAxKTtcXG4gICAgfVxcbiAgICA1MCUge1xcbiAgICAgICAgb3BhY2l0eTogMTtcXG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUzZCgyLCAyLCAxKTtcXG4gICAgfVxcbiAgICB0byB7XFxuICAgICAgICBvcGFjaXR5OiAwO1xcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZTNkKDMsIDMsIDEpO1xcbiAgICB9XFxufVxcbkBrZXlmcmFtZXMgcmFkaW8tcmlwcGxlIHtcXG4gICAgZnJvbSB7XFxuICAgICAgICBvcGFjaXR5OiAwO1xcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZTNkKDEsIDEsIDEpO1xcbiAgICB9XFxuICAgIDUwJSB7XFxuICAgICAgICBvcGFjaXR5OiAxO1xcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZTNkKDIsIDIsIDEpO1xcbiAgICB9XFxuICAgIHRvIHtcXG4gICAgICAgIG9wYWNpdHk6IDA7XFxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMywgMywgMSk7XFxuICAgIH1cXG59XFxuLmxhc3RcXFxcOm1yLTA6bGFzdC1jaGlsZHttYXJnaW4tcmlnaHQ6MHB4fVxcbi5ob3ZlclxcXFw6Ym9yZGVyLWJsdWUtZ3JheS03MDA6aG92ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDY5LCA5MCwgMTAwLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6Ym9yZGVyLWdyYXktNzAwOmhvdmVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSg5NywgOTcsIDk3LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6Ym9yZGVyLWJyb3duLTcwMDpob3ZlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoOTMsIDY0LCA1NSwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJvcmRlci1kZWVwLW9yYW5nZS03MDA6aG92ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDIzMCwgNzQsIDI1LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6Ym9yZGVyLW9yYW5nZS03MDA6aG92ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDI0NSwgMTI0LCAwLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6Ym9yZGVyLWFtYmVyLTcwMDpob3ZlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjU1LCAxNjAsIDAsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpib3JkZXIteWVsbG93LTcwMDpob3ZlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjUxLCAxOTIsIDQ1LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6Ym9yZGVyLWxpbWUtNzAwOmhvdmVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgxNzUsIDE4MCwgNDMsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpib3JkZXItbGlnaHQtZ3JlZW4tNzAwOmhvdmVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgxMDQsIDE1OSwgNTYsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpib3JkZXItZ3JlZW4tNzAwOmhvdmVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSg1NiwgMTQyLCA2MCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJvcmRlci10ZWFsLTcwMDpob3ZlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMCwgMTIxLCAxMDcsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpib3JkZXItY3lhbi03MDA6aG92ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDAsIDE1MSwgMTY3LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6Ym9yZGVyLWxpZ2h0LWJsdWUtNzAwOmhvdmVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyLCAxMzYsIDIwOSwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJvcmRlci1ibHVlLTcwMDpob3ZlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjUsIDExOCwgMjEwLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6Ym9yZGVyLWluZGlnby03MDA6aG92ZXJ7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDQ4LCA2MywgMTU5LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6Ym9yZGVyLWRlZXAtcHVycGxlLTcwMDpob3ZlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoODEsIDQ1LCAxNjgsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpib3JkZXItcHVycGxlLTcwMDpob3ZlcnstLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMTIzLCAzMSwgMTYyLCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6Ym9yZGVyLXBpbmstNzAwOmhvdmVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgxOTQsIDI0LCA5MSwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJvcmRlci1yZWQtNzAwOmhvdmVyey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyMTEsIDQ3LCA0NywgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWJsdWUtZ3JheS03MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDY5LCA5MCwgMTAwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1ncmF5LTcwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoOTcsIDk3LCA5NywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctYnJvd24tNzAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSg5MywgNjQsIDU1LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1kZWVwLW9yYW5nZS03MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIzMCwgNzQsIDI1LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1vcmFuZ2UtNzAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNDUsIDEyNCwgMCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctYW1iZXItNzAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDE2MCwgMCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmcteWVsbG93LTcwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjUxLCAxOTIsIDQ1LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1saW1lLTcwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTc1LCAxODAsIDQzLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1saWdodC1ncmVlbi03MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEwNCwgMTU5LCA1NiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctZ3JlZW4tNzAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSg1NiwgMTQyLCA2MCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctdGVhbC03MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsIDEyMSwgMTA3LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1jeWFuLTcwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwgMTUxLCAxNjcsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWxpZ2h0LWJsdWUtNzAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyLCAxMzYsIDIwOSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctYmx1ZS03MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1LCAxMTgsIDIxMCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctaW5kaWdvLTcwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoNDgsIDYzLCAxNTksIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWRlZXAtcHVycGxlLTcwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoODEsIDQ1LCAxNjgsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLXB1cnBsZS03MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEyMywgMzEsIDE2MiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctcGluay03MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDE5NCwgMjQsIDkxLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1yZWQtNzAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMTEsIDQ3LCA0NywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctYmx1ZS1ncmF5LTUwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMzYsIDIzOSwgMjQxLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1ncmF5LTUwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTAsIDI1MCwgMjUwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1icm93bi01MDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjM5LCAyMzUsIDIzMywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctZGVlcC1vcmFuZ2UtNTA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1MSwgMjMzLCAyMzEsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLW9yYW5nZS01MDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAyNDMsIDIyNCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctYW1iZXItNTA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwgMjQ4LCAyMjUsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLXllbGxvdy01MDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAyNTMsIDIzMSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctbGltZS01MDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjQ5LCAyNTEsIDIzMSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctbGlnaHQtZ3JlZW4tNTA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI0MSwgMjQ4LCAyMzMsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWdyZWVuLTUwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMzIsIDI0NSwgMjMzLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy10ZWFsLTUwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMjQsIDI0MiwgMjQxLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1jeWFuLTUwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMjQsIDI0NywgMjUwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1saWdodC1ibHVlLTUwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMjUsIDI0NSwgMjU0LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1ibHVlLTUwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMjcsIDI0MiwgMjUzLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1pbmRpZ28tNTA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIzMiwgMjM0LCAyNDYsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWRlZXAtcHVycGxlLTUwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMzcsIDIzMSwgMjQ2LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1wdXJwbGUtNTA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI0MywgMjI5LCAyNDUsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLXBpbmstNTA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1MiwgMjI4LCAyMzYsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLXJlZC01MDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAyMzUsIDIzOCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctYmx1ZS1ncmF5LTUwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoOTYsIDEyNSwgMTM5LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1ncmF5LTUwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTU4LCAxNTgsIDE1OCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctYnJvd24tNTAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxMjEsIDg1LCA3MiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctZGVlcC1vcmFuZ2UtNTAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDg3LCAzNCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6Ymctb3JhbmdlLTUwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAxNTIsIDAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWFtYmVyLTUwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAxOTMsIDcsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLXllbGxvdy02MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1MywgMjE2LCA1MywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctbGltZS01MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIwNSwgMjIwLCA1NywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctbGlnaHQtZ3JlZW4tNTAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxMzksIDE5NSwgNzQsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWdyZWVuLTUwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoNzYsIDE3NSwgODAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLXRlYWwtNTAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLCAxNTAsIDEzNiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctY3lhbi01MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsIDE4OCwgMjEyLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1saWdodC1ibHVlLTUwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMywgMTY5LCAyNDQsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWJsdWUtNTAwOmhvdmVyey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgzMywgMTUwLCAyNDMsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLWluZGlnby01MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDYzLCA4MSwgMTgxLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1kZWVwLXB1cnBsZS01MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEwMywgNTgsIDE4MywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6YmctcHVycGxlLTUwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTU2LCAzOSwgMTc2LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy1waW5rLTUwMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjMzLCAzMCwgOTksIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOmJnLXJlZC01MDA6aG92ZXJ7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI0NCwgNjcsIDU0LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpiZy13aGl0ZTpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAyNTUsIDI1NSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6Ymctb3BhY2l0eS0yMDpob3ZlcnstLXR3LWJnLW9wYWNpdHk6MC4yfVxcbi5ob3ZlclxcXFw6dGV4dC1ncmF5LTkwMDpob3ZlcnstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMzMsIDMzLCAzMywgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDp0ZXh0LWJsdWUtZ3JheS04MDA6aG92ZXJ7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDU1LCA3MSwgNzksIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6dGV4dC1ibHVlLWdyYXktNzAwOmhvdmVyey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSg2OSwgOTAsIDEwMCwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDp0ZXh0LWdyYXktNzAwOmhvdmVyey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSg5NywgOTcsIDk3LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOnRleHQtYnJvd24tNzAwOmhvdmVyey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSg5MywgNjQsIDU1LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOnRleHQtZGVlcC1vcmFuZ2UtNzAwOmhvdmVyey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyMzAsIDc0LCAyNSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDp0ZXh0LW9yYW5nZS03MDA6aG92ZXJ7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDI0NSwgMTI0LCAwLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOnRleHQtYW1iZXItNzAwOmhvdmVyey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgyNTUsIDE2MCwgMCwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDp0ZXh0LXllbGxvdy03MDA6aG92ZXJ7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDI1MSwgMTkyLCA0NSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDp0ZXh0LWxpbWUtNzAwOmhvdmVyey0tdHctdGV4dC1vcGFjaXR5OjE7Y29sb3I6cmdiYSgxNzUsIDE4MCwgNDMsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6dGV4dC1saWdodC1ncmVlbi03MDA6aG92ZXJ7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDEwNCwgMTU5LCA1NiwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDp0ZXh0LWdyZWVuLTcwMDpob3ZlcnstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoNTYsIDE0MiwgNjAsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6dGV4dC10ZWFsLTcwMDpob3ZlcnstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMCwgMTIxLCAxMDcsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6dGV4dC1jeWFuLTcwMDpob3ZlcnstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMCwgMTUxLCAxNjcsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6dGV4dC1saWdodC1ibHVlLTcwMDpob3ZlcnstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMiwgMTM2LCAyMDksIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6dGV4dC1ibHVlLTcwMDpob3ZlcnstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjUsIDExOCwgMjEwLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOnRleHQtaW5kaWdvLTcwMDpob3ZlcnstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoNDgsIDYzLCAxNTksIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6dGV4dC1kZWVwLXB1cnBsZS03MDA6aG92ZXJ7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDgxLCA0NSwgMTY4LCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOnRleHQtcHVycGxlLTcwMDpob3ZlcnstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMTIzLCAzMSwgMTYyLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOnRleHQtcGluay03MDA6aG92ZXJ7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDE5NCwgMjQsIDkxLCB2YXIoLS10dy10ZXh0LW9wYWNpdHkpKX1cXG4uaG92ZXJcXFxcOnRleHQtcmVkLTcwMDpob3ZlcnstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjExLCA0NywgNDcsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5ob3ZlclxcXFw6dGV4dC13aGl0ZTpob3ZlcnstLXR3LXRleHQtb3BhY2l0eToxO2NvbG9yOnJnYmEoMjU1LCAyNTUsIDI1NSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbGctYmx1ZS1ncmF5OmhvdmVyey0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDY5LCA5MCwgMTAwLCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1sZy1ncmF5OmhvdmVyey0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDk3LCA5NywgOTcsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LWxnLWJyb3duOmhvdmVyey0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDkzLCA2NCwgNTUsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LWxnLWRlZXAtb3JhbmdlOmhvdmVyey0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDIzMCwgNzQsIDI1LCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1sZy1vcmFuZ2U6aG92ZXJ7LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoMjQ1LCAxMjIsIDAsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LWxnLWFtYmVyOmhvdmVyey0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDI1NSwgMTYwLCAwLCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1sZy15ZWxsb3c6aG92ZXJ7LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoMjUxLCAxOTIsIDQ1LCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1sZy1saW1lOmhvdmVyey0tdHctc2hhZG93OjAgMTJweCAyMnB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMHB4IDEwcHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMDQpLCAwIDEzcHggMjRweCAtMTFweCByZ2JhKDE3NSwgMTgwLCA0MywgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbGctbGlnaHQtZ3JlZW46aG92ZXJ7LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoMTA0LCAxNTksIDU2LCAwLjYpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1sZy1ncmVlbjpob3ZlcnstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSg1NiwgMTQyLCA2MCwgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbGctdGVhbDpob3ZlcnstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSgwLCAxMjEsIDEwNywgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbGctY3lhbjpob3ZlcnstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSgwLCAxNTEsIDE2NywgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbGctbGlnaHQtYmx1ZTpob3ZlcnstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSgyLCAxMzYsIDIwOSwgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbGctYmx1ZTpob3ZlcnstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSgyNSwgMTE4LCAyMTAsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LWxnLWluZGlnbzpob3ZlcnstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSg0OCwgNjMsIDE1OSwgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbGctZGVlcC1wdXJwbGU6aG92ZXJ7LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoODEsIDQ1LCAxNjgsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LWxnLXB1cnBsZTpob3ZlcnstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSgxMjMsIDMxLCAxNjIsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LWxnLXBpbms6aG92ZXJ7LS10dy1zaGFkb3c6MCAxMnB4IDIycHggLTVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDEwcHggMTBweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4wNCksIDAgMTNweCAyNHB4IC0xMXB4IHJnYmEoMTk0LCAyNCwgOTEsIDAuNik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LWxnLXJlZDpob3ZlcnstLXR3LXNoYWRvdzowIDEycHggMjJweCAtNXB4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMTBweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCAxM3B4IDI0cHggLTExcHggcmdiYSgyMTEsIDQ3LCA0NywgMC42KTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbWQtYmx1ZS1ncmF5OmhvdmVyey0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoOTYsIDEyNSwgMTM5LCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1tZC1ncmF5OmhvdmVyey0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoMTU4LCAxNTgsIDE1OCwgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbWQtYnJvd246aG92ZXJ7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgxMjEsIDg1LCA3MiwgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbWQtZGVlcC1vcmFuZ2U6aG92ZXJ7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgyNTUsIDg3LCAzNiwgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbWQtb3JhbmdlOmhvdmVyey0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoMjU1LCAxNTIsIDAsIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LW1kLWFtYmVyOmhvdmVyey0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoMjU1LCAxOTMsIDcsIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LW1kLXllbGxvdzpob3ZlcnstLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDI1NSwgMjM1LCA1OSwgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbWQtbGltZTpob3ZlcnstLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDIwNSwgMjIwLCA1NywgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbWQtbGlnaHQtZ3JlZW46aG92ZXJ7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgxMzksIDE5NSwgNzQsIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LW1kLWdyZWVuOmhvdmVyey0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoNzYsIDE3NSwgODAsIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LW1kLXRlYWw6aG92ZXJ7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgwLCAxNTAsIDEzNiwgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbWQtY3lhbjpob3ZlcnstLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDAsIDE4OCwgMjEyLCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1tZC1saWdodC1ibHVlOmhvdmVyey0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoMywgMTY5LCAyNDQsIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LW1kLWJsdWU6aG92ZXJ7LS10dy1zaGFkb3c6MCA2cHggMTJweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggNXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggNXB4IDAgcmdiYSgzMywgMTUwLCAyNDMsIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LW1kLWluZGlnbzpob3ZlcnstLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDYzLCA4MSwgMTgxLCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1tZC1kZWVwLXB1cnBsZTpob3ZlcnstLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDEwMywgNTgsIDE4MywgMC4yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXNoYWRvdyl9XFxuLmhvdmVyXFxcXDpzaGFkb3ctbWQtcHVycGxlOmhvdmVyey0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoMTU2LCAzOSwgMTc2LCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uaG92ZXJcXFxcOnNoYWRvdy1tZC1waW5rOmhvdmVyey0tdHctc2hhZG93OjAgNnB4IDEycHggLTNweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNHB4IDVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wNSksIDAgMnB4IDVweCAwIHJnYmEoMjMzLCAzMCwgOTksIDAuMik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVxcbi5ob3ZlclxcXFw6c2hhZG93LW1kLXJlZDpob3ZlcnstLXR3LXNoYWRvdzowIDZweCAxMnB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjEpLCAwIDRweCA1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpLCAwIDJweCA1cHggMCByZ2JhKDI0NCwgNjcsIDU0LCAwLjIpO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uZm9jdXNcXFxcOmJvcmRlci0yOmZvY3Vze2JvcmRlci13aWR0aDoycHh9XFxuLmZvY3VzXFxcXDpib3JkZXItYmx1ZS1ncmF5LTUwMDpmb2N1c3stLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoOTYsIDEyNSwgMTM5LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6Ym9yZGVyLWdyYXktNTAwOmZvY3Vzey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgxNTgsIDE1OCwgMTU4LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6Ym9yZGVyLWJyb3duLTUwMDpmb2N1c3stLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMTIxLCA4NSwgNzIsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpib3JkZXItZGVlcC1vcmFuZ2UtNTAwOmZvY3Vzey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNTUsIDg3LCAzNCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uZm9jdXNcXFxcOmJvcmRlci1vcmFuZ2UtNTAwOmZvY3Vzey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgyNTUsIDE1MiwgMCwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uZm9jdXNcXFxcOmJvcmRlci1hbWJlci01MDA6Zm9jdXN7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDI1NSwgMTkzLCA3LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6Ym9yZGVyLXllbGxvdy02MDA6Zm9jdXN7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDI1MywgMjE2LCA1MywgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uZm9jdXNcXFxcOmJvcmRlci1saW1lLTUwMDpmb2N1c3stLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMjA1LCAyMjAsIDU3LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6Ym9yZGVyLWxpZ2h0LWdyZWVuLTUwMDpmb2N1c3stLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMTM5LCAxOTUsIDc0LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6Ym9yZGVyLWdyZWVuLTUwMDpmb2N1c3stLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoNzYsIDE3NSwgODAsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpib3JkZXItdGVhbC01MDA6Zm9jdXN7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDAsIDE1MCwgMTM2LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6Ym9yZGVyLWN5YW4tNTAwOmZvY3Vzey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgwLCAxODgsIDIxMiwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uZm9jdXNcXFxcOmJvcmRlci1saWdodC1ibHVlLTUwMDpmb2N1c3stLXR3LWJvcmRlci1vcGFjaXR5OjE7Ym9yZGVyLWNvbG9yOnJnYmEoMywgMTY5LCAyNDQsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpib3JkZXItYmx1ZS01MDA6Zm9jdXN7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDMzLCAxNTAsIDI0MywgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uZm9jdXNcXFxcOmJvcmRlci1pbmRpZ28tNTAwOmZvY3Vzey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSg2MywgODEsIDE4MSwgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uZm9jdXNcXFxcOmJvcmRlci1kZWVwLXB1cnBsZS01MDA6Zm9jdXN7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDEwMywgNTgsIDE4MywgdmFyKC0tdHctYm9yZGVyLW9wYWNpdHkpKX1cXG4uZm9jdXNcXFxcOmJvcmRlci1wdXJwbGUtNTAwOmZvY3Vzey0tdHctYm9yZGVyLW9wYWNpdHk6MTtib3JkZXItY29sb3I6cmdiYSgxNTYsIDM5LCAxNzYsIHZhcigtLXR3LWJvcmRlci1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpib3JkZXItcGluay01MDA6Zm9jdXN7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDIzMywgMzAsIDk5LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6Ym9yZGVyLXJlZC01MDA6Zm9jdXN7LS10dy1ib3JkZXItb3BhY2l0eToxO2JvcmRlci1jb2xvcjpyZ2JhKDI0NCwgNjcsIDU0LCB2YXIoLS10dy1ib3JkZXItb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6YmctYmx1ZS1ncmF5LTQwMDpmb2N1c3stLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTIwLCAxNDQsIDE1NiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6YmctZ3JheS00MDA6Zm9jdXN7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDE4OSwgMTg5LCAxODksIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uZm9jdXNcXFxcOmJnLWJyb3duLTQwMDpmb2N1c3stLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTQxLCAxMTAsIDk5LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpiZy1kZWVwLW9yYW5nZS00MDA6Zm9jdXN7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwgMTEyLCA2NywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6Ymctb3JhbmdlLTQwMDpmb2N1c3stLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAxNjcsIDM4LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpiZy1hbWJlci00MDA6Zm9jdXN7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwgMjAyLCA0MCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6YmcteWVsbG93LTUwMDpmb2N1c3stLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAyMzUsIDU5LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpiZy1saW1lLTQwMDpmb2N1c3stLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjEyLCAyMjUsIDg3LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpiZy1saWdodC1ncmVlbi00MDA6Zm9jdXN7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDE1NiwgMjA0LCAxMDEsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uZm9jdXNcXFxcOmJnLWdyZWVuLTQwMDpmb2N1c3stLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTAyLCAxODcsIDEwNiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6YmctdGVhbC00MDA6Zm9jdXN7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDM4LCAxNjYsIDE1NCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6YmctY3lhbi00MDA6Zm9jdXN7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDM4LCAxOTgsIDIxOCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6YmctbGlnaHQtYmx1ZS00MDA6Zm9jdXN7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDQxLCAxODIsIDI0NiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6YmctYmx1ZS00MDA6Zm9jdXN7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDY2LCAxNjUsIDI0NSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6YmctaW5kaWdvLTQwMDpmb2N1c3stLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoOTIsIDEwNywgMTkyLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpiZy1kZWVwLXB1cnBsZS00MDA6Zm9jdXN7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEyNiwgODcsIDE5NCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6YmctcHVycGxlLTQwMDpmb2N1c3stLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTcxLCA3MSwgMTg4LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpiZy1waW5rLTQwMDpmb2N1c3stLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjM2LCA2NCwgMTIyLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmZvY3VzXFxcXDpiZy1yZWQtNDAwOmZvY3Vzey0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMzksIDgzLCA4MCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6YmctZ3JheS01MDA6Zm9jdXN7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDE1OCwgMTU4LCAxNTgsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uZm9jdXNcXFxcOmJnLW9wYWNpdHktMjA6Zm9jdXN7LS10dy1iZy1vcGFjaXR5OjAuMn1cXG4uZm9jdXNcXFxcOnRleHQtZ3JheS04MDA6Zm9jdXN7LS10dy10ZXh0LW9wYWNpdHk6MTtjb2xvcjpyZ2JhKDY2LCA2NiwgNjYsIHZhcigtLXR3LXRleHQtb3BhY2l0eSkpfVxcbi5mb2N1c1xcXFw6c2hhZG93LW5vbmU6Zm9jdXN7LS10dy1zaGFkb3c6MCAwICMwMDAwO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX1cXG4uZm9jdXNcXFxcOm91dGxpbmUtbm9uZTpmb2N1c3tvdXRsaW5lOjJweCBzb2xpZCB0cmFuc3BhcmVudDtvdXRsaW5lLW9mZnNldDoycHh9XFxuLmZvY3VzXFxcXDpyaW5nLTA6Zm9jdXN7LS10dy1yaW5nLW9mZnNldC1zaGFkb3c6dmFyKC0tdHctcmluZy1pbnNldCkgMCAwIDAgdmFyKC0tdHctcmluZy1vZmZzZXQtd2lkdGgpIHZhcigtLXR3LXJpbmctb2Zmc2V0LWNvbG9yKTstLXR3LXJpbmctc2hhZG93OnZhcigtLXR3LXJpbmctaW5zZXQpIDAgMCAwIGNhbGMoMHB4ICsgdmFyKC0tdHctcmluZy1vZmZzZXQtd2lkdGgpKSB2YXIoLS10dy1yaW5nLWNvbG9yKTtib3gtc2hhZG93OnZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdyksIHZhcigtLXR3LXJpbmctc2hhZG93KSwgdmFyKC0tdHctc2hhZG93LCAwIDAgIzAwMDApfVxcbi5hY3RpdmVcXFxcOmJnLWJsdWUtZ3JheS04MDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSg1NSwgNzEsIDc5LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctZ3JheS04MDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSg2NiwgNjYsIDY2LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctYnJvd24tODAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoNzgsIDUyLCA0NiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLWRlZXAtb3JhbmdlLTgwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIxNiwgNjcsIDIxLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6Ymctb3JhbmdlLTgwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIzOSwgMTA4LCAwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctYW1iZXItODAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAxNDMsIDAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy15ZWxsb3ctODAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjQ5LCAxNjgsIDM3LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctbGltZS04MDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxNTgsIDE1NywgMzYsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy1saWdodC1ncmVlbi04MDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSg4NSwgMTM5LCA0NywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLWdyZWVuLTgwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDQ2LCAxMjUsIDUwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctdGVhbC04MDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLCAxMDUsIDkyLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctY3lhbi04MDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLCAxMzEsIDE0MywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLWxpZ2h0LWJsdWUtODAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMiwgMTE5LCAxODksIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy1ibHVlLTgwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIxLCAxMDEsIDE5MiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLWluZGlnby04MDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSg0MCwgNTMsIDE0NywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLWRlZXAtcHVycGxlLTgwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDY5LCAzOSwgMTYwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctcHVycGxlLTgwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDEwNiwgMjcsIDE1NCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLXBpbmstODAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTczLCAyMCwgODcsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy1yZWQtODAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTk4LCA0MCwgNDAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy1ibHVlLWdyYXktMTAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjA3LCAyMTYsIDIyMCwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLWdyYXktMTAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjQ1LCAyNDUsIDI0NSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLWJyb3duLTEwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIxNSwgMjA0LCAyMDAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy1kZWVwLW9yYW5nZS0xMDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDIwNCwgMTg4LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6Ymctb3JhbmdlLTEwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwgMjI0LCAxNzgsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy1hbWJlci0xMDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsIDIzNiwgMTc5LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmcteWVsbG93LTEwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwgMjQ5LCAxOTYsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy1saW1lLTEwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI0MCwgMjQ0LCAxOTUsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy1saWdodC1ncmVlbi0xMDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMjAsIDIzNywgMjAwLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctZ3JlZW4tMTAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjAwLCAyMzAsIDIwMSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLXRlYWwtMTAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTc4LCAyMjMsIDIxOSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLWN5YW4tMTAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTc4LCAyMzUsIDI0MiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLWxpZ2h0LWJsdWUtMTAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTc5LCAyMjksIDI1MiwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLWJsdWUtMTAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTg3LCAyMjIsIDI1MSwgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLWluZGlnby0xMDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgxOTcsIDIwMiwgMjMzLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctZGVlcC1wdXJwbGUtMTAwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjA5LCAxOTYsIDIzMywgdmFyKC0tdHctYmctb3BhY2l0eSkpfVxcbi5hY3RpdmVcXFxcOmJnLXB1cnBsZS0xMDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyMjUsIDE5MCwgMjMxLCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctcGluay0xMDA6YWN0aXZley0tdHctYmctb3BhY2l0eToxO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNDgsIDE4NywgMjA4LCB2YXIoLS10dy1iZy1vcGFjaXR5KSl9XFxuLmFjdGl2ZVxcXFw6YmctcmVkLTEwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwgMjA1LCAyMTAsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy1ncmF5LTUwMDphY3RpdmV7LS10dy1iZy1vcGFjaXR5OjE7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDE1OCwgMTU4LCAxNTgsIHZhcigtLXR3LWJnLW9wYWNpdHkpKX1cXG4uYWN0aXZlXFxcXDpiZy1vcGFjaXR5LTQwOmFjdGl2ZXstLXR3LWJnLW9wYWNpdHk6MC40fVxcbkBtZWRpYSAobWluLXdpZHRoOiA2NDBweCl7XFxuLnNtXFxcXDpsZWZ0LWF1dG97bGVmdDphdXRvfVxcbi5zbVxcXFw6dy1mdWxse3dpZHRoOjEwMCV9fVxcbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCl7XFxuLm1kXFxcXDptdC00MHttYXJnaW4tdG9wOjEwcmVtfVxcbi5tZFxcXFw6bXQtMHttYXJnaW4tdG9wOjBweH1cXG4ubWRcXFxcOm10LTY0e21hcmdpbi10b3A6MTZyZW19XFxuLm1kXFxcXDptYi0we21hcmdpbi1ib3R0b206MHB4fVxcbi5tZFxcXFw6dy05XFxcXC8xMnt3aWR0aDo3NSV9XFxuLm1kXFxcXDp3LTQ4e3dpZHRoOjEycmVtfVxcbi5tZFxcXFw6dy02XFxcXC8xMnt3aWR0aDo1MCV9XFxuLm1kXFxcXDp3LTRcXFxcLzEye3dpZHRoOjMzLjMzMzMzMyV9XFxuLm1kXFxcXDp3LTVcXFxcLzEye3dpZHRoOjQxLjY2NjY2NyV9XFxuLm1kXFxcXDp3LThcXFxcLzEye3dpZHRoOjY2LjY2NjY2NyV9XFxuLm1kXFxcXDpmbGV4LXJvd3tmbGV4LWRpcmVjdGlvbjpyb3d9XFxuLm1kXFxcXDpqdXN0aWZ5LXN0YXJ0e2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0fVxcbi5tZFxcXFw6anVzdGlmeS1iZXR3ZWVue2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVufVxcbi5tZFxcXFw6Z2FwLTZ7Z2FwOjEuNXJlbX1cXG4ubWRcXFxcOnB4LTh7cGFkZGluZy1sZWZ0OjJyZW07cGFkZGluZy1yaWdodDoycmVtfVxcbi5tZFxcXFw6cHgtNHtwYWRkaW5nLWxlZnQ6MXJlbTtwYWRkaW5nLXJpZ2h0OjFyZW19XFxuLm1kXFxcXDpwci0xMntwYWRkaW5nLXJpZ2h0OjNyZW19XFxuLm1kXFxcXDpwdC0we3BhZGRpbmctdG9wOjBweH19XFxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCl7XFxuLmxnXFxcXDpzdGF0aWN7cG9zaXRpb246c3RhdGljfVxcbi5sZ1xcXFw6bXItNXttYXJnaW4tcmlnaHQ6MS4yNXJlbX1cXG4ubGdcXFxcOm1sLTV7bWFyZ2luLWxlZnQ6MS4yNXJlbX1cXG4ubGdcXFxcOm10LTE2e21hcmdpbi10b3A6NHJlbX1cXG4ubGdcXFxcOmJsb2Nre2Rpc3BsYXk6YmxvY2t9XFxuLmxnXFxcXDpmbGV4e2Rpc3BsYXk6ZmxleH1cXG4ubGdcXFxcOmhpZGRlbntkaXNwbGF5Om5vbmV9XFxuLmxnXFxcXDp3LTRcXFxcLzEye3dpZHRoOjMzLjMzMzMzMyV9XFxuLmxnXFxcXDp3LTZcXFxcLzEye3dpZHRoOjUwJX1cXG4ubGdcXFxcOnctOFxcXFwvMTJ7d2lkdGg6NjYuNjY2NjY3JX1cXG4ubGdcXFxcOnctNjB7d2lkdGg6MTVyZW19XFxuLmxnXFxcXDp3LWF1dG97d2lkdGg6YXV0b31cXG4ubGdcXFxcOmZsZXgtcm93e2ZsZXgtZGlyZWN0aW9uOnJvd31cXG4ubGdcXFxcOml0ZW1zLWNlbnRlcnthbGlnbi1pdGVtczpjZW50ZXJ9XFxuLmxnXFxcXDpqdXN0aWZ5LWJldHdlZW57anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW59XFxuLmxnXFxcXDpqdXN0aWZ5LXN0YXJ0e2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0fVxcbi5sZ1xcXFw6cHgtMzZ7cGFkZGluZy1sZWZ0OjlyZW07cGFkZGluZy1yaWdodDo5cmVtfVxcbi5sZ1xcXFw6dGV4dC1sZWZ0e3RleHQtYWxpZ246bGVmdH19XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvY3NzLWxvYWRlci9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyh0cnVlKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcImh0bWwsXFxuYm9keSB7XFxuICBwYWRkaW5nOiAwO1xcbiAgbWFyZ2luOiAwO1xcbiAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgU2Vnb2UgVUksIFJvYm90bywgT3h5Z2VuLFxcbiAgICBVYnVudHUsIENhbnRhcmVsbCwgRmlyYSBTYW5zLCBEcm9pZCBTYW5zLCBIZWx2ZXRpY2EgTmV1ZSwgc2Fucy1zZXJpZjtcXG59XFxuXFxuYSB7XFxuICBjb2xvcjogaW5oZXJpdDtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG59XFxuXFxuKiB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG4vKiEgdGFpbHdpbmRjc3MgdjIuMi43IHwgTUlUIExpY2Vuc2UgfCBodHRwczovL3RhaWx3aW5kY3NzLmNvbSAqL1xcblxcbi8qISBtb2Rlcm4tbm9ybWFsaXplIHYxLjEuMCB8IE1JVCBMaWNlbnNlIHwgaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9tb2Rlcm4tbm9ybWFsaXplICovXFxuXFxuLypcXG5Eb2N1bWVudFxcbj09PT09PT09XFxuKi9cXG5cXG4vKipcXG5Vc2UgYSBiZXR0ZXIgYm94IG1vZGVsIChvcGluaW9uYXRlZCkuXFxuKi9cXG5cXG4qLFxcbjo6YmVmb3JlLFxcbjo6YWZ0ZXIge1xcblxcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbi8qKlxcblVzZSBhIG1vcmUgcmVhZGFibGUgdGFiIHNpemUgKG9waW5pb25hdGVkKS5cXG4qL1xcblxcbmh0bWwge1xcblxcdC1tb3otdGFiLXNpemU6IDQ7XFxuXFx0LW8tdGFiLXNpemU6IDQ7XFxuXFx0ICAgdGFiLXNpemU6IDQ7XFxufVxcblxcbi8qKlxcbjEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cXG4yLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cXG4qL1xcblxcbmh0bWwge1xcblxcdGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXFxuXFx0LXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXFxufVxcblxcbi8qXFxuU2VjdGlvbnNcXG49PT09PT09PVxcbiovXFxuXFxuLyoqXFxuUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxcbiovXFxuXFxuYm9keSB7XFxuXFx0bWFyZ2luOiAwO1xcbn1cXG5cXG4vKipcXG5JbXByb3ZlIGNvbnNpc3RlbmN5IG9mIGRlZmF1bHQgZm9udHMgaW4gYWxsIGJyb3dzZXJzLiAoaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9tb2Rlcm4tbm9ybWFsaXplL2lzc3Vlcy8zKVxcbiovXFxuXFxuYm9keSB7XFxuXFx0Zm9udC1mYW1pbHk6XFxuXFx0XFx0c3lzdGVtLXVpLFxcblxcdFxcdC1hcHBsZS1zeXN0ZW0sIC8qIEZpcmVmb3ggc3VwcG9ydHMgdGhpcyBidXQgbm90IHlldCBgc3lzdGVtLXVpYCAqL1xcblxcdFxcdCdTZWdvZSBVSScsXFxuXFx0XFx0Um9ib3RvLFxcblxcdFxcdEhlbHZldGljYSxcXG5cXHRcXHRBcmlhbCxcXG5cXHRcXHRzYW5zLXNlcmlmLFxcblxcdFxcdCdBcHBsZSBDb2xvciBFbW9qaScsXFxuXFx0XFx0J1NlZ29lIFVJIEVtb2ppJztcXG59XFxuXFxuLypcXG5Hcm91cGluZyBjb250ZW50XFxuPT09PT09PT09PT09PT09PVxcbiovXFxuXFxuLyoqXFxuMS4gQWRkIHRoZSBjb3JyZWN0IGhlaWdodCBpbiBGaXJlZm94LlxcbjIuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIG9mIGJvcmRlciBjb2xvciBpbiBGaXJlZm94LiAoaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTkwNjU1KVxcbiovXFxuXFxuaHIge1xcblxcdGhlaWdodDogMDsgLyogMSAqL1xcblxcdGNvbG9yOiBpbmhlcml0OyAvKiAyICovXFxufVxcblxcbi8qXFxuVGV4dC1sZXZlbCBzZW1hbnRpY3NcXG49PT09PT09PT09PT09PT09PT09PVxcbiovXFxuXFxuLyoqXFxuQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXFxuKi9cXG5cXG5hYmJyW3RpdGxlXSB7XFxuXFx0LXdlYmtpdC10ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XFxuXFx0ICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XFxufVxcblxcbi8qKlxcbkFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBFZGdlIGFuZCBTYWZhcmkuXFxuKi9cXG5cXG5iLFxcbnN0cm9uZyB7XFxuXFx0Zm9udC13ZWlnaHQ6IGJvbGRlcjtcXG59XFxuXFxuLyoqXFxuMS4gSW1wcm92ZSBjb25zaXN0ZW5jeSBvZiBkZWZhdWx0IGZvbnRzIGluIGFsbCBicm93c2Vycy4gKGh0dHBzOi8vZ2l0aHViLmNvbS9zaW5kcmVzb3JodXMvbW9kZXJuLW5vcm1hbGl6ZS9pc3N1ZXMvMylcXG4yLiBDb3JyZWN0IHRoZSBvZGQgJ2VtJyBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXFxuKi9cXG5cXG5jb2RlLFxcbmtiZCxcXG5zYW1wLFxcbnByZSB7XFxuXFx0Zm9udC1mYW1pbHk6XFxuXFx0XFx0dWktbW9ub3NwYWNlLFxcblxcdFxcdFNGTW9uby1SZWd1bGFyLFxcblxcdFxcdENvbnNvbGFzLFxcblxcdFxcdCdMaWJlcmF0aW9uIE1vbm8nLFxcblxcdFxcdE1lbmxvLFxcblxcdFxcdG1vbm9zcGFjZTsgLyogMSAqL1xcblxcdGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXFxufVxcblxcbi8qKlxcbkFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxcbiovXFxuXFxuc21hbGwge1xcblxcdGZvbnQtc2l6ZTogODAlO1xcbn1cXG5cXG4vKipcXG5QcmV2ZW50ICdzdWInIGFuZCAnc3VwJyBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxcbiovXFxuXFxuc3ViLFxcbnN1cCB7XFxuXFx0Zm9udC1zaXplOiA3NSU7XFxuXFx0bGluZS1oZWlnaHQ6IDA7XFxuXFx0cG9zaXRpb246IHJlbGF0aXZlO1xcblxcdHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcXG59XFxuXFxuc3ViIHtcXG5cXHRib3R0b206IC0wLjI1ZW07XFxufVxcblxcbnN1cCB7XFxuXFx0dG9wOiAtMC41ZW07XFxufVxcblxcbi8qXFxuVGFidWxhciBkYXRhXFxuPT09PT09PT09PT09XFxuKi9cXG5cXG4vKipcXG4xLiBSZW1vdmUgdGV4dCBpbmRlbnRhdGlvbiBmcm9tIHRhYmxlIGNvbnRlbnRzIGluIENocm9tZSBhbmQgU2FmYXJpLiAoaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9OTk5MDg4LCBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MjAxMjk3KVxcbjIuIENvcnJlY3QgdGFibGUgYm9yZGVyIGNvbG9yIGluaGVyaXRhbmNlIGluIGFsbCBDaHJvbWUgYW5kIFNhZmFyaS4gKGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTkzNTcyOSwgaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTE5NTAxNilcXG4qL1xcblxcbnRhYmxlIHtcXG5cXHR0ZXh0LWluZGVudDogMDsgLyogMSAqL1xcblxcdGJvcmRlci1jb2xvcjogaW5oZXJpdDsgLyogMiAqL1xcbn1cXG5cXG4vKlxcbkZvcm1zXFxuPT09PT1cXG4qL1xcblxcbi8qKlxcbjEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxcbjIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cXG4qL1xcblxcbmJ1dHRvbixcXG5pbnB1dCxcXG5vcHRncm91cCxcXG5zZWxlY3QsXFxudGV4dGFyZWEge1xcblxcdGZvbnQtZmFtaWx5OiBpbmhlcml0OyAvKiAxICovXFxuXFx0Zm9udC1zaXplOiAxMDAlOyAvKiAxICovXFxuXFx0bGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cXG5cXHRtYXJnaW46IDA7IC8qIDIgKi9cXG59XFxuXFxuLyoqXFxuUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlIGFuZCBGaXJlZm94LlxcbjEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cXG4qL1xcblxcbmJ1dHRvbixcXG5zZWxlY3QgeyAvKiAxICovXFxuXFx0dGV4dC10cmFuc2Zvcm06IG5vbmU7XFxufVxcblxcbi8qKlxcbkNvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXFxuKi9cXG5cXG5idXR0b24sXFxuW3R5cGU9J2J1dHRvbiddLFxcblt0eXBlPSdyZXNldCddLFxcblt0eXBlPSdzdWJtaXQnXSB7XFxuXFx0LXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XFxufVxcblxcbi8qKlxcblJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXFxuKi9cXG5cXG46Oi1tb3otZm9jdXMtaW5uZXIge1xcblxcdGJvcmRlci1zdHlsZTogbm9uZTtcXG5cXHRwYWRkaW5nOiAwO1xcbn1cXG5cXG4vKipcXG5SZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXFxuKi9cXG5cXG46LW1vei1mb2N1c3Jpbmcge1xcblxcdG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcXG59XFxuXFxuLyoqXFxuUmVtb3ZlIHRoZSBhZGRpdGlvbmFsICc6aW52YWxpZCcgc3R5bGVzIGluIEZpcmVmb3guXFxuU2VlOiBodHRwczovL2dpdGh1Yi5jb20vbW96aWxsYS9nZWNrby1kZXYvYmxvYi8yZjllYWNkOWQzZDk5NWM5MzdiNDI1MWE1NTU3ZDk1ZDQ5NGM5YmUxL2xheW91dC9zdHlsZS9yZXMvZm9ybXMuY3NzI0w3MjgtTDczN1xcbiovXFxuXFxuOi1tb3otdWktaW52YWxpZCB7XFxuXFx0Ym94LXNoYWRvdzogbm9uZTtcXG59XFxuXFxuLyoqXFxuUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dCAnZmllbGRzZXQnIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cXG4qL1xcblxcbmxlZ2VuZCB7XFxuXFx0cGFkZGluZzogMDtcXG59XFxuXFxuLyoqXFxuQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUgYW5kIEZpcmVmb3guXFxuKi9cXG5cXG5wcm9ncmVzcyB7XFxuXFx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xcbn1cXG5cXG4vKipcXG5Db3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBTYWZhcmkuXFxuKi9cXG5cXG46Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXFxuOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcXG5cXHRoZWlnaHQ6IGF1dG87XFxufVxcblxcbi8qKlxcbjEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxcbjIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxcbiovXFxuXFxuW3R5cGU9J3NlYXJjaCddIHtcXG5cXHQtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xcblxcdG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXFxufVxcblxcbi8qKlxcblJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cXG4qL1xcblxcbjo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XFxuXFx0LXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xcbn1cXG5cXG4vKipcXG4xLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxcbjIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gJ2luaGVyaXQnIGluIFNhZmFyaS5cXG4qL1xcblxcbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xcblxcdC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXFxuXFx0Zm9udDogaW5oZXJpdDsgLyogMiAqL1xcbn1cXG5cXG4vKlxcbkludGVyYWN0aXZlXFxuPT09PT09PT09PT1cXG4qL1xcblxcbi8qXFxuQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXFxuKi9cXG5cXG5zdW1tYXJ5IHtcXG5cXHRkaXNwbGF5OiBsaXN0LWl0ZW07XFxufVxcblxcbi8qKlxcbiAqIE1hbnVhbGx5IGZvcmtlZCBmcm9tIFNVSVQgQ1NTIEJhc2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9zdWl0Y3NzL2Jhc2VcXG4gKiBBIHRoaW4gbGF5ZXIgb24gdG9wIG9mIG5vcm1hbGl6ZS5jc3MgdGhhdCBwcm92aWRlcyBhIHN0YXJ0aW5nIHBvaW50IG1vcmVcXG4gKiBzdWl0YWJsZSBmb3Igd2ViIGFwcGxpY2F0aW9ucy5cXG4gKi9cXG5cXG4vKipcXG4gKiBSZW1vdmVzIHRoZSBkZWZhdWx0IHNwYWNpbmcgYW5kIGJvcmRlciBmb3IgYXBwcm9wcmlhdGUgZWxlbWVudHMuXFxuICovXFxuXFxuYmxvY2txdW90ZSxcXG5kbCxcXG5kZCxcXG5oMSxcXG5oMixcXG5oMyxcXG5oNCxcXG5oNSxcXG5oNixcXG5ocixcXG5maWd1cmUsXFxucCxcXG5wcmUge1xcbiAgbWFyZ2luOiAwO1xcbn1cXG5cXG5idXR0b24ge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xcbn1cXG5cXG5maWVsZHNldCB7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbn1cXG5cXG5vbCxcXG51bCB7XFxuICBsaXN0LXN0eWxlOiBub25lO1xcbiAgbWFyZ2luOiAwO1xcbiAgcGFkZGluZzogMDtcXG59XFxuXFxuLyoqXFxuICogVGFpbHdpbmQgY3VzdG9tIHJlc2V0IHN0eWxlc1xcbiAqL1xcblxcbi8qKlxcbiAqIDEuIFVzZSB0aGUgdXNlcidzIGNvbmZpZ3VyZWQgYHNhbnNgIGZvbnQtZmFtaWx5ICh3aXRoIFRhaWx3aW5kJ3MgZGVmYXVsdFxcbiAqICAgIHNhbnMtc2VyaWYgZm9udCBzdGFjayBhcyBhIGZhbGxiYWNrKSBhcyBhIHNhbmUgZGVmYXVsdC5cXG4gKiAyLiBVc2UgVGFpbHdpbmQncyBkZWZhdWx0IFxcXCJub3JtYWxcXFwiIGxpbmUtaGVpZ2h0IHNvIHRoZSB1c2VyIGlzbid0IGZvcmNlZFxcbiAqICAgIHRvIG92ZXJyaWRlIGl0IHRvIGVuc3VyZSBjb25zaXN0ZW5jeSBldmVuIHdoZW4gdXNpbmcgdGhlIGRlZmF1bHQgdGhlbWUuXFxuICovXFxuXFxuaHRtbCB7XFxuICBmb250LWZhbWlseTogdWktc2Fucy1zZXJpZiwgc3lzdGVtLXVpLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFxcXCJTZWdvZSBVSVxcXCIsIFJvYm90bywgXFxcIkhlbHZldGljYSBOZXVlXFxcIiwgQXJpYWwsIFxcXCJOb3RvIFNhbnNcXFwiLCBzYW5zLXNlcmlmLCBcXFwiQXBwbGUgQ29sb3IgRW1vamlcXFwiLCBcXFwiU2Vnb2UgVUkgRW1vamlcXFwiLCBcXFwiU2Vnb2UgVUkgU3ltYm9sXFxcIiwgXFxcIk5vdG8gQ29sb3IgRW1vamlcXFwiOyAvKiAxICovXFxuICBsaW5lLWhlaWdodDogMS41OyAvKiAyICovXFxufVxcblxcbi8qKlxcbiAqIEluaGVyaXQgZm9udC1mYW1pbHkgYW5kIGxpbmUtaGVpZ2h0IGZyb20gYGh0bWxgIHNvIHVzZXJzIGNhbiBzZXQgdGhlbSBhc1xcbiAqIGEgY2xhc3MgZGlyZWN0bHkgb24gdGhlIGBodG1sYCBlbGVtZW50LlxcbiAqL1xcblxcbmJvZHkge1xcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XFxuICBsaW5lLWhlaWdodDogaW5oZXJpdDtcXG59XFxuXFxuLyoqXFxuICogMS4gUHJldmVudCBwYWRkaW5nIGFuZCBib3JkZXIgZnJvbSBhZmZlY3RpbmcgZWxlbWVudCB3aWR0aC5cXG4gKlxcbiAqICAgIFdlIHVzZWQgdG8gc2V0IHRoaXMgaW4gdGhlIGh0bWwgZWxlbWVudCBhbmQgaW5oZXJpdCBmcm9tXFxuICogICAgdGhlIHBhcmVudCBlbGVtZW50IGZvciBldmVyeXRoaW5nIGVsc2UuIFRoaXMgY2F1c2VkIGlzc3Vlc1xcbiAqICAgIGluIHNoYWRvdy1kb20tZW5oYW5jZWQgZWxlbWVudHMgbGlrZSA8ZGV0YWlscz4gd2hlcmUgdGhlIGNvbnRlbnRcXG4gKiAgICBpcyB3cmFwcGVkIGJ5IGEgZGl2IHdpdGggYm94LXNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YC5cXG4gKlxcbiAqICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9tb3pkZXZzL2Nzc3JlbWVkeS9pc3N1ZXMvNFxcbiAqXFxuICpcXG4gKiAyLiBBbGxvdyBhZGRpbmcgYSBib3JkZXIgdG8gYW4gZWxlbWVudCBieSBqdXN0IGFkZGluZyBhIGJvcmRlci13aWR0aC5cXG4gKlxcbiAqICAgIEJ5IGRlZmF1bHQsIHRoZSB3YXkgdGhlIGJyb3dzZXIgc3BlY2lmaWVzIHRoYXQgYW4gZWxlbWVudCBzaG91bGQgaGF2ZSBub1xcbiAqICAgIGJvcmRlciBpcyBieSBzZXR0aW5nIGl0J3MgYm9yZGVyLXN0eWxlIHRvIGBub25lYCBpbiB0aGUgdXNlci1hZ2VudFxcbiAqICAgIHN0eWxlc2hlZXQuXFxuICpcXG4gKiAgICBJbiBvcmRlciB0byBlYXNpbHkgYWRkIGJvcmRlcnMgdG8gZWxlbWVudHMgYnkganVzdCBzZXR0aW5nIHRoZSBgYm9yZGVyLXdpZHRoYFxcbiAqICAgIHByb3BlcnR5LCB3ZSBjaGFuZ2UgdGhlIGRlZmF1bHQgYm9yZGVyLXN0eWxlIGZvciBhbGwgZWxlbWVudHMgdG8gYHNvbGlkYCwgYW5kXFxuICogICAgdXNlIGJvcmRlci13aWR0aCB0byBoaWRlIHRoZW0gaW5zdGVhZC4gVGhpcyB3YXkgb3VyIGBib3JkZXJgIHV0aWxpdGllcyBvbmx5XFxuICogICAgbmVlZCB0byBzZXQgdGhlIGBib3JkZXItd2lkdGhgIHByb3BlcnR5IGluc3RlYWQgb2YgdGhlIGVudGlyZSBgYm9yZGVyYFxcbiAqICAgIHNob3J0aGFuZCwgbWFraW5nIG91ciBib3JkZXIgdXRpbGl0aWVzIG11Y2ggbW9yZSBzdHJhaWdodGZvcndhcmQgdG8gY29tcG9zZS5cXG4gKlxcbiAqICAgIGh0dHBzOi8vZ2l0aHViLmNvbS90YWlsd2luZGNzcy90YWlsd2luZGNzcy9wdWxsLzExNlxcbiAqL1xcblxcbiosXFxuOjpiZWZvcmUsXFxuOjphZnRlciB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXFxuICBib3JkZXItd2lkdGg6IDA7IC8qIDIgKi9cXG4gIGJvcmRlci1zdHlsZTogc29saWQ7IC8qIDIgKi9cXG4gIGJvcmRlci1jb2xvcjogY3VycmVudENvbG9yOyAvKiAyICovXFxufVxcblxcbi8qXFxuICogRW5zdXJlIGhvcml6b250YWwgcnVsZXMgYXJlIHZpc2libGUgYnkgZGVmYXVsdFxcbiAqL1xcblxcbmhyIHtcXG4gIGJvcmRlci10b3Atd2lkdGg6IDFweDtcXG59XFxuXFxuLyoqXFxuICogVW5kbyB0aGUgYGJvcmRlci1zdHlsZTogbm9uZWAgcmVzZXQgdGhhdCBOb3JtYWxpemUgYXBwbGllcyB0byBpbWFnZXMgc28gdGhhdFxcbiAqIG91ciBgYm9yZGVyLXt3aWR0aH1gIHV0aWxpdGllcyBoYXZlIHRoZSBleHBlY3RlZCBlZmZlY3QuXFxuICpcXG4gKiBUaGUgTm9ybWFsaXplIHJlc2V0IGlzIHVubmVjZXNzYXJ5IGZvciB1cyBzaW5jZSB3ZSBkZWZhdWx0IHRoZSBib3JkZXItd2lkdGhcXG4gKiB0byAwIG9uIGFsbCBlbGVtZW50cy5cXG4gKlxcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS90YWlsd2luZGNzcy90YWlsd2luZGNzcy9pc3N1ZXMvMzYyXFxuICovXFxuXFxuaW1nIHtcXG4gIGJvcmRlci1zdHlsZTogc29saWQ7XFxufVxcblxcbnRleHRhcmVhIHtcXG4gIHJlc2l6ZTogdmVydGljYWw7XFxufVxcblxcbmlucHV0OjotbW96LXBsYWNlaG9sZGVyLCB0ZXh0YXJlYTo6LW1vei1wbGFjZWhvbGRlciB7XFxuICBvcGFjaXR5OiAxO1xcbiAgY29sb3I6ICM5Y2EzYWY7XFxufVxcblxcbmlucHV0Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciwgdGV4dGFyZWE6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcXG4gIG9wYWNpdHk6IDE7XFxuICBjb2xvcjogIzljYTNhZjtcXG59XFxuXFxuaW5wdXQ6OnBsYWNlaG9sZGVyLFxcbnRleHRhcmVhOjpwbGFjZWhvbGRlciB7XFxuICBvcGFjaXR5OiAxO1xcbiAgY29sb3I6ICM5Y2EzYWY7XFxufVxcblxcbmJ1dHRvbixcXG5bcm9sZT1cXFwiYnV0dG9uXFxcIl0ge1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG50YWJsZSB7XFxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xcbn1cXG5cXG5oMSxcXG5oMixcXG5oMyxcXG5oNCxcXG5oNSxcXG5oNiB7XFxuICBmb250LXNpemU6IGluaGVyaXQ7XFxuICBmb250LXdlaWdodDogaW5oZXJpdDtcXG59XFxuXFxuLyoqXFxuICogUmVzZXQgbGlua3MgdG8gb3B0aW1pemUgZm9yIG9wdC1pbiBzdHlsaW5nIGluc3RlYWQgb2ZcXG4gKiBvcHQtb3V0LlxcbiAqL1xcblxcbmEge1xcbiAgY29sb3I6IGluaGVyaXQ7XFxuICB0ZXh0LWRlY29yYXRpb246IGluaGVyaXQ7XFxufVxcblxcbi8qKlxcbiAqIFJlc2V0IGZvcm0gZWxlbWVudCBwcm9wZXJ0aWVzIHRoYXQgYXJlIGVhc3kgdG8gZm9yZ2V0IHRvXFxuICogc3R5bGUgZXhwbGljaXRseSBzbyB5b3UgZG9uJ3QgaW5hZHZlcnRlbnRseSBpbnRyb2R1Y2VcXG4gKiBzdHlsZXMgdGhhdCBkZXZpYXRlIGZyb20geW91ciBkZXNpZ24gc3lzdGVtLiBUaGVzZSBzdHlsZXNcXG4gKiBzdXBwbGVtZW50IGEgcGFydGlhbCByZXNldCB0aGF0IGlzIGFscmVhZHkgYXBwbGllZCBieVxcbiAqIG5vcm1hbGl6ZS5jc3MuXFxuICovXFxuXFxuYnV0dG9uLFxcbmlucHV0LFxcbm9wdGdyb3VwLFxcbnNlbGVjdCxcXG50ZXh0YXJlYSB7XFxuICBwYWRkaW5nOiAwO1xcbiAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XFxuICBjb2xvcjogaW5oZXJpdDtcXG59XFxuXFxuLyoqXFxuICogVXNlIHRoZSBjb25maWd1cmVkICdtb25vJyBmb250IGZhbWlseSBmb3IgZWxlbWVudHMgdGhhdFxcbiAqIGFyZSBleHBlY3RlZCB0byBiZSByZW5kZXJlZCB3aXRoIGEgbW9ub3NwYWNlIGZvbnQsIGZhbGxpbmdcXG4gKiBiYWNrIHRvIHRoZSBzeXN0ZW0gbW9ub3NwYWNlIHN0YWNrIGlmIHRoZXJlIGlzIG5vIGNvbmZpZ3VyZWRcXG4gKiAnbW9ubycgZm9udCBmYW1pbHkuXFxuICovXFxuXFxucHJlLFxcbmNvZGUsXFxua2JkLFxcbnNhbXAge1xcbiAgZm9udC1mYW1pbHk6IHVpLW1vbm9zcGFjZSwgU0ZNb25vLVJlZ3VsYXIsIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLCBcXFwiTGliZXJhdGlvbiBNb25vXFxcIiwgXFxcIkNvdXJpZXIgTmV3XFxcIiwgbW9ub3NwYWNlO1xcbn1cXG5cXG4vKipcXG4gKiAxLiBNYWtlIHJlcGxhY2VkIGVsZW1lbnRzIGBkaXNwbGF5OiBibG9ja2AgYnkgZGVmYXVsdCBhcyB0aGF0J3NcXG4gKiAgICB0aGUgYmVoYXZpb3IgeW91IHdhbnQgYWxtb3N0IGFsbCBvZiB0aGUgdGltZS4gSW5zcGlyZWQgYnlcXG4gKiAgICBDU1MgUmVtZWR5LCB3aXRoIGBzdmdgIGFkZGVkIGFzIHdlbGwuXFxuICpcXG4gKiAgICBodHRwczovL2dpdGh1Yi5jb20vbW96ZGV2cy9jc3NyZW1lZHkvaXNzdWVzLzE0XFxuICogXFxuICogMi4gQWRkIGB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlYCB0byBhbGlnbiByZXBsYWNlZCBlbGVtZW50cyBtb3JlXFxuICogICAgc2Vuc2libHkgYnkgZGVmYXVsdCB3aGVuIG92ZXJyaWRpbmcgYGRpc3BsYXlgIGJ5IGFkZGluZyBhXFxuICogICAgdXRpbGl0eSBsaWtlIGBpbmxpbmVgLlxcbiAqXFxuICogICAgVGhpcyBjYW4gdHJpZ2dlciBhIHBvb3JseSBjb25zaWRlcmVkIGxpbnRpbmcgZXJyb3IgaW4gc29tZVxcbiAqICAgIHRvb2xzIGJ1dCBpcyBpbmNsdWRlZCBieSBkZXNpZ24uXFxuICogXFxuICogICAgaHR0cHM6Ly9naXRodWIuY29tL2plbnNpbW1vbnMvY3NzcmVtZWR5L2lzc3Vlcy8xNCNpc3N1ZWNvbW1lbnQtNjM0OTM0MjEwXFxuICovXFxuXFxuaW1nLFxcbnN2ZyxcXG52aWRlbyxcXG5jYW52YXMsXFxuYXVkaW8sXFxuaWZyYW1lLFxcbmVtYmVkLFxcbm9iamVjdCB7XFxuICBkaXNwbGF5OiBibG9jazsgLyogMSAqL1xcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG4gKiBDb25zdHJhaW4gaW1hZ2VzIGFuZCB2aWRlb3MgdG8gdGhlIHBhcmVudCB3aWR0aCBhbmQgcHJlc2VydmVcXG4gKiB0aGVpciBpbnRyaW5zaWMgYXNwZWN0IHJhdGlvLlxcbiAqXFxuICogaHR0cHM6Ly9naXRodWIuY29tL21vemRldnMvY3NzcmVtZWR5L2lzc3Vlcy8xNFxcbiAqL1xcblxcbmltZyxcXG52aWRlbyB7XFxuICBtYXgtd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IGF1dG87XFxufVxcblxcbi8qKlxcbiAqIEVuc3VyZSB0aGUgZGVmYXVsdCBicm93c2VyIGJlaGF2aW9yIG9mIHRoZSBgaGlkZGVuYCBhdHRyaWJ1dGUuXFxuICovXFxuXFxuW2hpZGRlbl0ge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuKiwgOjpiZWZvcmUsIDo6YWZ0ZXIge1xcbiAgLS10dy10cmFuc2xhdGUteDogMDtcXG4gIC0tdHctdHJhbnNsYXRlLXk6IDA7XFxuICAtLXR3LXJvdGF0ZTogMDtcXG4gIC0tdHctc2tldy14OiAwO1xcbiAgLS10dy1za2V3LXk6IDA7XFxuICAtLXR3LXNjYWxlLXg6IDE7XFxuICAtLXR3LXNjYWxlLXk6IDE7XFxuICAtLXR3LXRyYW5zZm9ybTogdHJhbnNsYXRlWCh2YXIoLS10dy10cmFuc2xhdGUteCkpIHRyYW5zbGF0ZVkodmFyKC0tdHctdHJhbnNsYXRlLXkpKSByb3RhdGUodmFyKC0tdHctcm90YXRlKSkgc2tld1godmFyKC0tdHctc2tldy14KSkgc2tld1kodmFyKC0tdHctc2tldy15KSkgc2NhbGVYKHZhcigtLXR3LXNjYWxlLXgpKSBzY2FsZVkodmFyKC0tdHctc2NhbGUteSkpO1xcbn1cXG4uYWJzb2x1dGUge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbn1cXG4udG9wLTQge1xcbiAgdG9wOiAxcmVtO1xcbn1cXG4ucmlnaHQtNCB7XFxuICByaWdodDogMXJlbTtcXG59XFxuLmxlZnQtOCB7XFxuICBsZWZ0OiAycmVtO1xcbn1cXG4udG9wLVxcXFxbNTJweFxcXFxdIHtcXG4gIHRvcDogNTJweDtcXG59XFxuLmxlZnQtXFxcXFsxMHB4XFxcXF0ge1xcbiAgbGVmdDogMTBweDtcXG59XFxuLnotMTAge1xcbiAgei1pbmRleDogMTA7XFxufVxcbi5tci00IHtcXG4gIG1hcmdpbi1yaWdodDogMXJlbTtcXG59XFxuLm10LTQge1xcbiAgbWFyZ2luLXRvcDogMXJlbTtcXG59XFxuLm1iLTgge1xcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTtcXG59XFxuLmJsb2NrIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG4uZmxleCB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbn1cXG4uaC1zY3JlZW4ge1xcbiAgaGVpZ2h0OiAxMDB2aDtcXG59XFxuLmgtXFxcXFs1MHB4XFxcXF0ge1xcbiAgaGVpZ2h0OiA1MHB4O1xcbn1cXG4uaC1cXFxcWzMwMHB4XFxcXF0ge1xcbiAgaGVpZ2h0OiAzMDBweDtcXG59XFxuLnctZnVsbCB7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuLnctXFxcXFszMDBweFxcXFxdIHtcXG4gIHdpZHRoOiAzMDBweDtcXG59XFxuLnctXFxcXFsyOTBweFxcXFxdIHtcXG4gIHdpZHRoOiAyOTBweDtcXG59XFxuLnctXFxcXFsyNDBweFxcXFxdIHtcXG4gIHdpZHRoOiAyNDBweDtcXG59XFxuLnctXFxcXFs4MFxcXFwlXFxcXF0ge1xcbiAgd2lkdGg6IDgwJTtcXG59XFxuLnctXFxcXFs0MDBweFxcXFxdIHtcXG4gIHdpZHRoOiA0MDBweDtcXG59XFxuLnNjYWxlLTc1IHtcXG4gIC0tdHctc2NhbGUteDogLjc1O1xcbiAgLS10dy1zY2FsZS15OiAuNzU7XFxuICB0cmFuc2Zvcm06IHZhcigtLXR3LXRyYW5zZm9ybSk7XFxufVxcbi5jdXJzb3ItcG9pbnRlciB7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcbi5mbGV4LWNvbCB7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG4uaXRlbXMtY2VudGVyIHtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcbi5qdXN0aWZ5LWNlbnRlciB7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuLmp1c3RpZnktYmV0d2VlbiB7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxufVxcbi5zcGFjZS14LTQgPiA6bm90KFtoaWRkZW5dKSB+IDpub3QoW2hpZGRlbl0pIHtcXG4gIC0tdHctc3BhY2UteC1yZXZlcnNlOiAwO1xcbiAgbWFyZ2luLXJpZ2h0OiBjYWxjKDFyZW0gKiB2YXIoLS10dy1zcGFjZS14LXJldmVyc2UpKTtcXG4gIG1hcmdpbi1sZWZ0OiBjYWxjKDFyZW0gKiBjYWxjKDEgLSB2YXIoLS10dy1zcGFjZS14LXJldmVyc2UpKSk7XFxufVxcbi5zcGFjZS15LTUgPiA6bm90KFtoaWRkZW5dKSB+IDpub3QoW2hpZGRlbl0pIHtcXG4gIC0tdHctc3BhY2UteS1yZXZlcnNlOiAwO1xcbiAgbWFyZ2luLXRvcDogY2FsYygxLjI1cmVtICogY2FsYygxIC0gdmFyKC0tdHctc3BhY2UteS1yZXZlcnNlKSkpO1xcbiAgbWFyZ2luLWJvdHRvbTogY2FsYygxLjI1cmVtICogdmFyKC0tdHctc3BhY2UteS1yZXZlcnNlKSk7XFxufVxcbi5yb3VuZGVkIHtcXG4gIGJvcmRlci1yYWRpdXM6IDAuMjVyZW07XFxufVxcbi5iZy1ncmF5LTMwMCB7XFxuICAtLXR3LWJnLW9wYWNpdHk6IDE7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIwOSwgMjEzLCAyMTksIHZhcigtLXR3LWJnLW9wYWNpdHkpKTtcXG59XFxuLmJnLXBpbmstNDAwIHtcXG4gIC0tdHctYmctb3BhY2l0eTogMTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjQ0LCAxMTQsIDE4MiwgdmFyKC0tdHctYmctb3BhY2l0eSkpO1xcbn1cXG4uYmctd2hpdGUge1xcbiAgLS10dy1iZy1vcGFjaXR5OiAxO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCB2YXIoLS10dy1iZy1vcGFjaXR5KSk7XFxufVxcbi5iZy1ibHVlLTQwMCB7XFxuICAtLXR3LWJnLW9wYWNpdHk6IDE7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDk2LCAxNjUsIDI1MCwgdmFyKC0tdHctYmctb3BhY2l0eSkpO1xcbn1cXG4ucC00IHtcXG4gIHBhZGRpbmc6IDFyZW07XFxufVxcbi5wLTIge1xcbiAgcGFkZGluZzogMC41cmVtO1xcbn1cXG4ucHgtNCB7XFxuICBwYWRkaW5nLWxlZnQ6IDFyZW07XFxuICBwYWRkaW5nLXJpZ2h0OiAxcmVtO1xcbn1cXG4udGV4dC0zeGwge1xcbiAgZm9udC1zaXplOiAxLjg3NXJlbTtcXG4gIGxpbmUtaGVpZ2h0OiAyLjI1cmVtO1xcbn1cXG4udGV4dC1ibHVlLTQwMCB7XFxuICAtLXR3LXRleHQtb3BhY2l0eTogMTtcXG4gIGNvbG9yOiByZ2JhKDk2LCAxNjUsIDI1MCwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSk7XFxufVxcbi50ZXh0LWdyYXktNzAwIHtcXG4gIC0tdHctdGV4dC1vcGFjaXR5OiAxO1xcbiAgY29sb3I6IHJnYmEoNTUsIDY1LCA4MSwgdmFyKC0tdHctdGV4dC1vcGFjaXR5KSk7XFxufVxcbi5ob3ZlclxcXFw6c2NhbGUtMTAwOmhvdmVyIHtcXG4gIC0tdHctc2NhbGUteDogMTtcXG4gIC0tdHctc2NhbGUteTogMTtcXG4gIHRyYW5zZm9ybTogdmFyKC0tdHctdHJhbnNmb3JtKTtcXG59XFxuLmhvdmVyXFxcXDpiZy1ibHVlLTMwMDpob3ZlciB7XFxuICAtLXR3LWJnLW9wYWNpdHk6IDE7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE0NywgMTk3LCAyNTMsIHZhcigtLXR3LWJnLW9wYWNpdHkpKTtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovL3N0eWxlcy9nbG9iYWxzLmNzc1wiLFwid2VicGFjazovL3N0eWxlcy8lM0NpbnB1dCUyMGNzcyUyMHhnV2IxNSUzRVwiLFwid2VicGFjazovL3N0eWxlcy8lM0NpbnB1dCUyMGNzcyUyMHhPb0VfUCUzRVwiLFwiPG5vIHNvdXJjZT5cIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7O0VBRUUsVUFBVTtFQUNWLFNBQVM7RUFDVDt3RUFDc0U7QUFDeEU7O0FBRUE7RUFDRSxjQUFjO0VBQ2QscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBLGdFQUFjOztBQUFkLDhGQUFjOztBQUFkOzs7Q0FBYzs7QUFBZDs7Q0FBYzs7QUFBZDs7O0NDSEMsc0JBQXNCO0FER1Q7O0FBQWQ7O0NBQWM7O0FBQWQ7Q0NLQyxnQkFBZ0I7Q0FDaEIsY0FBVztJQUFYLFdBQVc7QURORTs7QUFBZDs7O0NBQWM7O0FBQWQ7Q0NlQyxpQkFBaUIsRUFBRSxNQUFNO0NBQ3pCLDhCQUE4QixFQUFFLE1BQU07QURoQnpCOztBQUFkOzs7Q0FBYzs7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O0FIcXRCQTtBQXJ0QkE7RUdBQSxrQkFBQTtFQUFBLDJEQUFBO0FIeXRCQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJodG1sLFxcbmJvZHkge1xcbiAgcGFkZGluZzogMDtcXG4gIG1hcmdpbjogMDtcXG4gIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFNlZ29lIFVJLCBSb2JvdG8sIE94eWdlbixcXG4gICAgVWJ1bnR1LCBDYW50YXJlbGwsIEZpcmEgU2FucywgRHJvaWQgU2FucywgSGVsdmV0aWNhIE5ldWUsIHNhbnMtc2VyaWY7XFxufVxcblxcbmEge1xcbiAgY29sb3I6IGluaGVyaXQ7XFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxufVxcblxcbioge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuQHRhaWx3aW5kIGJhc2U7XFxuQHRhaWx3aW5kIGNvbXBvbmVudHM7XFxuQHRhaWx3aW5kIHV0aWxpdGllcztcXG5cIixcIi8qISBtb2Rlcm4tbm9ybWFsaXplIHYxLjEuMCB8IE1JVCBMaWNlbnNlIHwgaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9tb2Rlcm4tbm9ybWFsaXplICovXFxuXFxuLypcXG5Eb2N1bWVudFxcbj09PT09PT09XFxuKi9cXG5cXG4vKipcXG5Vc2UgYSBiZXR0ZXIgYm94IG1vZGVsIChvcGluaW9uYXRlZCkuXFxuKi9cXG5cXG4qLFxcbjo6YmVmb3JlLFxcbjo6YWZ0ZXIge1xcblxcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbi8qKlxcblVzZSBhIG1vcmUgcmVhZGFibGUgdGFiIHNpemUgKG9waW5pb25hdGVkKS5cXG4qL1xcblxcbmh0bWwge1xcblxcdC1tb3otdGFiLXNpemU6IDQ7XFxuXFx0dGFiLXNpemU6IDQ7XFxufVxcblxcbi8qKlxcbjEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cXG4yLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cXG4qL1xcblxcbmh0bWwge1xcblxcdGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXFxuXFx0LXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXFxufVxcblxcbi8qXFxuU2VjdGlvbnNcXG49PT09PT09PVxcbiovXFxuXFxuLyoqXFxuUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxcbiovXFxuXFxuYm9keSB7XFxuXFx0bWFyZ2luOiAwO1xcbn1cXG5cXG4vKipcXG5JbXByb3ZlIGNvbnNpc3RlbmN5IG9mIGRlZmF1bHQgZm9udHMgaW4gYWxsIGJyb3dzZXJzLiAoaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9tb2Rlcm4tbm9ybWFsaXplL2lzc3Vlcy8zKVxcbiovXFxuXFxuYm9keSB7XFxuXFx0Zm9udC1mYW1pbHk6XFxuXFx0XFx0c3lzdGVtLXVpLFxcblxcdFxcdC1hcHBsZS1zeXN0ZW0sIC8qIEZpcmVmb3ggc3VwcG9ydHMgdGhpcyBidXQgbm90IHlldCBgc3lzdGVtLXVpYCAqL1xcblxcdFxcdCdTZWdvZSBVSScsXFxuXFx0XFx0Um9ib3RvLFxcblxcdFxcdEhlbHZldGljYSxcXG5cXHRcXHRBcmlhbCxcXG5cXHRcXHRzYW5zLXNlcmlmLFxcblxcdFxcdCdBcHBsZSBDb2xvciBFbW9qaScsXFxuXFx0XFx0J1NlZ29lIFVJIEVtb2ppJztcXG59XFxuXFxuLypcXG5Hcm91cGluZyBjb250ZW50XFxuPT09PT09PT09PT09PT09PVxcbiovXFxuXFxuLyoqXFxuMS4gQWRkIHRoZSBjb3JyZWN0IGhlaWdodCBpbiBGaXJlZm94LlxcbjIuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIG9mIGJvcmRlciBjb2xvciBpbiBGaXJlZm94LiAoaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTkwNjU1KVxcbiovXFxuXFxuaHIge1xcblxcdGhlaWdodDogMDsgLyogMSAqL1xcblxcdGNvbG9yOiBpbmhlcml0OyAvKiAyICovXFxufVxcblxcbi8qXFxuVGV4dC1sZXZlbCBzZW1hbnRpY3NcXG49PT09PT09PT09PT09PT09PT09PVxcbiovXFxuXFxuLyoqXFxuQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXFxuKi9cXG5cXG5hYmJyW3RpdGxlXSB7XFxuXFx0dGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xcbn1cXG5cXG4vKipcXG5BZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gRWRnZSBhbmQgU2FmYXJpLlxcbiovXFxuXFxuYixcXG5zdHJvbmcge1xcblxcdGZvbnQtd2VpZ2h0OiBib2xkZXI7XFxufVxcblxcbi8qKlxcbjEuIEltcHJvdmUgY29uc2lzdGVuY3kgb2YgZGVmYXVsdCBmb250cyBpbiBhbGwgYnJvd3NlcnMuIChodHRwczovL2dpdGh1Yi5jb20vc2luZHJlc29yaHVzL21vZGVybi1ub3JtYWxpemUvaXNzdWVzLzMpXFxuMi4gQ29ycmVjdCB0aGUgb2RkICdlbScgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxcbiovXFxuXFxuY29kZSxcXG5rYmQsXFxuc2FtcCxcXG5wcmUge1xcblxcdGZvbnQtZmFtaWx5OlxcblxcdFxcdHVpLW1vbm9zcGFjZSxcXG5cXHRcXHRTRk1vbm8tUmVndWxhcixcXG5cXHRcXHRDb25zb2xhcyxcXG5cXHRcXHQnTGliZXJhdGlvbiBNb25vJyxcXG5cXHRcXHRNZW5sbyxcXG5cXHRcXHRtb25vc3BhY2U7IC8qIDEgKi9cXG5cXHRmb250LXNpemU6IDFlbTsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG5BZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cXG4qL1xcblxcbnNtYWxsIHtcXG5cXHRmb250LXNpemU6IDgwJTtcXG59XFxuXFxuLyoqXFxuUHJldmVudCAnc3ViJyBhbmQgJ3N1cCcgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cXG4qL1xcblxcbnN1YixcXG5zdXAge1xcblxcdGZvbnQtc2l6ZTogNzUlO1xcblxcdGxpbmUtaGVpZ2h0OiAwO1xcblxcdHBvc2l0aW9uOiByZWxhdGl2ZTtcXG5cXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XFxufVxcblxcbnN1YiB7XFxuXFx0Ym90dG9tOiAtMC4yNWVtO1xcbn1cXG5cXG5zdXAge1xcblxcdHRvcDogLTAuNWVtO1xcbn1cXG5cXG4vKlxcblRhYnVsYXIgZGF0YVxcbj09PT09PT09PT09PVxcbiovXFxuXFxuLyoqXFxuMS4gUmVtb3ZlIHRleHQgaW5kZW50YXRpb24gZnJvbSB0YWJsZSBjb250ZW50cyBpbiBDaHJvbWUgYW5kIFNhZmFyaS4gKGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTk5OTA4OCwgaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTIwMTI5NylcXG4yLiBDb3JyZWN0IHRhYmxlIGJvcmRlciBjb2xvciBpbmhlcml0YW5jZSBpbiBhbGwgQ2hyb21lIGFuZCBTYWZhcmkuIChodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD05MzU3MjksIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xOTUwMTYpXFxuKi9cXG5cXG50YWJsZSB7XFxuXFx0dGV4dC1pbmRlbnQ6IDA7IC8qIDEgKi9cXG5cXHRib3JkZXItY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cXG59XFxuXFxuLypcXG5Gb3Jtc1xcbj09PT09XFxuKi9cXG5cXG4vKipcXG4xLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cXG4yLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXFxuKi9cXG5cXG5idXR0b24sXFxuaW5wdXQsXFxub3B0Z3JvdXAsXFxuc2VsZWN0LFxcbnRleHRhcmVhIHtcXG5cXHRmb250LWZhbWlseTogaW5oZXJpdDsgLyogMSAqL1xcblxcdGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xcblxcdGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXFxuXFx0bWFyZ2luOiAwOyAvKiAyICovXFxufVxcblxcbi8qKlxcblJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSBhbmQgRmlyZWZveC5cXG4xLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXFxuKi9cXG5cXG5idXR0b24sXFxuc2VsZWN0IHsgLyogMSAqL1xcblxcdHRleHQtdHJhbnNmb3JtOiBub25lO1xcbn1cXG5cXG4vKipcXG5Db3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxcbiovXFxuXFxuYnV0dG9uLFxcblt0eXBlPSdidXR0b24nXSxcXG5bdHlwZT0ncmVzZXQnXSxcXG5bdHlwZT0nc3VibWl0J10ge1xcblxcdC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xcbn1cXG5cXG4vKipcXG5SZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxcbiovXFxuXFxuOjotbW96LWZvY3VzLWlubmVyIHtcXG5cXHRib3JkZXItc3R5bGU6IG5vbmU7XFxuXFx0cGFkZGluZzogMDtcXG59XFxuXFxuLyoqXFxuUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxcbiovXFxuXFxuOi1tb3otZm9jdXNyaW5nIHtcXG5cXHRvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XFxufVxcblxcbi8qKlxcblJlbW92ZSB0aGUgYWRkaXRpb25hbCAnOmludmFsaWQnIHN0eWxlcyBpbiBGaXJlZm94LlxcblNlZTogaHR0cHM6Ly9naXRodWIuY29tL21vemlsbGEvZ2Vja28tZGV2L2Jsb2IvMmY5ZWFjZDlkM2Q5OTVjOTM3YjQyNTFhNTU1N2Q5NWQ0OTRjOWJlMS9sYXlvdXQvc3R5bGUvcmVzL2Zvcm1zLmNzcyNMNzI4LUw3MzdcXG4qL1xcblxcbjotbW96LXVpLWludmFsaWQge1xcblxcdGJveC1zaGFkb3c6IG5vbmU7XFxufVxcblxcbi8qKlxcblJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXQgJ2ZpZWxkc2V0JyBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXFxuKi9cXG5cXG5sZWdlbmQge1xcblxcdHBhZGRpbmc6IDA7XFxufVxcblxcbi8qKlxcbkFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lIGFuZCBGaXJlZm94LlxcbiovXFxuXFxucHJvZ3Jlc3Mge1xcblxcdHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcXG59XFxuXFxuLyoqXFxuQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gU2FmYXJpLlxcbiovXFxuXFxuOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxcbjo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XFxuXFx0aGVpZ2h0OiBhdXRvO1xcbn1cXG5cXG4vKipcXG4xLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cXG4yLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cXG4qL1xcblxcblt0eXBlPSdzZWFyY2gnXSB7XFxuXFx0LXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cXG5cXHRvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG5SZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXFxuKi9cXG5cXG46Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xcblxcdC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcXG59XFxuXFxuLyoqXFxuMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cXG4yLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvICdpbmhlcml0JyBpbiBTYWZhcmkuXFxuKi9cXG5cXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcXG5cXHQtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xcblxcdGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cXG59XFxuXFxuLypcXG5JbnRlcmFjdGl2ZVxcbj09PT09PT09PT09XFxuKi9cXG5cXG4vKlxcbkFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIENocm9tZSBhbmQgU2FmYXJpLlxcbiovXFxuXFxuc3VtbWFyeSB7XFxuXFx0ZGlzcGxheTogbGlzdC1pdGVtO1xcbn1cXG5cIixcIi8qKlxcbiAqIE1hbnVhbGx5IGZvcmtlZCBmcm9tIFNVSVQgQ1NTIEJhc2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9zdWl0Y3NzL2Jhc2VcXG4gKiBBIHRoaW4gbGF5ZXIgb24gdG9wIG9mIG5vcm1hbGl6ZS5jc3MgdGhhdCBwcm92aWRlcyBhIHN0YXJ0aW5nIHBvaW50IG1vcmVcXG4gKiBzdWl0YWJsZSBmb3Igd2ViIGFwcGxpY2F0aW9ucy5cXG4gKi9cXG5cXG4vKipcXG4gKiBSZW1vdmVzIHRoZSBkZWZhdWx0IHNwYWNpbmcgYW5kIGJvcmRlciBmb3IgYXBwcm9wcmlhdGUgZWxlbWVudHMuXFxuICovXFxuXFxuYmxvY2txdW90ZSxcXG5kbCxcXG5kZCxcXG5oMSxcXG5oMixcXG5oMyxcXG5oNCxcXG5oNSxcXG5oNixcXG5ocixcXG5maWd1cmUsXFxucCxcXG5wcmUge1xcbiAgbWFyZ2luOiAwO1xcbn1cXG5cXG5idXR0b24ge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xcbn1cXG5cXG5maWVsZHNldCB7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbn1cXG5cXG5vbCxcXG51bCB7XFxuICBsaXN0LXN0eWxlOiBub25lO1xcbiAgbWFyZ2luOiAwO1xcbiAgcGFkZGluZzogMDtcXG59XFxuXFxuLyoqXFxuICogVGFpbHdpbmQgY3VzdG9tIHJlc2V0IHN0eWxlc1xcbiAqL1xcblxcbi8qKlxcbiAqIDEuIFVzZSB0aGUgdXNlcidzIGNvbmZpZ3VyZWQgYHNhbnNgIGZvbnQtZmFtaWx5ICh3aXRoIFRhaWx3aW5kJ3MgZGVmYXVsdFxcbiAqICAgIHNhbnMtc2VyaWYgZm9udCBzdGFjayBhcyBhIGZhbGxiYWNrKSBhcyBhIHNhbmUgZGVmYXVsdC5cXG4gKiAyLiBVc2UgVGFpbHdpbmQncyBkZWZhdWx0IFxcXCJub3JtYWxcXFwiIGxpbmUtaGVpZ2h0IHNvIHRoZSB1c2VyIGlzbid0IGZvcmNlZFxcbiAqICAgIHRvIG92ZXJyaWRlIGl0IHRvIGVuc3VyZSBjb25zaXN0ZW5jeSBldmVuIHdoZW4gdXNpbmcgdGhlIGRlZmF1bHQgdGhlbWUuXFxuICovXFxuXFxuaHRtbCB7XFxuICBmb250LWZhbWlseTogdGhlbWUoJ2ZvbnRGYW1pbHkuc2FucycsIHVpLXNhbnMtc2VyaWYsIHN5c3RlbS11aSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcXFwiU2Vnb2UgVUlcXFwiLCBSb2JvdG8sIFxcXCJIZWx2ZXRpY2EgTmV1ZVxcXCIsIEFyaWFsLCBcXFwiTm90byBTYW5zXFxcIiwgc2Fucy1zZXJpZiwgXFxcIkFwcGxlIENvbG9yIEVtb2ppXFxcIiwgXFxcIlNlZ29lIFVJIEVtb2ppXFxcIiwgXFxcIlNlZ29lIFVJIFN5bWJvbFxcXCIsIFxcXCJOb3RvIENvbG9yIEVtb2ppXFxcIik7IC8qIDEgKi9cXG4gIGxpbmUtaGVpZ2h0OiAxLjU7IC8qIDIgKi9cXG59XFxuXFxuXFxuLyoqXFxuICogSW5oZXJpdCBmb250LWZhbWlseSBhbmQgbGluZS1oZWlnaHQgZnJvbSBgaHRtbGAgc28gdXNlcnMgY2FuIHNldCB0aGVtIGFzXFxuICogYSBjbGFzcyBkaXJlY3RseSBvbiB0aGUgYGh0bWxgIGVsZW1lbnQuXFxuICovXFxuXFxuYm9keSB7XFxuICBmb250LWZhbWlseTogaW5oZXJpdDtcXG4gIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xcbn1cXG5cXG4vKipcXG4gKiAxLiBQcmV2ZW50IHBhZGRpbmcgYW5kIGJvcmRlciBmcm9tIGFmZmVjdGluZyBlbGVtZW50IHdpZHRoLlxcbiAqXFxuICogICAgV2UgdXNlZCB0byBzZXQgdGhpcyBpbiB0aGUgaHRtbCBlbGVtZW50IGFuZCBpbmhlcml0IGZyb21cXG4gKiAgICB0aGUgcGFyZW50IGVsZW1lbnQgZm9yIGV2ZXJ5dGhpbmcgZWxzZS4gVGhpcyBjYXVzZWQgaXNzdWVzXFxuICogICAgaW4gc2hhZG93LWRvbS1lbmhhbmNlZCBlbGVtZW50cyBsaWtlIDxkZXRhaWxzPiB3aGVyZSB0aGUgY29udGVudFxcbiAqICAgIGlzIHdyYXBwZWQgYnkgYSBkaXYgd2l0aCBib3gtc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgLlxcbiAqXFxuICogICAgaHR0cHM6Ly9naXRodWIuY29tL21vemRldnMvY3NzcmVtZWR5L2lzc3Vlcy80XFxuICpcXG4gKlxcbiAqIDIuIEFsbG93IGFkZGluZyBhIGJvcmRlciB0byBhbiBlbGVtZW50IGJ5IGp1c3QgYWRkaW5nIGEgYm9yZGVyLXdpZHRoLlxcbiAqXFxuICogICAgQnkgZGVmYXVsdCwgdGhlIHdheSB0aGUgYnJvd3NlciBzcGVjaWZpZXMgdGhhdCBhbiBlbGVtZW50IHNob3VsZCBoYXZlIG5vXFxuICogICAgYm9yZGVyIGlzIGJ5IHNldHRpbmcgaXQncyBib3JkZXItc3R5bGUgdG8gYG5vbmVgIGluIHRoZSB1c2VyLWFnZW50XFxuICogICAgc3R5bGVzaGVldC5cXG4gKlxcbiAqICAgIEluIG9yZGVyIHRvIGVhc2lseSBhZGQgYm9yZGVycyB0byBlbGVtZW50cyBieSBqdXN0IHNldHRpbmcgdGhlIGBib3JkZXItd2lkdGhgXFxuICogICAgcHJvcGVydHksIHdlIGNoYW5nZSB0aGUgZGVmYXVsdCBib3JkZXItc3R5bGUgZm9yIGFsbCBlbGVtZW50cyB0byBgc29saWRgLCBhbmRcXG4gKiAgICB1c2UgYm9yZGVyLXdpZHRoIHRvIGhpZGUgdGhlbSBpbnN0ZWFkLiBUaGlzIHdheSBvdXIgYGJvcmRlcmAgdXRpbGl0aWVzIG9ubHlcXG4gKiAgICBuZWVkIHRvIHNldCB0aGUgYGJvcmRlci13aWR0aGAgcHJvcGVydHkgaW5zdGVhZCBvZiB0aGUgZW50aXJlIGBib3JkZXJgXFxuICogICAgc2hvcnRoYW5kLCBtYWtpbmcgb3VyIGJvcmRlciB1dGlsaXRpZXMgbXVjaCBtb3JlIHN0cmFpZ2h0Zm9yd2FyZCB0byBjb21wb3NlLlxcbiAqXFxuICogICAgaHR0cHM6Ly9naXRodWIuY29tL3RhaWx3aW5kY3NzL3RhaWx3aW5kY3NzL3B1bGwvMTE2XFxuICovXFxuXFxuKixcXG46OmJlZm9yZSxcXG46OmFmdGVyIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cXG4gIGJvcmRlci13aWR0aDogMDsgLyogMiAqL1xcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDsgLyogMiAqL1xcbiAgYm9yZGVyLWNvbG9yOiBjdXJyZW50Q29sb3I7IC8qIDIgKi9cXG59XFxuXFxuLypcXG4gKiBFbnN1cmUgaG9yaXpvbnRhbCBydWxlcyBhcmUgdmlzaWJsZSBieSBkZWZhdWx0XFxuICovXFxuXFxuaHIge1xcbiAgYm9yZGVyLXRvcC13aWR0aDogMXB4O1xcbn1cXG5cXG4vKipcXG4gKiBVbmRvIHRoZSBgYm9yZGVyLXN0eWxlOiBub25lYCByZXNldCB0aGF0IE5vcm1hbGl6ZSBhcHBsaWVzIHRvIGltYWdlcyBzbyB0aGF0XFxuICogb3VyIGBib3JkZXIte3dpZHRofWAgdXRpbGl0aWVzIGhhdmUgdGhlIGV4cGVjdGVkIGVmZmVjdC5cXG4gKlxcbiAqIFRoZSBOb3JtYWxpemUgcmVzZXQgaXMgdW5uZWNlc3NhcnkgZm9yIHVzIHNpbmNlIHdlIGRlZmF1bHQgdGhlIGJvcmRlci13aWR0aFxcbiAqIHRvIDAgb24gYWxsIGVsZW1lbnRzLlxcbiAqXFxuICogaHR0cHM6Ly9naXRodWIuY29tL3RhaWx3aW5kY3NzL3RhaWx3aW5kY3NzL2lzc3Vlcy8zNjJcXG4gKi9cXG5cXG5pbWcge1xcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcXG59XFxuXFxudGV4dGFyZWEge1xcbiAgcmVzaXplOiB2ZXJ0aWNhbDtcXG59XFxuXFxuaW5wdXQ6OnBsYWNlaG9sZGVyLFxcbnRleHRhcmVhOjpwbGFjZWhvbGRlciB7XFxuICBvcGFjaXR5OiAxO1xcbiAgY29sb3I6IHRoZW1lKCdjb2xvcnMuZ3JheS40MDAnLCAjYTFhMWFhKTtcXG59XFxuXFxuYnV0dG9uLFxcbltyb2xlPVxcXCJidXR0b25cXFwiXSB7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbnRhYmxlIHtcXG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XFxufVxcblxcbmgxLFxcbmgyLFxcbmgzLFxcbmg0LFxcbmg1LFxcbmg2IHtcXG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcXG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xcbn1cXG5cXG4vKipcXG4gKiBSZXNldCBsaW5rcyB0byBvcHRpbWl6ZSBmb3Igb3B0LWluIHN0eWxpbmcgaW5zdGVhZCBvZlxcbiAqIG9wdC1vdXQuXFxuICovXFxuXFxuYSB7XFxuICBjb2xvcjogaW5oZXJpdDtcXG4gIHRleHQtZGVjb3JhdGlvbjogaW5oZXJpdDtcXG59XFxuXFxuLyoqXFxuICogUmVzZXQgZm9ybSBlbGVtZW50IHByb3BlcnRpZXMgdGhhdCBhcmUgZWFzeSB0byBmb3JnZXQgdG9cXG4gKiBzdHlsZSBleHBsaWNpdGx5IHNvIHlvdSBkb24ndCBpbmFkdmVydGVudGx5IGludHJvZHVjZVxcbiAqIHN0eWxlcyB0aGF0IGRldmlhdGUgZnJvbSB5b3VyIGRlc2lnbiBzeXN0ZW0uIFRoZXNlIHN0eWxlc1xcbiAqIHN1cHBsZW1lbnQgYSBwYXJ0aWFsIHJlc2V0IHRoYXQgaXMgYWxyZWFkeSBhcHBsaWVkIGJ5XFxuICogbm9ybWFsaXplLmNzcy5cXG4gKi9cXG5cXG5idXR0b24sXFxuaW5wdXQsXFxub3B0Z3JvdXAsXFxuc2VsZWN0LFxcbnRleHRhcmVhIHtcXG4gIHBhZGRpbmc6IDA7XFxuICBsaW5lLWhlaWdodDogaW5oZXJpdDtcXG4gIGNvbG9yOiBpbmhlcml0O1xcbn1cXG5cXG4vKipcXG4gKiBVc2UgdGhlIGNvbmZpZ3VyZWQgJ21vbm8nIGZvbnQgZmFtaWx5IGZvciBlbGVtZW50cyB0aGF0XFxuICogYXJlIGV4cGVjdGVkIHRvIGJlIHJlbmRlcmVkIHdpdGggYSBtb25vc3BhY2UgZm9udCwgZmFsbGluZ1xcbiAqIGJhY2sgdG8gdGhlIHN5c3RlbSBtb25vc3BhY2Ugc3RhY2sgaWYgdGhlcmUgaXMgbm8gY29uZmlndXJlZFxcbiAqICdtb25vJyBmb250IGZhbWlseS5cXG4gKi9cXG5cXG5wcmUsXFxuY29kZSxcXG5rYmQsXFxuc2FtcCB7XFxuICBmb250LWZhbWlseTogdGhlbWUoJ2ZvbnRGYW1pbHkubW9ubycsIHVpLW1vbm9zcGFjZSwgU0ZNb25vLVJlZ3VsYXIsIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLCBcXFwiTGliZXJhdGlvbiBNb25vXFxcIiwgXFxcIkNvdXJpZXIgTmV3XFxcIiwgbW9ub3NwYWNlKTtcXG59XFxuXFxuLyoqXFxuICogMS4gTWFrZSByZXBsYWNlZCBlbGVtZW50cyBgZGlzcGxheTogYmxvY2tgIGJ5IGRlZmF1bHQgYXMgdGhhdCdzXFxuICogICAgdGhlIGJlaGF2aW9yIHlvdSB3YW50IGFsbW9zdCBhbGwgb2YgdGhlIHRpbWUuIEluc3BpcmVkIGJ5XFxuICogICAgQ1NTIFJlbWVkeSwgd2l0aCBgc3ZnYCBhZGRlZCBhcyB3ZWxsLlxcbiAqXFxuICogICAgaHR0cHM6Ly9naXRodWIuY29tL21vemRldnMvY3NzcmVtZWR5L2lzc3Vlcy8xNFxcbiAqIFxcbiAqIDIuIEFkZCBgdmVydGljYWwtYWxpZ246IG1pZGRsZWAgdG8gYWxpZ24gcmVwbGFjZWQgZWxlbWVudHMgbW9yZVxcbiAqICAgIHNlbnNpYmx5IGJ5IGRlZmF1bHQgd2hlbiBvdmVycmlkaW5nIGBkaXNwbGF5YCBieSBhZGRpbmcgYVxcbiAqICAgIHV0aWxpdHkgbGlrZSBgaW5saW5lYC5cXG4gKlxcbiAqICAgIFRoaXMgY2FuIHRyaWdnZXIgYSBwb29ybHkgY29uc2lkZXJlZCBsaW50aW5nIGVycm9yIGluIHNvbWVcXG4gKiAgICB0b29scyBidXQgaXMgaW5jbHVkZWQgYnkgZGVzaWduLlxcbiAqIFxcbiAqICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9qZW5zaW1tb25zL2Nzc3JlbWVkeS9pc3N1ZXMvMTQjaXNzdWVjb21tZW50LTYzNDkzNDIxMFxcbiAqL1xcblxcbmltZyxcXG5zdmcsXFxudmlkZW8sXFxuY2FudmFzLFxcbmF1ZGlvLFxcbmlmcmFtZSxcXG5lbWJlZCxcXG5vYmplY3Qge1xcbiAgZGlzcGxheTogYmxvY2s7IC8qIDEgKi9cXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IC8qIDIgKi9cXG59XFxuXFxuLyoqXFxuICogQ29uc3RyYWluIGltYWdlcyBhbmQgdmlkZW9zIHRvIHRoZSBwYXJlbnQgd2lkdGggYW5kIHByZXNlcnZlXFxuICogdGhlaXIgaW50cmluc2ljIGFzcGVjdCByYXRpby5cXG4gKlxcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9tb3pkZXZzL2Nzc3JlbWVkeS9pc3N1ZXMvMTRcXG4gKi9cXG5cXG5pbWcsXFxudmlkZW8ge1xcbiAgbWF4LXdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiBhdXRvO1xcbn1cXG5cXG4vKipcXG4gKiBFbnN1cmUgdGhlIGRlZmF1bHQgYnJvd3NlciBiZWhhdmlvciBvZiB0aGUgYGhpZGRlbmAgYXR0cmlidXRlLlxcbiAqL1xcblxcbltoaWRkZW5dIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblwiLG51bGxdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7XG4gIGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoO1xuXG4gIGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykge1xuICAgIGFycjJbaV0gPSBhcnJbaV07XG4gIH1cblxuICByZXR1cm4gYXJyMjtcbn0iLCJpbXBvcnQgYXJyYXlMaWtlVG9BcnJheSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlMaWtlVG9BcnJheVwiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShhcnIpO1xufSIsImZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHtcbiAgdHJ5IHtcbiAgICB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7XG4gICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZWplY3QoZXJyb3IpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChpbmZvLmRvbmUpIHtcbiAgICByZXNvbHZlKHZhbHVlKTtcbiAgfSBlbHNlIHtcbiAgICBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXMsXG4gICAgICAgIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTtcblxuICAgICAgZnVuY3Rpb24gX25leHQodmFsdWUpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcIm5leHRcIiwgdmFsdWUpO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBfdGhyb3coZXJyKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJ0aHJvd1wiLCBlcnIpO1xuICAgICAgfVxuXG4gICAgICBfbmV4dCh1bmRlZmluZWQpO1xuICAgIH0pO1xuICB9O1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgaWYgKGtleSBpbiBvYmopIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG9ialtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikge1xuICBpZiAodHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGl0ZXIpKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7XG4gIHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpO1xufSIsImltcG9ydCBhcnJheVdpdGhvdXRIb2xlcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlXaXRob3V0SG9sZXNcIjtcbmltcG9ydCBpdGVyYWJsZVRvQXJyYXkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2l0ZXJhYmxlVG9BcnJheVwiO1xuaW1wb3J0IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheVwiO1xuaW1wb3J0IG5vbkl0ZXJhYmxlU3ByZWFkIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9ub25JdGVyYWJsZVNwcmVhZFwiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikge1xuICByZXR1cm4gYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB8fCBpdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IG5vbkl0ZXJhYmxlU3ByZWFkKCk7XG59IiwiaW1wb3J0IGFycmF5TGlrZVRvQXJyYXkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FycmF5TGlrZVRvQXJyYXlcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHtcbiAgaWYgKCFvKSByZXR1cm47XG4gIGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbiAgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpO1xuICBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lO1xuICBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTtcbiAgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG59IiwiLy8gc2hpbSBmb3IgdXNpbmcgcHJvY2VzcyBpbiBicm93c2VyXG52YXIgcHJvY2VzcyA9IG1vZHVsZS5leHBvcnRzID0ge307XG5cbi8vIGNhY2hlZCBmcm9tIHdoYXRldmVyIGdsb2JhbCBpcyBwcmVzZW50IHNvIHRoYXQgdGVzdCBydW5uZXJzIHRoYXQgc3R1YiBpdFxuLy8gZG9uJ3QgYnJlYWsgdGhpbmdzLiAgQnV0IHdlIG5lZWQgdG8gd3JhcCBpdCBpbiBhIHRyeSBjYXRjaCBpbiBjYXNlIGl0IGlzXG4vLyB3cmFwcGVkIGluIHN0cmljdCBtb2RlIGNvZGUgd2hpY2ggZG9lc24ndCBkZWZpbmUgYW55IGdsb2JhbHMuICBJdCdzIGluc2lkZSBhXG4vLyBmdW5jdGlvbiBiZWNhdXNlIHRyeS9jYXRjaGVzIGRlb3B0aW1pemUgaW4gY2VydGFpbiBlbmdpbmVzLlxuXG52YXIgY2FjaGVkU2V0VGltZW91dDtcbnZhciBjYWNoZWRDbGVhclRpbWVvdXQ7XG5cbmZ1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG5mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0ICgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2NsZWFyVGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuKGZ1bmN0aW9uICgpIHtcbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIHNldFRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIGNsZWFyVGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICB9XG59ICgpKVxuZnVuY3Rpb24gcnVuVGltZW91dChmdW4pIHtcbiAgICBpZiAoY2FjaGVkU2V0VGltZW91dCA9PT0gc2V0VGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgLy8gaWYgc2V0VGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZFNldFRpbWVvdXQgPT09IGRlZmF1bHRTZXRUaW1vdXQgfHwgIWNhY2hlZFNldFRpbWVvdXQpICYmIHNldFRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9IGNhdGNoKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0IHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKG51bGwsIGZ1biwgMCk7XG4gICAgICAgIH0gY2F0Y2goZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvclxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbCh0aGlzLCBmdW4sIDApO1xuICAgICAgICB9XG4gICAgfVxuXG5cbn1cbmZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChtYXJrZXIpIHtcbiAgICBpZiAoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgLy8gaWYgY2xlYXJUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBkZWZhdWx0Q2xlYXJUaW1lb3V0IHx8ICFjYWNoZWRDbGVhclRpbWVvdXQpICYmIGNsZWFyVGltZW91dCkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfSBjYXRjaCAoZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgIHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwobnVsbCwgbWFya2VyKTtcbiAgICAgICAgfSBjYXRjaCAoZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvci5cbiAgICAgICAgICAgIC8vIFNvbWUgdmVyc2lvbnMgb2YgSS5FLiBoYXZlIGRpZmZlcmVudCBydWxlcyBmb3IgY2xlYXJUaW1lb3V0IHZzIHNldFRpbWVvdXRcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbCh0aGlzLCBtYXJrZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG5cblxufVxudmFyIHF1ZXVlID0gW107XG52YXIgZHJhaW5pbmcgPSBmYWxzZTtcbnZhciBjdXJyZW50UXVldWU7XG52YXIgcXVldWVJbmRleCA9IC0xO1xuXG5mdW5jdGlvbiBjbGVhblVwTmV4dFRpY2soKSB7XG4gICAgaWYgKCFkcmFpbmluZyB8fCAhY3VycmVudFF1ZXVlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBpZiAoY3VycmVudFF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBxdWV1ZSA9IGN1cnJlbnRRdWV1ZS5jb25jYXQocXVldWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICB9XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBkcmFpblF1ZXVlKCk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBkcmFpblF1ZXVlKCkge1xuICAgIGlmIChkcmFpbmluZykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciB0aW1lb3V0ID0gcnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO1xuICAgIGRyYWluaW5nID0gdHJ1ZTtcblxuICAgIHZhciBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgd2hpbGUobGVuKSB7XG4gICAgICAgIGN1cnJlbnRRdWV1ZSA9IHF1ZXVlO1xuICAgICAgICBxdWV1ZSA9IFtdO1xuICAgICAgICB3aGlsZSAoKytxdWV1ZUluZGV4IDwgbGVuKSB7XG4gICAgICAgICAgICBpZiAoY3VycmVudFF1ZXVlKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudFF1ZXVlW3F1ZXVlSW5kZXhdLnJ1bigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICAgICAgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIH1cbiAgICBjdXJyZW50UXVldWUgPSBudWxsO1xuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgcnVuQ2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xufVxuXG5wcm9jZXNzLm5leHRUaWNrID0gZnVuY3Rpb24gKGZ1bikge1xuICAgIHZhciBhcmdzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGggLSAxKTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGFyZ3NbaSAtIDFdID0gYXJndW1lbnRzW2ldO1xuICAgICAgICB9XG4gICAgfVxuICAgIHF1ZXVlLnB1c2gobmV3IEl0ZW0oZnVuLCBhcmdzKSk7XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCA9PT0gMSAmJiAhZHJhaW5pbmcpIHtcbiAgICAgICAgcnVuVGltZW91dChkcmFpblF1ZXVlKTtcbiAgICB9XG59O1xuXG4vLyB2OCBsaWtlcyBwcmVkaWN0aWJsZSBvYmplY3RzXG5mdW5jdGlvbiBJdGVtKGZ1biwgYXJyYXkpIHtcbiAgICB0aGlzLmZ1biA9IGZ1bjtcbiAgICB0aGlzLmFycmF5ID0gYXJyYXk7XG59XG5JdGVtLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5mdW4uYXBwbHkobnVsbCwgdGhpcy5hcnJheSk7XG59O1xucHJvY2Vzcy50aXRsZSA9ICdicm93c2VyJztcbnByb2Nlc3MuYnJvd3NlciA9IHRydWU7XG5wcm9jZXNzLmVudiA9IHt9O1xucHJvY2Vzcy5hcmd2ID0gW107XG5wcm9jZXNzLnZlcnNpb24gPSAnJzsgLy8gZW1wdHkgc3RyaW5nIHRvIGF2b2lkIHJlZ2V4cCBpc3N1ZXNcbnByb2Nlc3MudmVyc2lvbnMgPSB7fTtcblxuZnVuY3Rpb24gbm9vcCgpIHt9XG5cbnByb2Nlc3Mub24gPSBub29wO1xucHJvY2Vzcy5hZGRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLm9uY2UgPSBub29wO1xucHJvY2Vzcy5vZmYgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUFsbExpc3RlbmVycyA9IG5vb3A7XG5wcm9jZXNzLmVtaXQgPSBub29wO1xucHJvY2Vzcy5wcmVwZW5kTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5wcmVwZW5kT25jZUxpc3RlbmVyID0gbm9vcDtcblxucHJvY2Vzcy5saXN0ZW5lcnMgPSBmdW5jdGlvbiAobmFtZSkgeyByZXR1cm4gW10gfVxuXG5wcm9jZXNzLmJpbmRpbmcgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5cbnByb2Nlc3MuY3dkID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gJy8nIH07XG5wcm9jZXNzLmNoZGlyID0gZnVuY3Rpb24gKGRpcikge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xucHJvY2Vzcy51bWFzayA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gMDsgfTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24oKSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcbiAgdmFyIGxvZ2dlZFR5cGVGYWlsdXJlcyA9IHt9O1xuICB2YXIgaGFzID0gRnVuY3Rpb24uY2FsbC5iaW5kKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkpO1xuXG4gIHByaW50V2FybmluZyA9IGZ1bmN0aW9uKHRleHQpIHtcbiAgICB2YXIgbWVzc2FnZSA9ICdXYXJuaW5nOiAnICsgdGV4dDtcbiAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25zb2xlLmVycm9yKG1lc3NhZ2UpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgLy8gLS0tIFdlbGNvbWUgdG8gZGVidWdnaW5nIFJlYWN0IC0tLVxuICAgICAgLy8gVGhpcyBlcnJvciB3YXMgdGhyb3duIGFzIGEgY29udmVuaWVuY2Ugc28gdGhhdCB5b3UgY2FuIHVzZSB0aGlzIHN0YWNrXG4gICAgICAvLyB0byBmaW5kIHRoZSBjYWxsc2l0ZSB0aGF0IGNhdXNlZCB0aGlzIHdhcm5pbmcgdG8gZmlyZS5cbiAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICB9IGNhdGNoICh4KSB7fVxuICB9O1xufVxuXG4vKipcbiAqIEFzc2VydCB0aGF0IHRoZSB2YWx1ZXMgbWF0Y2ggd2l0aCB0aGUgdHlwZSBzcGVjcy5cbiAqIEVycm9yIG1lc3NhZ2VzIGFyZSBtZW1vcml6ZWQgYW5kIHdpbGwgb25seSBiZSBzaG93biBvbmNlLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSB0eXBlU3BlY3MgTWFwIG9mIG5hbWUgdG8gYSBSZWFjdFByb3BUeXBlXG4gKiBAcGFyYW0ge29iamVjdH0gdmFsdWVzIFJ1bnRpbWUgdmFsdWVzIHRoYXQgbmVlZCB0byBiZSB0eXBlLWNoZWNrZWRcbiAqIEBwYXJhbSB7c3RyaW5nfSBsb2NhdGlvbiBlLmcuIFwicHJvcFwiLCBcImNvbnRleHRcIiwgXCJjaGlsZCBjb250ZXh0XCJcbiAqIEBwYXJhbSB7c3RyaW5nfSBjb21wb25lbnROYW1lIE5hbWUgb2YgdGhlIGNvbXBvbmVudCBmb3IgZXJyb3IgbWVzc2FnZXMuXG4gKiBAcGFyYW0gez9GdW5jdGlvbn0gZ2V0U3RhY2sgUmV0dXJucyB0aGUgY29tcG9uZW50IHN0YWNrLlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gY2hlY2tQcm9wVHlwZXModHlwZVNwZWNzLCB2YWx1ZXMsIGxvY2F0aW9uLCBjb21wb25lbnROYW1lLCBnZXRTdGFjaykge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGZvciAodmFyIHR5cGVTcGVjTmFtZSBpbiB0eXBlU3BlY3MpIHtcbiAgICAgIGlmIChoYXModHlwZVNwZWNzLCB0eXBlU3BlY05hbWUpKSB7XG4gICAgICAgIHZhciBlcnJvcjtcbiAgICAgICAgLy8gUHJvcCB0eXBlIHZhbGlkYXRpb24gbWF5IHRocm93LiBJbiBjYXNlIHRoZXkgZG8sIHdlIGRvbid0IHdhbnQgdG9cbiAgICAgICAgLy8gZmFpbCB0aGUgcmVuZGVyIHBoYXNlIHdoZXJlIGl0IGRpZG4ndCBmYWlsIGJlZm9yZS4gU28gd2UgbG9nIGl0LlxuICAgICAgICAvLyBBZnRlciB0aGVzZSBoYXZlIGJlZW4gY2xlYW5lZCB1cCwgd2UnbGwgbGV0IHRoZW0gdGhyb3cuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gVGhpcyBpcyBpbnRlbnRpb25hbGx5IGFuIGludmFyaWFudCB0aGF0IGdldHMgY2F1Z2h0LiBJdCdzIHRoZSBzYW1lXG4gICAgICAgICAgLy8gYmVoYXZpb3IgYXMgd2l0aG91dCB0aGlzIHN0YXRlbWVudCBleGNlcHQgd2l0aCBhIGJldHRlciBtZXNzYWdlLlxuICAgICAgICAgIGlmICh0eXBlb2YgdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0gIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHZhciBlcnIgPSBFcnJvcihcbiAgICAgICAgICAgICAgKGNvbXBvbmVudE5hbWUgfHwgJ1JlYWN0IGNsYXNzJykgKyAnOiAnICsgbG9jYXRpb24gKyAnIHR5cGUgYCcgKyB0eXBlU3BlY05hbWUgKyAnYCBpcyBpbnZhbGlkOyAnICtcbiAgICAgICAgICAgICAgJ2l0IG11c3QgYmUgYSBmdW5jdGlvbiwgdXN1YWxseSBmcm9tIHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZSwgYnV0IHJlY2VpdmVkIGAnICsgdHlwZW9mIHR5cGVTcGVjc1t0eXBlU3BlY05hbWVdICsgJ2AuJ1xuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlcnJvciA9IHR5cGVTcGVjc1t0eXBlU3BlY05hbWVdKHZhbHVlcywgdHlwZVNwZWNOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgbnVsbCwgUmVhY3RQcm9wVHlwZXNTZWNyZXQpO1xuICAgICAgICB9IGNhdGNoIChleCkge1xuICAgICAgICAgIGVycm9yID0gZXg7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVycm9yICYmICEoZXJyb3IgaW5zdGFuY2VvZiBFcnJvcikpIHtcbiAgICAgICAgICBwcmludFdhcm5pbmcoXG4gICAgICAgICAgICAoY29tcG9uZW50TmFtZSB8fCAnUmVhY3QgY2xhc3MnKSArICc6IHR5cGUgc3BlY2lmaWNhdGlvbiBvZiAnICtcbiAgICAgICAgICAgIGxvY2F0aW9uICsgJyBgJyArIHR5cGVTcGVjTmFtZSArICdgIGlzIGludmFsaWQ7IHRoZSB0eXBlIGNoZWNrZXIgJyArXG4gICAgICAgICAgICAnZnVuY3Rpb24gbXVzdCByZXR1cm4gYG51bGxgIG9yIGFuIGBFcnJvcmAgYnV0IHJldHVybmVkIGEgJyArIHR5cGVvZiBlcnJvciArICcuICcgK1xuICAgICAgICAgICAgJ1lvdSBtYXkgaGF2ZSBmb3Jnb3R0ZW4gdG8gcGFzcyBhbiBhcmd1bWVudCB0byB0aGUgdHlwZSBjaGVja2VyICcgK1xuICAgICAgICAgICAgJ2NyZWF0b3IgKGFycmF5T2YsIGluc3RhbmNlT2YsIG9iamVjdE9mLCBvbmVPZiwgb25lT2ZUeXBlLCBhbmQgJyArXG4gICAgICAgICAgICAnc2hhcGUgYWxsIHJlcXVpcmUgYW4gYXJndW1lbnQpLidcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEVycm9yICYmICEoZXJyb3IubWVzc2FnZSBpbiBsb2dnZWRUeXBlRmFpbHVyZXMpKSB7XG4gICAgICAgICAgLy8gT25seSBtb25pdG9yIHRoaXMgZmFpbHVyZSBvbmNlIGJlY2F1c2UgdGhlcmUgdGVuZHMgdG8gYmUgYSBsb3Qgb2YgdGhlXG4gICAgICAgICAgLy8gc2FtZSBlcnJvci5cbiAgICAgICAgICBsb2dnZWRUeXBlRmFpbHVyZXNbZXJyb3IubWVzc2FnZV0gPSB0cnVlO1xuXG4gICAgICAgICAgdmFyIHN0YWNrID0gZ2V0U3RhY2sgPyBnZXRTdGFjaygpIDogJyc7XG5cbiAgICAgICAgICBwcmludFdhcm5pbmcoXG4gICAgICAgICAgICAnRmFpbGVkICcgKyBsb2NhdGlvbiArICcgdHlwZTogJyArIGVycm9yLm1lc3NhZ2UgKyAoc3RhY2sgIT0gbnVsbCA/IHN0YWNrIDogJycpXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIFJlc2V0cyB3YXJuaW5nIGNhY2hlIHdoZW4gdGVzdGluZy5cbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5jaGVja1Byb3BUeXBlcy5yZXNldFdhcm5pbmdDYWNoZSA9IGZ1bmN0aW9uKCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGxvZ2dlZFR5cGVGYWlsdXJlcyA9IHt9O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY2hlY2tQcm9wVHlwZXM7XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xudmFyIGFzc2lnbiA9IHJlcXVpcmUoJ29iamVjdC1hc3NpZ24nKTtcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcbnZhciBjaGVja1Byb3BUeXBlcyA9IHJlcXVpcmUoJy4vY2hlY2tQcm9wVHlwZXMnKTtcblxudmFyIGhhcyA9IEZ1bmN0aW9uLmNhbGwuYmluZChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5KTtcbnZhciBwcmludFdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBwcmludFdhcm5pbmcgPSBmdW5jdGlvbih0ZXh0KSB7XG4gICAgdmFyIG1lc3NhZ2UgPSAnV2FybmluZzogJyArIHRleHQ7XG4gICAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgIC8vIC0tLSBXZWxjb21lIHRvIGRlYnVnZ2luZyBSZWFjdCAtLS1cbiAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgLy8gdG8gZmluZCB0aGUgY2FsbHNpdGUgdGhhdCBjYXVzZWQgdGhpcyB3YXJuaW5nIHRvIGZpcmUuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgfSBjYXRjaCAoeCkge31cbiAgfTtcbn1cblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvblRoYXRSZXR1cm5zTnVsbCgpIHtcbiAgcmV0dXJuIG51bGw7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXNWYWxpZEVsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpIHtcbiAgLyogZ2xvYmFsIFN5bWJvbCAqL1xuICB2YXIgSVRFUkFUT1JfU1lNQk9MID0gdHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiBTeW1ib2wuaXRlcmF0b3I7XG4gIHZhciBGQVVYX0lURVJBVE9SX1NZTUJPTCA9ICdAQGl0ZXJhdG9yJzsgLy8gQmVmb3JlIFN5bWJvbCBzcGVjLlxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBpdGVyYXRvciBtZXRob2QgZnVuY3Rpb24gY29udGFpbmVkIG9uIHRoZSBpdGVyYWJsZSBvYmplY3QuXG4gICAqXG4gICAqIEJlIHN1cmUgdG8gaW52b2tlIHRoZSBmdW5jdGlvbiB3aXRoIHRoZSBpdGVyYWJsZSBhcyBjb250ZXh0OlxuICAgKlxuICAgKiAgICAgdmFyIGl0ZXJhdG9yRm4gPSBnZXRJdGVyYXRvckZuKG15SXRlcmFibGUpO1xuICAgKiAgICAgaWYgKGl0ZXJhdG9yRm4pIHtcbiAgICogICAgICAgdmFyIGl0ZXJhdG9yID0gaXRlcmF0b3JGbi5jYWxsKG15SXRlcmFibGUpO1xuICAgKiAgICAgICAuLi5cbiAgICogICAgIH1cbiAgICpcbiAgICogQHBhcmFtIHs/b2JqZWN0fSBtYXliZUl0ZXJhYmxlXG4gICAqIEByZXR1cm4gez9mdW5jdGlvbn1cbiAgICovXG4gIGZ1bmN0aW9uIGdldEl0ZXJhdG9yRm4obWF5YmVJdGVyYWJsZSkge1xuICAgIHZhciBpdGVyYXRvckZuID0gbWF5YmVJdGVyYWJsZSAmJiAoSVRFUkFUT1JfU1lNQk9MICYmIG1heWJlSXRlcmFibGVbSVRFUkFUT1JfU1lNQk9MXSB8fCBtYXliZUl0ZXJhYmxlW0ZBVVhfSVRFUkFUT1JfU1lNQk9MXSk7XG4gICAgaWYgKHR5cGVvZiBpdGVyYXRvckZuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXR1cm4gaXRlcmF0b3JGbjtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQ29sbGVjdGlvbiBvZiBtZXRob2RzIHRoYXQgYWxsb3cgZGVjbGFyYXRpb24gYW5kIHZhbGlkYXRpb24gb2YgcHJvcHMgdGhhdCBhcmVcbiAgICogc3VwcGxpZWQgdG8gUmVhY3QgY29tcG9uZW50cy4gRXhhbXBsZSB1c2FnZTpcbiAgICpcbiAgICogICB2YXIgUHJvcHMgPSByZXF1aXJlKCdSZWFjdFByb3BUeXBlcycpO1xuICAgKiAgIHZhciBNeUFydGljbGUgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAqICAgICBwcm9wVHlwZXM6IHtcbiAgICogICAgICAgLy8gQW4gb3B0aW9uYWwgc3RyaW5nIHByb3AgbmFtZWQgXCJkZXNjcmlwdGlvblwiLlxuICAgKiAgICAgICBkZXNjcmlwdGlvbjogUHJvcHMuc3RyaW5nLFxuICAgKlxuICAgKiAgICAgICAvLyBBIHJlcXVpcmVkIGVudW0gcHJvcCBuYW1lZCBcImNhdGVnb3J5XCIuXG4gICAqICAgICAgIGNhdGVnb3J5OiBQcm9wcy5vbmVPZihbJ05ld3MnLCdQaG90b3MnXSkuaXNSZXF1aXJlZCxcbiAgICpcbiAgICogICAgICAgLy8gQSBwcm9wIG5hbWVkIFwiZGlhbG9nXCIgdGhhdCByZXF1aXJlcyBhbiBpbnN0YW5jZSBvZiBEaWFsb2cuXG4gICAqICAgICAgIGRpYWxvZzogUHJvcHMuaW5zdGFuY2VPZihEaWFsb2cpLmlzUmVxdWlyZWRcbiAgICogICAgIH0sXG4gICAqICAgICByZW5kZXI6IGZ1bmN0aW9uKCkgeyAuLi4gfVxuICAgKiAgIH0pO1xuICAgKlxuICAgKiBBIG1vcmUgZm9ybWFsIHNwZWNpZmljYXRpb24gb2YgaG93IHRoZXNlIG1ldGhvZHMgYXJlIHVzZWQ6XG4gICAqXG4gICAqICAgdHlwZSA6PSBhcnJheXxib29sfGZ1bmN8b2JqZWN0fG51bWJlcnxzdHJpbmd8b25lT2YoWy4uLl0pfGluc3RhbmNlT2YoLi4uKVxuICAgKiAgIGRlY2wgOj0gUmVhY3RQcm9wVHlwZXMue3R5cGV9KC5pc1JlcXVpcmVkKT9cbiAgICpcbiAgICogRWFjaCBhbmQgZXZlcnkgZGVjbGFyYXRpb24gcHJvZHVjZXMgYSBmdW5jdGlvbiB3aXRoIHRoZSBzYW1lIHNpZ25hdHVyZS4gVGhpc1xuICAgKiBhbGxvd3MgdGhlIGNyZWF0aW9uIG9mIGN1c3RvbSB2YWxpZGF0aW9uIGZ1bmN0aW9ucy4gRm9yIGV4YW1wbGU6XG4gICAqXG4gICAqICB2YXIgTXlMaW5rID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgKiAgICBwcm9wVHlwZXM6IHtcbiAgICogICAgICAvLyBBbiBvcHRpb25hbCBzdHJpbmcgb3IgVVJJIHByb3AgbmFtZWQgXCJocmVmXCIuXG4gICAqICAgICAgaHJlZjogZnVuY3Rpb24ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lKSB7XG4gICAqICAgICAgICB2YXIgcHJvcFZhbHVlID0gcHJvcHNbcHJvcE5hbWVdO1xuICAgKiAgICAgICAgaWYgKHByb3BWYWx1ZSAhPSBudWxsICYmIHR5cGVvZiBwcm9wVmFsdWUgIT09ICdzdHJpbmcnICYmXG4gICAqICAgICAgICAgICAgIShwcm9wVmFsdWUgaW5zdGFuY2VvZiBVUkkpKSB7XG4gICAqICAgICAgICAgIHJldHVybiBuZXcgRXJyb3IoXG4gICAqICAgICAgICAgICAgJ0V4cGVjdGVkIGEgc3RyaW5nIG9yIGFuIFVSSSBmb3IgJyArIHByb3BOYW1lICsgJyBpbiAnICtcbiAgICogICAgICAgICAgICBjb21wb25lbnROYW1lXG4gICAqICAgICAgICAgICk7XG4gICAqICAgICAgICB9XG4gICAqICAgICAgfVxuICAgKiAgICB9LFxuICAgKiAgICByZW5kZXI6IGZ1bmN0aW9uKCkgey4uLn1cbiAgICogIH0pO1xuICAgKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG5cbiAgdmFyIEFOT05ZTU9VUyA9ICc8PGFub255bW91cz4+JztcblxuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBjcmVhdGVQcmltaXRpdmVUeXBlQ2hlY2tlcignYXJyYXknKSxcbiAgICBib29sOiBjcmVhdGVQcmltaXRpdmVUeXBlQ2hlY2tlcignYm9vbGVhbicpLFxuICAgIGZ1bmM6IGNyZWF0ZVByaW1pdGl2ZVR5cGVDaGVja2VyKCdmdW5jdGlvbicpLFxuICAgIG51bWJlcjogY3JlYXRlUHJpbWl0aXZlVHlwZUNoZWNrZXIoJ251bWJlcicpLFxuICAgIG9iamVjdDogY3JlYXRlUHJpbWl0aXZlVHlwZUNoZWNrZXIoJ29iamVjdCcpLFxuICAgIHN0cmluZzogY3JlYXRlUHJpbWl0aXZlVHlwZUNoZWNrZXIoJ3N0cmluZycpLFxuICAgIHN5bWJvbDogY3JlYXRlUHJpbWl0aXZlVHlwZUNoZWNrZXIoJ3N5bWJvbCcpLFxuXG4gICAgYW55OiBjcmVhdGVBbnlUeXBlQ2hlY2tlcigpLFxuICAgIGFycmF5T2Y6IGNyZWF0ZUFycmF5T2ZUeXBlQ2hlY2tlcixcbiAgICBlbGVtZW50OiBjcmVhdGVFbGVtZW50VHlwZUNoZWNrZXIoKSxcbiAgICBlbGVtZW50VHlwZTogY3JlYXRlRWxlbWVudFR5cGVUeXBlQ2hlY2tlcigpLFxuICAgIGluc3RhbmNlT2Y6IGNyZWF0ZUluc3RhbmNlVHlwZUNoZWNrZXIsXG4gICAgbm9kZTogY3JlYXRlTm9kZUNoZWNrZXIoKSxcbiAgICBvYmplY3RPZjogY3JlYXRlT2JqZWN0T2ZUeXBlQ2hlY2tlcixcbiAgICBvbmVPZjogY3JlYXRlRW51bVR5cGVDaGVja2VyLFxuICAgIG9uZU9mVHlwZTogY3JlYXRlVW5pb25UeXBlQ2hlY2tlcixcbiAgICBzaGFwZTogY3JlYXRlU2hhcGVUeXBlQ2hlY2tlcixcbiAgICBleGFjdDogY3JlYXRlU3RyaWN0U2hhcGVUeXBlQ2hlY2tlcixcbiAgfTtcblxuICAvKipcbiAgICogaW5saW5lZCBPYmplY3QuaXMgcG9seWZpbGwgdG8gYXZvaWQgcmVxdWlyaW5nIGNvbnN1bWVycyBzaGlwIHRoZWlyIG93blxuICAgKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9PYmplY3QvaXNcbiAgICovXG4gIC8qZXNsaW50LWRpc2FibGUgbm8tc2VsZi1jb21wYXJlKi9cbiAgZnVuY3Rpb24gaXMoeCwgeSkge1xuICAgIC8vIFNhbWVWYWx1ZSBhbGdvcml0aG1cbiAgICBpZiAoeCA9PT0geSkge1xuICAgICAgLy8gU3RlcHMgMS01LCA3LTEwXG4gICAgICAvLyBTdGVwcyA2LmItNi5lOiArMCAhPSAtMFxuICAgICAgcmV0dXJuIHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBTdGVwIDYuYTogTmFOID09IE5hTlxuICAgICAgcmV0dXJuIHggIT09IHggJiYgeSAhPT0geTtcbiAgICB9XG4gIH1cbiAgLyplc2xpbnQtZW5hYmxlIG5vLXNlbGYtY29tcGFyZSovXG5cbiAgLyoqXG4gICAqIFdlIHVzZSBhbiBFcnJvci1saWtlIG9iamVjdCBmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eSBhcyBwZW9wbGUgbWF5IGNhbGxcbiAgICogUHJvcFR5cGVzIGRpcmVjdGx5IGFuZCBpbnNwZWN0IHRoZWlyIG91dHB1dC4gSG93ZXZlciwgd2UgZG9uJ3QgdXNlIHJlYWxcbiAgICogRXJyb3JzIGFueW1vcmUuIFdlIGRvbid0IGluc3BlY3QgdGhlaXIgc3RhY2sgYW55d2F5LCBhbmQgY3JlYXRpbmcgdGhlbVxuICAgKiBpcyBwcm9oaWJpdGl2ZWx5IGV4cGVuc2l2ZSBpZiB0aGV5IGFyZSBjcmVhdGVkIHRvbyBvZnRlbiwgc3VjaCBhcyB3aGF0XG4gICAqIGhhcHBlbnMgaW4gb25lT2ZUeXBlKCkgZm9yIGFueSB0eXBlIGJlZm9yZSB0aGUgb25lIHRoYXQgbWF0Y2hlZC5cbiAgICovXG4gIGZ1bmN0aW9uIFByb3BUeXBlRXJyb3IobWVzc2FnZSkge1xuICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgdGhpcy5zdGFjayA9ICcnO1xuICB9XG4gIC8vIE1ha2UgYGluc3RhbmNlb2YgRXJyb3JgIHN0aWxsIHdvcmsgZm9yIHJldHVybmVkIGVycm9ycy5cbiAgUHJvcFR5cGVFcnJvci5wcm90b3R5cGUgPSBFcnJvci5wcm90b3R5cGU7XG5cbiAgZnVuY3Rpb24gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgdmFyIG1hbnVhbFByb3BUeXBlQ2FsbENhY2hlID0ge307XG4gICAgICB2YXIgbWFudWFsUHJvcFR5cGVXYXJuaW5nQ291bnQgPSAwO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjaGVja1R5cGUoaXNSZXF1aXJlZCwgcHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICAgIGNvbXBvbmVudE5hbWUgPSBjb21wb25lbnROYW1lIHx8IEFOT05ZTU9VUztcbiAgICAgIHByb3BGdWxsTmFtZSA9IHByb3BGdWxsTmFtZSB8fCBwcm9wTmFtZTtcblxuICAgICAgaWYgKHNlY3JldCAhPT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgICAgaWYgKHRocm93T25EaXJlY3RBY2Nlc3MpIHtcbiAgICAgICAgICAvLyBOZXcgYmVoYXZpb3Igb25seSBmb3IgdXNlcnMgb2YgYHByb3AtdHlwZXNgIHBhY2thZ2VcbiAgICAgICAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgICAgICAgJ1VzZSBgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKClgIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAgICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICAgICAgICApO1xuICAgICAgICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgIC8vIE9sZCBiZWhhdmlvciBmb3IgcGVvcGxlIHVzaW5nIFJlYWN0LlByb3BUeXBlc1xuICAgICAgICAgIHZhciBjYWNoZUtleSA9IGNvbXBvbmVudE5hbWUgKyAnOicgKyBwcm9wTmFtZTtcbiAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAhbWFudWFsUHJvcFR5cGVDYWxsQ2FjaGVbY2FjaGVLZXldICYmXG4gICAgICAgICAgICAvLyBBdm9pZCBzcGFtbWluZyB0aGUgY29uc29sZSBiZWNhdXNlIHRoZXkgYXJlIG9mdGVuIG5vdCBhY3Rpb25hYmxlIGV4Y2VwdCBmb3IgbGliIGF1dGhvcnNcbiAgICAgICAgICAgIG1hbnVhbFByb3BUeXBlV2FybmluZ0NvdW50IDwgM1xuICAgICAgICAgICkge1xuICAgICAgICAgICAgcHJpbnRXYXJuaW5nKFxuICAgICAgICAgICAgICAnWW91IGFyZSBtYW51YWxseSBjYWxsaW5nIGEgUmVhY3QuUHJvcFR5cGVzIHZhbGlkYXRpb24gJyArXG4gICAgICAgICAgICAgICdmdW5jdGlvbiBmb3IgdGhlIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2AgcHJvcCBvbiBgJyArIGNvbXBvbmVudE5hbWUgICsgJ2AuIFRoaXMgaXMgZGVwcmVjYXRlZCAnICtcbiAgICAgICAgICAgICAgJ2FuZCB3aWxsIHRocm93IGluIHRoZSBzdGFuZGFsb25lIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICAgICAgICAgJ1lvdSBtYXkgYmUgc2VlaW5nIHRoaXMgd2FybmluZyBkdWUgdG8gYSB0aGlyZC1wYXJ0eSBQcm9wVHlwZXMgJyArXG4gICAgICAgICAgICAgICdsaWJyYXJ5LiBTZWUgaHR0cHM6Ly9mYi5tZS9yZWFjdC13YXJuaW5nLWRvbnQtY2FsbC1wcm9wdHlwZXMgJyArICdmb3IgZGV0YWlscy4nXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgbWFudWFsUHJvcFR5cGVDYWxsQ2FjaGVbY2FjaGVLZXldID0gdHJ1ZTtcbiAgICAgICAgICAgIG1hbnVhbFByb3BUeXBlV2FybmluZ0NvdW50Kys7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAocHJvcHNbcHJvcE5hbWVdID09IG51bGwpIHtcbiAgICAgICAgaWYgKGlzUmVxdWlyZWQpIHtcbiAgICAgICAgICBpZiAocHJvcHNbcHJvcE5hbWVdID09PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoJ1RoZSAnICsgbG9jYXRpb24gKyAnIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2AgaXMgbWFya2VkIGFzIHJlcXVpcmVkICcgKyAoJ2luIGAnICsgY29tcG9uZW50TmFtZSArICdgLCBidXQgaXRzIHZhbHVlIGlzIGBudWxsYC4nKSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignVGhlICcgKyBsb2NhdGlvbiArICcgYCcgKyBwcm9wRnVsbE5hbWUgKyAnYCBpcyBtYXJrZWQgYXMgcmVxdWlyZWQgaW4gJyArICgnYCcgKyBjb21wb25lbnROYW1lICsgJ2AsIGJ1dCBpdHMgdmFsdWUgaXMgYHVuZGVmaW5lZGAuJykpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGNoYWluZWRDaGVja1R5cGUgPSBjaGVja1R5cGUuYmluZChudWxsLCBmYWxzZSk7XG4gICAgY2hhaW5lZENoZWNrVHlwZS5pc1JlcXVpcmVkID0gY2hlY2tUeXBlLmJpbmQobnVsbCwgdHJ1ZSk7XG5cbiAgICByZXR1cm4gY2hhaW5lZENoZWNrVHlwZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZVByaW1pdGl2ZVR5cGVDaGVja2VyKGV4cGVjdGVkVHlwZSkge1xuICAgIGZ1bmN0aW9uIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgICB2YXIgcHJvcFZhbHVlID0gcHJvcHNbcHJvcE5hbWVdO1xuICAgICAgdmFyIHByb3BUeXBlID0gZ2V0UHJvcFR5cGUocHJvcFZhbHVlKTtcbiAgICAgIGlmIChwcm9wVHlwZSAhPT0gZXhwZWN0ZWRUeXBlKSB7XG4gICAgICAgIC8vIGBwcm9wVmFsdWVgIGJlaW5nIGluc3RhbmNlIG9mLCBzYXksIGRhdGUvcmVnZXhwLCBwYXNzIHRoZSAnb2JqZWN0J1xuICAgICAgICAvLyBjaGVjaywgYnV0IHdlIGNhbiBvZmZlciBhIG1vcmUgcHJlY2lzZSBlcnJvciBtZXNzYWdlIGhlcmUgcmF0aGVyIHRoYW5cbiAgICAgICAgLy8gJ29mIHR5cGUgYG9iamVjdGAnLlxuICAgICAgICB2YXIgcHJlY2lzZVR5cGUgPSBnZXRQcmVjaXNlVHlwZShwcm9wVmFsdWUpO1xuXG4gICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignSW52YWxpZCAnICsgbG9jYXRpb24gKyAnIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2Agb2YgdHlwZSAnICsgKCdgJyArIHByZWNpc2VUeXBlICsgJ2Agc3VwcGxpZWQgdG8gYCcgKyBjb21wb25lbnROYW1lICsgJ2AsIGV4cGVjdGVkICcpICsgKCdgJyArIGV4cGVjdGVkVHlwZSArICdgLicpKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlQW55VHlwZUNoZWNrZXIoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyKGVtcHR5RnVuY3Rpb25UaGF0UmV0dXJuc051bGwpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlQXJyYXlPZlR5cGVDaGVja2VyKHR5cGVDaGVja2VyKSB7XG4gICAgZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lKSB7XG4gICAgICBpZiAodHlwZW9mIHR5cGVDaGVja2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignUHJvcGVydHkgYCcgKyBwcm9wRnVsbE5hbWUgKyAnYCBvZiBjb21wb25lbnQgYCcgKyBjb21wb25lbnROYW1lICsgJ2AgaGFzIGludmFsaWQgUHJvcFR5cGUgbm90YXRpb24gaW5zaWRlIGFycmF5T2YuJyk7XG4gICAgICB9XG4gICAgICB2YXIgcHJvcFZhbHVlID0gcHJvcHNbcHJvcE5hbWVdO1xuICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHByb3BWYWx1ZSkpIHtcbiAgICAgICAgdmFyIHByb3BUeXBlID0gZ2V0UHJvcFR5cGUocHJvcFZhbHVlKTtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKCdJbnZhbGlkICcgKyBsb2NhdGlvbiArICcgYCcgKyBwcm9wRnVsbE5hbWUgKyAnYCBvZiB0eXBlICcgKyAoJ2AnICsgcHJvcFR5cGUgKyAnYCBzdXBwbGllZCB0byBgJyArIGNvbXBvbmVudE5hbWUgKyAnYCwgZXhwZWN0ZWQgYW4gYXJyYXkuJykpO1xuICAgICAgfVxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wVmFsdWUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGVycm9yID0gdHlwZUNoZWNrZXIocHJvcFZhbHVlLCBpLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lICsgJ1snICsgaSArICddJywgUmVhY3RQcm9wVHlwZXNTZWNyZXQpO1xuICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICAgIHJldHVybiBlcnJvcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVFbGVtZW50VHlwZUNoZWNrZXIoKSB7XG4gICAgZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lKSB7XG4gICAgICB2YXIgcHJvcFZhbHVlID0gcHJvcHNbcHJvcE5hbWVdO1xuICAgICAgaWYgKCFpc1ZhbGlkRWxlbWVudChwcm9wVmFsdWUpKSB7XG4gICAgICAgIHZhciBwcm9wVHlwZSA9IGdldFByb3BUeXBlKHByb3BWYWx1ZSk7XG4gICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignSW52YWxpZCAnICsgbG9jYXRpb24gKyAnIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2Agb2YgdHlwZSAnICsgKCdgJyArIHByb3BUeXBlICsgJ2Agc3VwcGxpZWQgdG8gYCcgKyBjb21wb25lbnROYW1lICsgJ2AsIGV4cGVjdGVkIGEgc2luZ2xlIFJlYWN0RWxlbWVudC4nKSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGNyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyKHZhbGlkYXRlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUVsZW1lbnRUeXBlVHlwZUNoZWNrZXIoKSB7XG4gICAgZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lKSB7XG4gICAgICB2YXIgcHJvcFZhbHVlID0gcHJvcHNbcHJvcE5hbWVdO1xuICAgICAgaWYgKCFSZWFjdElzLmlzVmFsaWRFbGVtZW50VHlwZShwcm9wVmFsdWUpKSB7XG4gICAgICAgIHZhciBwcm9wVHlwZSA9IGdldFByb3BUeXBlKHByb3BWYWx1ZSk7XG4gICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignSW52YWxpZCAnICsgbG9jYXRpb24gKyAnIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2Agb2YgdHlwZSAnICsgKCdgJyArIHByb3BUeXBlICsgJ2Agc3VwcGxpZWQgdG8gYCcgKyBjb21wb25lbnROYW1lICsgJ2AsIGV4cGVjdGVkIGEgc2luZ2xlIFJlYWN0RWxlbWVudCB0eXBlLicpKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlSW5zdGFuY2VUeXBlQ2hlY2tlcihleHBlY3RlZENsYXNzKSB7XG4gICAgZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lKSB7XG4gICAgICBpZiAoIShwcm9wc1twcm9wTmFtZV0gaW5zdGFuY2VvZiBleHBlY3RlZENsYXNzKSkge1xuICAgICAgICB2YXIgZXhwZWN0ZWRDbGFzc05hbWUgPSBleHBlY3RlZENsYXNzLm5hbWUgfHwgQU5PTllNT1VTO1xuICAgICAgICB2YXIgYWN0dWFsQ2xhc3NOYW1lID0gZ2V0Q2xhc3NOYW1lKHByb3BzW3Byb3BOYW1lXSk7XG4gICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignSW52YWxpZCAnICsgbG9jYXRpb24gKyAnIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2Agb2YgdHlwZSAnICsgKCdgJyArIGFjdHVhbENsYXNzTmFtZSArICdgIHN1cHBsaWVkIHRvIGAnICsgY29tcG9uZW50TmFtZSArICdgLCBleHBlY3RlZCAnKSArICgnaW5zdGFuY2Ugb2YgYCcgKyBleHBlY3RlZENsYXNzTmFtZSArICdgLicpKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlRW51bVR5cGVDaGVja2VyKGV4cGVjdGVkVmFsdWVzKSB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGV4cGVjdGVkVmFsdWVzKSkge1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgcHJpbnRXYXJuaW5nKFxuICAgICAgICAgICAgJ0ludmFsaWQgYXJndW1lbnRzIHN1cHBsaWVkIHRvIG9uZU9mLCBleHBlY3RlZCBhbiBhcnJheSwgZ290ICcgKyBhcmd1bWVudHMubGVuZ3RoICsgJyBhcmd1bWVudHMuICcgK1xuICAgICAgICAgICAgJ0EgY29tbW9uIG1pc3Rha2UgaXMgdG8gd3JpdGUgb25lT2YoeCwgeSwgeikgaW5zdGVhZCBvZiBvbmVPZihbeCwgeSwgel0pLidcbiAgICAgICAgICApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHByaW50V2FybmluZygnSW52YWxpZCBhcmd1bWVudCBzdXBwbGllZCB0byBvbmVPZiwgZXhwZWN0ZWQgYW4gYXJyYXkuJyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBlbXB0eUZ1bmN0aW9uVGhhdFJldHVybnNOdWxsO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSkge1xuICAgICAgdmFyIHByb3BWYWx1ZSA9IHByb3BzW3Byb3BOYW1lXTtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZXhwZWN0ZWRWYWx1ZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGlzKHByb3BWYWx1ZSwgZXhwZWN0ZWRWYWx1ZXNbaV0pKSB7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdmFyIHZhbHVlc1N0cmluZyA9IEpTT04uc3RyaW5naWZ5KGV4cGVjdGVkVmFsdWVzLCBmdW5jdGlvbiByZXBsYWNlcihrZXksIHZhbHVlKSB7XG4gICAgICAgIHZhciB0eXBlID0gZ2V0UHJlY2lzZVR5cGUodmFsdWUpO1xuICAgICAgICBpZiAodHlwZSA9PT0gJ3N5bWJvbCcpIHtcbiAgICAgICAgICByZXR1cm4gU3RyaW5nKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcignSW52YWxpZCAnICsgbG9jYXRpb24gKyAnIGAnICsgcHJvcEZ1bGxOYW1lICsgJ2Agb2YgdmFsdWUgYCcgKyBTdHJpbmcocHJvcFZhbHVlKSArICdgICcgKyAoJ3N1cHBsaWVkIHRvIGAnICsgY29tcG9uZW50TmFtZSArICdgLCBleHBlY3RlZCBvbmUgb2YgJyArIHZhbHVlc1N0cmluZyArICcuJykpO1xuICAgIH1cbiAgICByZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlT2JqZWN0T2ZUeXBlQ2hlY2tlcih0eXBlQ2hlY2tlcikge1xuICAgIGZ1bmN0aW9uIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSkge1xuICAgICAgaWYgKHR5cGVvZiB0eXBlQ2hlY2tlciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoJ1Byb3BlcnR5IGAnICsgcHJvcEZ1bGxOYW1lICsgJ2Agb2YgY29tcG9uZW50IGAnICsgY29tcG9uZW50TmFtZSArICdgIGhhcyBpbnZhbGlkIFByb3BUeXBlIG5vdGF0aW9uIGluc2lkZSBvYmplY3RPZi4nKTtcbiAgICAgIH1cbiAgICAgIHZhciBwcm9wVmFsdWUgPSBwcm9wc1twcm9wTmFtZV07XG4gICAgICB2YXIgcHJvcFR5cGUgPSBnZXRQcm9wVHlwZShwcm9wVmFsdWUpO1xuICAgICAgaWYgKHByb3BUeXBlICE9PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoJ0ludmFsaWQgJyArIGxvY2F0aW9uICsgJyBgJyArIHByb3BGdWxsTmFtZSArICdgIG9mIHR5cGUgJyArICgnYCcgKyBwcm9wVHlwZSArICdgIHN1cHBsaWVkIHRvIGAnICsgY29tcG9uZW50TmFtZSArICdgLCBleHBlY3RlZCBhbiBvYmplY3QuJykpO1xuICAgICAgfVxuICAgICAgZm9yICh2YXIga2V5IGluIHByb3BWYWx1ZSkge1xuICAgICAgICBpZiAoaGFzKHByb3BWYWx1ZSwga2V5KSkge1xuICAgICAgICAgIHZhciBlcnJvciA9IHR5cGVDaGVja2VyKHByb3BWYWx1ZSwga2V5LCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lICsgJy4nICsga2V5LCBSZWFjdFByb3BUeXBlc1NlY3JldCk7XG4gICAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiBlcnJvcjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlVW5pb25UeXBlQ2hlY2tlcihhcnJheU9mVHlwZUNoZWNrZXJzKSB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGFycmF5T2ZUeXBlQ2hlY2tlcnMpKSB7XG4gICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gcHJpbnRXYXJuaW5nKCdJbnZhbGlkIGFyZ3VtZW50IHN1cHBsaWVkIHRvIG9uZU9mVHlwZSwgZXhwZWN0ZWQgYW4gaW5zdGFuY2Ugb2YgYXJyYXkuJykgOiB2b2lkIDA7XG4gICAgICByZXR1cm4gZW1wdHlGdW5jdGlvblRoYXRSZXR1cm5zTnVsbDtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFycmF5T2ZUeXBlQ2hlY2tlcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBjaGVja2VyID0gYXJyYXlPZlR5cGVDaGVja2Vyc1tpXTtcbiAgICAgIGlmICh0eXBlb2YgY2hlY2tlciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBwcmludFdhcm5pbmcoXG4gICAgICAgICAgJ0ludmFsaWQgYXJndW1lbnQgc3VwcGxpZWQgdG8gb25lT2ZUeXBlLiBFeHBlY3RlZCBhbiBhcnJheSBvZiBjaGVjayBmdW5jdGlvbnMsIGJ1dCAnICtcbiAgICAgICAgICAncmVjZWl2ZWQgJyArIGdldFBvc3RmaXhGb3JUeXBlV2FybmluZyhjaGVja2VyKSArICcgYXQgaW5kZXggJyArIGkgKyAnLidcbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIGVtcHR5RnVuY3Rpb25UaGF0UmV0dXJuc051bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFycmF5T2ZUeXBlQ2hlY2tlcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGNoZWNrZXIgPSBhcnJheU9mVHlwZUNoZWNrZXJzW2ldO1xuICAgICAgICBpZiAoY2hlY2tlcihwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIFJlYWN0UHJvcFR5cGVzU2VjcmV0KSA9PSBudWxsKSB7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKCdJbnZhbGlkICcgKyBsb2NhdGlvbiArICcgYCcgKyBwcm9wRnVsbE5hbWUgKyAnYCBzdXBwbGllZCB0byAnICsgKCdgJyArIGNvbXBvbmVudE5hbWUgKyAnYC4nKSk7XG4gICAgfVxuICAgIHJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVOb2RlQ2hlY2tlcigpIHtcbiAgICBmdW5jdGlvbiB2YWxpZGF0ZShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUpIHtcbiAgICAgIGlmICghaXNOb2RlKHByb3BzW3Byb3BOYW1lXSkpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKCdJbnZhbGlkICcgKyBsb2NhdGlvbiArICcgYCcgKyBwcm9wRnVsbE5hbWUgKyAnYCBzdXBwbGllZCB0byAnICsgKCdgJyArIGNvbXBvbmVudE5hbWUgKyAnYCwgZXhwZWN0ZWQgYSBSZWFjdE5vZGUuJykpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVTaGFwZVR5cGVDaGVja2VyKHNoYXBlVHlwZXMpIHtcbiAgICBmdW5jdGlvbiB2YWxpZGF0ZShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUpIHtcbiAgICAgIHZhciBwcm9wVmFsdWUgPSBwcm9wc1twcm9wTmFtZV07XG4gICAgICB2YXIgcHJvcFR5cGUgPSBnZXRQcm9wVHlwZShwcm9wVmFsdWUpO1xuICAgICAgaWYgKHByb3BUeXBlICE9PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoJ0ludmFsaWQgJyArIGxvY2F0aW9uICsgJyBgJyArIHByb3BGdWxsTmFtZSArICdgIG9mIHR5cGUgYCcgKyBwcm9wVHlwZSArICdgICcgKyAoJ3N1cHBsaWVkIHRvIGAnICsgY29tcG9uZW50TmFtZSArICdgLCBleHBlY3RlZCBgb2JqZWN0YC4nKSk7XG4gICAgICB9XG4gICAgICBmb3IgKHZhciBrZXkgaW4gc2hhcGVUeXBlcykge1xuICAgICAgICB2YXIgY2hlY2tlciA9IHNoYXBlVHlwZXNba2V5XTtcbiAgICAgICAgaWYgKCFjaGVja2VyKSB7XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGVycm9yID0gY2hlY2tlcihwcm9wVmFsdWUsIGtleSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSArICcuJyArIGtleSwgUmVhY3RQcm9wVHlwZXNTZWNyZXQpO1xuICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICByZXR1cm4gZXJyb3I7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlU3RyaWN0U2hhcGVUeXBlQ2hlY2tlcihzaGFwZVR5cGVzKSB7XG4gICAgZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lKSB7XG4gICAgICB2YXIgcHJvcFZhbHVlID0gcHJvcHNbcHJvcE5hbWVdO1xuICAgICAgdmFyIHByb3BUeXBlID0gZ2V0UHJvcFR5cGUocHJvcFZhbHVlKTtcbiAgICAgIGlmIChwcm9wVHlwZSAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKCdJbnZhbGlkICcgKyBsb2NhdGlvbiArICcgYCcgKyBwcm9wRnVsbE5hbWUgKyAnYCBvZiB0eXBlIGAnICsgcHJvcFR5cGUgKyAnYCAnICsgKCdzdXBwbGllZCB0byBgJyArIGNvbXBvbmVudE5hbWUgKyAnYCwgZXhwZWN0ZWQgYG9iamVjdGAuJykpO1xuICAgICAgfVxuICAgICAgLy8gV2UgbmVlZCB0byBjaGVjayBhbGwga2V5cyBpbiBjYXNlIHNvbWUgYXJlIHJlcXVpcmVkIGJ1dCBtaXNzaW5nIGZyb21cbiAgICAgIC8vIHByb3BzLlxuICAgICAgdmFyIGFsbEtleXMgPSBhc3NpZ24oe30sIHByb3BzW3Byb3BOYW1lXSwgc2hhcGVUeXBlcyk7XG4gICAgICBmb3IgKHZhciBrZXkgaW4gYWxsS2V5cykge1xuICAgICAgICB2YXIgY2hlY2tlciA9IHNoYXBlVHlwZXNba2V5XTtcbiAgICAgICAgaWYgKCFjaGVja2VyKSB7XG4gICAgICAgICAgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKFxuICAgICAgICAgICAgJ0ludmFsaWQgJyArIGxvY2F0aW9uICsgJyBgJyArIHByb3BGdWxsTmFtZSArICdgIGtleSBgJyArIGtleSArICdgIHN1cHBsaWVkIHRvIGAnICsgY29tcG9uZW50TmFtZSArICdgLicgK1xuICAgICAgICAgICAgJ1xcbkJhZCBvYmplY3Q6ICcgKyBKU09OLnN0cmluZ2lmeShwcm9wc1twcm9wTmFtZV0sIG51bGwsICcgICcpICtcbiAgICAgICAgICAgICdcXG5WYWxpZCBrZXlzOiAnICsgIEpTT04uc3RyaW5naWZ5KE9iamVjdC5rZXlzKHNoYXBlVHlwZXMpLCBudWxsLCAnICAnKVxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGVycm9yID0gY2hlY2tlcihwcm9wVmFsdWUsIGtleSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSArICcuJyArIGtleSwgUmVhY3RQcm9wVHlwZXNTZWNyZXQpO1xuICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICByZXR1cm4gZXJyb3I7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSk7XG4gIH1cblxuICBmdW5jdGlvbiBpc05vZGUocHJvcFZhbHVlKSB7XG4gICAgc3dpdGNoICh0eXBlb2YgcHJvcFZhbHVlKSB7XG4gICAgICBjYXNlICdudW1iZXInOlxuICAgICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgIGNhc2UgJ3VuZGVmaW5lZCc6XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgY2FzZSAnYm9vbGVhbic6XG4gICAgICAgIHJldHVybiAhcHJvcFZhbHVlO1xuICAgICAgY2FzZSAnb2JqZWN0JzpcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkocHJvcFZhbHVlKSkge1xuICAgICAgICAgIHJldHVybiBwcm9wVmFsdWUuZXZlcnkoaXNOb2RlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJvcFZhbHVlID09PSBudWxsIHx8IGlzVmFsaWRFbGVtZW50KHByb3BWYWx1ZSkpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBpdGVyYXRvckZuID0gZ2V0SXRlcmF0b3JGbihwcm9wVmFsdWUpO1xuICAgICAgICBpZiAoaXRlcmF0b3JGbikge1xuICAgICAgICAgIHZhciBpdGVyYXRvciA9IGl0ZXJhdG9yRm4uY2FsbChwcm9wVmFsdWUpO1xuICAgICAgICAgIHZhciBzdGVwO1xuICAgICAgICAgIGlmIChpdGVyYXRvckZuICE9PSBwcm9wVmFsdWUuZW50cmllcykge1xuICAgICAgICAgICAgd2hpbGUgKCEoc3RlcCA9IGl0ZXJhdG9yLm5leHQoKSkuZG9uZSkge1xuICAgICAgICAgICAgICBpZiAoIWlzTm9kZShzdGVwLnZhbHVlKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBJdGVyYXRvciB3aWxsIHByb3ZpZGUgZW50cnkgW2ssdl0gdHVwbGVzIHJhdGhlciB0aGFuIHZhbHVlcy5cbiAgICAgICAgICAgIHdoaWxlICghKHN0ZXAgPSBpdGVyYXRvci5uZXh0KCkpLmRvbmUpIHtcbiAgICAgICAgICAgICAgdmFyIGVudHJ5ID0gc3RlcC52YWx1ZTtcbiAgICAgICAgICAgICAgaWYgKGVudHJ5KSB7XG4gICAgICAgICAgICAgICAgaWYgKCFpc05vZGUoZW50cnlbMV0pKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGlzU3ltYm9sKHByb3BUeXBlLCBwcm9wVmFsdWUpIHtcbiAgICAvLyBOYXRpdmUgU3ltYm9sLlxuICAgIGlmIChwcm9wVHlwZSA9PT0gJ3N5bWJvbCcpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIC8vIGZhbHN5IHZhbHVlIGNhbid0IGJlIGEgU3ltYm9sXG4gICAgaWYgKCFwcm9wVmFsdWUpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICAvLyAxOS40LjMuNSBTeW1ib2wucHJvdG90eXBlW0BAdG9TdHJpbmdUYWddID09PSAnU3ltYm9sJ1xuICAgIGlmIChwcm9wVmFsdWVbJ0BAdG9TdHJpbmdUYWcnXSA9PT0gJ1N5bWJvbCcpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIC8vIEZhbGxiYWNrIGZvciBub24tc3BlYyBjb21wbGlhbnQgU3ltYm9scyB3aGljaCBhcmUgcG9seWZpbGxlZC5cbiAgICBpZiAodHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiBwcm9wVmFsdWUgaW5zdGFuY2VvZiBTeW1ib2wpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIC8vIEVxdWl2YWxlbnQgb2YgYHR5cGVvZmAgYnV0IHdpdGggc3BlY2lhbCBoYW5kbGluZyBmb3IgYXJyYXkgYW5kIHJlZ2V4cC5cbiAgZnVuY3Rpb24gZ2V0UHJvcFR5cGUocHJvcFZhbHVlKSB7XG4gICAgdmFyIHByb3BUeXBlID0gdHlwZW9mIHByb3BWYWx1ZTtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShwcm9wVmFsdWUpKSB7XG4gICAgICByZXR1cm4gJ2FycmF5JztcbiAgICB9XG4gICAgaWYgKHByb3BWYWx1ZSBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgICAgLy8gT2xkIHdlYmtpdHMgKGF0IGxlYXN0IHVudGlsIEFuZHJvaWQgNC4wKSByZXR1cm4gJ2Z1bmN0aW9uJyByYXRoZXIgdGhhblxuICAgICAgLy8gJ29iamVjdCcgZm9yIHR5cGVvZiBhIFJlZ0V4cC4gV2UnbGwgbm9ybWFsaXplIHRoaXMgaGVyZSBzbyB0aGF0IC9ibGEvXG4gICAgICAvLyBwYXNzZXMgUHJvcFR5cGVzLm9iamVjdC5cbiAgICAgIHJldHVybiAnb2JqZWN0JztcbiAgICB9XG4gICAgaWYgKGlzU3ltYm9sKHByb3BUeXBlLCBwcm9wVmFsdWUpKSB7XG4gICAgICByZXR1cm4gJ3N5bWJvbCc7XG4gICAgfVxuICAgIHJldHVybiBwcm9wVHlwZTtcbiAgfVxuXG4gIC8vIFRoaXMgaGFuZGxlcyBtb3JlIHR5cGVzIHRoYW4gYGdldFByb3BUeXBlYC4gT25seSB1c2VkIGZvciBlcnJvciBtZXNzYWdlcy5cbiAgLy8gU2VlIGBjcmVhdGVQcmltaXRpdmVUeXBlQ2hlY2tlcmAuXG4gIGZ1bmN0aW9uIGdldFByZWNpc2VUeXBlKHByb3BWYWx1ZSkge1xuICAgIGlmICh0eXBlb2YgcHJvcFZhbHVlID09PSAndW5kZWZpbmVkJyB8fCBwcm9wVmFsdWUgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiAnJyArIHByb3BWYWx1ZTtcbiAgICB9XG4gICAgdmFyIHByb3BUeXBlID0gZ2V0UHJvcFR5cGUocHJvcFZhbHVlKTtcbiAgICBpZiAocHJvcFR5cGUgPT09ICdvYmplY3QnKSB7XG4gICAgICBpZiAocHJvcFZhbHVlIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgICAgICByZXR1cm4gJ2RhdGUnO1xuICAgICAgfSBlbHNlIGlmIChwcm9wVmFsdWUgaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICAgICAgcmV0dXJuICdyZWdleHAnO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcHJvcFR5cGU7XG4gIH1cblxuICAvLyBSZXR1cm5zIGEgc3RyaW5nIHRoYXQgaXMgcG9zdGZpeGVkIHRvIGEgd2FybmluZyBhYm91dCBhbiBpbnZhbGlkIHR5cGUuXG4gIC8vIEZvciBleGFtcGxlLCBcInVuZGVmaW5lZFwiIG9yIFwib2YgdHlwZSBhcnJheVwiXG4gIGZ1bmN0aW9uIGdldFBvc3RmaXhGb3JUeXBlV2FybmluZyh2YWx1ZSkge1xuICAgIHZhciB0eXBlID0gZ2V0UHJlY2lzZVR5cGUodmFsdWUpO1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgY2FzZSAnYXJyYXknOlxuICAgICAgY2FzZSAnb2JqZWN0JzpcbiAgICAgICAgcmV0dXJuICdhbiAnICsgdHlwZTtcbiAgICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAgY2FzZSAnZGF0ZSc6XG4gICAgICBjYXNlICdyZWdleHAnOlxuICAgICAgICByZXR1cm4gJ2EgJyArIHR5cGU7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gdHlwZTtcbiAgICB9XG4gIH1cblxuICAvLyBSZXR1cm5zIGNsYXNzIG5hbWUgb2YgdGhlIG9iamVjdCwgaWYgYW55LlxuICBmdW5jdGlvbiBnZXRDbGFzc05hbWUocHJvcFZhbHVlKSB7XG4gICAgaWYgKCFwcm9wVmFsdWUuY29uc3RydWN0b3IgfHwgIXByb3BWYWx1ZS5jb25zdHJ1Y3Rvci5uYW1lKSB7XG4gICAgICByZXR1cm4gQU5PTllNT1VTO1xuICAgIH1cbiAgICByZXR1cm4gcHJvcFZhbHVlLmNvbnN0cnVjdG9yLm5hbWU7XG4gIH1cblxuICBSZWFjdFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcyA9IGNoZWNrUHJvcFR5cGVzO1xuICBSZWFjdFByb3BUeXBlcy5yZXNldFdhcm5pbmdDYWNoZSA9IGNoZWNrUHJvcFR5cGVzLnJlc2V0V2FybmluZ0NhY2hlO1xuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShSZWFjdElzLmlzRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjFcbiAqIHJlYWN0LWlzLmRldmVsb3BtZW50LmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAoZnVuY3Rpb24oKSB7XG4ndXNlIHN0cmljdCc7XG5cbi8vIFRoZSBTeW1ib2wgdXNlZCB0byB0YWcgdGhlIFJlYWN0RWxlbWVudC1saWtlIHR5cGVzLiBJZiB0aGVyZSBpcyBubyBuYXRpdmUgU3ltYm9sXG4vLyBub3IgcG9seWZpbGwsIHRoZW4gYSBwbGFpbiBudW1iZXIgaXMgdXNlZCBmb3IgcGVyZm9ybWFuY2UuXG52YXIgaGFzU3ltYm9sID0gdHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiBTeW1ib2wuZm9yO1xudmFyIFJFQUNUX0VMRU1FTlRfVFlQRSA9IGhhc1N5bWJvbCA/IFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKSA6IDB4ZWFjNztcbnZhciBSRUFDVF9QT1JUQUxfVFlQRSA9IGhhc1N5bWJvbCA/IFN5bWJvbC5mb3IoJ3JlYWN0LnBvcnRhbCcpIDogMHhlYWNhO1xudmFyIFJFQUNUX0ZSQUdNRU5UX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKCdyZWFjdC5mcmFnbWVudCcpIDogMHhlYWNiO1xudmFyIFJFQUNUX1NUUklDVF9NT0RFX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKCdyZWFjdC5zdHJpY3RfbW9kZScpIDogMHhlYWNjO1xudmFyIFJFQUNUX1BST0ZJTEVSX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKCdyZWFjdC5wcm9maWxlcicpIDogMHhlYWQyO1xudmFyIFJFQUNUX1BST1ZJREVSX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKCdyZWFjdC5wcm92aWRlcicpIDogMHhlYWNkO1xudmFyIFJFQUNUX0NPTlRFWFRfVFlQRSA9IGhhc1N5bWJvbCA/IFN5bWJvbC5mb3IoJ3JlYWN0LmNvbnRleHQnKSA6IDB4ZWFjZTsgLy8gVE9ETzogV2UgZG9uJ3QgdXNlIEFzeW5jTW9kZSBvciBDb25jdXJyZW50TW9kZSBhbnltb3JlLiBUaGV5IHdlcmUgdGVtcG9yYXJ5XG4vLyAodW5zdGFibGUpIEFQSXMgdGhhdCBoYXZlIGJlZW4gcmVtb3ZlZC4gQ2FuIHdlIHJlbW92ZSB0aGUgc3ltYm9scz9cblxudmFyIFJFQUNUX0FTWU5DX01PREVfVFlQRSA9IGhhc1N5bWJvbCA/IFN5bWJvbC5mb3IoJ3JlYWN0LmFzeW5jX21vZGUnKSA6IDB4ZWFjZjtcbnZhciBSRUFDVF9DT05DVVJSRU5UX01PREVfVFlQRSA9IGhhc1N5bWJvbCA/IFN5bWJvbC5mb3IoJ3JlYWN0LmNvbmN1cnJlbnRfbW9kZScpIDogMHhlYWNmO1xudmFyIFJFQUNUX0ZPUldBUkRfUkVGX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKCdyZWFjdC5mb3J3YXJkX3JlZicpIDogMHhlYWQwO1xudmFyIFJFQUNUX1NVU1BFTlNFX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKCdyZWFjdC5zdXNwZW5zZScpIDogMHhlYWQxO1xudmFyIFJFQUNUX1NVU1BFTlNFX0xJU1RfVFlQRSA9IGhhc1N5bWJvbCA/IFN5bWJvbC5mb3IoJ3JlYWN0LnN1c3BlbnNlX2xpc3QnKSA6IDB4ZWFkODtcbnZhciBSRUFDVF9NRU1PX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKCdyZWFjdC5tZW1vJykgOiAweGVhZDM7XG52YXIgUkVBQ1RfTEFaWV9UWVBFID0gaGFzU3ltYm9sID8gU3ltYm9sLmZvcigncmVhY3QubGF6eScpIDogMHhlYWQ0O1xudmFyIFJFQUNUX0JMT0NLX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKCdyZWFjdC5ibG9jaycpIDogMHhlYWQ5O1xudmFyIFJFQUNUX0ZVTkRBTUVOVEFMX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKCdyZWFjdC5mdW5kYW1lbnRhbCcpIDogMHhlYWQ1O1xudmFyIFJFQUNUX1JFU1BPTkRFUl9UWVBFID0gaGFzU3ltYm9sID8gU3ltYm9sLmZvcigncmVhY3QucmVzcG9uZGVyJykgOiAweGVhZDY7XG52YXIgUkVBQ1RfU0NPUEVfVFlQRSA9IGhhc1N5bWJvbCA/IFN5bWJvbC5mb3IoJ3JlYWN0LnNjb3BlJykgOiAweGVhZDc7XG5cbmZ1bmN0aW9uIGlzVmFsaWRFbGVtZW50VHlwZSh0eXBlKSB7XG4gIHJldHVybiB0eXBlb2YgdHlwZSA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHR5cGUgPT09ICdmdW5jdGlvbicgfHwgLy8gTm90ZTogaXRzIHR5cGVvZiBtaWdodCBiZSBvdGhlciB0aGFuICdzeW1ib2wnIG9yICdudW1iZXInIGlmIGl0J3MgYSBwb2x5ZmlsbC5cbiAgdHlwZSA9PT0gUkVBQ1RfRlJBR01FTlRfVFlQRSB8fCB0eXBlID09PSBSRUFDVF9DT05DVVJSRU5UX01PREVfVFlQRSB8fCB0eXBlID09PSBSRUFDVF9QUk9GSUxFUl9UWVBFIHx8IHR5cGUgPT09IFJFQUNUX1NUUklDVF9NT0RFX1RZUEUgfHwgdHlwZSA9PT0gUkVBQ1RfU1VTUEVOU0VfVFlQRSB8fCB0eXBlID09PSBSRUFDVF9TVVNQRU5TRV9MSVNUX1RZUEUgfHwgdHlwZW9mIHR5cGUgPT09ICdvYmplY3QnICYmIHR5cGUgIT09IG51bGwgJiYgKHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX0xBWllfVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9NRU1PX1RZUEUgfHwgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfUFJPVklERVJfVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9DT05URVhUX1RZUEUgfHwgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9GVU5EQU1FTlRBTF9UWVBFIHx8IHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX1JFU1BPTkRFUl9UWVBFIHx8IHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX1NDT1BFX1RZUEUgfHwgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfQkxPQ0tfVFlQRSk7XG59XG5cbmZ1bmN0aW9uIHR5cGVPZihvYmplY3QpIHtcbiAgaWYgKHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnICYmIG9iamVjdCAhPT0gbnVsbCkge1xuICAgIHZhciAkJHR5cGVvZiA9IG9iamVjdC4kJHR5cGVvZjtcblxuICAgIHN3aXRjaCAoJCR0eXBlb2YpIHtcbiAgICAgIGNhc2UgUkVBQ1RfRUxFTUVOVF9UWVBFOlxuICAgICAgICB2YXIgdHlwZSA9IG9iamVjdC50eXBlO1xuXG4gICAgICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICAgIGNhc2UgUkVBQ1RfQVNZTkNfTU9ERV9UWVBFOlxuICAgICAgICAgIGNhc2UgUkVBQ1RfQ09OQ1VSUkVOVF9NT0RFX1RZUEU6XG4gICAgICAgICAgY2FzZSBSRUFDVF9GUkFHTUVOVF9UWVBFOlxuICAgICAgICAgIGNhc2UgUkVBQ1RfUFJPRklMRVJfVFlQRTpcbiAgICAgICAgICBjYXNlIFJFQUNUX1NUUklDVF9NT0RFX1RZUEU6XG4gICAgICAgICAgY2FzZSBSRUFDVF9TVVNQRU5TRV9UWVBFOlxuICAgICAgICAgICAgcmV0dXJuIHR5cGU7XG5cbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdmFyICQkdHlwZW9mVHlwZSA9IHR5cGUgJiYgdHlwZS4kJHR5cGVvZjtcblxuICAgICAgICAgICAgc3dpdGNoICgkJHR5cGVvZlR5cGUpIHtcbiAgICAgICAgICAgICAgY2FzZSBSRUFDVF9DT05URVhUX1RZUEU6XG4gICAgICAgICAgICAgIGNhc2UgUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRTpcbiAgICAgICAgICAgICAgY2FzZSBSRUFDVF9MQVpZX1RZUEU6XG4gICAgICAgICAgICAgIGNhc2UgUkVBQ1RfTUVNT19UWVBFOlxuICAgICAgICAgICAgICBjYXNlIFJFQUNUX1BST1ZJREVSX1RZUEU6XG4gICAgICAgICAgICAgICAgcmV0dXJuICQkdHlwZW9mVHlwZTtcblxuICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiAkJHR5cGVvZjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9XG5cbiAgICAgIGNhc2UgUkVBQ1RfUE9SVEFMX1RZUEU6XG4gICAgICAgIHJldHVybiAkJHR5cGVvZjtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdW5kZWZpbmVkO1xufSAvLyBBc3luY01vZGUgaXMgZGVwcmVjYXRlZCBhbG9uZyB3aXRoIGlzQXN5bmNNb2RlXG5cbnZhciBBc3luY01vZGUgPSBSRUFDVF9BU1lOQ19NT0RFX1RZUEU7XG52YXIgQ29uY3VycmVudE1vZGUgPSBSRUFDVF9DT05DVVJSRU5UX01PREVfVFlQRTtcbnZhciBDb250ZXh0Q29uc3VtZXIgPSBSRUFDVF9DT05URVhUX1RZUEU7XG52YXIgQ29udGV4dFByb3ZpZGVyID0gUkVBQ1RfUFJPVklERVJfVFlQRTtcbnZhciBFbGVtZW50ID0gUkVBQ1RfRUxFTUVOVF9UWVBFO1xudmFyIEZvcndhcmRSZWYgPSBSRUFDVF9GT1JXQVJEX1JFRl9UWVBFO1xudmFyIEZyYWdtZW50ID0gUkVBQ1RfRlJBR01FTlRfVFlQRTtcbnZhciBMYXp5ID0gUkVBQ1RfTEFaWV9UWVBFO1xudmFyIE1lbW8gPSBSRUFDVF9NRU1PX1RZUEU7XG52YXIgUG9ydGFsID0gUkVBQ1RfUE9SVEFMX1RZUEU7XG52YXIgUHJvZmlsZXIgPSBSRUFDVF9QUk9GSUxFUl9UWVBFO1xudmFyIFN0cmljdE1vZGUgPSBSRUFDVF9TVFJJQ1RfTU9ERV9UWVBFO1xudmFyIFN1c3BlbnNlID0gUkVBQ1RfU1VTUEVOU0VfVFlQRTtcbnZhciBoYXNXYXJuZWRBYm91dERlcHJlY2F0ZWRJc0FzeW5jTW9kZSA9IGZhbHNlOyAvLyBBc3luY01vZGUgc2hvdWxkIGJlIGRlcHJlY2F0ZWRcblxuZnVuY3Rpb24gaXNBc3luY01vZGUob2JqZWN0KSB7XG4gIHtcbiAgICBpZiAoIWhhc1dhcm5lZEFib3V0RGVwcmVjYXRlZElzQXN5bmNNb2RlKSB7XG4gICAgICBoYXNXYXJuZWRBYm91dERlcHJlY2F0ZWRJc0FzeW5jTW9kZSA9IHRydWU7IC8vIFVzaW5nIGNvbnNvbGVbJ3dhcm4nXSB0byBldmFkZSBCYWJlbCBhbmQgRVNMaW50XG5cbiAgICAgIGNvbnNvbGVbJ3dhcm4nXSgnVGhlIFJlYWN0SXMuaXNBc3luY01vZGUoKSBhbGlhcyBoYXMgYmVlbiBkZXByZWNhdGVkLCAnICsgJ2FuZCB3aWxsIGJlIHJlbW92ZWQgaW4gUmVhY3QgMTcrLiBVcGRhdGUgeW91ciBjb2RlIHRvIHVzZSAnICsgJ1JlYWN0SXMuaXNDb25jdXJyZW50TW9kZSgpIGluc3RlYWQuIEl0IGhhcyB0aGUgZXhhY3Qgc2FtZSBBUEkuJyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGlzQ29uY3VycmVudE1vZGUob2JqZWN0KSB8fCB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfQVNZTkNfTU9ERV9UWVBFO1xufVxuZnVuY3Rpb24gaXNDb25jdXJyZW50TW9kZShvYmplY3QpIHtcbiAgcmV0dXJuIHR5cGVPZihvYmplY3QpID09PSBSRUFDVF9DT05DVVJSRU5UX01PREVfVFlQRTtcbn1cbmZ1bmN0aW9uIGlzQ29udGV4dENvbnN1bWVyKG9iamVjdCkge1xuICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX0NPTlRFWFRfVFlQRTtcbn1cbmZ1bmN0aW9uIGlzQ29udGV4dFByb3ZpZGVyKG9iamVjdCkge1xuICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX1BST1ZJREVSX1RZUEU7XG59XG5mdW5jdGlvbiBpc0VsZW1lbnQob2JqZWN0KSB7XG4gIHJldHVybiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJiBvYmplY3QgIT09IG51bGwgJiYgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG59XG5mdW5jdGlvbiBpc0ZvcndhcmRSZWYob2JqZWN0KSB7XG4gIHJldHVybiB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRTtcbn1cbmZ1bmN0aW9uIGlzRnJhZ21lbnQob2JqZWN0KSB7XG4gIHJldHVybiB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfRlJBR01FTlRfVFlQRTtcbn1cbmZ1bmN0aW9uIGlzTGF6eShvYmplY3QpIHtcbiAgcmV0dXJuIHR5cGVPZihvYmplY3QpID09PSBSRUFDVF9MQVpZX1RZUEU7XG59XG5mdW5jdGlvbiBpc01lbW8ob2JqZWN0KSB7XG4gIHJldHVybiB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfTUVNT19UWVBFO1xufVxuZnVuY3Rpb24gaXNQb3J0YWwob2JqZWN0KSB7XG4gIHJldHVybiB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfUE9SVEFMX1RZUEU7XG59XG5mdW5jdGlvbiBpc1Byb2ZpbGVyKG9iamVjdCkge1xuICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX1BST0ZJTEVSX1RZUEU7XG59XG5mdW5jdGlvbiBpc1N0cmljdE1vZGUob2JqZWN0KSB7XG4gIHJldHVybiB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfU1RSSUNUX01PREVfVFlQRTtcbn1cbmZ1bmN0aW9uIGlzU3VzcGVuc2Uob2JqZWN0KSB7XG4gIHJldHVybiB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfU1VTUEVOU0VfVFlQRTtcbn1cblxuZXhwb3J0cy5Bc3luY01vZGUgPSBBc3luY01vZGU7XG5leHBvcnRzLkNvbmN1cnJlbnRNb2RlID0gQ29uY3VycmVudE1vZGU7XG5leHBvcnRzLkNvbnRleHRDb25zdW1lciA9IENvbnRleHRDb25zdW1lcjtcbmV4cG9ydHMuQ29udGV4dFByb3ZpZGVyID0gQ29udGV4dFByb3ZpZGVyO1xuZXhwb3J0cy5FbGVtZW50ID0gRWxlbWVudDtcbmV4cG9ydHMuRm9yd2FyZFJlZiA9IEZvcndhcmRSZWY7XG5leHBvcnRzLkZyYWdtZW50ID0gRnJhZ21lbnQ7XG5leHBvcnRzLkxhenkgPSBMYXp5O1xuZXhwb3J0cy5NZW1vID0gTWVtbztcbmV4cG9ydHMuUG9ydGFsID0gUG9ydGFsO1xuZXhwb3J0cy5Qcm9maWxlciA9IFByb2ZpbGVyO1xuZXhwb3J0cy5TdHJpY3RNb2RlID0gU3RyaWN0TW9kZTtcbmV4cG9ydHMuU3VzcGVuc2UgPSBTdXNwZW5zZTtcbmV4cG9ydHMuaXNBc3luY01vZGUgPSBpc0FzeW5jTW9kZTtcbmV4cG9ydHMuaXNDb25jdXJyZW50TW9kZSA9IGlzQ29uY3VycmVudE1vZGU7XG5leHBvcnRzLmlzQ29udGV4dENvbnN1bWVyID0gaXNDb250ZXh0Q29uc3VtZXI7XG5leHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyID0gaXNDb250ZXh0UHJvdmlkZXI7XG5leHBvcnRzLmlzRWxlbWVudCA9IGlzRWxlbWVudDtcbmV4cG9ydHMuaXNGb3J3YXJkUmVmID0gaXNGb3J3YXJkUmVmO1xuZXhwb3J0cy5pc0ZyYWdtZW50ID0gaXNGcmFnbWVudDtcbmV4cG9ydHMuaXNMYXp5ID0gaXNMYXp5O1xuZXhwb3J0cy5pc01lbW8gPSBpc01lbW87XG5leHBvcnRzLmlzUG9ydGFsID0gaXNQb3J0YWw7XG5leHBvcnRzLmlzUHJvZmlsZXIgPSBpc1Byb2ZpbGVyO1xuZXhwb3J0cy5pc1N0cmljdE1vZGUgPSBpc1N0cmljdE1vZGU7XG5leHBvcnRzLmlzU3VzcGVuc2UgPSBpc1N1c3BlbnNlO1xuZXhwb3J0cy5pc1ZhbGlkRWxlbWVudFR5cGUgPSBpc1ZhbGlkRWxlbWVudFR5cGU7XG5leHBvcnRzLnR5cGVPZiA9IHR5cGVPZjtcbiAgfSkoKTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmV4cG9ydCB2YXIgUmVhY3RSZWR1eENvbnRleHQgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgUmVhY3RSZWR1eENvbnRleHQuZGlzcGxheU5hbWUgPSAnUmVhY3RSZWR1eCc7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJlYWN0UmVkdXhDb250ZXh0OyIsImltcG9ydCBSZWFjdCwgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi9Db250ZXh0JztcbmltcG9ydCBTdWJzY3JpcHRpb24gZnJvbSAnLi4vdXRpbHMvU3Vic2NyaXB0aW9uJztcbmltcG9ydCB7IHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgfSBmcm9tICcuLi91dGlscy91c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0JztcblxuZnVuY3Rpb24gUHJvdmlkZXIoX3JlZikge1xuICB2YXIgc3RvcmUgPSBfcmVmLnN0b3JlLFxuICAgICAgY29udGV4dCA9IF9yZWYuY29udGV4dCxcbiAgICAgIGNoaWxkcmVuID0gX3JlZi5jaGlsZHJlbjtcbiAgdmFyIGNvbnRleHRWYWx1ZSA9IHVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgIHZhciBzdWJzY3JpcHRpb24gPSBuZXcgU3Vic2NyaXB0aW9uKHN0b3JlKTtcbiAgICBzdWJzY3JpcHRpb24ub25TdGF0ZUNoYW5nZSA9IHN1YnNjcmlwdGlvbi5ub3RpZnlOZXN0ZWRTdWJzO1xuICAgIHJldHVybiB7XG4gICAgICBzdG9yZTogc3RvcmUsXG4gICAgICBzdWJzY3JpcHRpb246IHN1YnNjcmlwdGlvblxuICAgIH07XG4gIH0sIFtzdG9yZV0pO1xuICB2YXIgcHJldmlvdXNTdGF0ZSA9IHVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBzdG9yZS5nZXRTdGF0ZSgpO1xuICB9LCBbc3RvcmVdKTtcbiAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHN1YnNjcmlwdGlvbiA9IGNvbnRleHRWYWx1ZS5zdWJzY3JpcHRpb247XG4gICAgc3Vic2NyaXB0aW9uLnRyeVN1YnNjcmliZSgpO1xuXG4gICAgaWYgKHByZXZpb3VzU3RhdGUgIT09IHN0b3JlLmdldFN0YXRlKCkpIHtcbiAgICAgIHN1YnNjcmlwdGlvbi5ub3RpZnlOZXN0ZWRTdWJzKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIHN1YnNjcmlwdGlvbi50cnlVbnN1YnNjcmliZSgpO1xuICAgICAgc3Vic2NyaXB0aW9uLm9uU3RhdGVDaGFuZ2UgPSBudWxsO1xuICAgIH07XG4gIH0sIFtjb250ZXh0VmFsdWUsIHByZXZpb3VzU3RhdGVdKTtcbiAgdmFyIENvbnRleHQgPSBjb250ZXh0IHx8IFJlYWN0UmVkdXhDb250ZXh0O1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiBjb250ZXh0VmFsdWVcbiAgfSwgY2hpbGRyZW4pO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBQcm92aWRlci5wcm9wVHlwZXMgPSB7XG4gICAgc3RvcmU6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICBzdWJzY3JpYmU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgICBkaXNwYXRjaDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICAgIGdldFN0YXRlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG4gICAgfSksXG4gICAgY29udGV4dDogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLmFueVxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBQcm92aWRlcjsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IGhvaXN0U3RhdGljcyBmcm9tICdob2lzdC1ub24tcmVhY3Qtc3RhdGljcyc7XG5pbXBvcnQgUmVhY3QsIHsgdXNlQ29udGV4dCwgdXNlTWVtbywgdXNlUmVmLCB1c2VSZWR1Y2VyIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgaXNWYWxpZEVsZW1lbnRUeXBlLCBpc0NvbnRleHRDb25zdW1lciB9IGZyb20gJ3JlYWN0LWlzJztcbmltcG9ydCBTdWJzY3JpcHRpb24gZnJvbSAnLi4vdXRpbHMvU3Vic2NyaXB0aW9uJztcbmltcG9ydCB7IHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgfSBmcm9tICcuLi91dGlscy91c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0JztcbmltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi9Db250ZXh0JzsgLy8gRGVmaW5lIHNvbWUgY29uc3RhbnQgYXJyYXlzIGp1c3QgdG8gYXZvaWQgcmUtY3JlYXRpbmcgdGhlc2VcblxudmFyIEVNUFRZX0FSUkFZID0gW107XG52YXIgTk9fU1VCU0NSSVBUSU9OX0FSUkFZID0gW251bGwsIG51bGxdO1xuXG52YXIgc3RyaW5naWZ5Q29tcG9uZW50ID0gZnVuY3Rpb24gc3RyaW5naWZ5Q29tcG9uZW50KENvbXApIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoQ29tcCk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHJldHVybiBTdHJpbmcoQ29tcCk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIHN0b3JlU3RhdGVVcGRhdGVzUmVkdWNlcihzdGF0ZSwgYWN0aW9uKSB7XG4gIHZhciB1cGRhdGVDb3VudCA9IHN0YXRlWzFdO1xuICByZXR1cm4gW2FjdGlvbi5wYXlsb2FkLCB1cGRhdGVDb3VudCArIDFdO1xufVxuXG5mdW5jdGlvbiB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0V2l0aEFyZ3MoZWZmZWN0RnVuYywgZWZmZWN0QXJncywgZGVwZW5kZW5jaWVzKSB7XG4gIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBlZmZlY3RGdW5jLmFwcGx5KHZvaWQgMCwgZWZmZWN0QXJncyk7XG4gIH0sIGRlcGVuZGVuY2llcyk7XG59XG5cbmZ1bmN0aW9uIGNhcHR1cmVXcmFwcGVyUHJvcHMobGFzdFdyYXBwZXJQcm9wcywgbGFzdENoaWxkUHJvcHMsIHJlbmRlcklzU2NoZWR1bGVkLCB3cmFwcGVyUHJvcHMsIGFjdHVhbENoaWxkUHJvcHMsIGNoaWxkUHJvcHNGcm9tU3RvcmVVcGRhdGUsIG5vdGlmeU5lc3RlZFN1YnMpIHtcbiAgLy8gV2Ugd2FudCB0byBjYXB0dXJlIHRoZSB3cmFwcGVyIHByb3BzIGFuZCBjaGlsZCBwcm9wcyB3ZSB1c2VkIGZvciBsYXRlciBjb21wYXJpc29uc1xuICBsYXN0V3JhcHBlclByb3BzLmN1cnJlbnQgPSB3cmFwcGVyUHJvcHM7XG4gIGxhc3RDaGlsZFByb3BzLmN1cnJlbnQgPSBhY3R1YWxDaGlsZFByb3BzO1xuICByZW5kZXJJc1NjaGVkdWxlZC5jdXJyZW50ID0gZmFsc2U7IC8vIElmIHRoZSByZW5kZXIgd2FzIGZyb20gYSBzdG9yZSB1cGRhdGUsIGNsZWFyIG91dCB0aGF0IHJlZmVyZW5jZSBhbmQgY2FzY2FkZSB0aGUgc3Vic2NyaWJlciB1cGRhdGVcblxuICBpZiAoY2hpbGRQcm9wc0Zyb21TdG9yZVVwZGF0ZS5jdXJyZW50KSB7XG4gICAgY2hpbGRQcm9wc0Zyb21TdG9yZVVwZGF0ZS5jdXJyZW50ID0gbnVsbDtcbiAgICBub3RpZnlOZXN0ZWRTdWJzKCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gc3Vic2NyaWJlVXBkYXRlcyhzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMsIHN0b3JlLCBzdWJzY3JpcHRpb24sIGNoaWxkUHJvcHNTZWxlY3RvciwgbGFzdFdyYXBwZXJQcm9wcywgbGFzdENoaWxkUHJvcHMsIHJlbmRlcklzU2NoZWR1bGVkLCBjaGlsZFByb3BzRnJvbVN0b3JlVXBkYXRlLCBub3RpZnlOZXN0ZWRTdWJzLCBmb3JjZUNvbXBvbmVudFVwZGF0ZURpc3BhdGNoKSB7XG4gIC8vIElmIHdlJ3JlIG5vdCBzdWJzY3JpYmVkIHRvIHRoZSBzdG9yZSwgbm90aGluZyB0byBkbyBoZXJlXG4gIGlmICghc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzKSByZXR1cm47IC8vIENhcHR1cmUgdmFsdWVzIGZvciBjaGVja2luZyBpZiBhbmQgd2hlbiB0aGlzIGNvbXBvbmVudCB1bm1vdW50c1xuXG4gIHZhciBkaWRVbnN1YnNjcmliZSA9IGZhbHNlO1xuICB2YXIgbGFzdFRocm93bkVycm9yID0gbnVsbDsgLy8gV2UnbGwgcnVuIHRoaXMgY2FsbGJhY2sgZXZlcnkgdGltZSBhIHN0b3JlIHN1YnNjcmlwdGlvbiB1cGRhdGUgcHJvcGFnYXRlcyB0byB0aGlzIGNvbXBvbmVudFxuXG4gIHZhciBjaGVja0ZvclVwZGF0ZXMgPSBmdW5jdGlvbiBjaGVja0ZvclVwZGF0ZXMoKSB7XG4gICAgaWYgKGRpZFVuc3Vic2NyaWJlKSB7XG4gICAgICAvLyBEb24ndCBydW4gc3RhbGUgbGlzdGVuZXJzLlxuICAgICAgLy8gUmVkdXggZG9lc24ndCBndWFyYW50ZWUgdW5zdWJzY3JpcHRpb25zIGhhcHBlbiB1bnRpbCBuZXh0IGRpc3BhdGNoLlxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBsYXRlc3RTdG9yZVN0YXRlID0gc3RvcmUuZ2V0U3RhdGUoKTtcbiAgICB2YXIgbmV3Q2hpbGRQcm9wcywgZXJyb3I7XG5cbiAgICB0cnkge1xuICAgICAgLy8gQWN0dWFsbHkgcnVuIHRoZSBzZWxlY3RvciB3aXRoIHRoZSBtb3N0IHJlY2VudCBzdG9yZSBzdGF0ZSBhbmQgd3JhcHBlciBwcm9wc1xuICAgICAgLy8gdG8gZGV0ZXJtaW5lIHdoYXQgdGhlIGNoaWxkIHByb3BzIHNob3VsZCBiZVxuICAgICAgbmV3Q2hpbGRQcm9wcyA9IGNoaWxkUHJvcHNTZWxlY3RvcihsYXRlc3RTdG9yZVN0YXRlLCBsYXN0V3JhcHBlclByb3BzLmN1cnJlbnQpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGVycm9yID0gZTtcbiAgICAgIGxhc3RUaHJvd25FcnJvciA9IGU7XG4gICAgfVxuXG4gICAgaWYgKCFlcnJvcikge1xuICAgICAgbGFzdFRocm93bkVycm9yID0gbnVsbDtcbiAgICB9IC8vIElmIHRoZSBjaGlsZCBwcm9wcyBoYXZlbid0IGNoYW5nZWQsIG5vdGhpbmcgdG8gZG8gaGVyZSAtIGNhc2NhZGUgdGhlIHN1YnNjcmlwdGlvbiB1cGRhdGVcblxuXG4gICAgaWYgKG5ld0NoaWxkUHJvcHMgPT09IGxhc3RDaGlsZFByb3BzLmN1cnJlbnQpIHtcbiAgICAgIGlmICghcmVuZGVySXNTY2hlZHVsZWQuY3VycmVudCkge1xuICAgICAgICBub3RpZnlOZXN0ZWRTdWJzKCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFNhdmUgcmVmZXJlbmNlcyB0byB0aGUgbmV3IGNoaWxkIHByb3BzLiAgTm90ZSB0aGF0IHdlIHRyYWNrIHRoZSBcImNoaWxkIHByb3BzIGZyb20gc3RvcmUgdXBkYXRlXCJcbiAgICAgIC8vIGFzIGEgcmVmIGluc3RlYWQgb2YgYSB1c2VTdGF0ZS91c2VSZWR1Y2VyIGJlY2F1c2Ugd2UgbmVlZCBhIHdheSB0byBkZXRlcm1pbmUgaWYgdGhhdCB2YWx1ZSBoYXNcbiAgICAgIC8vIGJlZW4gcHJvY2Vzc2VkLiAgSWYgdGhpcyB3ZW50IGludG8gdXNlU3RhdGUvdXNlUmVkdWNlciwgd2UgY291bGRuJ3QgY2xlYXIgb3V0IHRoZSB2YWx1ZSB3aXRob3V0XG4gICAgICAvLyBmb3JjaW5nIGFub3RoZXIgcmUtcmVuZGVyLCB3aGljaCB3ZSBkb24ndCB3YW50LlxuICAgICAgbGFzdENoaWxkUHJvcHMuY3VycmVudCA9IG5ld0NoaWxkUHJvcHM7XG4gICAgICBjaGlsZFByb3BzRnJvbVN0b3JlVXBkYXRlLmN1cnJlbnQgPSBuZXdDaGlsZFByb3BzO1xuICAgICAgcmVuZGVySXNTY2hlZHVsZWQuY3VycmVudCA9IHRydWU7IC8vIElmIHRoZSBjaGlsZCBwcm9wcyBfZGlkXyBjaGFuZ2UgKG9yIHdlIGNhdWdodCBhbiBlcnJvciksIHRoaXMgd3JhcHBlciBjb21wb25lbnQgbmVlZHMgdG8gcmUtcmVuZGVyXG5cbiAgICAgIGZvcmNlQ29tcG9uZW50VXBkYXRlRGlzcGF0Y2goe1xuICAgICAgICB0eXBlOiAnU1RPUkVfVVBEQVRFRCcsXG4gICAgICAgIHBheWxvYWQ6IHtcbiAgICAgICAgICBlcnJvcjogZXJyb3JcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9OyAvLyBBY3R1YWxseSBzdWJzY3JpYmUgdG8gdGhlIG5lYXJlc3QgY29ubmVjdGVkIGFuY2VzdG9yIChvciBzdG9yZSlcblxuXG4gIHN1YnNjcmlwdGlvbi5vblN0YXRlQ2hhbmdlID0gY2hlY2tGb3JVcGRhdGVzO1xuICBzdWJzY3JpcHRpb24udHJ5U3Vic2NyaWJlKCk7IC8vIFB1bGwgZGF0YSBmcm9tIHRoZSBzdG9yZSBhZnRlciBmaXJzdCByZW5kZXIgaW4gY2FzZSB0aGUgc3RvcmUgaGFzXG4gIC8vIGNoYW5nZWQgc2luY2Ugd2UgYmVnYW4uXG5cbiAgY2hlY2tGb3JVcGRhdGVzKCk7XG5cbiAgdmFyIHVuc3Vic2NyaWJlV3JhcHBlciA9IGZ1bmN0aW9uIHVuc3Vic2NyaWJlV3JhcHBlcigpIHtcbiAgICBkaWRVbnN1YnNjcmliZSA9IHRydWU7XG4gICAgc3Vic2NyaXB0aW9uLnRyeVVuc3Vic2NyaWJlKCk7XG4gICAgc3Vic2NyaXB0aW9uLm9uU3RhdGVDaGFuZ2UgPSBudWxsO1xuXG4gICAgaWYgKGxhc3RUaHJvd25FcnJvcikge1xuICAgICAgLy8gSXQncyBwb3NzaWJsZSB0aGF0IHdlIGNhdWdodCBhbiBlcnJvciBkdWUgdG8gYSBiYWQgbWFwU3RhdGUgZnVuY3Rpb24sIGJ1dCB0aGVcbiAgICAgIC8vIHBhcmVudCByZS1yZW5kZXJlZCB3aXRob3V0IHRoaXMgY29tcG9uZW50IGFuZCB3ZSdyZSBhYm91dCB0byB1bm1vdW50LlxuICAgICAgLy8gVGhpcyBzaG91bGRuJ3QgaGFwcGVuIGFzIGxvbmcgYXMgd2UgZG8gdG9wLWRvd24gc3Vic2NyaXB0aW9ucyBjb3JyZWN0bHksIGJ1dFxuICAgICAgLy8gaWYgd2UgZXZlciBkbyB0aG9zZSB3cm9uZywgdGhpcyB0aHJvdyB3aWxsIHN1cmZhY2UgdGhlIGVycm9yIGluIG91ciB0ZXN0cy5cbiAgICAgIC8vIEluIHRoYXQgY2FzZSwgdGhyb3cgdGhlIGVycm9yIGZyb20gaGVyZSBzbyBpdCBkb2Vzbid0IGdldCBsb3N0LlxuICAgICAgdGhyb3cgbGFzdFRocm93bkVycm9yO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdW5zdWJzY3JpYmVXcmFwcGVyO1xufVxuXG52YXIgaW5pdFN0YXRlVXBkYXRlcyA9IGZ1bmN0aW9uIGluaXRTdGF0ZVVwZGF0ZXMoKSB7XG4gIHJldHVybiBbbnVsbCwgMF07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb25uZWN0QWR2YW5jZWQoXG4vKlxyXG4gIHNlbGVjdG9yRmFjdG9yeSBpcyBhIGZ1bmMgdGhhdCBpcyByZXNwb25zaWJsZSBmb3IgcmV0dXJuaW5nIHRoZSBzZWxlY3RvciBmdW5jdGlvbiB1c2VkIHRvXHJcbiAgY29tcHV0ZSBuZXcgcHJvcHMgZnJvbSBzdGF0ZSwgcHJvcHMsIGFuZCBkaXNwYXRjaC4gRm9yIGV4YW1wbGU6XHJcbiAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbm5lY3RBZHZhbmNlZCgoZGlzcGF0Y2gsIG9wdGlvbnMpID0+IChzdGF0ZSwgcHJvcHMpID0+ICh7XHJcbiAgICAgIHRoaW5nOiBzdGF0ZS50aGluZ3NbcHJvcHMudGhpbmdJZF0sXHJcbiAgICAgIHNhdmVUaGluZzogZmllbGRzID0+IGRpc3BhdGNoKGFjdGlvbkNyZWF0b3JzLnNhdmVUaGluZyhwcm9wcy50aGluZ0lkLCBmaWVsZHMpKSxcclxuICAgIH0pKShZb3VyQ29tcG9uZW50KVxyXG4gICAgQWNjZXNzIHRvIGRpc3BhdGNoIGlzIHByb3ZpZGVkIHRvIHRoZSBmYWN0b3J5IHNvIHNlbGVjdG9yRmFjdG9yaWVzIGNhbiBiaW5kIGFjdGlvbkNyZWF0b3JzXHJcbiAgb3V0c2lkZSBvZiB0aGVpciBzZWxlY3RvciBhcyBhbiBvcHRpbWl6YXRpb24uIE9wdGlvbnMgcGFzc2VkIHRvIGNvbm5lY3RBZHZhbmNlZCBhcmUgcGFzc2VkIHRvXHJcbiAgdGhlIHNlbGVjdG9yRmFjdG9yeSwgYWxvbmcgd2l0aCBkaXNwbGF5TmFtZSBhbmQgV3JhcHBlZENvbXBvbmVudCwgYXMgdGhlIHNlY29uZCBhcmd1bWVudC5cclxuICAgIE5vdGUgdGhhdCBzZWxlY3RvckZhY3RvcnkgaXMgcmVzcG9uc2libGUgZm9yIGFsbCBjYWNoaW5nL21lbW9pemF0aW9uIG9mIGluYm91bmQgYW5kIG91dGJvdW5kXHJcbiAgcHJvcHMuIERvIG5vdCB1c2UgY29ubmVjdEFkdmFuY2VkIGRpcmVjdGx5IHdpdGhvdXQgbWVtb2l6aW5nIHJlc3VsdHMgYmV0d2VlbiBjYWxscyB0byB5b3VyXHJcbiAgc2VsZWN0b3IsIG90aGVyd2lzZSB0aGUgQ29ubmVjdCBjb21wb25lbnQgd2lsbCByZS1yZW5kZXIgb24gZXZlcnkgc3RhdGUgb3IgcHJvcHMgY2hhbmdlLlxyXG4qL1xuc2VsZWN0b3JGYWN0b3J5LCAvLyBvcHRpb25zIG9iamVjdDpcbl9yZWYpIHtcbiAgaWYgKF9yZWYgPT09IHZvaWQgMCkge1xuICAgIF9yZWYgPSB7fTtcbiAgfVxuXG4gIHZhciBfcmVmMiA9IF9yZWYsXG4gICAgICBfcmVmMiRnZXREaXNwbGF5TmFtZSA9IF9yZWYyLmdldERpc3BsYXlOYW1lLFxuICAgICAgZ2V0RGlzcGxheU5hbWUgPSBfcmVmMiRnZXREaXNwbGF5TmFtZSA9PT0gdm9pZCAwID8gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICByZXR1cm4gXCJDb25uZWN0QWR2YW5jZWQoXCIgKyBuYW1lICsgXCIpXCI7XG4gIH0gOiBfcmVmMiRnZXREaXNwbGF5TmFtZSxcbiAgICAgIF9yZWYyJG1ldGhvZE5hbWUgPSBfcmVmMi5tZXRob2ROYW1lLFxuICAgICAgbWV0aG9kTmFtZSA9IF9yZWYyJG1ldGhvZE5hbWUgPT09IHZvaWQgMCA/ICdjb25uZWN0QWR2YW5jZWQnIDogX3JlZjIkbWV0aG9kTmFtZSxcbiAgICAgIF9yZWYyJHJlbmRlckNvdW50UHJvcCA9IF9yZWYyLnJlbmRlckNvdW50UHJvcCxcbiAgICAgIHJlbmRlckNvdW50UHJvcCA9IF9yZWYyJHJlbmRlckNvdW50UHJvcCA9PT0gdm9pZCAwID8gdW5kZWZpbmVkIDogX3JlZjIkcmVuZGVyQ291bnRQcm9wLFxuICAgICAgX3JlZjIkc2hvdWxkSGFuZGxlU3RhID0gX3JlZjIuc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzLFxuICAgICAgc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzID0gX3JlZjIkc2hvdWxkSGFuZGxlU3RhID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZjIkc2hvdWxkSGFuZGxlU3RhLFxuICAgICAgX3JlZjIkc3RvcmVLZXkgPSBfcmVmMi5zdG9yZUtleSxcbiAgICAgIHN0b3JlS2V5ID0gX3JlZjIkc3RvcmVLZXkgPT09IHZvaWQgMCA/ICdzdG9yZScgOiBfcmVmMiRzdG9yZUtleSxcbiAgICAgIF9yZWYyJHdpdGhSZWYgPSBfcmVmMi53aXRoUmVmLFxuICAgICAgd2l0aFJlZiA9IF9yZWYyJHdpdGhSZWYgPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZjIkd2l0aFJlZixcbiAgICAgIF9yZWYyJGZvcndhcmRSZWYgPSBfcmVmMi5mb3J3YXJkUmVmLFxuICAgICAgZm9yd2FyZFJlZiA9IF9yZWYyJGZvcndhcmRSZWYgPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZjIkZm9yd2FyZFJlZixcbiAgICAgIF9yZWYyJGNvbnRleHQgPSBfcmVmMi5jb250ZXh0LFxuICAgICAgY29udGV4dCA9IF9yZWYyJGNvbnRleHQgPT09IHZvaWQgMCA/IFJlYWN0UmVkdXhDb250ZXh0IDogX3JlZjIkY29udGV4dCxcbiAgICAgIGNvbm5lY3RPcHRpb25zID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZjIsIFtcImdldERpc3BsYXlOYW1lXCIsIFwibWV0aG9kTmFtZVwiLCBcInJlbmRlckNvdW50UHJvcFwiLCBcInNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlc1wiLCBcInN0b3JlS2V5XCIsIFwid2l0aFJlZlwiLCBcImZvcndhcmRSZWZcIiwgXCJjb250ZXh0XCJdKTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmIChyZW5kZXJDb3VudFByb3AgIT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwicmVuZGVyQ291bnRQcm9wIGlzIHJlbW92ZWQuIHJlbmRlciBjb3VudGluZyBpcyBidWlsdCBpbnRvIHRoZSBsYXRlc3QgUmVhY3QgRGV2IFRvb2xzIHByb2ZpbGluZyBleHRlbnNpb25cIik7XG4gICAgfVxuXG4gICAgaWYgKHdpdGhSZWYpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignd2l0aFJlZiBpcyByZW1vdmVkLiBUbyBhY2Nlc3MgdGhlIHdyYXBwZWQgaW5zdGFuY2UsIHVzZSBhIHJlZiBvbiB0aGUgY29ubmVjdGVkIGNvbXBvbmVudCcpO1xuICAgIH1cblxuICAgIHZhciBjdXN0b21TdG9yZVdhcm5pbmdNZXNzYWdlID0gJ1RvIHVzZSBhIGN1c3RvbSBSZWR1eCBzdG9yZSBmb3Igc3BlY2lmaWMgY29tcG9uZW50cywgY3JlYXRlIGEgY3VzdG9tIFJlYWN0IGNvbnRleHQgd2l0aCAnICsgXCJSZWFjdC5jcmVhdGVDb250ZXh0KCksIGFuZCBwYXNzIHRoZSBjb250ZXh0IG9iamVjdCB0byBSZWFjdCBSZWR1eCdzIFByb3ZpZGVyIGFuZCBzcGVjaWZpYyBjb21wb25lbnRzXCIgKyAnIGxpa2U6IDxQcm92aWRlciBjb250ZXh0PXtNeUNvbnRleHR9PjxDb25uZWN0ZWRDb21wb25lbnQgY29udGV4dD17TXlDb250ZXh0fSAvPjwvUHJvdmlkZXI+LiAnICsgJ1lvdSBtYXkgYWxzbyBwYXNzIGEge2NvbnRleHQgOiBNeUNvbnRleHR9IG9wdGlvbiB0byBjb25uZWN0JztcblxuICAgIGlmIChzdG9yZUtleSAhPT0gJ3N0b3JlJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdzdG9yZUtleSBoYXMgYmVlbiByZW1vdmVkIGFuZCBkb2VzIG5vdCBkbyBhbnl0aGluZy4gJyArIGN1c3RvbVN0b3JlV2FybmluZ01lc3NhZ2UpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBDb250ZXh0ID0gY29udGV4dDtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXBXaXRoQ29ubmVjdChXcmFwcGVkQ29tcG9uZW50KSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIWlzVmFsaWRFbGVtZW50VHlwZShXcmFwcGVkQ29tcG9uZW50KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiWW91IG11c3QgcGFzcyBhIGNvbXBvbmVudCB0byB0aGUgZnVuY3Rpb24gcmV0dXJuZWQgYnkgXCIgKyAobWV0aG9kTmFtZSArIFwiLiBJbnN0ZWFkIHJlY2VpdmVkIFwiICsgc3RyaW5naWZ5Q29tcG9uZW50KFdyYXBwZWRDb21wb25lbnQpKSk7XG4gICAgfVxuXG4gICAgdmFyIHdyYXBwZWRDb21wb25lbnROYW1lID0gV3JhcHBlZENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBXcmFwcGVkQ29tcG9uZW50Lm5hbWUgfHwgJ0NvbXBvbmVudCc7XG4gICAgdmFyIGRpc3BsYXlOYW1lID0gZ2V0RGlzcGxheU5hbWUod3JhcHBlZENvbXBvbmVudE5hbWUpO1xuXG4gICAgdmFyIHNlbGVjdG9yRmFjdG9yeU9wdGlvbnMgPSBfZXh0ZW5kcyh7fSwgY29ubmVjdE9wdGlvbnMsIHtcbiAgICAgIGdldERpc3BsYXlOYW1lOiBnZXREaXNwbGF5TmFtZSxcbiAgICAgIG1ldGhvZE5hbWU6IG1ldGhvZE5hbWUsXG4gICAgICByZW5kZXJDb3VudFByb3A6IHJlbmRlckNvdW50UHJvcCxcbiAgICAgIHNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlczogc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzLFxuICAgICAgc3RvcmVLZXk6IHN0b3JlS2V5LFxuICAgICAgZGlzcGxheU5hbWU6IGRpc3BsYXlOYW1lLFxuICAgICAgd3JhcHBlZENvbXBvbmVudE5hbWU6IHdyYXBwZWRDb21wb25lbnROYW1lLFxuICAgICAgV3JhcHBlZENvbXBvbmVudDogV3JhcHBlZENvbXBvbmVudFxuICAgIH0pO1xuXG4gICAgdmFyIHB1cmUgPSBjb25uZWN0T3B0aW9ucy5wdXJlO1xuXG4gICAgZnVuY3Rpb24gY3JlYXRlQ2hpbGRTZWxlY3RvcihzdG9yZSkge1xuICAgICAgcmV0dXJuIHNlbGVjdG9yRmFjdG9yeShzdG9yZS5kaXNwYXRjaCwgc2VsZWN0b3JGYWN0b3J5T3B0aW9ucyk7XG4gICAgfSAvLyBJZiB3ZSBhcmVuJ3QgcnVubmluZyBpbiBcInB1cmVcIiBtb2RlLCB3ZSBkb24ndCB3YW50IHRvIG1lbW9pemUgdmFsdWVzLlxuICAgIC8vIFRvIGF2b2lkIGNvbmRpdGlvbmFsbHkgY2FsbGluZyBob29rcywgd2UgZmFsbCBiYWNrIHRvIGEgdGlueSB3cmFwcGVyXG4gICAgLy8gdGhhdCBqdXN0IGV4ZWN1dGVzIHRoZSBnaXZlbiBjYWxsYmFjayBpbW1lZGlhdGVseS5cblxuXG4gICAgdmFyIHVzZVB1cmVPbmx5TWVtbyA9IHB1cmUgPyB1c2VNZW1vIDogZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICByZXR1cm4gY2FsbGJhY2soKTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gQ29ubmVjdEZ1bmN0aW9uKHByb3BzKSB7XG4gICAgICB2YXIgX3VzZU1lbW8gPSB1c2VNZW1vKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gRGlzdGluZ3Vpc2ggYmV0d2VlbiBhY3R1YWwgXCJkYXRhXCIgcHJvcHMgdGhhdCB3ZXJlIHBhc3NlZCB0byB0aGUgd3JhcHBlciBjb21wb25lbnQsXG4gICAgICAgIC8vIGFuZCB2YWx1ZXMgbmVlZGVkIHRvIGNvbnRyb2wgYmVoYXZpb3IgKGZvcndhcmRlZCByZWZzLCBhbHRlcm5hdGUgY29udGV4dCBpbnN0YW5jZXMpLlxuICAgICAgICAvLyBUbyBtYWludGFpbiB0aGUgd3JhcHBlclByb3BzIG9iamVjdCByZWZlcmVuY2UsIG1lbW9pemUgdGhpcyBkZXN0cnVjdHVyaW5nLlxuICAgICAgICB2YXIgcmVhY3RSZWR1eEZvcndhcmRlZFJlZiA9IHByb3BzLnJlYWN0UmVkdXhGb3J3YXJkZWRSZWYsXG4gICAgICAgICAgICB3cmFwcGVyUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgW1wicmVhY3RSZWR1eEZvcndhcmRlZFJlZlwiXSk7XG5cbiAgICAgICAgcmV0dXJuIFtwcm9wcy5jb250ZXh0LCByZWFjdFJlZHV4Rm9yd2FyZGVkUmVmLCB3cmFwcGVyUHJvcHNdO1xuICAgICAgfSwgW3Byb3BzXSksXG4gICAgICAgICAgcHJvcHNDb250ZXh0ID0gX3VzZU1lbW9bMF0sXG4gICAgICAgICAgcmVhY3RSZWR1eEZvcndhcmRlZFJlZiA9IF91c2VNZW1vWzFdLFxuICAgICAgICAgIHdyYXBwZXJQcm9wcyA9IF91c2VNZW1vWzJdO1xuXG4gICAgICB2YXIgQ29udGV4dFRvVXNlID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIFVzZXJzIG1heSBvcHRpb25hbGx5IHBhc3MgaW4gYSBjdXN0b20gY29udGV4dCBpbnN0YW5jZSB0byB1c2UgaW5zdGVhZCBvZiBvdXIgUmVhY3RSZWR1eENvbnRleHQuXG4gICAgICAgIC8vIE1lbW9pemUgdGhlIGNoZWNrIHRoYXQgZGV0ZXJtaW5lcyB3aGljaCBjb250ZXh0IGluc3RhbmNlIHdlIHNob3VsZCB1c2UuXG4gICAgICAgIHJldHVybiBwcm9wc0NvbnRleHQgJiYgcHJvcHNDb250ZXh0LkNvbnN1bWVyICYmIGlzQ29udGV4dENvbnN1bWVyKCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChwcm9wc0NvbnRleHQuQ29uc3VtZXIsIG51bGwpKSA/IHByb3BzQ29udGV4dCA6IENvbnRleHQ7XG4gICAgICB9LCBbcHJvcHNDb250ZXh0LCBDb250ZXh0XSk7IC8vIFJldHJpZXZlIHRoZSBzdG9yZSBhbmQgYW5jZXN0b3Igc3Vic2NyaXB0aW9uIHZpYSBjb250ZXh0LCBpZiBhdmFpbGFibGVcblxuICAgICAgdmFyIGNvbnRleHRWYWx1ZSA9IHVzZUNvbnRleHQoQ29udGV4dFRvVXNlKTsgLy8gVGhlIHN0b3JlIF9tdXN0XyBleGlzdCBhcyBlaXRoZXIgYSBwcm9wIG9yIGluIGNvbnRleHQuXG4gICAgICAvLyBXZSdsbCBjaGVjayB0byBzZWUgaWYgaXQgX2xvb2tzXyBsaWtlIGEgUmVkdXggc3RvcmUgZmlyc3QuXG4gICAgICAvLyBUaGlzIGFsbG93cyB1cyB0byBwYXNzIHRocm91Z2ggYSBgc3RvcmVgIHByb3AgdGhhdCBpcyBqdXN0IGEgcGxhaW4gdmFsdWUuXG5cbiAgICAgIHZhciBkaWRTdG9yZUNvbWVGcm9tUHJvcHMgPSBCb29sZWFuKHByb3BzLnN0b3JlKSAmJiBCb29sZWFuKHByb3BzLnN0b3JlLmdldFN0YXRlKSAmJiBCb29sZWFuKHByb3BzLnN0b3JlLmRpc3BhdGNoKTtcbiAgICAgIHZhciBkaWRTdG9yZUNvbWVGcm9tQ29udGV4dCA9IEJvb2xlYW4oY29udGV4dFZhbHVlKSAmJiBCb29sZWFuKGNvbnRleHRWYWx1ZS5zdG9yZSk7XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICFkaWRTdG9yZUNvbWVGcm9tUHJvcHMgJiYgIWRpZFN0b3JlQ29tZUZyb21Db250ZXh0KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkIG5vdCBmaW5kIFxcXCJzdG9yZVxcXCIgaW4gdGhlIGNvbnRleHQgb2YgXCIgKyAoXCJcXFwiXCIgKyBkaXNwbGF5TmFtZSArIFwiXFxcIi4gRWl0aGVyIHdyYXAgdGhlIHJvb3QgY29tcG9uZW50IGluIGEgPFByb3ZpZGVyPiwgXCIpICsgXCJvciBwYXNzIGEgY3VzdG9tIFJlYWN0IGNvbnRleHQgcHJvdmlkZXIgdG8gPFByb3ZpZGVyPiBhbmQgdGhlIGNvcnJlc3BvbmRpbmcgXCIgKyAoXCJSZWFjdCBjb250ZXh0IGNvbnN1bWVyIHRvIFwiICsgZGlzcGxheU5hbWUgKyBcIiBpbiBjb25uZWN0IG9wdGlvbnMuXCIpKTtcbiAgICAgIH0gLy8gQmFzZWQgb24gdGhlIHByZXZpb3VzIGNoZWNrLCBvbmUgb2YgdGhlc2UgbXVzdCBiZSB0cnVlXG5cblxuICAgICAgdmFyIHN0b3JlID0gZGlkU3RvcmVDb21lRnJvbVByb3BzID8gcHJvcHMuc3RvcmUgOiBjb250ZXh0VmFsdWUuc3RvcmU7XG4gICAgICB2YXIgY2hpbGRQcm9wc1NlbGVjdG9yID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIFRoZSBjaGlsZCBwcm9wcyBzZWxlY3RvciBuZWVkcyB0aGUgc3RvcmUgcmVmZXJlbmNlIGFzIGFuIGlucHV0LlxuICAgICAgICAvLyBSZS1jcmVhdGUgdGhpcyBzZWxlY3RvciB3aGVuZXZlciB0aGUgc3RvcmUgY2hhbmdlcy5cbiAgICAgICAgcmV0dXJuIGNyZWF0ZUNoaWxkU2VsZWN0b3Ioc3RvcmUpO1xuICAgICAgfSwgW3N0b3JlXSk7XG5cbiAgICAgIHZhciBfdXNlTWVtbzIgPSB1c2VNZW1vKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCFzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMpIHJldHVybiBOT19TVUJTQ1JJUFRJT05fQVJSQVk7IC8vIFRoaXMgU3Vic2NyaXB0aW9uJ3Mgc291cmNlIHNob3VsZCBtYXRjaCB3aGVyZSBzdG9yZSBjYW1lIGZyb206IHByb3BzIHZzLiBjb250ZXh0LiBBIGNvbXBvbmVudFxuICAgICAgICAvLyBjb25uZWN0ZWQgdG8gdGhlIHN0b3JlIHZpYSBwcm9wcyBzaG91bGRuJ3QgdXNlIHN1YnNjcmlwdGlvbiBmcm9tIGNvbnRleHQsIG9yIHZpY2UgdmVyc2EuXG5cbiAgICAgICAgdmFyIHN1YnNjcmlwdGlvbiA9IG5ldyBTdWJzY3JpcHRpb24oc3RvcmUsIGRpZFN0b3JlQ29tZUZyb21Qcm9wcyA/IG51bGwgOiBjb250ZXh0VmFsdWUuc3Vic2NyaXB0aW9uKTsgLy8gYG5vdGlmeU5lc3RlZFN1YnNgIGlzIGR1cGxpY2F0ZWQgdG8gaGFuZGxlIHRoZSBjYXNlIHdoZXJlIHRoZSBjb21wb25lbnQgaXMgdW5tb3VudGVkIGluXG4gICAgICAgIC8vIHRoZSBtaWRkbGUgb2YgdGhlIG5vdGlmaWNhdGlvbiBsb29wLCB3aGVyZSBgc3Vic2NyaXB0aW9uYCB3aWxsIHRoZW4gYmUgbnVsbC4gVGhpcyBjYW5cbiAgICAgICAgLy8gcHJvYmFibHkgYmUgYXZvaWRlZCBpZiBTdWJzY3JpcHRpb24ncyBsaXN0ZW5lcnMgbG9naWMgaXMgY2hhbmdlZCB0byBub3QgY2FsbCBsaXN0ZW5lcnNcbiAgICAgICAgLy8gdGhhdCBoYXZlIGJlZW4gdW5zdWJzY3JpYmVkIGluIHRoZSAgbWlkZGxlIG9mIHRoZSBub3RpZmljYXRpb24gbG9vcC5cblxuICAgICAgICB2YXIgbm90aWZ5TmVzdGVkU3VicyA9IHN1YnNjcmlwdGlvbi5ub3RpZnlOZXN0ZWRTdWJzLmJpbmQoc3Vic2NyaXB0aW9uKTtcbiAgICAgICAgcmV0dXJuIFtzdWJzY3JpcHRpb24sIG5vdGlmeU5lc3RlZFN1YnNdO1xuICAgICAgfSwgW3N0b3JlLCBkaWRTdG9yZUNvbWVGcm9tUHJvcHMsIGNvbnRleHRWYWx1ZV0pLFxuICAgICAgICAgIHN1YnNjcmlwdGlvbiA9IF91c2VNZW1vMlswXSxcbiAgICAgICAgICBub3RpZnlOZXN0ZWRTdWJzID0gX3VzZU1lbW8yWzFdOyAvLyBEZXRlcm1pbmUgd2hhdCB7c3RvcmUsIHN1YnNjcmlwdGlvbn0gdmFsdWUgc2hvdWxkIGJlIHB1dCBpbnRvIG5lc3RlZCBjb250ZXh0LCBpZiBuZWNlc3NhcnksXG4gICAgICAvLyBhbmQgbWVtb2l6ZSB0aGF0IHZhbHVlIHRvIGF2b2lkIHVubmVjZXNzYXJ5IGNvbnRleHQgdXBkYXRlcy5cblxuXG4gICAgICB2YXIgb3ZlcnJpZGRlbkNvbnRleHRWYWx1ZSA9IHVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoZGlkU3RvcmVDb21lRnJvbVByb3BzKSB7XG4gICAgICAgICAgLy8gVGhpcyBjb21wb25lbnQgaXMgZGlyZWN0bHkgc3Vic2NyaWJlZCB0byBhIHN0b3JlIGZyb20gcHJvcHMuXG4gICAgICAgICAgLy8gV2UgZG9uJ3Qgd2FudCBkZXNjZW5kYW50cyByZWFkaW5nIGZyb20gdGhpcyBzdG9yZSAtIHBhc3MgZG93biB3aGF0ZXZlclxuICAgICAgICAgIC8vIHRoZSBleGlzdGluZyBjb250ZXh0IHZhbHVlIGlzIGZyb20gdGhlIG5lYXJlc3QgY29ubmVjdGVkIGFuY2VzdG9yLlxuICAgICAgICAgIHJldHVybiBjb250ZXh0VmFsdWU7XG4gICAgICAgIH0gLy8gT3RoZXJ3aXNlLCBwdXQgdGhpcyBjb21wb25lbnQncyBzdWJzY3JpcHRpb24gaW5zdGFuY2UgaW50byBjb250ZXh0LCBzbyB0aGF0XG4gICAgICAgIC8vIGNvbm5lY3RlZCBkZXNjZW5kYW50cyB3b24ndCB1cGRhdGUgdW50aWwgYWZ0ZXIgdGhpcyBjb21wb25lbnQgaXMgZG9uZVxuXG5cbiAgICAgICAgcmV0dXJuIF9leHRlbmRzKHt9LCBjb250ZXh0VmFsdWUsIHtcbiAgICAgICAgICBzdWJzY3JpcHRpb246IHN1YnNjcmlwdGlvblxuICAgICAgICB9KTtcbiAgICAgIH0sIFtkaWRTdG9yZUNvbWVGcm9tUHJvcHMsIGNvbnRleHRWYWx1ZSwgc3Vic2NyaXB0aW9uXSk7IC8vIFdlIG5lZWQgdG8gZm9yY2UgdGhpcyB3cmFwcGVyIGNvbXBvbmVudCB0byByZS1yZW5kZXIgd2hlbmV2ZXIgYSBSZWR1eCBzdG9yZSB1cGRhdGVcbiAgICAgIC8vIGNhdXNlcyBhIGNoYW5nZSB0byB0aGUgY2FsY3VsYXRlZCBjaGlsZCBjb21wb25lbnQgcHJvcHMgKG9yIHdlIGNhdWdodCBhbiBlcnJvciBpbiBtYXBTdGF0ZSlcblxuICAgICAgdmFyIF91c2VSZWR1Y2VyID0gdXNlUmVkdWNlcihzdG9yZVN0YXRlVXBkYXRlc1JlZHVjZXIsIEVNUFRZX0FSUkFZLCBpbml0U3RhdGVVcGRhdGVzKSxcbiAgICAgICAgICBfdXNlUmVkdWNlciQgPSBfdXNlUmVkdWNlclswXSxcbiAgICAgICAgICBwcmV2aW91c1N0YXRlVXBkYXRlUmVzdWx0ID0gX3VzZVJlZHVjZXIkWzBdLFxuICAgICAgICAgIGZvcmNlQ29tcG9uZW50VXBkYXRlRGlzcGF0Y2ggPSBfdXNlUmVkdWNlclsxXTsgLy8gUHJvcGFnYXRlIGFueSBtYXBTdGF0ZS9tYXBEaXNwYXRjaCBlcnJvcnMgdXB3YXJkc1xuXG5cbiAgICAgIGlmIChwcmV2aW91c1N0YXRlVXBkYXRlUmVzdWx0ICYmIHByZXZpb3VzU3RhdGVVcGRhdGVSZXN1bHQuZXJyb3IpIHtcbiAgICAgICAgdGhyb3cgcHJldmlvdXNTdGF0ZVVwZGF0ZVJlc3VsdC5lcnJvcjtcbiAgICAgIH0gLy8gU2V0IHVwIHJlZnMgdG8gY29vcmRpbmF0ZSB2YWx1ZXMgYmV0d2VlbiB0aGUgc3Vic2NyaXB0aW9uIGVmZmVjdCBhbmQgdGhlIHJlbmRlciBsb2dpY1xuXG5cbiAgICAgIHZhciBsYXN0Q2hpbGRQcm9wcyA9IHVzZVJlZigpO1xuICAgICAgdmFyIGxhc3RXcmFwcGVyUHJvcHMgPSB1c2VSZWYod3JhcHBlclByb3BzKTtcbiAgICAgIHZhciBjaGlsZFByb3BzRnJvbVN0b3JlVXBkYXRlID0gdXNlUmVmKCk7XG4gICAgICB2YXIgcmVuZGVySXNTY2hlZHVsZWQgPSB1c2VSZWYoZmFsc2UpO1xuICAgICAgdmFyIGFjdHVhbENoaWxkUHJvcHMgPSB1c2VQdXJlT25seU1lbW8oZnVuY3Rpb24gKCkge1xuICAgICAgICAvLyBUcmlja3kgbG9naWMgaGVyZTpcbiAgICAgICAgLy8gLSBUaGlzIHJlbmRlciBtYXkgaGF2ZSBiZWVuIHRyaWdnZXJlZCBieSBhIFJlZHV4IHN0b3JlIHVwZGF0ZSB0aGF0IHByb2R1Y2VkIG5ldyBjaGlsZCBwcm9wc1xuICAgICAgICAvLyAtIEhvd2V2ZXIsIHdlIG1heSBoYXZlIGdvdHRlbiBuZXcgd3JhcHBlciBwcm9wcyBhZnRlciB0aGF0XG4gICAgICAgIC8vIElmIHdlIGhhdmUgbmV3IGNoaWxkIHByb3BzLCBhbmQgdGhlIHNhbWUgd3JhcHBlciBwcm9wcywgd2Uga25vdyB3ZSBzaG91bGQgdXNlIHRoZSBuZXcgY2hpbGQgcHJvcHMgYXMtaXMuXG4gICAgICAgIC8vIEJ1dCwgaWYgd2UgaGF2ZSBuZXcgd3JhcHBlciBwcm9wcywgdGhvc2UgbWlnaHQgY2hhbmdlIHRoZSBjaGlsZCBwcm9wcywgc28gd2UgaGF2ZSB0byByZWNhbGN1bGF0ZSB0aGluZ3MuXG4gICAgICAgIC8vIFNvLCB3ZSdsbCB1c2UgdGhlIGNoaWxkIHByb3BzIGZyb20gc3RvcmUgdXBkYXRlIG9ubHkgaWYgdGhlIHdyYXBwZXIgcHJvcHMgYXJlIHRoZSBzYW1lIGFzIGxhc3QgdGltZS5cbiAgICAgICAgaWYgKGNoaWxkUHJvcHNGcm9tU3RvcmVVcGRhdGUuY3VycmVudCAmJiB3cmFwcGVyUHJvcHMgPT09IGxhc3RXcmFwcGVyUHJvcHMuY3VycmVudCkge1xuICAgICAgICAgIHJldHVybiBjaGlsZFByb3BzRnJvbVN0b3JlVXBkYXRlLmN1cnJlbnQ7XG4gICAgICAgIH0gLy8gVE9ETyBXZSdyZSByZWFkaW5nIHRoZSBzdG9yZSBkaXJlY3RseSBpbiByZW5kZXIoKSBoZXJlLiBCYWQgaWRlYT9cbiAgICAgICAgLy8gVGhpcyB3aWxsIGxpa2VseSBjYXVzZSBCYWQgVGhpbmdzIChUTSkgdG8gaGFwcGVuIGluIENvbmN1cnJlbnQgTW9kZS5cbiAgICAgICAgLy8gTm90ZSB0aGF0IHdlIGRvIHRoaXMgYmVjYXVzZSBvbiByZW5kZXJzIF9ub3RfIGNhdXNlZCBieSBzdG9yZSB1cGRhdGVzLCB3ZSBuZWVkIHRoZSBsYXRlc3Qgc3RvcmUgc3RhdGVcbiAgICAgICAgLy8gdG8gZGV0ZXJtaW5lIHdoYXQgdGhlIGNoaWxkIHByb3BzIHNob3VsZCBiZS5cblxuXG4gICAgICAgIHJldHVybiBjaGlsZFByb3BzU2VsZWN0b3Ioc3RvcmUuZ2V0U3RhdGUoKSwgd3JhcHBlclByb3BzKTtcbiAgICAgIH0sIFtzdG9yZSwgcHJldmlvdXNTdGF0ZVVwZGF0ZVJlc3VsdCwgd3JhcHBlclByb3BzXSk7IC8vIFdlIG5lZWQgdGhpcyB0byBleGVjdXRlIHN5bmNocm9ub3VzbHkgZXZlcnkgdGltZSB3ZSByZS1yZW5kZXIuIEhvd2V2ZXIsIFJlYWN0IHdhcm5zXG4gICAgICAvLyBhYm91dCB1c2VMYXlvdXRFZmZlY3QgaW4gU1NSLCBzbyB3ZSB0cnkgdG8gZGV0ZWN0IGVudmlyb25tZW50IGFuZCBmYWxsIGJhY2sgdG9cbiAgICAgIC8vIGp1c3QgdXNlRWZmZWN0IGluc3RlYWQgdG8gYXZvaWQgdGhlIHdhcm5pbmcsIHNpbmNlIG5laXRoZXIgd2lsbCBydW4gYW55d2F5LlxuXG4gICAgICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0V2l0aEFyZ3MoY2FwdHVyZVdyYXBwZXJQcm9wcywgW2xhc3RXcmFwcGVyUHJvcHMsIGxhc3RDaGlsZFByb3BzLCByZW5kZXJJc1NjaGVkdWxlZCwgd3JhcHBlclByb3BzLCBhY3R1YWxDaGlsZFByb3BzLCBjaGlsZFByb3BzRnJvbVN0b3JlVXBkYXRlLCBub3RpZnlOZXN0ZWRTdWJzXSk7IC8vIE91ciByZS1zdWJzY3JpYmUgbG9naWMgb25seSBydW5zIHdoZW4gdGhlIHN0b3JlL3N1YnNjcmlwdGlvbiBzZXR1cCBjaGFuZ2VzXG5cbiAgICAgIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3RXaXRoQXJncyhzdWJzY3JpYmVVcGRhdGVzLCBbc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzLCBzdG9yZSwgc3Vic2NyaXB0aW9uLCBjaGlsZFByb3BzU2VsZWN0b3IsIGxhc3RXcmFwcGVyUHJvcHMsIGxhc3RDaGlsZFByb3BzLCByZW5kZXJJc1NjaGVkdWxlZCwgY2hpbGRQcm9wc0Zyb21TdG9yZVVwZGF0ZSwgbm90aWZ5TmVzdGVkU3VicywgZm9yY2VDb21wb25lbnRVcGRhdGVEaXNwYXRjaF0sIFtzdG9yZSwgc3Vic2NyaXB0aW9uLCBjaGlsZFByb3BzU2VsZWN0b3JdKTsgLy8gTm93IHRoYXQgYWxsIHRoYXQncyBkb25lLCB3ZSBjYW4gZmluYWxseSB0cnkgdG8gYWN0dWFsbHkgcmVuZGVyIHRoZSBjaGlsZCBjb21wb25lbnQuXG4gICAgICAvLyBXZSBtZW1vaXplIHRoZSBlbGVtZW50cyBmb3IgdGhlIHJlbmRlcmVkIGNoaWxkIGNvbXBvbmVudCBhcyBhbiBvcHRpbWl6YXRpb24uXG5cbiAgICAgIHZhciByZW5kZXJlZFdyYXBwZWRDb21wb25lbnQgPSB1c2VNZW1vKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFdyYXBwZWRDb21wb25lbnQsIF9leHRlbmRzKHt9LCBhY3R1YWxDaGlsZFByb3BzLCB7XG4gICAgICAgICAgcmVmOiByZWFjdFJlZHV4Rm9yd2FyZGVkUmVmXG4gICAgICAgIH0pKTtcbiAgICAgIH0sIFtyZWFjdFJlZHV4Rm9yd2FyZGVkUmVmLCBXcmFwcGVkQ29tcG9uZW50LCBhY3R1YWxDaGlsZFByb3BzXSk7IC8vIElmIFJlYWN0IHNlZXMgdGhlIGV4YWN0IHNhbWUgZWxlbWVudCByZWZlcmVuY2UgYXMgbGFzdCB0aW1lLCBpdCBiYWlscyBvdXQgb2YgcmUtcmVuZGVyaW5nXG4gICAgICAvLyB0aGF0IGNoaWxkLCBzYW1lIGFzIGlmIGl0IHdhcyB3cmFwcGVkIGluIFJlYWN0Lm1lbW8oKSBvciByZXR1cm5lZCBmYWxzZSBmcm9tIHNob3VsZENvbXBvbmVudFVwZGF0ZS5cblxuICAgICAgdmFyIHJlbmRlcmVkQ2hpbGQgPSB1c2VNZW1vKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcykge1xuICAgICAgICAgIC8vIElmIHRoaXMgY29tcG9uZW50IGlzIHN1YnNjcmliZWQgdG8gc3RvcmUgdXBkYXRlcywgd2UgbmVlZCB0byBwYXNzIGl0cyBvd25cbiAgICAgICAgICAvLyBzdWJzY3JpcHRpb24gaW5zdGFuY2UgZG93biB0byBvdXIgZGVzY2VuZGFudHMuIFRoYXQgbWVhbnMgcmVuZGVyaW5nIHRoZSBzYW1lXG4gICAgICAgICAgLy8gQ29udGV4dCBpbnN0YW5jZSwgYW5kIHB1dHRpbmcgYSBkaWZmZXJlbnQgdmFsdWUgaW50byB0aGUgY29udGV4dC5cbiAgICAgICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGV4dFRvVXNlLlByb3ZpZGVyLCB7XG4gICAgICAgICAgICB2YWx1ZTogb3ZlcnJpZGRlbkNvbnRleHRWYWx1ZVxuICAgICAgICAgIH0sIHJlbmRlcmVkV3JhcHBlZENvbXBvbmVudCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVuZGVyZWRXcmFwcGVkQ29tcG9uZW50O1xuICAgICAgfSwgW0NvbnRleHRUb1VzZSwgcmVuZGVyZWRXcmFwcGVkQ29tcG9uZW50LCBvdmVycmlkZGVuQ29udGV4dFZhbHVlXSk7XG4gICAgICByZXR1cm4gcmVuZGVyZWRDaGlsZDtcbiAgICB9IC8vIElmIHdlJ3JlIGluIFwicHVyZVwiIG1vZGUsIGVuc3VyZSBvdXIgd3JhcHBlciBjb21wb25lbnQgb25seSByZS1yZW5kZXJzIHdoZW4gaW5jb21pbmcgcHJvcHMgaGF2ZSBjaGFuZ2VkLlxuXG5cbiAgICB2YXIgQ29ubmVjdCA9IHB1cmUgPyBSZWFjdC5tZW1vKENvbm5lY3RGdW5jdGlvbikgOiBDb25uZWN0RnVuY3Rpb247XG4gICAgQ29ubmVjdC5XcmFwcGVkQ29tcG9uZW50ID0gV3JhcHBlZENvbXBvbmVudDtcbiAgICBDb25uZWN0LmRpc3BsYXlOYW1lID0gQ29ubmVjdEZ1bmN0aW9uLmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7XG5cbiAgICBpZiAoZm9yd2FyZFJlZikge1xuICAgICAgdmFyIGZvcndhcmRlZCA9IFJlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gZm9yd2FyZENvbm5lY3RSZWYocHJvcHMsIHJlZikge1xuICAgICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ29ubmVjdCwgX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgICAgICAgcmVhY3RSZWR1eEZvcndhcmRlZFJlZjogcmVmXG4gICAgICAgIH0pKTtcbiAgICAgIH0pO1xuICAgICAgZm9yd2FyZGVkLmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7XG4gICAgICBmb3J3YXJkZWQuV3JhcHBlZENvbXBvbmVudCA9IFdyYXBwZWRDb21wb25lbnQ7XG4gICAgICByZXR1cm4gaG9pc3RTdGF0aWNzKGZvcndhcmRlZCwgV3JhcHBlZENvbXBvbmVudCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGhvaXN0U3RhdGljcyhDb25uZWN0LCBXcmFwcGVkQ29tcG9uZW50KTtcbiAgfTtcbn0iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IGNvbm5lY3RBZHZhbmNlZCBmcm9tICcuLi9jb21wb25lbnRzL2Nvbm5lY3RBZHZhbmNlZCc7XG5pbXBvcnQgc2hhbGxvd0VxdWFsIGZyb20gJy4uL3V0aWxzL3NoYWxsb3dFcXVhbCc7XG5pbXBvcnQgZGVmYXVsdE1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcyBmcm9tICcuL21hcERpc3BhdGNoVG9Qcm9wcyc7XG5pbXBvcnQgZGVmYXVsdE1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcyBmcm9tICcuL21hcFN0YXRlVG9Qcm9wcyc7XG5pbXBvcnQgZGVmYXVsdE1lcmdlUHJvcHNGYWN0b3JpZXMgZnJvbSAnLi9tZXJnZVByb3BzJztcbmltcG9ydCBkZWZhdWx0U2VsZWN0b3JGYWN0b3J5IGZyb20gJy4vc2VsZWN0b3JGYWN0b3J5Jztcbi8qXHJcbiAgY29ubmVjdCBpcyBhIGZhY2FkZSBvdmVyIGNvbm5lY3RBZHZhbmNlZC4gSXQgdHVybnMgaXRzIGFyZ3MgaW50byBhIGNvbXBhdGlibGVcclxuICBzZWxlY3RvckZhY3RvcnksIHdoaWNoIGhhcyB0aGUgc2lnbmF0dXJlOlxyXG5cclxuICAgIChkaXNwYXRjaCwgb3B0aW9ucykgPT4gKG5leHRTdGF0ZSwgbmV4dE93blByb3BzKSA9PiBuZXh0RmluYWxQcm9wc1xyXG4gIFxyXG4gIGNvbm5lY3QgcGFzc2VzIGl0cyBhcmdzIHRvIGNvbm5lY3RBZHZhbmNlZCBhcyBvcHRpb25zLCB3aGljaCB3aWxsIGluIHR1cm4gcGFzcyB0aGVtIHRvXHJcbiAgc2VsZWN0b3JGYWN0b3J5IGVhY2ggdGltZSBhIENvbm5lY3QgY29tcG9uZW50IGluc3RhbmNlIGlzIGluc3RhbnRpYXRlZCBvciBob3QgcmVsb2FkZWQuXHJcblxyXG4gIHNlbGVjdG9yRmFjdG9yeSByZXR1cm5zIGEgZmluYWwgcHJvcHMgc2VsZWN0b3IgZnJvbSBpdHMgbWFwU3RhdGVUb1Byb3BzLFxyXG4gIG1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcywgbWFwRGlzcGF0Y2hUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHNGYWN0b3JpZXMsIG1lcmdlUHJvcHMsXHJcbiAgbWVyZ2VQcm9wc0ZhY3RvcmllcywgYW5kIHB1cmUgYXJncy5cclxuXHJcbiAgVGhlIHJlc3VsdGluZyBmaW5hbCBwcm9wcyBzZWxlY3RvciBpcyBjYWxsZWQgYnkgdGhlIENvbm5lY3QgY29tcG9uZW50IGluc3RhbmNlIHdoZW5ldmVyXHJcbiAgaXQgcmVjZWl2ZXMgbmV3IHByb3BzIG9yIHN0b3JlIHN0YXRlLlxyXG4gKi9cblxuZnVuY3Rpb24gbWF0Y2goYXJnLCBmYWN0b3JpZXMsIG5hbWUpIHtcbiAgZm9yICh2YXIgaSA9IGZhY3Rvcmllcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgIHZhciByZXN1bHQgPSBmYWN0b3JpZXNbaV0oYXJnKTtcbiAgICBpZiAocmVzdWx0KSByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChkaXNwYXRjaCwgb3B0aW9ucykge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgdmFsdWUgb2YgdHlwZSBcIiArIHR5cGVvZiBhcmcgKyBcIiBmb3IgXCIgKyBuYW1lICsgXCIgYXJndW1lbnQgd2hlbiBjb25uZWN0aW5nIGNvbXBvbmVudCBcIiArIG9wdGlvbnMud3JhcHBlZENvbXBvbmVudE5hbWUgKyBcIi5cIik7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHN0cmljdEVxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIGEgPT09IGI7XG59IC8vIGNyZWF0ZUNvbm5lY3Qgd2l0aCBkZWZhdWx0IGFyZ3MgYnVpbGRzIHRoZSAnb2ZmaWNpYWwnIGNvbm5lY3QgYmVoYXZpb3IuIENhbGxpbmcgaXQgd2l0aFxuLy8gZGlmZmVyZW50IG9wdGlvbnMgb3BlbnMgdXAgc29tZSB0ZXN0aW5nIGFuZCBleHRlbnNpYmlsaXR5IHNjZW5hcmlvc1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb25uZWN0KF90ZW1wKSB7XG4gIHZhciBfcmVmID0gX3RlbXAgPT09IHZvaWQgMCA/IHt9IDogX3RlbXAsXG4gICAgICBfcmVmJGNvbm5lY3RIT0MgPSBfcmVmLmNvbm5lY3RIT0MsXG4gICAgICBjb25uZWN0SE9DID0gX3JlZiRjb25uZWN0SE9DID09PSB2b2lkIDAgPyBjb25uZWN0QWR2YW5jZWQgOiBfcmVmJGNvbm5lY3RIT0MsXG4gICAgICBfcmVmJG1hcFN0YXRlVG9Qcm9wc0YgPSBfcmVmLm1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcyxcbiAgICAgIG1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcyA9IF9yZWYkbWFwU3RhdGVUb1Byb3BzRiA9PT0gdm9pZCAwID8gZGVmYXVsdE1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcyA6IF9yZWYkbWFwU3RhdGVUb1Byb3BzRixcbiAgICAgIF9yZWYkbWFwRGlzcGF0Y2hUb1BybyA9IF9yZWYubWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzLFxuICAgICAgbWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzID0gX3JlZiRtYXBEaXNwYXRjaFRvUHJvID09PSB2b2lkIDAgPyBkZWZhdWx0TWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzIDogX3JlZiRtYXBEaXNwYXRjaFRvUHJvLFxuICAgICAgX3JlZiRtZXJnZVByb3BzRmFjdG9yID0gX3JlZi5tZXJnZVByb3BzRmFjdG9yaWVzLFxuICAgICAgbWVyZ2VQcm9wc0ZhY3RvcmllcyA9IF9yZWYkbWVyZ2VQcm9wc0ZhY3RvciA9PT0gdm9pZCAwID8gZGVmYXVsdE1lcmdlUHJvcHNGYWN0b3JpZXMgOiBfcmVmJG1lcmdlUHJvcHNGYWN0b3IsXG4gICAgICBfcmVmJHNlbGVjdG9yRmFjdG9yeSA9IF9yZWYuc2VsZWN0b3JGYWN0b3J5LFxuICAgICAgc2VsZWN0b3JGYWN0b3J5ID0gX3JlZiRzZWxlY3RvckZhY3RvcnkgPT09IHZvaWQgMCA/IGRlZmF1bHRTZWxlY3RvckZhY3RvcnkgOiBfcmVmJHNlbGVjdG9yRmFjdG9yeTtcblxuICByZXR1cm4gZnVuY3Rpb24gY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcywgbWVyZ2VQcm9wcywgX3JlZjIpIHtcbiAgICBpZiAoX3JlZjIgPT09IHZvaWQgMCkge1xuICAgICAgX3JlZjIgPSB7fTtcbiAgICB9XG5cbiAgICB2YXIgX3JlZjMgPSBfcmVmMixcbiAgICAgICAgX3JlZjMkcHVyZSA9IF9yZWYzLnB1cmUsXG4gICAgICAgIHB1cmUgPSBfcmVmMyRwdXJlID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZjMkcHVyZSxcbiAgICAgICAgX3JlZjMkYXJlU3RhdGVzRXF1YWwgPSBfcmVmMy5hcmVTdGF0ZXNFcXVhbCxcbiAgICAgICAgYXJlU3RhdGVzRXF1YWwgPSBfcmVmMyRhcmVTdGF0ZXNFcXVhbCA9PT0gdm9pZCAwID8gc3RyaWN0RXF1YWwgOiBfcmVmMyRhcmVTdGF0ZXNFcXVhbCxcbiAgICAgICAgX3JlZjMkYXJlT3duUHJvcHNFcXVhID0gX3JlZjMuYXJlT3duUHJvcHNFcXVhbCxcbiAgICAgICAgYXJlT3duUHJvcHNFcXVhbCA9IF9yZWYzJGFyZU93blByb3BzRXF1YSA9PT0gdm9pZCAwID8gc2hhbGxvd0VxdWFsIDogX3JlZjMkYXJlT3duUHJvcHNFcXVhLFxuICAgICAgICBfcmVmMyRhcmVTdGF0ZVByb3BzRXEgPSBfcmVmMy5hcmVTdGF0ZVByb3BzRXF1YWwsXG4gICAgICAgIGFyZVN0YXRlUHJvcHNFcXVhbCA9IF9yZWYzJGFyZVN0YXRlUHJvcHNFcSA9PT0gdm9pZCAwID8gc2hhbGxvd0VxdWFsIDogX3JlZjMkYXJlU3RhdGVQcm9wc0VxLFxuICAgICAgICBfcmVmMyRhcmVNZXJnZWRQcm9wc0UgPSBfcmVmMy5hcmVNZXJnZWRQcm9wc0VxdWFsLFxuICAgICAgICBhcmVNZXJnZWRQcm9wc0VxdWFsID0gX3JlZjMkYXJlTWVyZ2VkUHJvcHNFID09PSB2b2lkIDAgPyBzaGFsbG93RXF1YWwgOiBfcmVmMyRhcmVNZXJnZWRQcm9wc0UsXG4gICAgICAgIGV4dHJhT3B0aW9ucyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYzLCBbXCJwdXJlXCIsIFwiYXJlU3RhdGVzRXF1YWxcIiwgXCJhcmVPd25Qcm9wc0VxdWFsXCIsIFwiYXJlU3RhdGVQcm9wc0VxdWFsXCIsIFwiYXJlTWVyZ2VkUHJvcHNFcXVhbFwiXSk7XG5cbiAgICB2YXIgaW5pdE1hcFN0YXRlVG9Qcm9wcyA9IG1hdGNoKG1hcFN0YXRlVG9Qcm9wcywgbWFwU3RhdGVUb1Byb3BzRmFjdG9yaWVzLCAnbWFwU3RhdGVUb1Byb3BzJyk7XG4gICAgdmFyIGluaXRNYXBEaXNwYXRjaFRvUHJvcHMgPSBtYXRjaChtYXBEaXNwYXRjaFRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcywgJ21hcERpc3BhdGNoVG9Qcm9wcycpO1xuICAgIHZhciBpbml0TWVyZ2VQcm9wcyA9IG1hdGNoKG1lcmdlUHJvcHMsIG1lcmdlUHJvcHNGYWN0b3JpZXMsICdtZXJnZVByb3BzJyk7XG4gICAgcmV0dXJuIGNvbm5lY3RIT0Moc2VsZWN0b3JGYWN0b3J5LCBfZXh0ZW5kcyh7XG4gICAgICAvLyB1c2VkIGluIGVycm9yIG1lc3NhZ2VzXG4gICAgICBtZXRob2ROYW1lOiAnY29ubmVjdCcsXG4gICAgICAvLyB1c2VkIHRvIGNvbXB1dGUgQ29ubmVjdCdzIGRpc3BsYXlOYW1lIGZyb20gdGhlIHdyYXBwZWQgY29tcG9uZW50J3MgZGlzcGxheU5hbWUuXG4gICAgICBnZXREaXNwbGF5TmFtZTogZnVuY3Rpb24gZ2V0RGlzcGxheU5hbWUobmFtZSkge1xuICAgICAgICByZXR1cm4gXCJDb25uZWN0KFwiICsgbmFtZSArIFwiKVwiO1xuICAgICAgfSxcbiAgICAgIC8vIGlmIG1hcFN0YXRlVG9Qcm9wcyBpcyBmYWxzeSwgdGhlIENvbm5lY3QgY29tcG9uZW50IGRvZXNuJ3Qgc3Vic2NyaWJlIHRvIHN0b3JlIHN0YXRlIGNoYW5nZXNcbiAgICAgIHNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlczogQm9vbGVhbihtYXBTdGF0ZVRvUHJvcHMpLFxuICAgICAgLy8gcGFzc2VkIHRocm91Z2ggdG8gc2VsZWN0b3JGYWN0b3J5XG4gICAgICBpbml0TWFwU3RhdGVUb1Byb3BzOiBpbml0TWFwU3RhdGVUb1Byb3BzLFxuICAgICAgaW5pdE1hcERpc3BhdGNoVG9Qcm9wczogaW5pdE1hcERpc3BhdGNoVG9Qcm9wcyxcbiAgICAgIGluaXRNZXJnZVByb3BzOiBpbml0TWVyZ2VQcm9wcyxcbiAgICAgIHB1cmU6IHB1cmUsXG4gICAgICBhcmVTdGF0ZXNFcXVhbDogYXJlU3RhdGVzRXF1YWwsXG4gICAgICBhcmVPd25Qcm9wc0VxdWFsOiBhcmVPd25Qcm9wc0VxdWFsLFxuICAgICAgYXJlU3RhdGVQcm9wc0VxdWFsOiBhcmVTdGF0ZVByb3BzRXF1YWwsXG4gICAgICBhcmVNZXJnZWRQcm9wc0VxdWFsOiBhcmVNZXJnZWRQcm9wc0VxdWFsXG4gICAgfSwgZXh0cmFPcHRpb25zKSk7XG4gIH07XG59XG5leHBvcnQgZGVmYXVsdCAvKiNfX1BVUkVfXyovY3JlYXRlQ29ubmVjdCgpOyIsImltcG9ydCBiaW5kQWN0aW9uQ3JlYXRvcnMgZnJvbSAnLi4vdXRpbHMvYmluZEFjdGlvbkNyZWF0b3JzJztcbmltcG9ydCB7IHdyYXBNYXBUb1Byb3BzQ29uc3RhbnQsIHdyYXBNYXBUb1Byb3BzRnVuYyB9IGZyb20gJy4vd3JhcE1hcFRvUHJvcHMnO1xuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc0Z1bmN0aW9uKG1hcERpc3BhdGNoVG9Qcm9wcykge1xuICByZXR1cm4gdHlwZW9mIG1hcERpc3BhdGNoVG9Qcm9wcyA9PT0gJ2Z1bmN0aW9uJyA/IHdyYXBNYXBUb1Byb3BzRnVuYyhtYXBEaXNwYXRjaFRvUHJvcHMsICdtYXBEaXNwYXRjaFRvUHJvcHMnKSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNNaXNzaW5nKG1hcERpc3BhdGNoVG9Qcm9wcykge1xuICByZXR1cm4gIW1hcERpc3BhdGNoVG9Qcm9wcyA/IHdyYXBNYXBUb1Byb3BzQ29uc3RhbnQoZnVuY3Rpb24gKGRpc3BhdGNoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGRpc3BhdGNoOiBkaXNwYXRjaFxuICAgIH07XG4gIH0pIDogdW5kZWZpbmVkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc09iamVjdChtYXBEaXNwYXRjaFRvUHJvcHMpIHtcbiAgcmV0dXJuIG1hcERpc3BhdGNoVG9Qcm9wcyAmJiB0eXBlb2YgbWFwRGlzcGF0Y2hUb1Byb3BzID09PSAnb2JqZWN0JyA/IHdyYXBNYXBUb1Byb3BzQ29uc3RhbnQoZnVuY3Rpb24gKGRpc3BhdGNoKSB7XG4gICAgcmV0dXJuIGJpbmRBY3Rpb25DcmVhdG9ycyhtYXBEaXNwYXRjaFRvUHJvcHMsIGRpc3BhdGNoKTtcbiAgfSkgOiB1bmRlZmluZWQ7XG59XG5leHBvcnQgZGVmYXVsdCBbd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzRnVuY3Rpb24sIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc01pc3NpbmcsIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc09iamVjdF07IiwiaW1wb3J0IHsgd3JhcE1hcFRvUHJvcHNDb25zdGFudCwgd3JhcE1hcFRvUHJvcHNGdW5jIH0gZnJvbSAnLi93cmFwTWFwVG9Qcm9wcyc7XG5leHBvcnQgZnVuY3Rpb24gd2hlbk1hcFN0YXRlVG9Qcm9wc0lzRnVuY3Rpb24obWFwU3RhdGVUb1Byb3BzKSB7XG4gIHJldHVybiB0eXBlb2YgbWFwU3RhdGVUb1Byb3BzID09PSAnZnVuY3Rpb24nID8gd3JhcE1hcFRvUHJvcHNGdW5jKG1hcFN0YXRlVG9Qcm9wcywgJ21hcFN0YXRlVG9Qcm9wcycpIDogdW5kZWZpbmVkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NYXBTdGF0ZVRvUHJvcHNJc01pc3NpbmcobWFwU3RhdGVUb1Byb3BzKSB7XG4gIHJldHVybiAhbWFwU3RhdGVUb1Byb3BzID8gd3JhcE1hcFRvUHJvcHNDb25zdGFudChmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHt9O1xuICB9KSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBkZWZhdWx0IFt3aGVuTWFwU3RhdGVUb1Byb3BzSXNGdW5jdGlvbiwgd2hlbk1hcFN0YXRlVG9Qcm9wc0lzTWlzc2luZ107IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgdmVyaWZ5UGxhaW5PYmplY3QgZnJvbSAnLi4vdXRpbHMvdmVyaWZ5UGxhaW5PYmplY3QnO1xuZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRNZXJnZVByb3BzKHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKSB7XG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgb3duUHJvcHMsIHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdyYXBNZXJnZVByb3BzRnVuYyhtZXJnZVByb3BzKSB7XG4gIHJldHVybiBmdW5jdGlvbiBpbml0TWVyZ2VQcm9wc1Byb3h5KGRpc3BhdGNoLCBfcmVmKSB7XG4gICAgdmFyIGRpc3BsYXlOYW1lID0gX3JlZi5kaXNwbGF5TmFtZSxcbiAgICAgICAgcHVyZSA9IF9yZWYucHVyZSxcbiAgICAgICAgYXJlTWVyZ2VkUHJvcHNFcXVhbCA9IF9yZWYuYXJlTWVyZ2VkUHJvcHNFcXVhbDtcbiAgICB2YXIgaGFzUnVuT25jZSA9IGZhbHNlO1xuICAgIHZhciBtZXJnZWRQcm9wcztcbiAgICByZXR1cm4gZnVuY3Rpb24gbWVyZ2VQcm9wc1Byb3h5KHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKSB7XG4gICAgICB2YXIgbmV4dE1lcmdlZFByb3BzID0gbWVyZ2VQcm9wcyhzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzLCBvd25Qcm9wcyk7XG5cbiAgICAgIGlmIChoYXNSdW5PbmNlKSB7XG4gICAgICAgIGlmICghcHVyZSB8fCAhYXJlTWVyZ2VkUHJvcHNFcXVhbChuZXh0TWVyZ2VkUHJvcHMsIG1lcmdlZFByb3BzKSkgbWVyZ2VkUHJvcHMgPSBuZXh0TWVyZ2VkUHJvcHM7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBoYXNSdW5PbmNlID0gdHJ1ZTtcbiAgICAgICAgbWVyZ2VkUHJvcHMgPSBuZXh0TWVyZ2VkUHJvcHM7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB2ZXJpZnlQbGFpbk9iamVjdChtZXJnZWRQcm9wcywgZGlzcGxheU5hbWUsICdtZXJnZVByb3BzJyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBtZXJnZWRQcm9wcztcbiAgICB9O1xuICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NZXJnZVByb3BzSXNGdW5jdGlvbihtZXJnZVByb3BzKSB7XG4gIHJldHVybiB0eXBlb2YgbWVyZ2VQcm9wcyA9PT0gJ2Z1bmN0aW9uJyA/IHdyYXBNZXJnZVByb3BzRnVuYyhtZXJnZVByb3BzKSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWVyZ2VQcm9wc0lzT21pdHRlZChtZXJnZVByb3BzKSB7XG4gIHJldHVybiAhbWVyZ2VQcm9wcyA/IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZGVmYXVsdE1lcmdlUHJvcHM7XG4gIH0gOiB1bmRlZmluZWQ7XG59XG5leHBvcnQgZGVmYXVsdCBbd2hlbk1lcmdlUHJvcHNJc0Z1bmN0aW9uLCB3aGVuTWVyZ2VQcm9wc0lzT21pdHRlZF07IiwiaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgdmVyaWZ5U3Vic2VsZWN0b3JzIGZyb20gJy4vdmVyaWZ5U3Vic2VsZWN0b3JzJztcbmV4cG9ydCBmdW5jdGlvbiBpbXB1cmVGaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzLCBtZXJnZVByb3BzLCBkaXNwYXRjaCkge1xuICByZXR1cm4gZnVuY3Rpb24gaW1wdXJlRmluYWxQcm9wc1NlbGVjdG9yKHN0YXRlLCBvd25Qcm9wcykge1xuICAgIHJldHVybiBtZXJnZVByb3BzKG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSwgb3duUHJvcHMpLCBtYXBEaXNwYXRjaFRvUHJvcHMoZGlzcGF0Y2gsIG93blByb3BzKSwgb3duUHJvcHMpO1xuICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHB1cmVGaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzLCBtZXJnZVByb3BzLCBkaXNwYXRjaCwgX3JlZikge1xuICB2YXIgYXJlU3RhdGVzRXF1YWwgPSBfcmVmLmFyZVN0YXRlc0VxdWFsLFxuICAgICAgYXJlT3duUHJvcHNFcXVhbCA9IF9yZWYuYXJlT3duUHJvcHNFcXVhbCxcbiAgICAgIGFyZVN0YXRlUHJvcHNFcXVhbCA9IF9yZWYuYXJlU3RhdGVQcm9wc0VxdWFsO1xuICB2YXIgaGFzUnVuQXRMZWFzdE9uY2UgPSBmYWxzZTtcbiAgdmFyIHN0YXRlO1xuICB2YXIgb3duUHJvcHM7XG4gIHZhciBzdGF0ZVByb3BzO1xuICB2YXIgZGlzcGF0Y2hQcm9wcztcbiAgdmFyIG1lcmdlZFByb3BzO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZUZpcnN0Q2FsbChmaXJzdFN0YXRlLCBmaXJzdE93blByb3BzKSB7XG4gICAgc3RhdGUgPSBmaXJzdFN0YXRlO1xuICAgIG93blByb3BzID0gZmlyc3RPd25Qcm9wcztcbiAgICBzdGF0ZVByb3BzID0gbWFwU3RhdGVUb1Byb3BzKHN0YXRlLCBvd25Qcm9wcyk7XG4gICAgZGlzcGF0Y2hQcm9wcyA9IG1hcERpc3BhdGNoVG9Qcm9wcyhkaXNwYXRjaCwgb3duUHJvcHMpO1xuICAgIG1lcmdlZFByb3BzID0gbWVyZ2VQcm9wcyhzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzLCBvd25Qcm9wcyk7XG4gICAgaGFzUnVuQXRMZWFzdE9uY2UgPSB0cnVlO1xuICAgIHJldHVybiBtZXJnZWRQcm9wcztcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZU5ld1Byb3BzQW5kTmV3U3RhdGUoKSB7XG4gICAgc3RhdGVQcm9wcyA9IG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSwgb3duUHJvcHMpO1xuICAgIGlmIChtYXBEaXNwYXRjaFRvUHJvcHMuZGVwZW5kc09uT3duUHJvcHMpIGRpc3BhdGNoUHJvcHMgPSBtYXBEaXNwYXRjaFRvUHJvcHMoZGlzcGF0Y2gsIG93blByb3BzKTtcbiAgICBtZXJnZWRQcm9wcyA9IG1lcmdlUHJvcHMoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpO1xuICAgIHJldHVybiBtZXJnZWRQcm9wcztcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZU5ld1Byb3BzKCkge1xuICAgIGlmIChtYXBTdGF0ZVRvUHJvcHMuZGVwZW5kc09uT3duUHJvcHMpIHN0YXRlUHJvcHMgPSBtYXBTdGF0ZVRvUHJvcHMoc3RhdGUsIG93blByb3BzKTtcbiAgICBpZiAobWFwRGlzcGF0Y2hUb1Byb3BzLmRlcGVuZHNPbk93blByb3BzKSBkaXNwYXRjaFByb3BzID0gbWFwRGlzcGF0Y2hUb1Byb3BzKGRpc3BhdGNoLCBvd25Qcm9wcyk7XG4gICAgbWVyZ2VkUHJvcHMgPSBtZXJnZVByb3BzKHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKTtcbiAgICByZXR1cm4gbWVyZ2VkUHJvcHM7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVOZXdTdGF0ZSgpIHtcbiAgICB2YXIgbmV4dFN0YXRlUHJvcHMgPSBtYXBTdGF0ZVRvUHJvcHMoc3RhdGUsIG93blByb3BzKTtcbiAgICB2YXIgc3RhdGVQcm9wc0NoYW5nZWQgPSAhYXJlU3RhdGVQcm9wc0VxdWFsKG5leHRTdGF0ZVByb3BzLCBzdGF0ZVByb3BzKTtcbiAgICBzdGF0ZVByb3BzID0gbmV4dFN0YXRlUHJvcHM7XG4gICAgaWYgKHN0YXRlUHJvcHNDaGFuZ2VkKSBtZXJnZWRQcm9wcyA9IG1lcmdlUHJvcHMoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpO1xuICAgIHJldHVybiBtZXJnZWRQcm9wcztcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVN1YnNlcXVlbnRDYWxscyhuZXh0U3RhdGUsIG5leHRPd25Qcm9wcykge1xuICAgIHZhciBwcm9wc0NoYW5nZWQgPSAhYXJlT3duUHJvcHNFcXVhbChuZXh0T3duUHJvcHMsIG93blByb3BzKTtcbiAgICB2YXIgc3RhdGVDaGFuZ2VkID0gIWFyZVN0YXRlc0VxdWFsKG5leHRTdGF0ZSwgc3RhdGUpO1xuICAgIHN0YXRlID0gbmV4dFN0YXRlO1xuICAgIG93blByb3BzID0gbmV4dE93blByb3BzO1xuICAgIGlmIChwcm9wc0NoYW5nZWQgJiYgc3RhdGVDaGFuZ2VkKSByZXR1cm4gaGFuZGxlTmV3UHJvcHNBbmROZXdTdGF0ZSgpO1xuICAgIGlmIChwcm9wc0NoYW5nZWQpIHJldHVybiBoYW5kbGVOZXdQcm9wcygpO1xuICAgIGlmIChzdGF0ZUNoYW5nZWQpIHJldHVybiBoYW5kbGVOZXdTdGF0ZSgpO1xuICAgIHJldHVybiBtZXJnZWRQcm9wcztcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiBwdXJlRmluYWxQcm9wc1NlbGVjdG9yKG5leHRTdGF0ZSwgbmV4dE93blByb3BzKSB7XG4gICAgcmV0dXJuIGhhc1J1bkF0TGVhc3RPbmNlID8gaGFuZGxlU3Vic2VxdWVudENhbGxzKG5leHRTdGF0ZSwgbmV4dE93blByb3BzKSA6IGhhbmRsZUZpcnN0Q2FsbChuZXh0U3RhdGUsIG5leHRPd25Qcm9wcyk7XG4gIH07XG59IC8vIFRPRE86IEFkZCBtb3JlIGNvbW1lbnRzXG4vLyBJZiBwdXJlIGlzIHRydWUsIHRoZSBzZWxlY3RvciByZXR1cm5lZCBieSBzZWxlY3RvckZhY3Rvcnkgd2lsbCBtZW1vaXplIGl0cyByZXN1bHRzLFxuLy8gYWxsb3dpbmcgY29ubmVjdEFkdmFuY2VkJ3Mgc2hvdWxkQ29tcG9uZW50VXBkYXRlIHRvIHJldHVybiBmYWxzZSBpZiBmaW5hbFxuLy8gcHJvcHMgaGF2ZSBub3QgY2hhbmdlZC4gSWYgZmFsc2UsIHRoZSBzZWxlY3RvciB3aWxsIGFsd2F5cyByZXR1cm4gYSBuZXdcbi8vIG9iamVjdCBhbmQgc2hvdWxkQ29tcG9uZW50VXBkYXRlIHdpbGwgYWx3YXlzIHJldHVybiB0cnVlLlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5KGRpc3BhdGNoLCBfcmVmMikge1xuICB2YXIgaW5pdE1hcFN0YXRlVG9Qcm9wcyA9IF9yZWYyLmluaXRNYXBTdGF0ZVRvUHJvcHMsXG4gICAgICBpbml0TWFwRGlzcGF0Y2hUb1Byb3BzID0gX3JlZjIuaW5pdE1hcERpc3BhdGNoVG9Qcm9wcyxcbiAgICAgIGluaXRNZXJnZVByb3BzID0gX3JlZjIuaW5pdE1lcmdlUHJvcHMsXG4gICAgICBvcHRpb25zID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZjIsIFtcImluaXRNYXBTdGF0ZVRvUHJvcHNcIiwgXCJpbml0TWFwRGlzcGF0Y2hUb1Byb3BzXCIsIFwiaW5pdE1lcmdlUHJvcHNcIl0pO1xuXG4gIHZhciBtYXBTdGF0ZVRvUHJvcHMgPSBpbml0TWFwU3RhdGVUb1Byb3BzKGRpc3BhdGNoLCBvcHRpb25zKTtcbiAgdmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGluaXRNYXBEaXNwYXRjaFRvUHJvcHMoZGlzcGF0Y2gsIG9wdGlvbnMpO1xuICB2YXIgbWVyZ2VQcm9wcyA9IGluaXRNZXJnZVByb3BzKGRpc3BhdGNoLCBvcHRpb25zKTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIHZlcmlmeVN1YnNlbGVjdG9ycyhtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcywgbWVyZ2VQcm9wcywgb3B0aW9ucy5kaXNwbGF5TmFtZSk7XG4gIH1cblxuICB2YXIgc2VsZWN0b3JGYWN0b3J5ID0gb3B0aW9ucy5wdXJlID8gcHVyZUZpbmFsUHJvcHNTZWxlY3RvckZhY3RvcnkgOiBpbXB1cmVGaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5O1xuICByZXR1cm4gc2VsZWN0b3JGYWN0b3J5KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzLCBtZXJnZVByb3BzLCBkaXNwYXRjaCwgb3B0aW9ucyk7XG59IiwiaW1wb3J0IHdhcm5pbmcgZnJvbSAnLi4vdXRpbHMvd2FybmluZyc7XG5cbmZ1bmN0aW9uIHZlcmlmeShzZWxlY3RvciwgbWV0aG9kTmFtZSwgZGlzcGxheU5hbWUpIHtcbiAgaWYgKCFzZWxlY3Rvcikge1xuICAgIHRocm93IG5ldyBFcnJvcihcIlVuZXhwZWN0ZWQgdmFsdWUgZm9yIFwiICsgbWV0aG9kTmFtZSArIFwiIGluIFwiICsgZGlzcGxheU5hbWUgKyBcIi5cIik7XG4gIH0gZWxzZSBpZiAobWV0aG9kTmFtZSA9PT0gJ21hcFN0YXRlVG9Qcm9wcycgfHwgbWV0aG9kTmFtZSA9PT0gJ21hcERpc3BhdGNoVG9Qcm9wcycpIHtcbiAgICBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzZWxlY3RvciwgJ2RlcGVuZHNPbk93blByb3BzJykpIHtcbiAgICAgIHdhcm5pbmcoXCJUaGUgc2VsZWN0b3IgZm9yIFwiICsgbWV0aG9kTmFtZSArIFwiIG9mIFwiICsgZGlzcGxheU5hbWUgKyBcIiBkaWQgbm90IHNwZWNpZnkgYSB2YWx1ZSBmb3IgZGVwZW5kc09uT3duUHJvcHMuXCIpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB2ZXJpZnlTdWJzZWxlY3RvcnMobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1lcmdlUHJvcHMsIGRpc3BsYXlOYW1lKSB7XG4gIHZlcmlmeShtYXBTdGF0ZVRvUHJvcHMsICdtYXBTdGF0ZVRvUHJvcHMnLCBkaXNwbGF5TmFtZSk7XG4gIHZlcmlmeShtYXBEaXNwYXRjaFRvUHJvcHMsICdtYXBEaXNwYXRjaFRvUHJvcHMnLCBkaXNwbGF5TmFtZSk7XG4gIHZlcmlmeShtZXJnZVByb3BzLCAnbWVyZ2VQcm9wcycsIGRpc3BsYXlOYW1lKTtcbn0iLCJpbXBvcnQgdmVyaWZ5UGxhaW5PYmplY3QgZnJvbSAnLi4vdXRpbHMvdmVyaWZ5UGxhaW5PYmplY3QnO1xuZXhwb3J0IGZ1bmN0aW9uIHdyYXBNYXBUb1Byb3BzQ29uc3RhbnQoZ2V0Q29uc3RhbnQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGluaXRDb25zdGFudFNlbGVjdG9yKGRpc3BhdGNoLCBvcHRpb25zKSB7XG4gICAgdmFyIGNvbnN0YW50ID0gZ2V0Q29uc3RhbnQoZGlzcGF0Y2gsIG9wdGlvbnMpO1xuXG4gICAgZnVuY3Rpb24gY29uc3RhbnRTZWxlY3RvcigpIHtcbiAgICAgIHJldHVybiBjb25zdGFudDtcbiAgICB9XG5cbiAgICBjb25zdGFudFNlbGVjdG9yLmRlcGVuZHNPbk93blByb3BzID0gZmFsc2U7XG4gICAgcmV0dXJuIGNvbnN0YW50U2VsZWN0b3I7XG4gIH07XG59IC8vIGRlcGVuZHNPbk93blByb3BzIGlzIHVzZWQgYnkgY3JlYXRlTWFwVG9Qcm9wc1Byb3h5IHRvIGRldGVybWluZSB3aGV0aGVyIHRvIHBhc3MgcHJvcHMgYXMgYXJnc1xuLy8gdG8gdGhlIG1hcFRvUHJvcHMgZnVuY3Rpb24gYmVpbmcgd3JhcHBlZC4gSXQgaXMgYWxzbyB1c2VkIGJ5IG1ha2VQdXJlUHJvcHNTZWxlY3RvciB0byBkZXRlcm1pbmVcbi8vIHdoZXRoZXIgbWFwVG9Qcm9wcyBuZWVkcyB0byBiZSBpbnZva2VkIHdoZW4gcHJvcHMgaGF2ZSBjaGFuZ2VkLlxuLy9cbi8vIEEgbGVuZ3RoIG9mIG9uZSBzaWduYWxzIHRoYXQgbWFwVG9Qcm9wcyBkb2VzIG5vdCBkZXBlbmQgb24gcHJvcHMgZnJvbSB0aGUgcGFyZW50IGNvbXBvbmVudC5cbi8vIEEgbGVuZ3RoIG9mIHplcm8gaXMgYXNzdW1lZCB0byBtZWFuIG1hcFRvUHJvcHMgaXMgZ2V0dGluZyBhcmdzIHZpYSBhcmd1bWVudHMgb3IgLi4uYXJncyBhbmRcbi8vIHRoZXJlZm9yZSBub3QgcmVwb3J0aW5nIGl0cyBsZW5ndGggYWNjdXJhdGVseS4uXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXREZXBlbmRzT25Pd25Qcm9wcyhtYXBUb1Byb3BzKSB7XG4gIHJldHVybiBtYXBUb1Byb3BzLmRlcGVuZHNPbk93blByb3BzICE9PSBudWxsICYmIG1hcFRvUHJvcHMuZGVwZW5kc09uT3duUHJvcHMgIT09IHVuZGVmaW5lZCA/IEJvb2xlYW4obWFwVG9Qcm9wcy5kZXBlbmRzT25Pd25Qcm9wcykgOiBtYXBUb1Byb3BzLmxlbmd0aCAhPT0gMTtcbn0gLy8gVXNlZCBieSB3aGVuTWFwU3RhdGVUb1Byb3BzSXNGdW5jdGlvbiBhbmQgd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzRnVuY3Rpb24sXG4vLyB0aGlzIGZ1bmN0aW9uIHdyYXBzIG1hcFRvUHJvcHMgaW4gYSBwcm94eSBmdW5jdGlvbiB3aGljaCBkb2VzIHNldmVyYWwgdGhpbmdzOlxuLy9cbi8vICAqIERldGVjdHMgd2hldGhlciB0aGUgbWFwVG9Qcm9wcyBmdW5jdGlvbiBiZWluZyBjYWxsZWQgZGVwZW5kcyBvbiBwcm9wcywgd2hpY2hcbi8vICAgIGlzIHVzZWQgYnkgc2VsZWN0b3JGYWN0b3J5IHRvIGRlY2lkZSBpZiBpdCBzaG91bGQgcmVpbnZva2Ugb24gcHJvcHMgY2hhbmdlcy5cbi8vXG4vLyAgKiBPbiBmaXJzdCBjYWxsLCBoYW5kbGVzIG1hcFRvUHJvcHMgaWYgcmV0dXJucyBhbm90aGVyIGZ1bmN0aW9uLCBhbmQgdHJlYXRzIHRoYXRcbi8vICAgIG5ldyBmdW5jdGlvbiBhcyB0aGUgdHJ1ZSBtYXBUb1Byb3BzIGZvciBzdWJzZXF1ZW50IGNhbGxzLlxuLy9cbi8vICAqIE9uIGZpcnN0IGNhbGwsIHZlcmlmaWVzIHRoZSBmaXJzdCByZXN1bHQgaXMgYSBwbGFpbiBvYmplY3QsIGluIG9yZGVyIHRvIHdhcm5cbi8vICAgIHRoZSBkZXZlbG9wZXIgdGhhdCB0aGVpciBtYXBUb1Byb3BzIGZ1bmN0aW9uIGlzIG5vdCByZXR1cm5pbmcgYSB2YWxpZCByZXN1bHQuXG4vL1xuXG5leHBvcnQgZnVuY3Rpb24gd3JhcE1hcFRvUHJvcHNGdW5jKG1hcFRvUHJvcHMsIG1ldGhvZE5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGluaXRQcm94eVNlbGVjdG9yKGRpc3BhdGNoLCBfcmVmKSB7XG4gICAgdmFyIGRpc3BsYXlOYW1lID0gX3JlZi5kaXNwbGF5TmFtZTtcblxuICAgIHZhciBwcm94eSA9IGZ1bmN0aW9uIG1hcFRvUHJvcHNQcm94eShzdGF0ZU9yRGlzcGF0Y2gsIG93blByb3BzKSB7XG4gICAgICByZXR1cm4gcHJveHkuZGVwZW5kc09uT3duUHJvcHMgPyBwcm94eS5tYXBUb1Byb3BzKHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpIDogcHJveHkubWFwVG9Qcm9wcyhzdGF0ZU9yRGlzcGF0Y2gpO1xuICAgIH07IC8vIGFsbG93IGRldGVjdEZhY3RvcnlBbmRWZXJpZnkgdG8gZ2V0IG93blByb3BzXG5cblxuICAgIHByb3h5LmRlcGVuZHNPbk93blByb3BzID0gdHJ1ZTtcblxuICAgIHByb3h5Lm1hcFRvUHJvcHMgPSBmdW5jdGlvbiBkZXRlY3RGYWN0b3J5QW5kVmVyaWZ5KHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpIHtcbiAgICAgIHByb3h5Lm1hcFRvUHJvcHMgPSBtYXBUb1Byb3BzO1xuICAgICAgcHJveHkuZGVwZW5kc09uT3duUHJvcHMgPSBnZXREZXBlbmRzT25Pd25Qcm9wcyhtYXBUb1Byb3BzKTtcbiAgICAgIHZhciBwcm9wcyA9IHByb3h5KHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpO1xuXG4gICAgICBpZiAodHlwZW9mIHByb3BzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHByb3h5Lm1hcFRvUHJvcHMgPSBwcm9wcztcbiAgICAgICAgcHJveHkuZGVwZW5kc09uT3duUHJvcHMgPSBnZXREZXBlbmRzT25Pd25Qcm9wcyhwcm9wcyk7XG4gICAgICAgIHByb3BzID0gcHJveHkoc3RhdGVPckRpc3BhdGNoLCBvd25Qcm9wcyk7XG4gICAgICB9XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB2ZXJpZnlQbGFpbk9iamVjdChwcm9wcywgZGlzcGxheU5hbWUsIG1ldGhvZE5hbWUpO1xuICAgICAgcmV0dXJuIHByb3BzO1xuICAgIH07XG5cbiAgICByZXR1cm4gcHJveHk7XG4gIH07XG59IiwiaW1wb3J0IHsgUmVhY3RSZWR1eENvbnRleHQgfSBmcm9tICcuLi9jb21wb25lbnRzL0NvbnRleHQnO1xuaW1wb3J0IHsgdXNlU3RvcmUgYXMgdXNlRGVmYXVsdFN0b3JlLCBjcmVhdGVTdG9yZUhvb2sgfSBmcm9tICcuL3VzZVN0b3JlJztcbi8qKlxyXG4gKiBIb29rIGZhY3RvcnksIHdoaWNoIGNyZWF0ZXMgYSBgdXNlRGlzcGF0Y2hgIGhvb2sgYm91bmQgdG8gYSBnaXZlbiBjb250ZXh0LlxyXG4gKlxyXG4gKiBAcGFyYW0ge1JlYWN0LkNvbnRleHR9IFtjb250ZXh0PVJlYWN0UmVkdXhDb250ZXh0XSBDb250ZXh0IHBhc3NlZCB0byB5b3VyIGA8UHJvdmlkZXI+YC5cclxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIGB1c2VEaXNwYXRjaGAgaG9vayBib3VuZCB0byB0aGUgc3BlY2lmaWVkIGNvbnRleHQuXHJcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRGlzcGF0Y2hIb29rKGNvbnRleHQpIHtcbiAgaWYgKGNvbnRleHQgPT09IHZvaWQgMCkge1xuICAgIGNvbnRleHQgPSBSZWFjdFJlZHV4Q29udGV4dDtcbiAgfVxuXG4gIHZhciB1c2VTdG9yZSA9IGNvbnRleHQgPT09IFJlYWN0UmVkdXhDb250ZXh0ID8gdXNlRGVmYXVsdFN0b3JlIDogY3JlYXRlU3RvcmVIb29rKGNvbnRleHQpO1xuICByZXR1cm4gZnVuY3Rpb24gdXNlRGlzcGF0Y2goKSB7XG4gICAgdmFyIHN0b3JlID0gdXNlU3RvcmUoKTtcbiAgICByZXR1cm4gc3RvcmUuZGlzcGF0Y2g7XG4gIH07XG59XG4vKipcclxuICogQSBob29rIHRvIGFjY2VzcyB0aGUgcmVkdXggYGRpc3BhdGNoYCBmdW5jdGlvbi5cclxuICpcclxuICogQHJldHVybnMge2FueXxmdW5jdGlvbn0gcmVkdXggc3RvcmUncyBgZGlzcGF0Y2hgIGZ1bmN0aW9uXHJcbiAqXHJcbiAqIEBleGFtcGxlXHJcbiAqXHJcbiAqIGltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0J1xyXG4gKiBpbXBvcnQgeyB1c2VEaXNwYXRjaCB9IGZyb20gJ3JlYWN0LXJlZHV4J1xyXG4gKlxyXG4gKiBleHBvcnQgY29uc3QgQ291bnRlckNvbXBvbmVudCA9ICh7IHZhbHVlIH0pID0+IHtcclxuICogICBjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKClcclxuICogICBjb25zdCBpbmNyZWFzZUNvdW50ZXIgPSB1c2VDYWxsYmFjaygoKSA9PiBkaXNwYXRjaCh7IHR5cGU6ICdpbmNyZWFzZS1jb3VudGVyJyB9KSwgW10pXHJcbiAqICAgcmV0dXJuIChcclxuICogICAgIDxkaXY+XHJcbiAqICAgICAgIDxzcGFuPnt2YWx1ZX08L3NwYW4+XHJcbiAqICAgICAgIDxidXR0b24gb25DbGljaz17aW5jcmVhc2VDb3VudGVyfT5JbmNyZWFzZSBjb3VudGVyPC9idXR0b24+XHJcbiAqICAgICA8L2Rpdj5cclxuICogICApXHJcbiAqIH1cclxuICovXG5cbmV4cG9ydCB2YXIgdXNlRGlzcGF0Y2ggPSAvKiNfX1BVUkVfXyovY3JlYXRlRGlzcGF0Y2hIb29rKCk7IiwiaW1wb3J0IHsgdXNlQ29udGV4dCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi4vY29tcG9uZW50cy9Db250ZXh0Jztcbi8qKlxyXG4gKiBBIGhvb2sgdG8gYWNjZXNzIHRoZSB2YWx1ZSBvZiB0aGUgYFJlYWN0UmVkdXhDb250ZXh0YC4gVGhpcyBpcyBhIGxvdy1sZXZlbFxyXG4gKiBob29rIHRoYXQgeW91IHNob3VsZCB1c3VhbGx5IG5vdCBuZWVkIHRvIGNhbGwgZGlyZWN0bHkuXHJcbiAqXHJcbiAqIEByZXR1cm5zIHthbnl9IHRoZSB2YWx1ZSBvZiB0aGUgYFJlYWN0UmVkdXhDb250ZXh0YFxyXG4gKlxyXG4gKiBAZXhhbXBsZVxyXG4gKlxyXG4gKiBpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXHJcbiAqIGltcG9ydCB7IHVzZVJlZHV4Q29udGV4dCB9IGZyb20gJ3JlYWN0LXJlZHV4J1xyXG4gKlxyXG4gKiBleHBvcnQgY29uc3QgQ291bnRlckNvbXBvbmVudCA9ICh7IHZhbHVlIH0pID0+IHtcclxuICogICBjb25zdCB7IHN0b3JlIH0gPSB1c2VSZWR1eENvbnRleHQoKVxyXG4gKiAgIHJldHVybiA8ZGl2PntzdG9yZS5nZXRTdGF0ZSgpfTwvZGl2PlxyXG4gKiB9XHJcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlUmVkdXhDb250ZXh0KCkge1xuICB2YXIgY29udGV4dFZhbHVlID0gdXNlQ29udGV4dChSZWFjdFJlZHV4Q29udGV4dCk7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIWNvbnRleHRWYWx1ZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignY291bGQgbm90IGZpbmQgcmVhY3QtcmVkdXggY29udGV4dCB2YWx1ZTsgcGxlYXNlIGVuc3VyZSB0aGUgY29tcG9uZW50IGlzIHdyYXBwZWQgaW4gYSA8UHJvdmlkZXI+Jyk7XG4gIH1cblxuICByZXR1cm4gY29udGV4dFZhbHVlO1xufSIsImltcG9ydCB7IHVzZVJlZHVjZXIsIHVzZVJlZiwgdXNlTWVtbywgdXNlQ29udGV4dCwgdXNlRGVidWdWYWx1ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVJlZHV4Q29udGV4dCBhcyB1c2VEZWZhdWx0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi91c2VSZWR1eENvbnRleHQnO1xuaW1wb3J0IFN1YnNjcmlwdGlvbiBmcm9tICcuLi91dGlscy9TdWJzY3JpcHRpb24nO1xuaW1wb3J0IHsgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCB9IGZyb20gJy4uL3V0aWxzL3VzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QnO1xuaW1wb3J0IHsgUmVhY3RSZWR1eENvbnRleHQgfSBmcm9tICcuLi9jb21wb25lbnRzL0NvbnRleHQnO1xuXG52YXIgcmVmRXF1YWxpdHkgPSBmdW5jdGlvbiByZWZFcXVhbGl0eShhLCBiKSB7XG4gIHJldHVybiBhID09PSBiO1xufTtcblxuZnVuY3Rpb24gdXNlU2VsZWN0b3JXaXRoU3RvcmVBbmRTdWJzY3JpcHRpb24oc2VsZWN0b3IsIGVxdWFsaXR5Rm4sIHN0b3JlLCBjb250ZXh0U3ViKSB7XG4gIHZhciBfdXNlUmVkdWNlciA9IHVzZVJlZHVjZXIoZnVuY3Rpb24gKHMpIHtcbiAgICByZXR1cm4gcyArIDE7XG4gIH0sIDApLFxuICAgICAgZm9yY2VSZW5kZXIgPSBfdXNlUmVkdWNlclsxXTtcblxuICB2YXIgc3Vic2NyaXB0aW9uID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIG5ldyBTdWJzY3JpcHRpb24oc3RvcmUsIGNvbnRleHRTdWIpO1xuICB9LCBbc3RvcmUsIGNvbnRleHRTdWJdKTtcbiAgdmFyIGxhdGVzdFN1YnNjcmlwdGlvbkNhbGxiYWNrRXJyb3IgPSB1c2VSZWYoKTtcbiAgdmFyIGxhdGVzdFNlbGVjdG9yID0gdXNlUmVmKCk7XG4gIHZhciBsYXRlc3RTdG9yZVN0YXRlID0gdXNlUmVmKCk7XG4gIHZhciBsYXRlc3RTZWxlY3RlZFN0YXRlID0gdXNlUmVmKCk7XG4gIHZhciBzdG9yZVN0YXRlID0gc3RvcmUuZ2V0U3RhdGUoKTtcbiAgdmFyIHNlbGVjdGVkU3RhdGU7XG5cbiAgdHJ5IHtcbiAgICBpZiAoc2VsZWN0b3IgIT09IGxhdGVzdFNlbGVjdG9yLmN1cnJlbnQgfHwgc3RvcmVTdGF0ZSAhPT0gbGF0ZXN0U3RvcmVTdGF0ZS5jdXJyZW50IHx8IGxhdGVzdFN1YnNjcmlwdGlvbkNhbGxiYWNrRXJyb3IuY3VycmVudCkge1xuICAgICAgdmFyIG5ld1NlbGVjdGVkU3RhdGUgPSBzZWxlY3RvcihzdG9yZVN0YXRlKTsgLy8gZW5zdXJlIGxhdGVzdCBzZWxlY3RlZCBzdGF0ZSBpcyByZXVzZWQgc28gdGhhdCBhIGN1c3RvbSBlcXVhbGl0eSBmdW5jdGlvbiBjYW4gcmVzdWx0IGluIGlkZW50aWNhbCByZWZlcmVuY2VzXG5cbiAgICAgIGlmIChsYXRlc3RTZWxlY3RlZFN0YXRlLmN1cnJlbnQgPT09IHVuZGVmaW5lZCB8fCAhZXF1YWxpdHlGbihuZXdTZWxlY3RlZFN0YXRlLCBsYXRlc3RTZWxlY3RlZFN0YXRlLmN1cnJlbnQpKSB7XG4gICAgICAgIHNlbGVjdGVkU3RhdGUgPSBuZXdTZWxlY3RlZFN0YXRlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2VsZWN0ZWRTdGF0ZSA9IGxhdGVzdFNlbGVjdGVkU3RhdGUuY3VycmVudDtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgc2VsZWN0ZWRTdGF0ZSA9IGxhdGVzdFNlbGVjdGVkU3RhdGUuY3VycmVudDtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGlmIChsYXRlc3RTdWJzY3JpcHRpb25DYWxsYmFja0Vycm9yLmN1cnJlbnQpIHtcbiAgICAgIGVyci5tZXNzYWdlICs9IFwiXFxuVGhlIGVycm9yIG1heSBiZSBjb3JyZWxhdGVkIHdpdGggdGhpcyBwcmV2aW91cyBlcnJvcjpcXG5cIiArIGxhdGVzdFN1YnNjcmlwdGlvbkNhbGxiYWNrRXJyb3IuY3VycmVudC5zdGFjayArIFwiXFxuXFxuXCI7XG4gICAgfVxuXG4gICAgdGhyb3cgZXJyO1xuICB9XG5cbiAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgbGF0ZXN0U2VsZWN0b3IuY3VycmVudCA9IHNlbGVjdG9yO1xuICAgIGxhdGVzdFN0b3JlU3RhdGUuY3VycmVudCA9IHN0b3JlU3RhdGU7XG4gICAgbGF0ZXN0U2VsZWN0ZWRTdGF0ZS5jdXJyZW50ID0gc2VsZWN0ZWRTdGF0ZTtcbiAgICBsYXRlc3RTdWJzY3JpcHRpb25DYWxsYmFja0Vycm9yLmN1cnJlbnQgPSB1bmRlZmluZWQ7XG4gIH0pO1xuICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBjaGVja0ZvclVwZGF0ZXMoKSB7XG4gICAgICB0cnkge1xuICAgICAgICB2YXIgbmV3U3RvcmVTdGF0ZSA9IHN0b3JlLmdldFN0YXRlKCk7XG5cbiAgICAgICAgdmFyIF9uZXdTZWxlY3RlZFN0YXRlID0gbGF0ZXN0U2VsZWN0b3IuY3VycmVudChuZXdTdG9yZVN0YXRlKTtcblxuICAgICAgICBpZiAoZXF1YWxpdHlGbihfbmV3U2VsZWN0ZWRTdGF0ZSwgbGF0ZXN0U2VsZWN0ZWRTdGF0ZS5jdXJyZW50KSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGxhdGVzdFNlbGVjdGVkU3RhdGUuY3VycmVudCA9IF9uZXdTZWxlY3RlZFN0YXRlO1xuICAgICAgICBsYXRlc3RTdG9yZVN0YXRlLmN1cnJlbnQgPSBuZXdTdG9yZVN0YXRlO1xuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIC8vIHdlIGlnbm9yZSBhbGwgZXJyb3JzIGhlcmUsIHNpbmNlIHdoZW4gdGhlIGNvbXBvbmVudFxuICAgICAgICAvLyBpcyByZS1yZW5kZXJlZCwgdGhlIHNlbGVjdG9ycyBhcmUgY2FsbGVkIGFnYWluLCBhbmRcbiAgICAgICAgLy8gd2lsbCB0aHJvdyBhZ2FpbiwgaWYgbmVpdGhlciBwcm9wcyBub3Igc3RvcmUgc3RhdGVcbiAgICAgICAgLy8gY2hhbmdlZFxuICAgICAgICBsYXRlc3RTdWJzY3JpcHRpb25DYWxsYmFja0Vycm9yLmN1cnJlbnQgPSBlcnI7XG4gICAgICB9XG5cbiAgICAgIGZvcmNlUmVuZGVyKCk7XG4gICAgfVxuXG4gICAgc3Vic2NyaXB0aW9uLm9uU3RhdGVDaGFuZ2UgPSBjaGVja0ZvclVwZGF0ZXM7XG4gICAgc3Vic2NyaXB0aW9uLnRyeVN1YnNjcmliZSgpO1xuICAgIGNoZWNrRm9yVXBkYXRlcygpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gc3Vic2NyaXB0aW9uLnRyeVVuc3Vic2NyaWJlKCk7XG4gICAgfTtcbiAgfSwgW3N0b3JlLCBzdWJzY3JpcHRpb25dKTtcbiAgcmV0dXJuIHNlbGVjdGVkU3RhdGU7XG59XG4vKipcclxuICogSG9vayBmYWN0b3J5LCB3aGljaCBjcmVhdGVzIGEgYHVzZVNlbGVjdG9yYCBob29rIGJvdW5kIHRvIGEgZ2l2ZW4gY29udGV4dC5cclxuICpcclxuICogQHBhcmFtIHtSZWFjdC5Db250ZXh0fSBbY29udGV4dD1SZWFjdFJlZHV4Q29udGV4dF0gQ29udGV4dCBwYXNzZWQgdG8geW91ciBgPFByb3ZpZGVyPmAuXHJcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBgdXNlU2VsZWN0b3JgIGhvb2sgYm91bmQgdG8gdGhlIHNwZWNpZmllZCBjb250ZXh0LlxyXG4gKi9cblxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU2VsZWN0b3JIb29rKGNvbnRleHQpIHtcbiAgaWYgKGNvbnRleHQgPT09IHZvaWQgMCkge1xuICAgIGNvbnRleHQgPSBSZWFjdFJlZHV4Q29udGV4dDtcbiAgfVxuXG4gIHZhciB1c2VSZWR1eENvbnRleHQgPSBjb250ZXh0ID09PSBSZWFjdFJlZHV4Q29udGV4dCA/IHVzZURlZmF1bHRSZWR1eENvbnRleHQgOiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHVzZUNvbnRleHQoY29udGV4dCk7XG4gIH07XG4gIHJldHVybiBmdW5jdGlvbiB1c2VTZWxlY3RvcihzZWxlY3RvciwgZXF1YWxpdHlGbikge1xuICAgIGlmIChlcXVhbGl0eUZuID09PSB2b2lkIDApIHtcbiAgICAgIGVxdWFsaXR5Rm4gPSByZWZFcXVhbGl0eTtcbiAgICB9XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKCFzZWxlY3Rvcikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgbXVzdCBwYXNzIGEgc2VsZWN0b3IgdG8gdXNlU2VsZWN0b3JcIik7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2Ygc2VsZWN0b3IgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiWW91IG11c3QgcGFzcyBhIGZ1bmN0aW9uIGFzIGEgc2VsZWN0b3IgdG8gdXNlU2VsZWN0b3JcIik7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgZXF1YWxpdHlGbiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgbXVzdCBwYXNzIGEgZnVuY3Rpb24gYXMgYW4gZXF1YWxpdHkgZnVuY3Rpb24gdG8gdXNlU2VsZWN0b3JcIik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIF91c2VSZWR1eENvbnRleHQgPSB1c2VSZWR1eENvbnRleHQoKSxcbiAgICAgICAgc3RvcmUgPSBfdXNlUmVkdXhDb250ZXh0LnN0b3JlLFxuICAgICAgICBjb250ZXh0U3ViID0gX3VzZVJlZHV4Q29udGV4dC5zdWJzY3JpcHRpb247XG5cbiAgICB2YXIgc2VsZWN0ZWRTdGF0ZSA9IHVzZVNlbGVjdG9yV2l0aFN0b3JlQW5kU3Vic2NyaXB0aW9uKHNlbGVjdG9yLCBlcXVhbGl0eUZuLCBzdG9yZSwgY29udGV4dFN1Yik7XG4gICAgdXNlRGVidWdWYWx1ZShzZWxlY3RlZFN0YXRlKTtcbiAgICByZXR1cm4gc2VsZWN0ZWRTdGF0ZTtcbiAgfTtcbn1cbi8qKlxyXG4gKiBBIGhvb2sgdG8gYWNjZXNzIHRoZSByZWR1eCBzdG9yZSdzIHN0YXRlLiBUaGlzIGhvb2sgdGFrZXMgYSBzZWxlY3RvciBmdW5jdGlvblxyXG4gKiBhcyBhbiBhcmd1bWVudC4gVGhlIHNlbGVjdG9yIGlzIGNhbGxlZCB3aXRoIHRoZSBzdG9yZSBzdGF0ZS5cclxuICpcclxuICogVGhpcyBob29rIHRha2VzIGFuIG9wdGlvbmFsIGVxdWFsaXR5IGNvbXBhcmlzb24gZnVuY3Rpb24gYXMgdGhlIHNlY29uZCBwYXJhbWV0ZXJcclxuICogdGhhdCBhbGxvd3MgeW91IHRvIGN1c3RvbWl6ZSB0aGUgd2F5IHRoZSBzZWxlY3RlZCBzdGF0ZSBpcyBjb21wYXJlZCB0byBkZXRlcm1pbmVcclxuICogd2hldGhlciB0aGUgY29tcG9uZW50IG5lZWRzIHRvIGJlIHJlLXJlbmRlcmVkLlxyXG4gKlxyXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBzZWxlY3RvciB0aGUgc2VsZWN0b3IgZnVuY3Rpb25cclxuICogQHBhcmFtIHtGdW5jdGlvbj19IGVxdWFsaXR5Rm4gdGhlIGZ1bmN0aW9uIHRoYXQgd2lsbCBiZSB1c2VkIHRvIGRldGVybWluZSBlcXVhbGl0eVxyXG4gKlxyXG4gKiBAcmV0dXJucyB7YW55fSB0aGUgc2VsZWN0ZWQgc3RhdGVcclxuICpcclxuICogQGV4YW1wbGVcclxuICpcclxuICogaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG4gKiBpbXBvcnQgeyB1c2VTZWxlY3RvciB9IGZyb20gJ3JlYWN0LXJlZHV4J1xyXG4gKlxyXG4gKiBleHBvcnQgY29uc3QgQ291bnRlckNvbXBvbmVudCA9ICgpID0+IHtcclxuICogICBjb25zdCBjb3VudGVyID0gdXNlU2VsZWN0b3Ioc3RhdGUgPT4gc3RhdGUuY291bnRlcilcclxuICogICByZXR1cm4gPGRpdj57Y291bnRlcn08L2Rpdj5cclxuICogfVxyXG4gKi9cblxuZXhwb3J0IHZhciB1c2VTZWxlY3RvciA9IC8qI19fUFVSRV9fKi9jcmVhdGVTZWxlY3Rvckhvb2soKTsiLCJpbXBvcnQgeyB1c2VDb250ZXh0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUmVhY3RSZWR1eENvbnRleHQgfSBmcm9tICcuLi9jb21wb25lbnRzL0NvbnRleHQnO1xuaW1wb3J0IHsgdXNlUmVkdXhDb250ZXh0IGFzIHVzZURlZmF1bHRSZWR1eENvbnRleHQgfSBmcm9tICcuL3VzZVJlZHV4Q29udGV4dCc7XG4vKipcclxuICogSG9vayBmYWN0b3J5LCB3aGljaCBjcmVhdGVzIGEgYHVzZVN0b3JlYCBob29rIGJvdW5kIHRvIGEgZ2l2ZW4gY29udGV4dC5cclxuICpcclxuICogQHBhcmFtIHtSZWFjdC5Db250ZXh0fSBbY29udGV4dD1SZWFjdFJlZHV4Q29udGV4dF0gQ29udGV4dCBwYXNzZWQgdG8geW91ciBgPFByb3ZpZGVyPmAuXHJcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBgdXNlU3RvcmVgIGhvb2sgYm91bmQgdG8gdGhlIHNwZWNpZmllZCBjb250ZXh0LlxyXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN0b3JlSG9vayhjb250ZXh0KSB7XG4gIGlmIChjb250ZXh0ID09PSB2b2lkIDApIHtcbiAgICBjb250ZXh0ID0gUmVhY3RSZWR1eENvbnRleHQ7XG4gIH1cblxuICB2YXIgdXNlUmVkdXhDb250ZXh0ID0gY29udGV4dCA9PT0gUmVhY3RSZWR1eENvbnRleHQgPyB1c2VEZWZhdWx0UmVkdXhDb250ZXh0IDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB1c2VDb250ZXh0KGNvbnRleHQpO1xuICB9O1xuICByZXR1cm4gZnVuY3Rpb24gdXNlU3RvcmUoKSB7XG4gICAgdmFyIF91c2VSZWR1eENvbnRleHQgPSB1c2VSZWR1eENvbnRleHQoKSxcbiAgICAgICAgc3RvcmUgPSBfdXNlUmVkdXhDb250ZXh0LnN0b3JlO1xuXG4gICAgcmV0dXJuIHN0b3JlO1xuICB9O1xufVxuLyoqXHJcbiAqIEEgaG9vayB0byBhY2Nlc3MgdGhlIHJlZHV4IHN0b3JlLlxyXG4gKlxyXG4gKiBAcmV0dXJucyB7YW55fSB0aGUgcmVkdXggc3RvcmVcclxuICpcclxuICogQGV4YW1wbGVcclxuICpcclxuICogaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG4gKiBpbXBvcnQgeyB1c2VTdG9yZSB9IGZyb20gJ3JlYWN0LXJlZHV4J1xyXG4gKlxyXG4gKiBleHBvcnQgY29uc3QgRXhhbXBsZUNvbXBvbmVudCA9ICgpID0+IHtcclxuICogICBjb25zdCBzdG9yZSA9IHVzZVN0b3JlKClcclxuICogICByZXR1cm4gPGRpdj57c3RvcmUuZ2V0U3RhdGUoKX08L2Rpdj5cclxuICogfVxyXG4gKi9cblxuZXhwb3J0IHZhciB1c2VTdG9yZSA9IC8qI19fUFVSRV9fKi9jcmVhdGVTdG9yZUhvb2soKTsiLCJpbXBvcnQgUHJvdmlkZXIgZnJvbSAnLi9jb21wb25lbnRzL1Byb3ZpZGVyJztcbmltcG9ydCBjb25uZWN0QWR2YW5jZWQgZnJvbSAnLi9jb21wb25lbnRzL2Nvbm5lY3RBZHZhbmNlZCc7XG5pbXBvcnQgeyBSZWFjdFJlZHV4Q29udGV4dCB9IGZyb20gJy4vY29tcG9uZW50cy9Db250ZXh0JztcbmltcG9ydCBjb25uZWN0IGZyb20gJy4vY29ubmVjdC9jb25uZWN0JztcbmltcG9ydCB7IHVzZURpc3BhdGNoLCBjcmVhdGVEaXNwYXRjaEhvb2sgfSBmcm9tICcuL2hvb2tzL3VzZURpc3BhdGNoJztcbmltcG9ydCB7IHVzZVNlbGVjdG9yLCBjcmVhdGVTZWxlY3Rvckhvb2sgfSBmcm9tICcuL2hvb2tzL3VzZVNlbGVjdG9yJztcbmltcG9ydCB7IHVzZVN0b3JlLCBjcmVhdGVTdG9yZUhvb2sgfSBmcm9tICcuL2hvb2tzL3VzZVN0b3JlJztcbmltcG9ydCB7IHNldEJhdGNoIH0gZnJvbSAnLi91dGlscy9iYXRjaCc7XG5pbXBvcnQgeyB1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyBhcyBiYXRjaCB9IGZyb20gJy4vdXRpbHMvcmVhY3RCYXRjaGVkVXBkYXRlcyc7XG5pbXBvcnQgc2hhbGxvd0VxdWFsIGZyb20gJy4vdXRpbHMvc2hhbGxvd0VxdWFsJztcbnNldEJhdGNoKGJhdGNoKTtcbmV4cG9ydCB7IFByb3ZpZGVyLCBjb25uZWN0QWR2YW5jZWQsIFJlYWN0UmVkdXhDb250ZXh0LCBjb25uZWN0LCBiYXRjaCwgdXNlRGlzcGF0Y2gsIGNyZWF0ZURpc3BhdGNoSG9vaywgdXNlU2VsZWN0b3IsIGNyZWF0ZVNlbGVjdG9ySG9vaywgdXNlU3RvcmUsIGNyZWF0ZVN0b3JlSG9vaywgc2hhbGxvd0VxdWFsIH07IiwiaW1wb3J0IHsgZ2V0QmF0Y2ggfSBmcm9tICcuL2JhdGNoJzsgLy8gZW5jYXBzdWxhdGVzIHRoZSBzdWJzY3JpcHRpb24gbG9naWMgZm9yIGNvbm5lY3RpbmcgYSBjb21wb25lbnQgdG8gdGhlIHJlZHV4IHN0b3JlLCBhc1xuLy8gd2VsbCBhcyBuZXN0aW5nIHN1YnNjcmlwdGlvbnMgb2YgZGVzY2VuZGFudCBjb21wb25lbnRzLCBzbyB0aGF0IHdlIGNhbiBlbnN1cmUgdGhlXG4vLyBhbmNlc3RvciBjb21wb25lbnRzIHJlLXJlbmRlciBiZWZvcmUgZGVzY2VuZGFudHNcblxudmFyIG51bGxMaXN0ZW5lcnMgPSB7XG4gIG5vdGlmeTogZnVuY3Rpb24gbm90aWZ5KCkge31cbn07XG5cbmZ1bmN0aW9uIGNyZWF0ZUxpc3RlbmVyQ29sbGVjdGlvbigpIHtcbiAgdmFyIGJhdGNoID0gZ2V0QmF0Y2goKTtcbiAgdmFyIGZpcnN0ID0gbnVsbDtcbiAgdmFyIGxhc3QgPSBudWxsO1xuICByZXR1cm4ge1xuICAgIGNsZWFyOiBmdW5jdGlvbiBjbGVhcigpIHtcbiAgICAgIGZpcnN0ID0gbnVsbDtcbiAgICAgIGxhc3QgPSBudWxsO1xuICAgIH0sXG4gICAgbm90aWZ5OiBmdW5jdGlvbiBub3RpZnkoKSB7XG4gICAgICBiYXRjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBsaXN0ZW5lciA9IGZpcnN0O1xuXG4gICAgICAgIHdoaWxlIChsaXN0ZW5lcikge1xuICAgICAgICAgIGxpc3RlbmVyLmNhbGxiYWNrKCk7XG4gICAgICAgICAgbGlzdGVuZXIgPSBsaXN0ZW5lci5uZXh0O1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgdmFyIGxpc3RlbmVycyA9IFtdO1xuICAgICAgdmFyIGxpc3RlbmVyID0gZmlyc3Q7XG5cbiAgICAgIHdoaWxlIChsaXN0ZW5lcikge1xuICAgICAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgICAgIGxpc3RlbmVyID0gbGlzdGVuZXIubmV4dDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGxpc3RlbmVycztcbiAgICB9LFxuICAgIHN1YnNjcmliZTogZnVuY3Rpb24gc3Vic2NyaWJlKGNhbGxiYWNrKSB7XG4gICAgICB2YXIgaXNTdWJzY3JpYmVkID0gdHJ1ZTtcbiAgICAgIHZhciBsaXN0ZW5lciA9IGxhc3QgPSB7XG4gICAgICAgIGNhbGxiYWNrOiBjYWxsYmFjayxcbiAgICAgICAgbmV4dDogbnVsbCxcbiAgICAgICAgcHJldjogbGFzdFxuICAgICAgfTtcblxuICAgICAgaWYgKGxpc3RlbmVyLnByZXYpIHtcbiAgICAgICAgbGlzdGVuZXIucHJldi5uZXh0ID0gbGlzdGVuZXI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmaXJzdCA9IGxpc3RlbmVyO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZnVuY3Rpb24gdW5zdWJzY3JpYmUoKSB7XG4gICAgICAgIGlmICghaXNTdWJzY3JpYmVkIHx8IGZpcnN0ID09PSBudWxsKSByZXR1cm47XG4gICAgICAgIGlzU3Vic2NyaWJlZCA9IGZhbHNlO1xuXG4gICAgICAgIGlmIChsaXN0ZW5lci5uZXh0KSB7XG4gICAgICAgICAgbGlzdGVuZXIubmV4dC5wcmV2ID0gbGlzdGVuZXIucHJldjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBsYXN0ID0gbGlzdGVuZXIucHJldjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChsaXN0ZW5lci5wcmV2KSB7XG4gICAgICAgICAgbGlzdGVuZXIucHJldi5uZXh0ID0gbGlzdGVuZXIubmV4dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBmaXJzdCA9IGxpc3RlbmVyLm5leHQ7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICB9O1xufVxuXG52YXIgU3Vic2NyaXB0aW9uID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gU3Vic2NyaXB0aW9uKHN0b3JlLCBwYXJlbnRTdWIpIHtcbiAgICB0aGlzLnN0b3JlID0gc3RvcmU7XG4gICAgdGhpcy5wYXJlbnRTdWIgPSBwYXJlbnRTdWI7XG4gICAgdGhpcy51bnN1YnNjcmliZSA9IG51bGw7XG4gICAgdGhpcy5saXN0ZW5lcnMgPSBudWxsTGlzdGVuZXJzO1xuICAgIHRoaXMuaGFuZGxlQ2hhbmdlV3JhcHBlciA9IHRoaXMuaGFuZGxlQ2hhbmdlV3JhcHBlci5iaW5kKHRoaXMpO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN1YnNjcmlwdGlvbi5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmFkZE5lc3RlZFN1YiA9IGZ1bmN0aW9uIGFkZE5lc3RlZFN1YihsaXN0ZW5lcikge1xuICAgIHRoaXMudHJ5U3Vic2NyaWJlKCk7XG4gICAgcmV0dXJuIHRoaXMubGlzdGVuZXJzLnN1YnNjcmliZShsaXN0ZW5lcik7XG4gIH07XG5cbiAgX3Byb3RvLm5vdGlmeU5lc3RlZFN1YnMgPSBmdW5jdGlvbiBub3RpZnlOZXN0ZWRTdWJzKCkge1xuICAgIHRoaXMubGlzdGVuZXJzLm5vdGlmeSgpO1xuICB9O1xuXG4gIF9wcm90by5oYW5kbGVDaGFuZ2VXcmFwcGVyID0gZnVuY3Rpb24gaGFuZGxlQ2hhbmdlV3JhcHBlcigpIHtcbiAgICBpZiAodGhpcy5vblN0YXRlQ2hhbmdlKSB7XG4gICAgICB0aGlzLm9uU3RhdGVDaGFuZ2UoKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmlzU3Vic2NyaWJlZCA9IGZ1bmN0aW9uIGlzU3Vic2NyaWJlZCgpIHtcbiAgICByZXR1cm4gQm9vbGVhbih0aGlzLnVuc3Vic2NyaWJlKTtcbiAgfTtcblxuICBfcHJvdG8udHJ5U3Vic2NyaWJlID0gZnVuY3Rpb24gdHJ5U3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy51bnN1YnNjcmliZSkge1xuICAgICAgdGhpcy51bnN1YnNjcmliZSA9IHRoaXMucGFyZW50U3ViID8gdGhpcy5wYXJlbnRTdWIuYWRkTmVzdGVkU3ViKHRoaXMuaGFuZGxlQ2hhbmdlV3JhcHBlcikgOiB0aGlzLnN0b3JlLnN1YnNjcmliZSh0aGlzLmhhbmRsZUNoYW5nZVdyYXBwZXIpO1xuICAgICAgdGhpcy5saXN0ZW5lcnMgPSBjcmVhdGVMaXN0ZW5lckNvbGxlY3Rpb24oKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnRyeVVuc3Vic2NyaWJlID0gZnVuY3Rpb24gdHJ5VW5zdWJzY3JpYmUoKSB7XG4gICAgaWYgKHRoaXMudW5zdWJzY3JpYmUpIHtcbiAgICAgIHRoaXMudW5zdWJzY3JpYmUoKTtcbiAgICAgIHRoaXMudW5zdWJzY3JpYmUgPSBudWxsO1xuICAgICAgdGhpcy5saXN0ZW5lcnMuY2xlYXIoKTtcbiAgICAgIHRoaXMubGlzdGVuZXJzID0gbnVsbExpc3RlbmVycztcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIFN1YnNjcmlwdGlvbjtcbn0oKTtcblxuZXhwb3J0IHsgU3Vic2NyaXB0aW9uIGFzIGRlZmF1bHQgfTsiLCIvLyBEZWZhdWx0IHRvIGEgZHVtbXkgXCJiYXRjaFwiIGltcGxlbWVudGF0aW9uIHRoYXQganVzdCBydW5zIHRoZSBjYWxsYmFja1xuZnVuY3Rpb24gZGVmYXVsdE5vb3BCYXRjaChjYWxsYmFjaykge1xuICBjYWxsYmFjaygpO1xufVxuXG52YXIgYmF0Y2ggPSBkZWZhdWx0Tm9vcEJhdGNoOyAvLyBBbGxvdyBpbmplY3RpbmcgYW5vdGhlciBiYXRjaGluZyBmdW5jdGlvbiBsYXRlclxuXG5leHBvcnQgdmFyIHNldEJhdGNoID0gZnVuY3Rpb24gc2V0QmF0Y2gobmV3QmF0Y2gpIHtcbiAgcmV0dXJuIGJhdGNoID0gbmV3QmF0Y2g7XG59OyAvLyBTdXBwbHkgYSBnZXR0ZXIganVzdCB0byBza2lwIGRlYWxpbmcgd2l0aCBFU00gYmluZGluZ3NcblxuZXhwb3J0IHZhciBnZXRCYXRjaCA9IGZ1bmN0aW9uIGdldEJhdGNoKCkge1xuICByZXR1cm4gYmF0Y2g7XG59OyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGJpbmRBY3Rpb25DcmVhdG9ycyhhY3Rpb25DcmVhdG9ycywgZGlzcGF0Y2gpIHtcbiAgdmFyIGJvdW5kQWN0aW9uQ3JlYXRvcnMgPSB7fTtcblxuICB2YXIgX2xvb3AgPSBmdW5jdGlvbiBfbG9vcChrZXkpIHtcbiAgICB2YXIgYWN0aW9uQ3JlYXRvciA9IGFjdGlvbkNyZWF0b3JzW2tleV07XG5cbiAgICBpZiAodHlwZW9mIGFjdGlvbkNyZWF0b3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGJvdW5kQWN0aW9uQ3JlYXRvcnNba2V5XSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGRpc3BhdGNoKGFjdGlvbkNyZWF0b3IuYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpKTtcbiAgICAgIH07XG4gICAgfVxuICB9O1xuXG4gIGZvciAodmFyIGtleSBpbiBhY3Rpb25DcmVhdG9ycykge1xuICAgIF9sb29wKGtleSk7XG4gIH1cblxuICByZXR1cm4gYm91bmRBY3Rpb25DcmVhdG9ycztcbn0iLCIvKipcclxuICogQHBhcmFtIHthbnl9IG9iaiBUaGUgb2JqZWN0IHRvIGluc3BlY3QuXHJcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSBhcmd1bWVudCBhcHBlYXJzIHRvIGJlIGEgcGxhaW4gb2JqZWN0LlxyXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzUGxhaW5PYmplY3Qob2JqKSB7XG4gIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0JyB8fCBvYmogPT09IG51bGwpIHJldHVybiBmYWxzZTtcbiAgdmFyIHByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iaik7XG4gIGlmIChwcm90byA9PT0gbnVsbCkgcmV0dXJuIHRydWU7XG4gIHZhciBiYXNlUHJvdG8gPSBwcm90bztcblxuICB3aGlsZSAoT2JqZWN0LmdldFByb3RvdHlwZU9mKGJhc2VQcm90bykgIT09IG51bGwpIHtcbiAgICBiYXNlUHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoYmFzZVByb3RvKTtcbiAgfVxuXG4gIHJldHVybiBwcm90byA9PT0gYmFzZVByb3RvO1xufSIsIi8qIGVzbGludC1kaXNhYmxlIGltcG9ydC9uby11bnJlc29sdmVkICovXG5leHBvcnQgeyB1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyB9IGZyb20gJ3JlYWN0LWRvbSc7IiwiZnVuY3Rpb24gaXMoeCwgeSkge1xuICBpZiAoeCA9PT0geSkge1xuICAgIHJldHVybiB4ICE9PSAwIHx8IHkgIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2hhbGxvd0VxdWFsKG9iakEsIG9iakIpIHtcbiAgaWYgKGlzKG9iakEsIG9iakIpKSByZXR1cm4gdHJ1ZTtcblxuICBpZiAodHlwZW9mIG9iakEgIT09ICdvYmplY3QnIHx8IG9iakEgPT09IG51bGwgfHwgdHlwZW9mIG9iakIgIT09ICdvYmplY3QnIHx8IG9iakIgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIga2V5c0EgPSBPYmplY3Qua2V5cyhvYmpBKTtcbiAgdmFyIGtleXNCID0gT2JqZWN0LmtleXMob2JqQik7XG4gIGlmIChrZXlzQS5sZW5ndGggIT09IGtleXNCLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwga2V5c0EubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmpCLCBrZXlzQVtpXSkgfHwgIWlzKG9iakFba2V5c0FbaV1dLCBvYmpCW2tleXNBW2ldXSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn0iLCJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZUxheW91dEVmZmVjdCB9IGZyb20gJ3JlYWN0JzsgLy8gUmVhY3QgY3VycmVudGx5IHRocm93cyBhIHdhcm5pbmcgd2hlbiB1c2luZyB1c2VMYXlvdXRFZmZlY3Qgb24gdGhlIHNlcnZlci5cbi8vIFRvIGdldCBhcm91bmQgaXQsIHdlIGNhbiBjb25kaXRpb25hbGx5IHVzZUVmZmVjdCBvbiB0aGUgc2VydmVyIChuby1vcCkgYW5kXG4vLyB1c2VMYXlvdXRFZmZlY3QgaW4gdGhlIGJyb3dzZXIuIFdlIG5lZWQgdXNlTGF5b3V0RWZmZWN0IHRvIGVuc3VyZSB0aGUgc3RvcmVcbi8vIHN1YnNjcmlwdGlvbiBjYWxsYmFjayBhbHdheXMgaGFzIHRoZSBzZWxlY3RvciBmcm9tIHRoZSBsYXRlc3QgcmVuZGVyIGNvbW1pdFxuLy8gYXZhaWxhYmxlLCBvdGhlcndpc2UgYSBzdG9yZSB1cGRhdGUgbWF5IGhhcHBlbiBiZXR3ZWVuIHJlbmRlciBhbmQgdGhlIGVmZmVjdCxcbi8vIHdoaWNoIG1heSBjYXVzZSBtaXNzZWQgdXBkYXRlczsgd2UgYWxzbyBtdXN0IGVuc3VyZSB0aGUgc3RvcmUgc3Vic2NyaXB0aW9uXG4vLyBpcyBjcmVhdGVkIHN5bmNocm9ub3VzbHksIG90aGVyd2lzZSBhIHN0b3JlIHVwZGF0ZSBtYXkgb2NjdXIgYmVmb3JlIHRoZVxuLy8gc3Vic2NyaXB0aW9uIGlzIGNyZWF0ZWQgYW5kIGFuIGluY29uc2lzdGVudCBzdGF0ZSBtYXkgYmUgb2JzZXJ2ZWRcblxuZXhwb3J0IHZhciB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0ID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHdpbmRvdy5kb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50ICE9PSAndW5kZWZpbmVkJyA/IHVzZUxheW91dEVmZmVjdCA6IHVzZUVmZmVjdDsiLCJpbXBvcnQgaXNQbGFpbk9iamVjdCBmcm9tICcuL2lzUGxhaW5PYmplY3QnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAnLi93YXJuaW5nJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHZlcmlmeVBsYWluT2JqZWN0KHZhbHVlLCBkaXNwbGF5TmFtZSwgbWV0aG9kTmFtZSkge1xuICBpZiAoIWlzUGxhaW5PYmplY3QodmFsdWUpKSB7XG4gICAgd2FybmluZyhtZXRob2ROYW1lICsgXCIoKSBpbiBcIiArIGRpc3BsYXlOYW1lICsgXCIgbXVzdCByZXR1cm4gYSBwbGFpbiBvYmplY3QuIEluc3RlYWQgcmVjZWl2ZWQgXCIgKyB2YWx1ZSArIFwiLlwiKTtcbiAgfVxufSIsIi8qKlxyXG4gKiBQcmludHMgYSB3YXJuaW5nIGluIHRoZSBjb25zb2xlIGlmIGl0IGV4aXN0cy5cclxuICpcclxuICogQHBhcmFtIHtTdHJpbmd9IG1lc3NhZ2UgVGhlIHdhcm5pbmcgbWVzc2FnZS5cclxuICogQHJldHVybnMge3ZvaWR9XHJcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gd2FybmluZyhtZXNzYWdlKSB7XG4gIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbiAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgY29uc29sZS5lcnJvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gIH1cbiAgLyogZXNsaW50LWVuYWJsZSBuby1jb25zb2xlICovXG5cblxuICB0cnkge1xuICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgaWYgeW91IGVuYWJsZVxuICAgIC8vIFwiYnJlYWsgb24gYWxsIGV4Y2VwdGlvbnNcIiBpbiB5b3VyIGNvbnNvbGUsXG4gICAgLy8gaXQgd291bGQgcGF1c2UgdGhlIGV4ZWN1dGlvbiBhdCB0aGlzIGxpbmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWVtcHR5ICovXG4gIH0gY2F0Y2ggKGUpIHt9XG4gIC8qIGVzbGludC1lbmFibGUgbm8tZW1wdHkgKi9cblxufSIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTcuMC4yXG4gKiByZWFjdC1qc3gtZGV2LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgKGZ1bmN0aW9uKCkge1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xudmFyIF9hc3NpZ24gPSByZXF1aXJlKCdvYmplY3QtYXNzaWduJyk7XG5cbi8vIEFUVEVOVElPTlxuLy8gV2hlbiBhZGRpbmcgbmV3IHN5bWJvbHMgdG8gdGhpcyBmaWxlLFxuLy8gUGxlYXNlIGNvbnNpZGVyIGFsc28gYWRkaW5nIHRvICdyZWFjdC1kZXZ0b29scy1zaGFyZWQvc3JjL2JhY2tlbmQvUmVhY3RTeW1ib2xzJ1xuLy8gVGhlIFN5bWJvbCB1c2VkIHRvIHRhZyB0aGUgUmVhY3RFbGVtZW50LWxpa2UgdHlwZXMuIElmIHRoZXJlIGlzIG5vIG5hdGl2ZSBTeW1ib2xcbi8vIG5vciBwb2x5ZmlsbCwgdGhlbiBhIHBsYWluIG51bWJlciBpcyB1c2VkIGZvciBwZXJmb3JtYW5jZS5cbnZhciBSRUFDVF9FTEVNRU5UX1RZUEUgPSAweGVhYzc7XG52YXIgUkVBQ1RfUE9SVEFMX1RZUEUgPSAweGVhY2E7XG5leHBvcnRzLkZyYWdtZW50ID0gMHhlYWNiO1xudmFyIFJFQUNUX1NUUklDVF9NT0RFX1RZUEUgPSAweGVhY2M7XG52YXIgUkVBQ1RfUFJPRklMRVJfVFlQRSA9IDB4ZWFkMjtcbnZhciBSRUFDVF9QUk9WSURFUl9UWVBFID0gMHhlYWNkO1xudmFyIFJFQUNUX0NPTlRFWFRfVFlQRSA9IDB4ZWFjZTtcbnZhciBSRUFDVF9GT1JXQVJEX1JFRl9UWVBFID0gMHhlYWQwO1xudmFyIFJFQUNUX1NVU1BFTlNFX1RZUEUgPSAweGVhZDE7XG52YXIgUkVBQ1RfU1VTUEVOU0VfTElTVF9UWVBFID0gMHhlYWQ4O1xudmFyIFJFQUNUX01FTU9fVFlQRSA9IDB4ZWFkMztcbnZhciBSRUFDVF9MQVpZX1RZUEUgPSAweGVhZDQ7XG52YXIgUkVBQ1RfQkxPQ0tfVFlQRSA9IDB4ZWFkOTtcbnZhciBSRUFDVF9TRVJWRVJfQkxPQ0tfVFlQRSA9IDB4ZWFkYTtcbnZhciBSRUFDVF9GVU5EQU1FTlRBTF9UWVBFID0gMHhlYWQ1O1xudmFyIFJFQUNUX1NDT1BFX1RZUEUgPSAweGVhZDc7XG52YXIgUkVBQ1RfT1BBUVVFX0lEX1RZUEUgPSAweGVhZTA7XG52YXIgUkVBQ1RfREVCVUdfVFJBQ0lOR19NT0RFX1RZUEUgPSAweGVhZTE7XG52YXIgUkVBQ1RfT0ZGU0NSRUVOX1RZUEUgPSAweGVhZTI7XG52YXIgUkVBQ1RfTEVHQUNZX0hJRERFTl9UWVBFID0gMHhlYWUzO1xuXG5pZiAodHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiBTeW1ib2wuZm9yKSB7XG4gIHZhciBzeW1ib2xGb3IgPSBTeW1ib2wuZm9yO1xuICBSRUFDVF9FTEVNRU5UX1RZUEUgPSBzeW1ib2xGb3IoJ3JlYWN0LmVsZW1lbnQnKTtcbiAgUkVBQ1RfUE9SVEFMX1RZUEUgPSBzeW1ib2xGb3IoJ3JlYWN0LnBvcnRhbCcpO1xuICBleHBvcnRzLkZyYWdtZW50ID0gc3ltYm9sRm9yKCdyZWFjdC5mcmFnbWVudCcpO1xuICBSRUFDVF9TVFJJQ1RfTU9ERV9UWVBFID0gc3ltYm9sRm9yKCdyZWFjdC5zdHJpY3RfbW9kZScpO1xuICBSRUFDVF9QUk9GSUxFUl9UWVBFID0gc3ltYm9sRm9yKCdyZWFjdC5wcm9maWxlcicpO1xuICBSRUFDVF9QUk9WSURFUl9UWVBFID0gc3ltYm9sRm9yKCdyZWFjdC5wcm92aWRlcicpO1xuICBSRUFDVF9DT05URVhUX1RZUEUgPSBzeW1ib2xGb3IoJ3JlYWN0LmNvbnRleHQnKTtcbiAgUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRSA9IHN5bWJvbEZvcigncmVhY3QuZm9yd2FyZF9yZWYnKTtcbiAgUkVBQ1RfU1VTUEVOU0VfVFlQRSA9IHN5bWJvbEZvcigncmVhY3Quc3VzcGVuc2UnKTtcbiAgUkVBQ1RfU1VTUEVOU0VfTElTVF9UWVBFID0gc3ltYm9sRm9yKCdyZWFjdC5zdXNwZW5zZV9saXN0Jyk7XG4gIFJFQUNUX01FTU9fVFlQRSA9IHN5bWJvbEZvcigncmVhY3QubWVtbycpO1xuICBSRUFDVF9MQVpZX1RZUEUgPSBzeW1ib2xGb3IoJ3JlYWN0LmxhenknKTtcbiAgUkVBQ1RfQkxPQ0tfVFlQRSA9IHN5bWJvbEZvcigncmVhY3QuYmxvY2snKTtcbiAgUkVBQ1RfU0VSVkVSX0JMT0NLX1RZUEUgPSBzeW1ib2xGb3IoJ3JlYWN0LnNlcnZlci5ibG9jaycpO1xuICBSRUFDVF9GVU5EQU1FTlRBTF9UWVBFID0gc3ltYm9sRm9yKCdyZWFjdC5mdW5kYW1lbnRhbCcpO1xuICBSRUFDVF9TQ09QRV9UWVBFID0gc3ltYm9sRm9yKCdyZWFjdC5zY29wZScpO1xuICBSRUFDVF9PUEFRVUVfSURfVFlQRSA9IHN5bWJvbEZvcigncmVhY3Qub3BhcXVlLmlkJyk7XG4gIFJFQUNUX0RFQlVHX1RSQUNJTkdfTU9ERV9UWVBFID0gc3ltYm9sRm9yKCdyZWFjdC5kZWJ1Z190cmFjZV9tb2RlJyk7XG4gIFJFQUNUX09GRlNDUkVFTl9UWVBFID0gc3ltYm9sRm9yKCdyZWFjdC5vZmZzY3JlZW4nKTtcbiAgUkVBQ1RfTEVHQUNZX0hJRERFTl9UWVBFID0gc3ltYm9sRm9yKCdyZWFjdC5sZWdhY3lfaGlkZGVuJyk7XG59XG5cbnZhciBNQVlCRV9JVEVSQVRPUl9TWU1CT0wgPSB0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmIFN5bWJvbC5pdGVyYXRvcjtcbnZhciBGQVVYX0lURVJBVE9SX1NZTUJPTCA9ICdAQGl0ZXJhdG9yJztcbmZ1bmN0aW9uIGdldEl0ZXJhdG9yRm4obWF5YmVJdGVyYWJsZSkge1xuICBpZiAobWF5YmVJdGVyYWJsZSA9PT0gbnVsbCB8fCB0eXBlb2YgbWF5YmVJdGVyYWJsZSAhPT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHZhciBtYXliZUl0ZXJhdG9yID0gTUFZQkVfSVRFUkFUT1JfU1lNQk9MICYmIG1heWJlSXRlcmFibGVbTUFZQkVfSVRFUkFUT1JfU1lNQk9MXSB8fCBtYXliZUl0ZXJhYmxlW0ZBVVhfSVRFUkFUT1JfU1lNQk9MXTtcblxuICBpZiAodHlwZW9mIG1heWJlSXRlcmF0b3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gbWF5YmVJdGVyYXRvcjtcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuXG52YXIgUmVhY3RTaGFyZWRJbnRlcm5hbHMgPSBSZWFjdC5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDtcblxuZnVuY3Rpb24gZXJyb3IoZm9ybWF0KSB7XG4gIHtcbiAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjIgPiAxID8gX2xlbjIgLSAxIDogMCksIF9rZXkyID0gMTsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykge1xuICAgICAgYXJnc1tfa2V5MiAtIDFdID0gYXJndW1lbnRzW19rZXkyXTtcbiAgICB9XG5cbiAgICBwcmludFdhcm5pbmcoJ2Vycm9yJywgZm9ybWF0LCBhcmdzKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBwcmludFdhcm5pbmcobGV2ZWwsIGZvcm1hdCwgYXJncykge1xuICAvLyBXaGVuIGNoYW5naW5nIHRoaXMgbG9naWMsIHlvdSBtaWdodCB3YW50IHRvIGFsc29cbiAgLy8gdXBkYXRlIGNvbnNvbGVXaXRoU3RhY2tEZXYud3d3LmpzIGFzIHdlbGwuXG4gIHtcbiAgICB2YXIgUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZSA9IFJlYWN0U2hhcmVkSW50ZXJuYWxzLlJlYWN0RGVidWdDdXJyZW50RnJhbWU7XG4gICAgdmFyIHN0YWNrID0gUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZS5nZXRTdGFja0FkZGVuZHVtKCk7XG5cbiAgICBpZiAoc3RhY2sgIT09ICcnKSB7XG4gICAgICBmb3JtYXQgKz0gJyVzJztcbiAgICAgIGFyZ3MgPSBhcmdzLmNvbmNhdChbc3RhY2tdKTtcbiAgICB9XG5cbiAgICB2YXIgYXJnc1dpdGhGb3JtYXQgPSBhcmdzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgcmV0dXJuICcnICsgaXRlbTtcbiAgICB9KTsgLy8gQ2FyZWZ1bDogUk4gY3VycmVudGx5IGRlcGVuZHMgb24gdGhpcyBwcmVmaXhcblxuICAgIGFyZ3NXaXRoRm9ybWF0LnVuc2hpZnQoJ1dhcm5pbmc6ICcgKyBmb3JtYXQpOyAvLyBXZSBpbnRlbnRpb25hbGx5IGRvbid0IHVzZSBzcHJlYWQgKG9yIC5hcHBseSkgZGlyZWN0bHkgYmVjYXVzZSBpdFxuICAgIC8vIGJyZWFrcyBJRTk6IGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWFjdC9pc3N1ZXMvMTM2MTBcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaW50ZXJuYWwvbm8tcHJvZHVjdGlvbi1sb2dnaW5nXG5cbiAgICBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHkuY2FsbChjb25zb2xlW2xldmVsXSwgY29uc29sZSwgYXJnc1dpdGhGb3JtYXQpO1xuICB9XG59XG5cbi8vIEZpbHRlciBjZXJ0YWluIERPTSBhdHRyaWJ1dGVzIChlLmcuIHNyYywgaHJlZikgaWYgdGhlaXIgdmFsdWVzIGFyZSBlbXB0eSBzdHJpbmdzLlxuXG52YXIgZW5hYmxlU2NvcGVBUEkgPSBmYWxzZTsgLy8gRXhwZXJpbWVudGFsIENyZWF0ZSBFdmVudCBIYW5kbGUgQVBJLlxuXG5mdW5jdGlvbiBpc1ZhbGlkRWxlbWVudFR5cGUodHlwZSkge1xuICBpZiAodHlwZW9mIHR5cGUgPT09ICdzdHJpbmcnIHx8IHR5cGVvZiB0eXBlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gLy8gTm90ZTogdHlwZW9mIG1pZ2h0IGJlIG90aGVyIHRoYW4gJ3N5bWJvbCcgb3IgJ251bWJlcicgKGUuZy4gaWYgaXQncyBhIHBvbHlmaWxsKS5cblxuXG4gIGlmICh0eXBlID09PSBleHBvcnRzLkZyYWdtZW50IHx8IHR5cGUgPT09IFJFQUNUX1BST0ZJTEVSX1RZUEUgfHwgdHlwZSA9PT0gUkVBQ1RfREVCVUdfVFJBQ0lOR19NT0RFX1RZUEUgfHwgdHlwZSA9PT0gUkVBQ1RfU1RSSUNUX01PREVfVFlQRSB8fCB0eXBlID09PSBSRUFDVF9TVVNQRU5TRV9UWVBFIHx8IHR5cGUgPT09IFJFQUNUX1NVU1BFTlNFX0xJU1RfVFlQRSB8fCB0eXBlID09PSBSRUFDVF9MRUdBQ1lfSElEREVOX1RZUEUgfHwgZW5hYmxlU2NvcGVBUEkgKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBpZiAodHlwZW9mIHR5cGUgPT09ICdvYmplY3QnICYmIHR5cGUgIT09IG51bGwpIHtcbiAgICBpZiAodHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfTEFaWV9UWVBFIHx8IHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX01FTU9fVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9QUk9WSURFUl9UWVBFIHx8IHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX0NPTlRFWFRfVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9GT1JXQVJEX1JFRl9UWVBFIHx8IHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX0ZVTkRBTUVOVEFMX1RZUEUgfHwgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfQkxPQ0tfVFlQRSB8fCB0eXBlWzBdID09PSBSRUFDVF9TRVJWRVJfQkxPQ0tfVFlQRSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBnZXRXcmFwcGVkTmFtZShvdXRlclR5cGUsIGlubmVyVHlwZSwgd3JhcHBlck5hbWUpIHtcbiAgdmFyIGZ1bmN0aW9uTmFtZSA9IGlubmVyVHlwZS5kaXNwbGF5TmFtZSB8fCBpbm5lclR5cGUubmFtZSB8fCAnJztcbiAgcmV0dXJuIG91dGVyVHlwZS5kaXNwbGF5TmFtZSB8fCAoZnVuY3Rpb25OYW1lICE9PSAnJyA/IHdyYXBwZXJOYW1lICsgXCIoXCIgKyBmdW5jdGlvbk5hbWUgKyBcIilcIiA6IHdyYXBwZXJOYW1lKTtcbn1cblxuZnVuY3Rpb24gZ2V0Q29udGV4dE5hbWUodHlwZSkge1xuICByZXR1cm4gdHlwZS5kaXNwbGF5TmFtZSB8fCAnQ29udGV4dCc7XG59XG5cbmZ1bmN0aW9uIGdldENvbXBvbmVudE5hbWUodHlwZSkge1xuICBpZiAodHlwZSA9PSBudWxsKSB7XG4gICAgLy8gSG9zdCByb290LCB0ZXh0IG5vZGUgb3IganVzdCBpbnZhbGlkIHR5cGUuXG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICB7XG4gICAgaWYgKHR5cGVvZiB0eXBlLnRhZyA9PT0gJ251bWJlcicpIHtcbiAgICAgIGVycm9yKCdSZWNlaXZlZCBhbiB1bmV4cGVjdGVkIG9iamVjdCBpbiBnZXRDb21wb25lbnROYW1lKCkuICcgKyAnVGhpcyBpcyBsaWtlbHkgYSBidWcgaW4gUmVhY3QuIFBsZWFzZSBmaWxlIGFuIGlzc3VlLicpO1xuICAgIH1cbiAgfVxuXG4gIGlmICh0eXBlb2YgdHlwZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiB0eXBlLmRpc3BsYXlOYW1lIHx8IHR5cGUubmFtZSB8fCBudWxsO1xuICB9XG5cbiAgaWYgKHR5cGVvZiB0eXBlID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiB0eXBlO1xuICB9XG5cbiAgc3dpdGNoICh0eXBlKSB7XG4gICAgY2FzZSBleHBvcnRzLkZyYWdtZW50OlxuICAgICAgcmV0dXJuICdGcmFnbWVudCc7XG5cbiAgICBjYXNlIFJFQUNUX1BPUlRBTF9UWVBFOlxuICAgICAgcmV0dXJuICdQb3J0YWwnO1xuXG4gICAgY2FzZSBSRUFDVF9QUk9GSUxFUl9UWVBFOlxuICAgICAgcmV0dXJuICdQcm9maWxlcic7XG5cbiAgICBjYXNlIFJFQUNUX1NUUklDVF9NT0RFX1RZUEU6XG4gICAgICByZXR1cm4gJ1N0cmljdE1vZGUnO1xuXG4gICAgY2FzZSBSRUFDVF9TVVNQRU5TRV9UWVBFOlxuICAgICAgcmV0dXJuICdTdXNwZW5zZSc7XG5cbiAgICBjYXNlIFJFQUNUX1NVU1BFTlNFX0xJU1RfVFlQRTpcbiAgICAgIHJldHVybiAnU3VzcGVuc2VMaXN0JztcbiAgfVxuXG4gIGlmICh0eXBlb2YgdHlwZSA9PT0gJ29iamVjdCcpIHtcbiAgICBzd2l0Y2ggKHR5cGUuJCR0eXBlb2YpIHtcbiAgICAgIGNhc2UgUkVBQ1RfQ09OVEVYVF9UWVBFOlxuICAgICAgICB2YXIgY29udGV4dCA9IHR5cGU7XG4gICAgICAgIHJldHVybiBnZXRDb250ZXh0TmFtZShjb250ZXh0KSArICcuQ29uc3VtZXInO1xuXG4gICAgICBjYXNlIFJFQUNUX1BST1ZJREVSX1RZUEU6XG4gICAgICAgIHZhciBwcm92aWRlciA9IHR5cGU7XG4gICAgICAgIHJldHVybiBnZXRDb250ZXh0TmFtZShwcm92aWRlci5fY29udGV4dCkgKyAnLlByb3ZpZGVyJztcblxuICAgICAgY2FzZSBSRUFDVF9GT1JXQVJEX1JFRl9UWVBFOlxuICAgICAgICByZXR1cm4gZ2V0V3JhcHBlZE5hbWUodHlwZSwgdHlwZS5yZW5kZXIsICdGb3J3YXJkUmVmJyk7XG5cbiAgICAgIGNhc2UgUkVBQ1RfTUVNT19UWVBFOlxuICAgICAgICByZXR1cm4gZ2V0Q29tcG9uZW50TmFtZSh0eXBlLnR5cGUpO1xuXG4gICAgICBjYXNlIFJFQUNUX0JMT0NLX1RZUEU6XG4gICAgICAgIHJldHVybiBnZXRDb21wb25lbnROYW1lKHR5cGUuX3JlbmRlcik7XG5cbiAgICAgIGNhc2UgUkVBQ1RfTEFaWV9UWVBFOlxuICAgICAgICB7XG4gICAgICAgICAgdmFyIGxhenlDb21wb25lbnQgPSB0eXBlO1xuICAgICAgICAgIHZhciBwYXlsb2FkID0gbGF6eUNvbXBvbmVudC5fcGF5bG9hZDtcbiAgICAgICAgICB2YXIgaW5pdCA9IGxhenlDb21wb25lbnQuX2luaXQ7XG5cbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGdldENvbXBvbmVudE5hbWUoaW5pdChwYXlsb2FkKSk7XG4gICAgICAgICAgfSBjYXRjaCAoeCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59XG5cbi8vIEhlbHBlcnMgdG8gcGF0Y2ggY29uc29sZS5sb2dzIHRvIGF2b2lkIGxvZ2dpbmcgZHVyaW5nIHNpZGUtZWZmZWN0IGZyZWVcbi8vIHJlcGxheWluZyBvbiByZW5kZXIgZnVuY3Rpb24uIFRoaXMgY3VycmVudGx5IG9ubHkgcGF0Y2hlcyB0aGUgb2JqZWN0XG4vLyBsYXppbHkgd2hpY2ggd29uJ3QgY292ZXIgaWYgdGhlIGxvZyBmdW5jdGlvbiB3YXMgZXh0cmFjdGVkIGVhZ2VybHkuXG4vLyBXZSBjb3VsZCBhbHNvIGVhZ2VybHkgcGF0Y2ggdGhlIG1ldGhvZC5cbnZhciBkaXNhYmxlZERlcHRoID0gMDtcbnZhciBwcmV2TG9nO1xudmFyIHByZXZJbmZvO1xudmFyIHByZXZXYXJuO1xudmFyIHByZXZFcnJvcjtcbnZhciBwcmV2R3JvdXA7XG52YXIgcHJldkdyb3VwQ29sbGFwc2VkO1xudmFyIHByZXZHcm91cEVuZDtcblxuZnVuY3Rpb24gZGlzYWJsZWRMb2coKSB7fVxuXG5kaXNhYmxlZExvZy5fX3JlYWN0RGlzYWJsZWRMb2cgPSB0cnVlO1xuZnVuY3Rpb24gZGlzYWJsZUxvZ3MoKSB7XG4gIHtcbiAgICBpZiAoZGlzYWJsZWREZXB0aCA9PT0gMCkge1xuICAgICAgLyogZXNsaW50LWRpc2FibGUgcmVhY3QtaW50ZXJuYWwvbm8tcHJvZHVjdGlvbi1sb2dnaW5nICovXG4gICAgICBwcmV2TG9nID0gY29uc29sZS5sb2c7XG4gICAgICBwcmV2SW5mbyA9IGNvbnNvbGUuaW5mbztcbiAgICAgIHByZXZXYXJuID0gY29uc29sZS53YXJuO1xuICAgICAgcHJldkVycm9yID0gY29uc29sZS5lcnJvcjtcbiAgICAgIHByZXZHcm91cCA9IGNvbnNvbGUuZ3JvdXA7XG4gICAgICBwcmV2R3JvdXBDb2xsYXBzZWQgPSBjb25zb2xlLmdyb3VwQ29sbGFwc2VkO1xuICAgICAgcHJldkdyb3VwRW5kID0gY29uc29sZS5ncm91cEVuZDsgLy8gaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2lzc3Vlcy8xOTA5OVxuXG4gICAgICB2YXIgcHJvcHMgPSB7XG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6IGRpc2FibGVkTG9nLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZVxuICAgICAgfTsgLy8gJEZsb3dGaXhNZSBGbG93IHRoaW5rcyBjb25zb2xlIGlzIGltbXV0YWJsZS5cblxuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoY29uc29sZSwge1xuICAgICAgICBpbmZvOiBwcm9wcyxcbiAgICAgICAgbG9nOiBwcm9wcyxcbiAgICAgICAgd2FybjogcHJvcHMsXG4gICAgICAgIGVycm9yOiBwcm9wcyxcbiAgICAgICAgZ3JvdXA6IHByb3BzLFxuICAgICAgICBncm91cENvbGxhcHNlZDogcHJvcHMsXG4gICAgICAgIGdyb3VwRW5kOiBwcm9wc1xuICAgICAgfSk7XG4gICAgICAvKiBlc2xpbnQtZW5hYmxlIHJlYWN0LWludGVybmFsL25vLXByb2R1Y3Rpb24tbG9nZ2luZyAqL1xuICAgIH1cblxuICAgIGRpc2FibGVkRGVwdGgrKztcbiAgfVxufVxuZnVuY3Rpb24gcmVlbmFibGVMb2dzKCkge1xuICB7XG4gICAgZGlzYWJsZWREZXB0aC0tO1xuXG4gICAgaWYgKGRpc2FibGVkRGVwdGggPT09IDApIHtcbiAgICAgIC8qIGVzbGludC1kaXNhYmxlIHJlYWN0LWludGVybmFsL25vLXByb2R1Y3Rpb24tbG9nZ2luZyAqL1xuICAgICAgdmFyIHByb3BzID0ge1xuICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgICB9OyAvLyAkRmxvd0ZpeE1lIEZsb3cgdGhpbmtzIGNvbnNvbGUgaXMgaW1tdXRhYmxlLlxuXG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhjb25zb2xlLCB7XG4gICAgICAgIGxvZzogX2Fzc2lnbih7fSwgcHJvcHMsIHtcbiAgICAgICAgICB2YWx1ZTogcHJldkxvZ1xuICAgICAgICB9KSxcbiAgICAgICAgaW5mbzogX2Fzc2lnbih7fSwgcHJvcHMsIHtcbiAgICAgICAgICB2YWx1ZTogcHJldkluZm9cbiAgICAgICAgfSksXG4gICAgICAgIHdhcm46IF9hc3NpZ24oe30sIHByb3BzLCB7XG4gICAgICAgICAgdmFsdWU6IHByZXZXYXJuXG4gICAgICAgIH0pLFxuICAgICAgICBlcnJvcjogX2Fzc2lnbih7fSwgcHJvcHMsIHtcbiAgICAgICAgICB2YWx1ZTogcHJldkVycm9yXG4gICAgICAgIH0pLFxuICAgICAgICBncm91cDogX2Fzc2lnbih7fSwgcHJvcHMsIHtcbiAgICAgICAgICB2YWx1ZTogcHJldkdyb3VwXG4gICAgICAgIH0pLFxuICAgICAgICBncm91cENvbGxhcHNlZDogX2Fzc2lnbih7fSwgcHJvcHMsIHtcbiAgICAgICAgICB2YWx1ZTogcHJldkdyb3VwQ29sbGFwc2VkXG4gICAgICAgIH0pLFxuICAgICAgICBncm91cEVuZDogX2Fzc2lnbih7fSwgcHJvcHMsIHtcbiAgICAgICAgICB2YWx1ZTogcHJldkdyb3VwRW5kXG4gICAgICAgIH0pXG4gICAgICB9KTtcbiAgICAgIC8qIGVzbGludC1lbmFibGUgcmVhY3QtaW50ZXJuYWwvbm8tcHJvZHVjdGlvbi1sb2dnaW5nICovXG4gICAgfVxuXG4gICAgaWYgKGRpc2FibGVkRGVwdGggPCAwKSB7XG4gICAgICBlcnJvcignZGlzYWJsZWREZXB0aCBmZWxsIGJlbG93IHplcm8uICcgKyAnVGhpcyBpcyBhIGJ1ZyBpbiBSZWFjdC4gUGxlYXNlIGZpbGUgYW4gaXNzdWUuJyk7XG4gICAgfVxuICB9XG59XG5cbnZhciBSZWFjdEN1cnJlbnREaXNwYXRjaGVyID0gUmVhY3RTaGFyZWRJbnRlcm5hbHMuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcjtcbnZhciBwcmVmaXg7XG5mdW5jdGlvbiBkZXNjcmliZUJ1aWx0SW5Db21wb25lbnRGcmFtZShuYW1lLCBzb3VyY2UsIG93bmVyRm4pIHtcbiAge1xuICAgIGlmIChwcmVmaXggPT09IHVuZGVmaW5lZCkge1xuICAgICAgLy8gRXh0cmFjdCB0aGUgVk0gc3BlY2lmaWMgcHJlZml4IHVzZWQgYnkgZWFjaCBsaW5lLlxuICAgICAgdHJ5IHtcbiAgICAgICAgdGhyb3cgRXJyb3IoKTtcbiAgICAgIH0gY2F0Y2ggKHgpIHtcbiAgICAgICAgdmFyIG1hdGNoID0geC5zdGFjay50cmltKCkubWF0Y2goL1xcbiggKihhdCApPykvKTtcbiAgICAgICAgcHJlZml4ID0gbWF0Y2ggJiYgbWF0Y2hbMV0gfHwgJyc7XG4gICAgICB9XG4gICAgfSAvLyBXZSB1c2UgdGhlIHByZWZpeCB0byBlbnN1cmUgb3VyIHN0YWNrcyBsaW5lIHVwIHdpdGggbmF0aXZlIHN0YWNrIGZyYW1lcy5cblxuXG4gICAgcmV0dXJuICdcXG4nICsgcHJlZml4ICsgbmFtZTtcbiAgfVxufVxudmFyIHJlZW50cnkgPSBmYWxzZTtcbnZhciBjb21wb25lbnRGcmFtZUNhY2hlO1xuXG57XG4gIHZhciBQb3NzaWJseVdlYWtNYXAgPSB0eXBlb2YgV2Vha01hcCA9PT0gJ2Z1bmN0aW9uJyA/IFdlYWtNYXAgOiBNYXA7XG4gIGNvbXBvbmVudEZyYW1lQ2FjaGUgPSBuZXcgUG9zc2libHlXZWFrTWFwKCk7XG59XG5cbmZ1bmN0aW9uIGRlc2NyaWJlTmF0aXZlQ29tcG9uZW50RnJhbWUoZm4sIGNvbnN0cnVjdCkge1xuICAvLyBJZiBzb21ldGhpbmcgYXNrZWQgZm9yIGEgc3RhY2sgaW5zaWRlIGEgZmFrZSByZW5kZXIsIGl0IHNob3VsZCBnZXQgaWdub3JlZC5cbiAgaWYgKCFmbiB8fCByZWVudHJ5KSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG5cbiAge1xuICAgIHZhciBmcmFtZSA9IGNvbXBvbmVudEZyYW1lQ2FjaGUuZ2V0KGZuKTtcblxuICAgIGlmIChmcmFtZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gZnJhbWU7XG4gICAgfVxuICB9XG5cbiAgdmFyIGNvbnRyb2w7XG4gIHJlZW50cnkgPSB0cnVlO1xuICB2YXIgcHJldmlvdXNQcmVwYXJlU3RhY2tUcmFjZSA9IEVycm9yLnByZXBhcmVTdGFja1RyYWNlOyAvLyAkRmxvd0ZpeE1lIEl0IGRvZXMgYWNjZXB0IHVuZGVmaW5lZC5cblxuICBFcnJvci5wcmVwYXJlU3RhY2tUcmFjZSA9IHVuZGVmaW5lZDtcbiAgdmFyIHByZXZpb3VzRGlzcGF0Y2hlcjtcblxuICB7XG4gICAgcHJldmlvdXNEaXNwYXRjaGVyID0gUmVhY3RDdXJyZW50RGlzcGF0Y2hlci5jdXJyZW50OyAvLyBTZXQgdGhlIGRpc3BhdGNoZXIgaW4gREVWIGJlY2F1c2UgdGhpcyBtaWdodCBiZSBjYWxsIGluIHRoZSByZW5kZXIgZnVuY3Rpb25cbiAgICAvLyBmb3Igd2FybmluZ3MuXG5cbiAgICBSZWFjdEN1cnJlbnREaXNwYXRjaGVyLmN1cnJlbnQgPSBudWxsO1xuICAgIGRpc2FibGVMb2dzKCk7XG4gIH1cblxuICB0cnkge1xuICAgIC8vIFRoaXMgc2hvdWxkIHRocm93LlxuICAgIGlmIChjb25zdHJ1Y3QpIHtcbiAgICAgIC8vIFNvbWV0aGluZyBzaG91bGQgYmUgc2V0dGluZyB0aGUgcHJvcHMgaW4gdGhlIGNvbnN0cnVjdG9yLlxuICAgICAgdmFyIEZha2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRocm93IEVycm9yKCk7XG4gICAgICB9OyAvLyAkRmxvd0ZpeE1lXG5cblxuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEZha2UucHJvdG90eXBlLCAncHJvcHMnLCB7XG4gICAgICAgIHNldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgIC8vIFdlIHVzZSBhIHRocm93aW5nIHNldHRlciBpbnN0ZWFkIG9mIGZyb3plbiBvciBub24td3JpdGFibGUgcHJvcHNcbiAgICAgICAgICAvLyBiZWNhdXNlIHRoYXQgd29uJ3QgdGhyb3cgaW4gYSBub24tc3RyaWN0IG1vZGUgZnVuY3Rpb24uXG4gICAgICAgICAgdGhyb3cgRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gJ29iamVjdCcgJiYgUmVmbGVjdC5jb25zdHJ1Y3QpIHtcbiAgICAgICAgLy8gV2UgY29uc3RydWN0IGEgZGlmZmVyZW50IGNvbnRyb2wgZm9yIHRoaXMgY2FzZSB0byBpbmNsdWRlIGFueSBleHRyYVxuICAgICAgICAvLyBmcmFtZXMgYWRkZWQgYnkgdGhlIGNvbnN0cnVjdCBjYWxsLlxuICAgICAgICB0cnkge1xuICAgICAgICAgIFJlZmxlY3QuY29uc3RydWN0KEZha2UsIFtdKTtcbiAgICAgICAgfSBjYXRjaCAoeCkge1xuICAgICAgICAgIGNvbnRyb2wgPSB4O1xuICAgICAgICB9XG5cbiAgICAgICAgUmVmbGVjdC5jb25zdHJ1Y3QoZm4sIFtdLCBGYWtlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgRmFrZS5jYWxsKCk7XG4gICAgICAgIH0gY2F0Y2ggKHgpIHtcbiAgICAgICAgICBjb250cm9sID0geDtcbiAgICAgICAgfVxuXG4gICAgICAgIGZuLmNhbGwoRmFrZS5wcm90b3R5cGUpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0cnkge1xuICAgICAgICB0aHJvdyBFcnJvcigpO1xuICAgICAgfSBjYXRjaCAoeCkge1xuICAgICAgICBjb250cm9sID0geDtcbiAgICAgIH1cblxuICAgICAgZm4oKTtcbiAgICB9XG4gIH0gY2F0Y2ggKHNhbXBsZSkge1xuICAgIC8vIFRoaXMgaXMgaW5saW5lZCBtYW51YWxseSBiZWNhdXNlIGNsb3N1cmUgZG9lc24ndCBkbyBpdCBmb3IgdXMuXG4gICAgaWYgKHNhbXBsZSAmJiBjb250cm9sICYmIHR5cGVvZiBzYW1wbGUuc3RhY2sgPT09ICdzdHJpbmcnKSB7XG4gICAgICAvLyBUaGlzIGV4dHJhY3RzIHRoZSBmaXJzdCBmcmFtZSBmcm9tIHRoZSBzYW1wbGUgdGhhdCBpc24ndCBhbHNvIGluIHRoZSBjb250cm9sLlxuICAgICAgLy8gU2tpcHBpbmcgb25lIGZyYW1lIHRoYXQgd2UgYXNzdW1lIGlzIHRoZSBmcmFtZSB0aGF0IGNhbGxzIHRoZSB0d28uXG4gICAgICB2YXIgc2FtcGxlTGluZXMgPSBzYW1wbGUuc3RhY2suc3BsaXQoJ1xcbicpO1xuICAgICAgdmFyIGNvbnRyb2xMaW5lcyA9IGNvbnRyb2wuc3RhY2suc3BsaXQoJ1xcbicpO1xuICAgICAgdmFyIHMgPSBzYW1wbGVMaW5lcy5sZW5ndGggLSAxO1xuICAgICAgdmFyIGMgPSBjb250cm9sTGluZXMubGVuZ3RoIC0gMTtcblxuICAgICAgd2hpbGUgKHMgPj0gMSAmJiBjID49IDAgJiYgc2FtcGxlTGluZXNbc10gIT09IGNvbnRyb2xMaW5lc1tjXSkge1xuICAgICAgICAvLyBXZSBleHBlY3QgYXQgbGVhc3Qgb25lIHN0YWNrIGZyYW1lIHRvIGJlIHNoYXJlZC5cbiAgICAgICAgLy8gVHlwaWNhbGx5IHRoaXMgd2lsbCBiZSB0aGUgcm9vdCBtb3N0IG9uZS4gSG93ZXZlciwgc3RhY2sgZnJhbWVzIG1heSBiZVxuICAgICAgICAvLyBjdXQgb2ZmIGR1ZSB0byBtYXhpbXVtIHN0YWNrIGxpbWl0cy4gSW4gdGhpcyBjYXNlLCBvbmUgbWF5YmUgY3V0IG9mZlxuICAgICAgICAvLyBlYXJsaWVyIHRoYW4gdGhlIG90aGVyLiBXZSBhc3N1bWUgdGhhdCB0aGUgc2FtcGxlIGlzIGxvbmdlciBvciB0aGUgc2FtZVxuICAgICAgICAvLyBhbmQgdGhlcmUgZm9yIGN1dCBvZmYgZWFybGllci4gU28gd2Ugc2hvdWxkIGZpbmQgdGhlIHJvb3QgbW9zdCBmcmFtZSBpblxuICAgICAgICAvLyB0aGUgc2FtcGxlIHNvbWV3aGVyZSBpbiB0aGUgY29udHJvbC5cbiAgICAgICAgYy0tO1xuICAgICAgfVxuXG4gICAgICBmb3IgKDsgcyA+PSAxICYmIGMgPj0gMDsgcy0tLCBjLS0pIHtcbiAgICAgICAgLy8gTmV4dCB3ZSBmaW5kIHRoZSBmaXJzdCBvbmUgdGhhdCBpc24ndCB0aGUgc2FtZSB3aGljaCBzaG91bGQgYmUgdGhlXG4gICAgICAgIC8vIGZyYW1lIHRoYXQgY2FsbGVkIG91ciBzYW1wbGUgZnVuY3Rpb24gYW5kIHRoZSBjb250cm9sLlxuICAgICAgICBpZiAoc2FtcGxlTGluZXNbc10gIT09IGNvbnRyb2xMaW5lc1tjXSkge1xuICAgICAgICAgIC8vIEluIFY4LCB0aGUgZmlyc3QgbGluZSBpcyBkZXNjcmliaW5nIHRoZSBtZXNzYWdlIGJ1dCBvdGhlciBWTXMgZG9uJ3QuXG4gICAgICAgICAgLy8gSWYgd2UncmUgYWJvdXQgdG8gcmV0dXJuIHRoZSBmaXJzdCBsaW5lLCBhbmQgdGhlIGNvbnRyb2wgaXMgYWxzbyBvbiB0aGUgc2FtZVxuICAgICAgICAgIC8vIGxpbmUsIHRoYXQncyBhIHByZXR0eSBnb29kIGluZGljYXRvciB0aGF0IG91ciBzYW1wbGUgdGhyZXcgYXQgc2FtZSBsaW5lIGFzXG4gICAgICAgICAgLy8gdGhlIGNvbnRyb2wuIEkuZS4gYmVmb3JlIHdlIGVudGVyZWQgdGhlIHNhbXBsZSBmcmFtZS4gU28gd2UgaWdub3JlIHRoaXMgcmVzdWx0LlxuICAgICAgICAgIC8vIFRoaXMgY2FuIGhhcHBlbiBpZiB5b3UgcGFzc2VkIGEgY2xhc3MgdG8gZnVuY3Rpb24gY29tcG9uZW50LCBvciBub24tZnVuY3Rpb24uXG4gICAgICAgICAgaWYgKHMgIT09IDEgfHwgYyAhPT0gMSkge1xuICAgICAgICAgICAgZG8ge1xuICAgICAgICAgICAgICBzLS07XG4gICAgICAgICAgICAgIGMtLTsgLy8gV2UgbWF5IHN0aWxsIGhhdmUgc2ltaWxhciBpbnRlcm1lZGlhdGUgZnJhbWVzIGZyb20gdGhlIGNvbnN0cnVjdCBjYWxsLlxuICAgICAgICAgICAgICAvLyBUaGUgbmV4dCBvbmUgdGhhdCBpc24ndCB0aGUgc2FtZSBzaG91bGQgYmUgb3VyIG1hdGNoIHRob3VnaC5cblxuICAgICAgICAgICAgICBpZiAoYyA8IDAgfHwgc2FtcGxlTGluZXNbc10gIT09IGNvbnRyb2xMaW5lc1tjXSkge1xuICAgICAgICAgICAgICAgIC8vIFY4IGFkZHMgYSBcIm5ld1wiIHByZWZpeCBmb3IgbmF0aXZlIGNsYXNzZXMuIExldCdzIHJlbW92ZSBpdCB0byBtYWtlIGl0IHByZXR0aWVyLlxuICAgICAgICAgICAgICAgIHZhciBfZnJhbWUgPSAnXFxuJyArIHNhbXBsZUxpbmVzW3NdLnJlcGxhY2UoJyBhdCBuZXcgJywgJyBhdCAnKTtcblxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZm4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgY29tcG9uZW50RnJhbWVDYWNoZS5zZXQoZm4sIF9mcmFtZSk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSAvLyBSZXR1cm4gdGhlIGxpbmUgd2UgZm91bmQuXG5cblxuICAgICAgICAgICAgICAgIHJldHVybiBfZnJhbWU7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gd2hpbGUgKHMgPj0gMSAmJiBjID49IDApO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9IGZpbmFsbHkge1xuICAgIHJlZW50cnkgPSBmYWxzZTtcblxuICAgIHtcbiAgICAgIFJlYWN0Q3VycmVudERpc3BhdGNoZXIuY3VycmVudCA9IHByZXZpb3VzRGlzcGF0Y2hlcjtcbiAgICAgIHJlZW5hYmxlTG9ncygpO1xuICAgIH1cblxuICAgIEVycm9yLnByZXBhcmVTdGFja1RyYWNlID0gcHJldmlvdXNQcmVwYXJlU3RhY2tUcmFjZTtcbiAgfSAvLyBGYWxsYmFjayB0byBqdXN0IHVzaW5nIHRoZSBuYW1lIGlmIHdlIGNvdWxkbid0IG1ha2UgaXQgdGhyb3cuXG5cblxuICB2YXIgbmFtZSA9IGZuID8gZm4uZGlzcGxheU5hbWUgfHwgZm4ubmFtZSA6ICcnO1xuICB2YXIgc3ludGhldGljRnJhbWUgPSBuYW1lID8gZGVzY3JpYmVCdWlsdEluQ29tcG9uZW50RnJhbWUobmFtZSkgOiAnJztcblxuICB7XG4gICAgaWYgKHR5cGVvZiBmbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgY29tcG9uZW50RnJhbWVDYWNoZS5zZXQoZm4sIHN5bnRoZXRpY0ZyYW1lKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gc3ludGhldGljRnJhbWU7XG59XG5mdW5jdGlvbiBkZXNjcmliZUZ1bmN0aW9uQ29tcG9uZW50RnJhbWUoZm4sIHNvdXJjZSwgb3duZXJGbikge1xuICB7XG4gICAgcmV0dXJuIGRlc2NyaWJlTmF0aXZlQ29tcG9uZW50RnJhbWUoZm4sIGZhbHNlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzaG91bGRDb25zdHJ1Y3QoQ29tcG9uZW50KSB7XG4gIHZhciBwcm90b3R5cGUgPSBDb21wb25lbnQucHJvdG90eXBlO1xuICByZXR1cm4gISEocHJvdG90eXBlICYmIHByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50KTtcbn1cblxuZnVuY3Rpb24gZGVzY3JpYmVVbmtub3duRWxlbWVudFR5cGVGcmFtZUluREVWKHR5cGUsIHNvdXJjZSwgb3duZXJGbikge1xuXG4gIGlmICh0eXBlID09IG51bGwpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBpZiAodHlwZW9mIHR5cGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICB7XG4gICAgICByZXR1cm4gZGVzY3JpYmVOYXRpdmVDb21wb25lbnRGcmFtZSh0eXBlLCBzaG91bGRDb25zdHJ1Y3QodHlwZSkpO1xuICAgIH1cbiAgfVxuXG4gIGlmICh0eXBlb2YgdHlwZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gZGVzY3JpYmVCdWlsdEluQ29tcG9uZW50RnJhbWUodHlwZSk7XG4gIH1cblxuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlIFJFQUNUX1NVU1BFTlNFX1RZUEU6XG4gICAgICByZXR1cm4gZGVzY3JpYmVCdWlsdEluQ29tcG9uZW50RnJhbWUoJ1N1c3BlbnNlJyk7XG5cbiAgICBjYXNlIFJFQUNUX1NVU1BFTlNFX0xJU1RfVFlQRTpcbiAgICAgIHJldHVybiBkZXNjcmliZUJ1aWx0SW5Db21wb25lbnRGcmFtZSgnU3VzcGVuc2VMaXN0Jyk7XG4gIH1cblxuICBpZiAodHlwZW9mIHR5cGUgPT09ICdvYmplY3QnKSB7XG4gICAgc3dpdGNoICh0eXBlLiQkdHlwZW9mKSB7XG4gICAgICBjYXNlIFJFQUNUX0ZPUldBUkRfUkVGX1RZUEU6XG4gICAgICAgIHJldHVybiBkZXNjcmliZUZ1bmN0aW9uQ29tcG9uZW50RnJhbWUodHlwZS5yZW5kZXIpO1xuXG4gICAgICBjYXNlIFJFQUNUX01FTU9fVFlQRTpcbiAgICAgICAgLy8gTWVtbyBtYXkgY29udGFpbiBhbnkgY29tcG9uZW50IHR5cGUgc28gd2UgcmVjdXJzaXZlbHkgcmVzb2x2ZSBpdC5cbiAgICAgICAgcmV0dXJuIGRlc2NyaWJlVW5rbm93bkVsZW1lbnRUeXBlRnJhbWVJbkRFVih0eXBlLnR5cGUsIHNvdXJjZSwgb3duZXJGbik7XG5cbiAgICAgIGNhc2UgUkVBQ1RfQkxPQ0tfVFlQRTpcbiAgICAgICAgcmV0dXJuIGRlc2NyaWJlRnVuY3Rpb25Db21wb25lbnRGcmFtZSh0eXBlLl9yZW5kZXIpO1xuXG4gICAgICBjYXNlIFJFQUNUX0xBWllfVFlQRTpcbiAgICAgICAge1xuICAgICAgICAgIHZhciBsYXp5Q29tcG9uZW50ID0gdHlwZTtcbiAgICAgICAgICB2YXIgcGF5bG9hZCA9IGxhenlDb21wb25lbnQuX3BheWxvYWQ7XG4gICAgICAgICAgdmFyIGluaXQgPSBsYXp5Q29tcG9uZW50Ll9pbml0O1xuXG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIExhenkgbWF5IGNvbnRhaW4gYW55IGNvbXBvbmVudCB0eXBlIHNvIHdlIHJlY3Vyc2l2ZWx5IHJlc29sdmUgaXQuXG4gICAgICAgICAgICByZXR1cm4gZGVzY3JpYmVVbmtub3duRWxlbWVudFR5cGVGcmFtZUluREVWKGluaXQocGF5bG9hZCksIHNvdXJjZSwgb3duZXJGbik7XG4gICAgICAgICAgfSBjYXRjaCAoeCkge31cbiAgICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiAnJztcbn1cblxudmFyIGxvZ2dlZFR5cGVGYWlsdXJlcyA9IHt9O1xudmFyIFJlYWN0RGVidWdDdXJyZW50RnJhbWUgPSBSZWFjdFNoYXJlZEludGVybmFscy5SZWFjdERlYnVnQ3VycmVudEZyYW1lO1xuXG5mdW5jdGlvbiBzZXRDdXJyZW50bHlWYWxpZGF0aW5nRWxlbWVudChlbGVtZW50KSB7XG4gIHtcbiAgICBpZiAoZWxlbWVudCkge1xuICAgICAgdmFyIG93bmVyID0gZWxlbWVudC5fb3duZXI7XG4gICAgICB2YXIgc3RhY2sgPSBkZXNjcmliZVVua25vd25FbGVtZW50VHlwZUZyYW1lSW5ERVYoZWxlbWVudC50eXBlLCBlbGVtZW50Ll9zb3VyY2UsIG93bmVyID8gb3duZXIudHlwZSA6IG51bGwpO1xuICAgICAgUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZS5zZXRFeHRyYVN0YWNrRnJhbWUoc3RhY2spO1xuICAgIH0gZWxzZSB7XG4gICAgICBSZWFjdERlYnVnQ3VycmVudEZyYW1lLnNldEV4dHJhU3RhY2tGcmFtZShudWxsKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gY2hlY2tQcm9wVHlwZXModHlwZVNwZWNzLCB2YWx1ZXMsIGxvY2F0aW9uLCBjb21wb25lbnROYW1lLCBlbGVtZW50KSB7XG4gIHtcbiAgICAvLyAkRmxvd0ZpeE1lIFRoaXMgaXMgb2theSBidXQgRmxvdyBkb2Vzbid0IGtub3cgaXQuXG4gICAgdmFyIGhhcyA9IEZ1bmN0aW9uLmNhbGwuYmluZChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5KTtcblxuICAgIGZvciAodmFyIHR5cGVTcGVjTmFtZSBpbiB0eXBlU3BlY3MpIHtcbiAgICAgIGlmIChoYXModHlwZVNwZWNzLCB0eXBlU3BlY05hbWUpKSB7XG4gICAgICAgIHZhciBlcnJvciQxID0gdm9pZCAwOyAvLyBQcm9wIHR5cGUgdmFsaWRhdGlvbiBtYXkgdGhyb3cuIEluIGNhc2UgdGhleSBkbywgd2UgZG9uJ3Qgd2FudCB0b1xuICAgICAgICAvLyBmYWlsIHRoZSByZW5kZXIgcGhhc2Ugd2hlcmUgaXQgZGlkbid0IGZhaWwgYmVmb3JlLiBTbyB3ZSBsb2cgaXQuXG4gICAgICAgIC8vIEFmdGVyIHRoZXNlIGhhdmUgYmVlbiBjbGVhbmVkIHVwLCB3ZSdsbCBsZXQgdGhlbSB0aHJvdy5cblxuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIFRoaXMgaXMgaW50ZW50aW9uYWxseSBhbiBpbnZhcmlhbnQgdGhhdCBnZXRzIGNhdWdodC4gSXQncyB0aGUgc2FtZVxuICAgICAgICAgIC8vIGJlaGF2aW9yIGFzIHdpdGhvdXQgdGhpcyBzdGF0ZW1lbnQgZXhjZXB0IHdpdGggYSBiZXR0ZXIgbWVzc2FnZS5cbiAgICAgICAgICBpZiAodHlwZW9mIHR5cGVTcGVjc1t0eXBlU3BlY05hbWVdICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICB2YXIgZXJyID0gRXJyb3IoKGNvbXBvbmVudE5hbWUgfHwgJ1JlYWN0IGNsYXNzJykgKyAnOiAnICsgbG9jYXRpb24gKyAnIHR5cGUgYCcgKyB0eXBlU3BlY05hbWUgKyAnYCBpcyBpbnZhbGlkOyAnICsgJ2l0IG11c3QgYmUgYSBmdW5jdGlvbiwgdXN1YWxseSBmcm9tIHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZSwgYnV0IHJlY2VpdmVkIGAnICsgdHlwZW9mIHR5cGVTcGVjc1t0eXBlU3BlY05hbWVdICsgJ2AuJyArICdUaGlzIG9mdGVuIGhhcHBlbnMgYmVjYXVzZSBvZiB0eXBvcyBzdWNoIGFzIGBQcm9wVHlwZXMuZnVuY3Rpb25gIGluc3RlYWQgb2YgYFByb3BUeXBlcy5mdW5jYC4nKTtcbiAgICAgICAgICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGVycm9yJDEgPSB0eXBlU3BlY3NbdHlwZVNwZWNOYW1lXSh2YWx1ZXMsIHR5cGVTcGVjTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIG51bGwsICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCcpO1xuICAgICAgICB9IGNhdGNoIChleCkge1xuICAgICAgICAgIGVycm9yJDEgPSBleDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlcnJvciQxICYmICEoZXJyb3IkMSBpbnN0YW5jZW9mIEVycm9yKSkge1xuICAgICAgICAgIHNldEN1cnJlbnRseVZhbGlkYXRpbmdFbGVtZW50KGVsZW1lbnQpO1xuXG4gICAgICAgICAgZXJyb3IoJyVzOiB0eXBlIHNwZWNpZmljYXRpb24gb2YgJXMnICsgJyBgJXNgIGlzIGludmFsaWQ7IHRoZSB0eXBlIGNoZWNrZXIgJyArICdmdW5jdGlvbiBtdXN0IHJldHVybiBgbnVsbGAgb3IgYW4gYEVycm9yYCBidXQgcmV0dXJuZWQgYSAlcy4gJyArICdZb3UgbWF5IGhhdmUgZm9yZ290dGVuIHRvIHBhc3MgYW4gYXJndW1lbnQgdG8gdGhlIHR5cGUgY2hlY2tlciAnICsgJ2NyZWF0b3IgKGFycmF5T2YsIGluc3RhbmNlT2YsIG9iamVjdE9mLCBvbmVPZiwgb25lT2ZUeXBlLCBhbmQgJyArICdzaGFwZSBhbGwgcmVxdWlyZSBhbiBhcmd1bWVudCkuJywgY29tcG9uZW50TmFtZSB8fCAnUmVhY3QgY2xhc3MnLCBsb2NhdGlvbiwgdHlwZVNwZWNOYW1lLCB0eXBlb2YgZXJyb3IkMSk7XG5cbiAgICAgICAgICBzZXRDdXJyZW50bHlWYWxpZGF0aW5nRWxlbWVudChudWxsKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlcnJvciQxIGluc3RhbmNlb2YgRXJyb3IgJiYgIShlcnJvciQxLm1lc3NhZ2UgaW4gbG9nZ2VkVHlwZUZhaWx1cmVzKSkge1xuICAgICAgICAgIC8vIE9ubHkgbW9uaXRvciB0aGlzIGZhaWx1cmUgb25jZSBiZWNhdXNlIHRoZXJlIHRlbmRzIHRvIGJlIGEgbG90IG9mIHRoZVxuICAgICAgICAgIC8vIHNhbWUgZXJyb3IuXG4gICAgICAgICAgbG9nZ2VkVHlwZUZhaWx1cmVzW2Vycm9yJDEubWVzc2FnZV0gPSB0cnVlO1xuICAgICAgICAgIHNldEN1cnJlbnRseVZhbGlkYXRpbmdFbGVtZW50KGVsZW1lbnQpO1xuXG4gICAgICAgICAgZXJyb3IoJ0ZhaWxlZCAlcyB0eXBlOiAlcycsIGxvY2F0aW9uLCBlcnJvciQxLm1lc3NhZ2UpO1xuXG4gICAgICAgICAgc2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQobnVsbCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxudmFyIFJlYWN0Q3VycmVudE93bmVyID0gUmVhY3RTaGFyZWRJbnRlcm5hbHMuUmVhY3RDdXJyZW50T3duZXI7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIFJFU0VSVkVEX1BST1BTID0ge1xuICBrZXk6IHRydWUsXG4gIHJlZjogdHJ1ZSxcbiAgX19zZWxmOiB0cnVlLFxuICBfX3NvdXJjZTogdHJ1ZVxufTtcbnZhciBzcGVjaWFsUHJvcEtleVdhcm5pbmdTaG93bjtcbnZhciBzcGVjaWFsUHJvcFJlZldhcm5pbmdTaG93bjtcbnZhciBkaWRXYXJuQWJvdXRTdHJpbmdSZWZzO1xuXG57XG4gIGRpZFdhcm5BYm91dFN0cmluZ1JlZnMgPSB7fTtcbn1cblxuZnVuY3Rpb24gaGFzVmFsaWRSZWYoY29uZmlnKSB7XG4gIHtcbiAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChjb25maWcsICdyZWYnKSkge1xuICAgICAgdmFyIGdldHRlciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoY29uZmlnLCAncmVmJykuZ2V0O1xuXG4gICAgICBpZiAoZ2V0dGVyICYmIGdldHRlci5pc1JlYWN0V2FybmluZykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGNvbmZpZy5yZWYgIT09IHVuZGVmaW5lZDtcbn1cblxuZnVuY3Rpb24gaGFzVmFsaWRLZXkoY29uZmlnKSB7XG4gIHtcbiAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChjb25maWcsICdrZXknKSkge1xuICAgICAgdmFyIGdldHRlciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoY29uZmlnLCAna2V5JykuZ2V0O1xuXG4gICAgICBpZiAoZ2V0dGVyICYmIGdldHRlci5pc1JlYWN0V2FybmluZykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGNvbmZpZy5rZXkgIT09IHVuZGVmaW5lZDtcbn1cblxuZnVuY3Rpb24gd2FybklmU3RyaW5nUmVmQ2Fubm90QmVBdXRvQ29udmVydGVkKGNvbmZpZywgc2VsZikge1xuICB7XG4gICAgaWYgKHR5cGVvZiBjb25maWcucmVmID09PSAnc3RyaW5nJyAmJiBSZWFjdEN1cnJlbnRPd25lci5jdXJyZW50ICYmIHNlbGYgJiYgUmVhY3RDdXJyZW50T3duZXIuY3VycmVudC5zdGF0ZU5vZGUgIT09IHNlbGYpIHtcbiAgICAgIHZhciBjb21wb25lbnROYW1lID0gZ2V0Q29tcG9uZW50TmFtZShSZWFjdEN1cnJlbnRPd25lci5jdXJyZW50LnR5cGUpO1xuXG4gICAgICBpZiAoIWRpZFdhcm5BYm91dFN0cmluZ1JlZnNbY29tcG9uZW50TmFtZV0pIHtcbiAgICAgICAgZXJyb3IoJ0NvbXBvbmVudCBcIiVzXCIgY29udGFpbnMgdGhlIHN0cmluZyByZWYgXCIlc1wiLiAnICsgJ1N1cHBvcnQgZm9yIHN0cmluZyByZWZzIHdpbGwgYmUgcmVtb3ZlZCBpbiBhIGZ1dHVyZSBtYWpvciByZWxlYXNlLiAnICsgJ1RoaXMgY2FzZSBjYW5ub3QgYmUgYXV0b21hdGljYWxseSBjb252ZXJ0ZWQgdG8gYW4gYXJyb3cgZnVuY3Rpb24uICcgKyAnV2UgYXNrIHlvdSB0byBtYW51YWxseSBmaXggdGhpcyBjYXNlIGJ5IHVzaW5nIHVzZVJlZigpIG9yIGNyZWF0ZVJlZigpIGluc3RlYWQuICcgKyAnTGVhcm4gbW9yZSBhYm91dCB1c2luZyByZWZzIHNhZmVseSBoZXJlOiAnICsgJ2h0dHBzOi8vcmVhY3Rqcy5vcmcvbGluay9zdHJpY3QtbW9kZS1zdHJpbmctcmVmJywgZ2V0Q29tcG9uZW50TmFtZShSZWFjdEN1cnJlbnRPd25lci5jdXJyZW50LnR5cGUpLCBjb25maWcucmVmKTtcblxuICAgICAgICBkaWRXYXJuQWJvdXRTdHJpbmdSZWZzW2NvbXBvbmVudE5hbWVdID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gZGVmaW5lS2V5UHJvcFdhcm5pbmdHZXR0ZXIocHJvcHMsIGRpc3BsYXlOYW1lKSB7XG4gIHtcbiAgICB2YXIgd2FybkFib3V0QWNjZXNzaW5nS2V5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKCFzcGVjaWFsUHJvcEtleVdhcm5pbmdTaG93bikge1xuICAgICAgICBzcGVjaWFsUHJvcEtleVdhcm5pbmdTaG93biA9IHRydWU7XG5cbiAgICAgICAgZXJyb3IoJyVzOiBga2V5YCBpcyBub3QgYSBwcm9wLiBUcnlpbmcgdG8gYWNjZXNzIGl0IHdpbGwgcmVzdWx0ICcgKyAnaW4gYHVuZGVmaW5lZGAgYmVpbmcgcmV0dXJuZWQuIElmIHlvdSBuZWVkIHRvIGFjY2VzcyB0aGUgc2FtZSAnICsgJ3ZhbHVlIHdpdGhpbiB0aGUgY2hpbGQgY29tcG9uZW50LCB5b3Ugc2hvdWxkIHBhc3MgaXQgYXMgYSBkaWZmZXJlbnQgJyArICdwcm9wLiAoaHR0cHM6Ly9yZWFjdGpzLm9yZy9saW5rL3NwZWNpYWwtcHJvcHMpJywgZGlzcGxheU5hbWUpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICB3YXJuQWJvdXRBY2Nlc3NpbmdLZXkuaXNSZWFjdFdhcm5pbmcgPSB0cnVlO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShwcm9wcywgJ2tleScsIHtcbiAgICAgIGdldDogd2FybkFib3V0QWNjZXNzaW5nS2V5LFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZGVmaW5lUmVmUHJvcFdhcm5pbmdHZXR0ZXIocHJvcHMsIGRpc3BsYXlOYW1lKSB7XG4gIHtcbiAgICB2YXIgd2FybkFib3V0QWNjZXNzaW5nUmVmID0gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKCFzcGVjaWFsUHJvcFJlZldhcm5pbmdTaG93bikge1xuICAgICAgICBzcGVjaWFsUHJvcFJlZldhcm5pbmdTaG93biA9IHRydWU7XG5cbiAgICAgICAgZXJyb3IoJyVzOiBgcmVmYCBpcyBub3QgYSBwcm9wLiBUcnlpbmcgdG8gYWNjZXNzIGl0IHdpbGwgcmVzdWx0ICcgKyAnaW4gYHVuZGVmaW5lZGAgYmVpbmcgcmV0dXJuZWQuIElmIHlvdSBuZWVkIHRvIGFjY2VzcyB0aGUgc2FtZSAnICsgJ3ZhbHVlIHdpdGhpbiB0aGUgY2hpbGQgY29tcG9uZW50LCB5b3Ugc2hvdWxkIHBhc3MgaXQgYXMgYSBkaWZmZXJlbnQgJyArICdwcm9wLiAoaHR0cHM6Ly9yZWFjdGpzLm9yZy9saW5rL3NwZWNpYWwtcHJvcHMpJywgZGlzcGxheU5hbWUpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICB3YXJuQWJvdXRBY2Nlc3NpbmdSZWYuaXNSZWFjdFdhcm5pbmcgPSB0cnVlO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShwcm9wcywgJ3JlZicsIHtcbiAgICAgIGdldDogd2FybkFib3V0QWNjZXNzaW5nUmVmLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH1cbn1cbi8qKlxuICogRmFjdG9yeSBtZXRob2QgdG8gY3JlYXRlIGEgbmV3IFJlYWN0IGVsZW1lbnQuIFRoaXMgbm8gbG9uZ2VyIGFkaGVyZXMgdG9cbiAqIHRoZSBjbGFzcyBwYXR0ZXJuLCBzbyBkbyBub3QgdXNlIG5ldyB0byBjYWxsIGl0LiBBbHNvLCBpbnN0YW5jZW9mIGNoZWNrXG4gKiB3aWxsIG5vdCB3b3JrLiBJbnN0ZWFkIHRlc3QgJCR0eXBlb2YgZmllbGQgYWdhaW5zdCBTeW1ib2wuZm9yKCdyZWFjdC5lbGVtZW50JykgdG8gY2hlY2tcbiAqIGlmIHNvbWV0aGluZyBpcyBhIFJlYWN0IEVsZW1lbnQuXG4gKlxuICogQHBhcmFtIHsqfSB0eXBlXG4gKiBAcGFyYW0geyp9IHByb3BzXG4gKiBAcGFyYW0geyp9IGtleVxuICogQHBhcmFtIHtzdHJpbmd8b2JqZWN0fSByZWZcbiAqIEBwYXJhbSB7Kn0gb3duZXJcbiAqIEBwYXJhbSB7Kn0gc2VsZiBBICp0ZW1wb3JhcnkqIGhlbHBlciB0byBkZXRlY3QgcGxhY2VzIHdoZXJlIGB0aGlzYCBpc1xuICogZGlmZmVyZW50IGZyb20gdGhlIGBvd25lcmAgd2hlbiBSZWFjdC5jcmVhdGVFbGVtZW50IGlzIGNhbGxlZCwgc28gdGhhdCB3ZVxuICogY2FuIHdhcm4uIFdlIHdhbnQgdG8gZ2V0IHJpZCBvZiBvd25lciBhbmQgcmVwbGFjZSBzdHJpbmcgYHJlZmBzIHdpdGggYXJyb3dcbiAqIGZ1bmN0aW9ucywgYW5kIGFzIGxvbmcgYXMgYHRoaXNgIGFuZCBvd25lciBhcmUgdGhlIHNhbWUsIHRoZXJlIHdpbGwgYmUgbm9cbiAqIGNoYW5nZSBpbiBiZWhhdmlvci5cbiAqIEBwYXJhbSB7Kn0gc291cmNlIEFuIGFubm90YXRpb24gb2JqZWN0IChhZGRlZCBieSBhIHRyYW5zcGlsZXIgb3Igb3RoZXJ3aXNlKVxuICogaW5kaWNhdGluZyBmaWxlbmFtZSwgbGluZSBudW1iZXIsIGFuZC9vciBvdGhlciBpbmZvcm1hdGlvbi5cbiAqIEBpbnRlcm5hbFxuICovXG5cblxudmFyIFJlYWN0RWxlbWVudCA9IGZ1bmN0aW9uICh0eXBlLCBrZXksIHJlZiwgc2VsZiwgc291cmNlLCBvd25lciwgcHJvcHMpIHtcbiAgdmFyIGVsZW1lbnQgPSB7XG4gICAgLy8gVGhpcyB0YWcgYWxsb3dzIHVzIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgYXMgYSBSZWFjdCBFbGVtZW50XG4gICAgJCR0eXBlb2Y6IFJFQUNUX0VMRU1FTlRfVFlQRSxcbiAgICAvLyBCdWlsdC1pbiBwcm9wZXJ0aWVzIHRoYXQgYmVsb25nIG9uIHRoZSBlbGVtZW50XG4gICAgdHlwZTogdHlwZSxcbiAgICBrZXk6IGtleSxcbiAgICByZWY6IHJlZixcbiAgICBwcm9wczogcHJvcHMsXG4gICAgLy8gUmVjb3JkIHRoZSBjb21wb25lbnQgcmVzcG9uc2libGUgZm9yIGNyZWF0aW5nIHRoaXMgZWxlbWVudC5cbiAgICBfb3duZXI6IG93bmVyXG4gIH07XG5cbiAge1xuICAgIC8vIFRoZSB2YWxpZGF0aW9uIGZsYWcgaXMgY3VycmVudGx5IG11dGF0aXZlLiBXZSBwdXQgaXQgb25cbiAgICAvLyBhbiBleHRlcm5hbCBiYWNraW5nIHN0b3JlIHNvIHRoYXQgd2UgY2FuIGZyZWV6ZSB0aGUgd2hvbGUgb2JqZWN0LlxuICAgIC8vIFRoaXMgY2FuIGJlIHJlcGxhY2VkIHdpdGggYSBXZWFrTWFwIG9uY2UgdGhleSBhcmUgaW1wbGVtZW50ZWQgaW5cbiAgICAvLyBjb21tb25seSB1c2VkIGRldmVsb3BtZW50IGVudmlyb25tZW50cy5cbiAgICBlbGVtZW50Ll9zdG9yZSA9IHt9OyAvLyBUbyBtYWtlIGNvbXBhcmluZyBSZWFjdEVsZW1lbnRzIGVhc2llciBmb3IgdGVzdGluZyBwdXJwb3Nlcywgd2UgbWFrZVxuICAgIC8vIHRoZSB2YWxpZGF0aW9uIGZsYWcgbm9uLWVudW1lcmFibGUgKHdoZXJlIHBvc3NpYmxlLCB3aGljaCBzaG91bGRcbiAgICAvLyBpbmNsdWRlIGV2ZXJ5IGVudmlyb25tZW50IHdlIHJ1biB0ZXN0cyBpbiksIHNvIHRoZSB0ZXN0IGZyYW1ld29ya1xuICAgIC8vIGlnbm9yZXMgaXQuXG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZWxlbWVudC5fc3RvcmUsICd2YWxpZGF0ZWQnLCB7XG4gICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgIHZhbHVlOiBmYWxzZVxuICAgIH0pOyAvLyBzZWxmIGFuZCBzb3VyY2UgYXJlIERFViBvbmx5IHByb3BlcnRpZXMuXG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZWxlbWVudCwgJ19zZWxmJywge1xuICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgd3JpdGFibGU6IGZhbHNlLFxuICAgICAgdmFsdWU6IHNlbGZcbiAgICB9KTsgLy8gVHdvIGVsZW1lbnRzIGNyZWF0ZWQgaW4gdHdvIGRpZmZlcmVudCBwbGFjZXMgc2hvdWxkIGJlIGNvbnNpZGVyZWRcbiAgICAvLyBlcXVhbCBmb3IgdGVzdGluZyBwdXJwb3NlcyBhbmQgdGhlcmVmb3JlIHdlIGhpZGUgaXQgZnJvbSBlbnVtZXJhdGlvbi5cblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlbGVtZW50LCAnX3NvdXJjZScsIHtcbiAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgIHdyaXRhYmxlOiBmYWxzZSxcbiAgICAgIHZhbHVlOiBzb3VyY2VcbiAgICB9KTtcblxuICAgIGlmIChPYmplY3QuZnJlZXplKSB7XG4gICAgICBPYmplY3QuZnJlZXplKGVsZW1lbnQucHJvcHMpO1xuICAgICAgT2JqZWN0LmZyZWV6ZShlbGVtZW50KTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZWxlbWVudDtcbn07XG4vKipcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3JmY3MvcHVsbC8xMDdcbiAqIEBwYXJhbSB7Kn0gdHlwZVxuICogQHBhcmFtIHtvYmplY3R9IHByb3BzXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5XG4gKi9cblxuZnVuY3Rpb24ganN4REVWKHR5cGUsIGNvbmZpZywgbWF5YmVLZXksIHNvdXJjZSwgc2VsZikge1xuICB7XG4gICAgdmFyIHByb3BOYW1lOyAvLyBSZXNlcnZlZCBuYW1lcyBhcmUgZXh0cmFjdGVkXG5cbiAgICB2YXIgcHJvcHMgPSB7fTtcbiAgICB2YXIga2V5ID0gbnVsbDtcbiAgICB2YXIgcmVmID0gbnVsbDsgLy8gQ3VycmVudGx5LCBrZXkgY2FuIGJlIHNwcmVhZCBpbiBhcyBhIHByb3AuIFRoaXMgY2F1c2VzIGEgcG90ZW50aWFsXG4gICAgLy8gaXNzdWUgaWYga2V5IGlzIGFsc28gZXhwbGljaXRseSBkZWNsYXJlZCAoaWUuIDxkaXYgey4uLnByb3BzfSBrZXk9XCJIaVwiIC8+XG4gICAgLy8gb3IgPGRpdiBrZXk9XCJIaVwiIHsuLi5wcm9wc30gLz4gKS4gV2Ugd2FudCB0byBkZXByZWNhdGUga2V5IHNwcmVhZCxcbiAgICAvLyBidXQgYXMgYW4gaW50ZXJtZWRpYXJ5IHN0ZXAsIHdlIHdpbGwgdXNlIGpzeERFViBmb3IgZXZlcnl0aGluZyBleGNlcHRcbiAgICAvLyA8ZGl2IHsuLi5wcm9wc30ga2V5PVwiSGlcIiAvPiwgYmVjYXVzZSB3ZSBhcmVuJ3QgY3VycmVudGx5IGFibGUgdG8gdGVsbCBpZlxuICAgIC8vIGtleSBpcyBleHBsaWNpdGx5IGRlY2xhcmVkIHRvIGJlIHVuZGVmaW5lZCBvciBub3QuXG5cbiAgICBpZiAobWF5YmVLZXkgIT09IHVuZGVmaW5lZCkge1xuICAgICAga2V5ID0gJycgKyBtYXliZUtleTtcbiAgICB9XG5cbiAgICBpZiAoaGFzVmFsaWRLZXkoY29uZmlnKSkge1xuICAgICAga2V5ID0gJycgKyBjb25maWcua2V5O1xuICAgIH1cblxuICAgIGlmIChoYXNWYWxpZFJlZihjb25maWcpKSB7XG4gICAgICByZWYgPSBjb25maWcucmVmO1xuICAgICAgd2FybklmU3RyaW5nUmVmQ2Fubm90QmVBdXRvQ29udmVydGVkKGNvbmZpZywgc2VsZik7XG4gICAgfSAvLyBSZW1haW5pbmcgcHJvcGVydGllcyBhcmUgYWRkZWQgdG8gYSBuZXcgcHJvcHMgb2JqZWN0XG5cblxuICAgIGZvciAocHJvcE5hbWUgaW4gY29uZmlnKSB7XG4gICAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChjb25maWcsIHByb3BOYW1lKSAmJiAhUkVTRVJWRURfUFJPUFMuaGFzT3duUHJvcGVydHkocHJvcE5hbWUpKSB7XG4gICAgICAgIHByb3BzW3Byb3BOYW1lXSA9IGNvbmZpZ1twcm9wTmFtZV07XG4gICAgICB9XG4gICAgfSAvLyBSZXNvbHZlIGRlZmF1bHQgcHJvcHNcblxuXG4gICAgaWYgKHR5cGUgJiYgdHlwZS5kZWZhdWx0UHJvcHMpIHtcbiAgICAgIHZhciBkZWZhdWx0UHJvcHMgPSB0eXBlLmRlZmF1bHRQcm9wcztcblxuICAgICAgZm9yIChwcm9wTmFtZSBpbiBkZWZhdWx0UHJvcHMpIHtcbiAgICAgICAgaWYgKHByb3BzW3Byb3BOYW1lXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgcHJvcHNbcHJvcE5hbWVdID0gZGVmYXVsdFByb3BzW3Byb3BOYW1lXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChrZXkgfHwgcmVmKSB7XG4gICAgICB2YXIgZGlzcGxheU5hbWUgPSB0eXBlb2YgdHlwZSA9PT0gJ2Z1bmN0aW9uJyA/IHR5cGUuZGlzcGxheU5hbWUgfHwgdHlwZS5uYW1lIHx8ICdVbmtub3duJyA6IHR5cGU7XG5cbiAgICAgIGlmIChrZXkpIHtcbiAgICAgICAgZGVmaW5lS2V5UHJvcFdhcm5pbmdHZXR0ZXIocHJvcHMsIGRpc3BsYXlOYW1lKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHJlZikge1xuICAgICAgICBkZWZpbmVSZWZQcm9wV2FybmluZ0dldHRlcihwcm9wcywgZGlzcGxheU5hbWUpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBSZWFjdEVsZW1lbnQodHlwZSwga2V5LCByZWYsIHNlbGYsIHNvdXJjZSwgUmVhY3RDdXJyZW50T3duZXIuY3VycmVudCwgcHJvcHMpO1xuICB9XG59XG5cbnZhciBSZWFjdEN1cnJlbnRPd25lciQxID0gUmVhY3RTaGFyZWRJbnRlcm5hbHMuUmVhY3RDdXJyZW50T3duZXI7XG52YXIgUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZSQxID0gUmVhY3RTaGFyZWRJbnRlcm5hbHMuUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZTtcblxuZnVuY3Rpb24gc2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQkMShlbGVtZW50KSB7XG4gIHtcbiAgICBpZiAoZWxlbWVudCkge1xuICAgICAgdmFyIG93bmVyID0gZWxlbWVudC5fb3duZXI7XG4gICAgICB2YXIgc3RhY2sgPSBkZXNjcmliZVVua25vd25FbGVtZW50VHlwZUZyYW1lSW5ERVYoZWxlbWVudC50eXBlLCBlbGVtZW50Ll9zb3VyY2UsIG93bmVyID8gb3duZXIudHlwZSA6IG51bGwpO1xuICAgICAgUmVhY3REZWJ1Z0N1cnJlbnRGcmFtZSQxLnNldEV4dHJhU3RhY2tGcmFtZShzdGFjayk7XG4gICAgfSBlbHNlIHtcbiAgICAgIFJlYWN0RGVidWdDdXJyZW50RnJhbWUkMS5zZXRFeHRyYVN0YWNrRnJhbWUobnVsbCk7XG4gICAgfVxuICB9XG59XG5cbnZhciBwcm9wVHlwZXNNaXNzcGVsbFdhcm5pbmdTaG93bjtcblxue1xuICBwcm9wVHlwZXNNaXNzcGVsbFdhcm5pbmdTaG93biA9IGZhbHNlO1xufVxuLyoqXG4gKiBWZXJpZmllcyB0aGUgb2JqZWN0IGlzIGEgUmVhY3RFbGVtZW50LlxuICogU2VlIGh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9yZWFjdC1hcGkuaHRtbCNpc3ZhbGlkZWxlbWVudFxuICogQHBhcmFtIHs/b2JqZWN0fSBvYmplY3RcbiAqIEByZXR1cm4ge2Jvb2xlYW59IFRydWUgaWYgYG9iamVjdGAgaXMgYSBSZWFjdEVsZW1lbnQuXG4gKiBAZmluYWxcbiAqL1xuXG5mdW5jdGlvbiBpc1ZhbGlkRWxlbWVudChvYmplY3QpIHtcbiAge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJiBvYmplY3QgIT09IG51bGwgJiYgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0RGVjbGFyYXRpb25FcnJvckFkZGVuZHVtKCkge1xuICB7XG4gICAgaWYgKFJlYWN0Q3VycmVudE93bmVyJDEuY3VycmVudCkge1xuICAgICAgdmFyIG5hbWUgPSBnZXRDb21wb25lbnROYW1lKFJlYWN0Q3VycmVudE93bmVyJDEuY3VycmVudC50eXBlKTtcblxuICAgICAgaWYgKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuICdcXG5cXG5DaGVjayB0aGUgcmVuZGVyIG1ldGhvZCBvZiBgJyArIG5hbWUgKyAnYC4nO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiAnJztcbiAgfVxufVxuXG5mdW5jdGlvbiBnZXRTb3VyY2VJbmZvRXJyb3JBZGRlbmR1bShzb3VyY2UpIHtcbiAge1xuICAgIGlmIChzb3VyY2UgIT09IHVuZGVmaW5lZCkge1xuICAgICAgdmFyIGZpbGVOYW1lID0gc291cmNlLmZpbGVOYW1lLnJlcGxhY2UoL14uKltcXFxcXFwvXS8sICcnKTtcbiAgICAgIHZhciBsaW5lTnVtYmVyID0gc291cmNlLmxpbmVOdW1iZXI7XG4gICAgICByZXR1cm4gJ1xcblxcbkNoZWNrIHlvdXIgY29kZSBhdCAnICsgZmlsZU5hbWUgKyAnOicgKyBsaW5lTnVtYmVyICsgJy4nO1xuICAgIH1cblxuICAgIHJldHVybiAnJztcbiAgfVxufVxuLyoqXG4gKiBXYXJuIGlmIHRoZXJlJ3Mgbm8ga2V5IGV4cGxpY2l0bHkgc2V0IG9uIGR5bmFtaWMgYXJyYXlzIG9mIGNoaWxkcmVuIG9yXG4gKiBvYmplY3Qga2V5cyBhcmUgbm90IHZhbGlkLiBUaGlzIGFsbG93cyB1cyB0byBrZWVwIHRyYWNrIG9mIGNoaWxkcmVuIGJldHdlZW5cbiAqIHVwZGF0ZXMuXG4gKi9cblxuXG52YXIgb3duZXJIYXNLZXlVc2VXYXJuaW5nID0ge307XG5cbmZ1bmN0aW9uIGdldEN1cnJlbnRDb21wb25lbnRFcnJvckluZm8ocGFyZW50VHlwZSkge1xuICB7XG4gICAgdmFyIGluZm8gPSBnZXREZWNsYXJhdGlvbkVycm9yQWRkZW5kdW0oKTtcblxuICAgIGlmICghaW5mbykge1xuICAgICAgdmFyIHBhcmVudE5hbWUgPSB0eXBlb2YgcGFyZW50VHlwZSA9PT0gJ3N0cmluZycgPyBwYXJlbnRUeXBlIDogcGFyZW50VHlwZS5kaXNwbGF5TmFtZSB8fCBwYXJlbnRUeXBlLm5hbWU7XG5cbiAgICAgIGlmIChwYXJlbnROYW1lKSB7XG4gICAgICAgIGluZm8gPSBcIlxcblxcbkNoZWNrIHRoZSB0b3AtbGV2ZWwgcmVuZGVyIGNhbGwgdXNpbmcgPFwiICsgcGFyZW50TmFtZSArIFwiPi5cIjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gaW5mbztcbiAgfVxufVxuLyoqXG4gKiBXYXJuIGlmIHRoZSBlbGVtZW50IGRvZXNuJ3QgaGF2ZSBhbiBleHBsaWNpdCBrZXkgYXNzaWduZWQgdG8gaXQuXG4gKiBUaGlzIGVsZW1lbnQgaXMgaW4gYW4gYXJyYXkuIFRoZSBhcnJheSBjb3VsZCBncm93IGFuZCBzaHJpbmsgb3IgYmVcbiAqIHJlb3JkZXJlZC4gQWxsIGNoaWxkcmVuIHRoYXQgaGF2ZW4ndCBhbHJlYWR5IGJlZW4gdmFsaWRhdGVkIGFyZSByZXF1aXJlZCB0b1xuICogaGF2ZSBhIFwia2V5XCIgcHJvcGVydHkgYXNzaWduZWQgdG8gaXQuIEVycm9yIHN0YXR1c2VzIGFyZSBjYWNoZWQgc28gYSB3YXJuaW5nXG4gKiB3aWxsIG9ubHkgYmUgc2hvd24gb25jZS5cbiAqXG4gKiBAaW50ZXJuYWxcbiAqIEBwYXJhbSB7UmVhY3RFbGVtZW50fSBlbGVtZW50IEVsZW1lbnQgdGhhdCByZXF1aXJlcyBhIGtleS5cbiAqIEBwYXJhbSB7Kn0gcGFyZW50VHlwZSBlbGVtZW50J3MgcGFyZW50J3MgdHlwZS5cbiAqL1xuXG5cbmZ1bmN0aW9uIHZhbGlkYXRlRXhwbGljaXRLZXkoZWxlbWVudCwgcGFyZW50VHlwZSkge1xuICB7XG4gICAgaWYgKCFlbGVtZW50Ll9zdG9yZSB8fCBlbGVtZW50Ll9zdG9yZS52YWxpZGF0ZWQgfHwgZWxlbWVudC5rZXkgIT0gbnVsbCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGVsZW1lbnQuX3N0b3JlLnZhbGlkYXRlZCA9IHRydWU7XG4gICAgdmFyIGN1cnJlbnRDb21wb25lbnRFcnJvckluZm8gPSBnZXRDdXJyZW50Q29tcG9uZW50RXJyb3JJbmZvKHBhcmVudFR5cGUpO1xuXG4gICAgaWYgKG93bmVySGFzS2V5VXNlV2FybmluZ1tjdXJyZW50Q29tcG9uZW50RXJyb3JJbmZvXSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIG93bmVySGFzS2V5VXNlV2FybmluZ1tjdXJyZW50Q29tcG9uZW50RXJyb3JJbmZvXSA9IHRydWU7IC8vIFVzdWFsbHkgdGhlIGN1cnJlbnQgb3duZXIgaXMgdGhlIG9mZmVuZGVyLCBidXQgaWYgaXQgYWNjZXB0cyBjaGlsZHJlbiBhcyBhXG4gICAgLy8gcHJvcGVydHksIGl0IG1heSBiZSB0aGUgY3JlYXRvciBvZiB0aGUgY2hpbGQgdGhhdCdzIHJlc3BvbnNpYmxlIGZvclxuICAgIC8vIGFzc2lnbmluZyBpdCBhIGtleS5cblxuICAgIHZhciBjaGlsZE93bmVyID0gJyc7XG5cbiAgICBpZiAoZWxlbWVudCAmJiBlbGVtZW50Ll9vd25lciAmJiBlbGVtZW50Ll9vd25lciAhPT0gUmVhY3RDdXJyZW50T3duZXIkMS5jdXJyZW50KSB7XG4gICAgICAvLyBHaXZlIHRoZSBjb21wb25lbnQgdGhhdCBvcmlnaW5hbGx5IGNyZWF0ZWQgdGhpcyBjaGlsZC5cbiAgICAgIGNoaWxkT3duZXIgPSBcIiBJdCB3YXMgcGFzc2VkIGEgY2hpbGQgZnJvbSBcIiArIGdldENvbXBvbmVudE5hbWUoZWxlbWVudC5fb3duZXIudHlwZSkgKyBcIi5cIjtcbiAgICB9XG5cbiAgICBzZXRDdXJyZW50bHlWYWxpZGF0aW5nRWxlbWVudCQxKGVsZW1lbnQpO1xuXG4gICAgZXJyb3IoJ0VhY2ggY2hpbGQgaW4gYSBsaXN0IHNob3VsZCBoYXZlIGEgdW5pcXVlIFwia2V5XCIgcHJvcC4nICsgJyVzJXMgU2VlIGh0dHBzOi8vcmVhY3Rqcy5vcmcvbGluay93YXJuaW5nLWtleXMgZm9yIG1vcmUgaW5mb3JtYXRpb24uJywgY3VycmVudENvbXBvbmVudEVycm9ySW5mbywgY2hpbGRPd25lcik7XG5cbiAgICBzZXRDdXJyZW50bHlWYWxpZGF0aW5nRWxlbWVudCQxKG51bGwpO1xuICB9XG59XG4vKipcbiAqIEVuc3VyZSB0aGF0IGV2ZXJ5IGVsZW1lbnQgZWl0aGVyIGlzIHBhc3NlZCBpbiBhIHN0YXRpYyBsb2NhdGlvbiwgaW4gYW5cbiAqIGFycmF5IHdpdGggYW4gZXhwbGljaXQga2V5cyBwcm9wZXJ0eSBkZWZpbmVkLCBvciBpbiBhbiBvYmplY3QgbGl0ZXJhbFxuICogd2l0aCB2YWxpZCBrZXkgcHJvcGVydHkuXG4gKlxuICogQGludGVybmFsXG4gKiBAcGFyYW0ge1JlYWN0Tm9kZX0gbm9kZSBTdGF0aWNhbGx5IHBhc3NlZCBjaGlsZCBvZiBhbnkgdHlwZS5cbiAqIEBwYXJhbSB7Kn0gcGFyZW50VHlwZSBub2RlJ3MgcGFyZW50J3MgdHlwZS5cbiAqL1xuXG5cbmZ1bmN0aW9uIHZhbGlkYXRlQ2hpbGRLZXlzKG5vZGUsIHBhcmVudFR5cGUpIHtcbiAge1xuICAgIGlmICh0eXBlb2Ygbm9kZSAhPT0gJ29iamVjdCcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheShub2RlKSkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBub2RlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBjaGlsZCA9IG5vZGVbaV07XG5cbiAgICAgICAgaWYgKGlzVmFsaWRFbGVtZW50KGNoaWxkKSkge1xuICAgICAgICAgIHZhbGlkYXRlRXhwbGljaXRLZXkoY2hpbGQsIHBhcmVudFR5cGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChpc1ZhbGlkRWxlbWVudChub2RlKSkge1xuICAgICAgLy8gVGhpcyBlbGVtZW50IHdhcyBwYXNzZWQgaW4gYSB2YWxpZCBsb2NhdGlvbi5cbiAgICAgIGlmIChub2RlLl9zdG9yZSkge1xuICAgICAgICBub2RlLl9zdG9yZS52YWxpZGF0ZWQgPSB0cnVlO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAobm9kZSkge1xuICAgICAgdmFyIGl0ZXJhdG9yRm4gPSBnZXRJdGVyYXRvckZuKG5vZGUpO1xuXG4gICAgICBpZiAodHlwZW9mIGl0ZXJhdG9yRm4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgLy8gRW50cnkgaXRlcmF0b3JzIHVzZWQgdG8gcHJvdmlkZSBpbXBsaWNpdCBrZXlzLFxuICAgICAgICAvLyBidXQgbm93IHdlIHByaW50IGEgc2VwYXJhdGUgd2FybmluZyBmb3IgdGhlbSBsYXRlci5cbiAgICAgICAgaWYgKGl0ZXJhdG9yRm4gIT09IG5vZGUuZW50cmllcykge1xuICAgICAgICAgIHZhciBpdGVyYXRvciA9IGl0ZXJhdG9yRm4uY2FsbChub2RlKTtcbiAgICAgICAgICB2YXIgc3RlcDtcblxuICAgICAgICAgIHdoaWxlICghKHN0ZXAgPSBpdGVyYXRvci5uZXh0KCkpLmRvbmUpIHtcbiAgICAgICAgICAgIGlmIChpc1ZhbGlkRWxlbWVudChzdGVwLnZhbHVlKSkge1xuICAgICAgICAgICAgICB2YWxpZGF0ZUV4cGxpY2l0S2V5KHN0ZXAudmFsdWUsIHBhcmVudFR5cGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuLyoqXG4gKiBHaXZlbiBhbiBlbGVtZW50LCB2YWxpZGF0ZSB0aGF0IGl0cyBwcm9wcyBmb2xsb3cgdGhlIHByb3BUeXBlcyBkZWZpbml0aW9uLFxuICogcHJvdmlkZWQgYnkgdGhlIHR5cGUuXG4gKlxuICogQHBhcmFtIHtSZWFjdEVsZW1lbnR9IGVsZW1lbnRcbiAqL1xuXG5cbmZ1bmN0aW9uIHZhbGlkYXRlUHJvcFR5cGVzKGVsZW1lbnQpIHtcbiAge1xuICAgIHZhciB0eXBlID0gZWxlbWVudC50eXBlO1xuXG4gICAgaWYgKHR5cGUgPT09IG51bGwgfHwgdHlwZSA9PT0gdW5kZWZpbmVkIHx8IHR5cGVvZiB0eXBlID09PSAnc3RyaW5nJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBwcm9wVHlwZXM7XG5cbiAgICBpZiAodHlwZW9mIHR5cGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHByb3BUeXBlcyA9IHR5cGUucHJvcFR5cGVzO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIHR5cGUgPT09ICdvYmplY3QnICYmICh0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9GT1JXQVJEX1JFRl9UWVBFIHx8IC8vIE5vdGU6IE1lbW8gb25seSBjaGVja3Mgb3V0ZXIgcHJvcHMgaGVyZS5cbiAgICAvLyBJbm5lciBwcm9wcyBhcmUgY2hlY2tlZCBpbiB0aGUgcmVjb25jaWxlci5cbiAgICB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9NRU1PX1RZUEUpKSB7XG4gICAgICBwcm9wVHlwZXMgPSB0eXBlLnByb3BUeXBlcztcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChwcm9wVHlwZXMpIHtcbiAgICAgIC8vIEludGVudGlvbmFsbHkgaW5zaWRlIHRvIGF2b2lkIHRyaWdnZXJpbmcgbGF6eSBpbml0aWFsaXplcnM6XG4gICAgICB2YXIgbmFtZSA9IGdldENvbXBvbmVudE5hbWUodHlwZSk7XG4gICAgICBjaGVja1Byb3BUeXBlcyhwcm9wVHlwZXMsIGVsZW1lbnQucHJvcHMsICdwcm9wJywgbmFtZSwgZWxlbWVudCk7XG4gICAgfSBlbHNlIGlmICh0eXBlLlByb3BUeXBlcyAhPT0gdW5kZWZpbmVkICYmICFwcm9wVHlwZXNNaXNzcGVsbFdhcm5pbmdTaG93bikge1xuICAgICAgcHJvcFR5cGVzTWlzc3BlbGxXYXJuaW5nU2hvd24gPSB0cnVlOyAvLyBJbnRlbnRpb25hbGx5IGluc2lkZSB0byBhdm9pZCB0cmlnZ2VyaW5nIGxhenkgaW5pdGlhbGl6ZXJzOlxuXG4gICAgICB2YXIgX25hbWUgPSBnZXRDb21wb25lbnROYW1lKHR5cGUpO1xuXG4gICAgICBlcnJvcignQ29tcG9uZW50ICVzIGRlY2xhcmVkIGBQcm9wVHlwZXNgIGluc3RlYWQgb2YgYHByb3BUeXBlc2AuIERpZCB5b3UgbWlzc3BlbGwgdGhlIHByb3BlcnR5IGFzc2lnbm1lbnQ/JywgX25hbWUgfHwgJ1Vua25vd24nKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHR5cGUuZ2V0RGVmYXVsdFByb3BzID09PSAnZnVuY3Rpb24nICYmICF0eXBlLmdldERlZmF1bHRQcm9wcy5pc1JlYWN0Q2xhc3NBcHByb3ZlZCkge1xuICAgICAgZXJyb3IoJ2dldERlZmF1bHRQcm9wcyBpcyBvbmx5IHVzZWQgb24gY2xhc3NpYyBSZWFjdC5jcmVhdGVDbGFzcyAnICsgJ2RlZmluaXRpb25zLiBVc2UgYSBzdGF0aWMgcHJvcGVydHkgbmFtZWQgYGRlZmF1bHRQcm9wc2AgaW5zdGVhZC4nKTtcbiAgICB9XG4gIH1cbn1cbi8qKlxuICogR2l2ZW4gYSBmcmFnbWVudCwgdmFsaWRhdGUgdGhhdCBpdCBjYW4gb25seSBiZSBwcm92aWRlZCB3aXRoIGZyYWdtZW50IHByb3BzXG4gKiBAcGFyYW0ge1JlYWN0RWxlbWVudH0gZnJhZ21lbnRcbiAqL1xuXG5cbmZ1bmN0aW9uIHZhbGlkYXRlRnJhZ21lbnRQcm9wcyhmcmFnbWVudCkge1xuICB7XG4gICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhmcmFnbWVudC5wcm9wcyk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuXG4gICAgICBpZiAoa2V5ICE9PSAnY2hpbGRyZW4nICYmIGtleSAhPT0gJ2tleScpIHtcbiAgICAgICAgc2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQkMShmcmFnbWVudCk7XG5cbiAgICAgICAgZXJyb3IoJ0ludmFsaWQgcHJvcCBgJXNgIHN1cHBsaWVkIHRvIGBSZWFjdC5GcmFnbWVudGAuICcgKyAnUmVhY3QuRnJhZ21lbnQgY2FuIG9ubHkgaGF2ZSBga2V5YCBhbmQgYGNoaWxkcmVuYCBwcm9wcy4nLCBrZXkpO1xuXG4gICAgICAgIHNldEN1cnJlbnRseVZhbGlkYXRpbmdFbGVtZW50JDEobnVsbCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChmcmFnbWVudC5yZWYgIT09IG51bGwpIHtcbiAgICAgIHNldEN1cnJlbnRseVZhbGlkYXRpbmdFbGVtZW50JDEoZnJhZ21lbnQpO1xuXG4gICAgICBlcnJvcignSW52YWxpZCBhdHRyaWJ1dGUgYHJlZmAgc3VwcGxpZWQgdG8gYFJlYWN0LkZyYWdtZW50YC4nKTtcblxuICAgICAgc2V0Q3VycmVudGx5VmFsaWRhdGluZ0VsZW1lbnQkMShudWxsKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24ganN4V2l0aFZhbGlkYXRpb24odHlwZSwgcHJvcHMsIGtleSwgaXNTdGF0aWNDaGlsZHJlbiwgc291cmNlLCBzZWxmKSB7XG4gIHtcbiAgICB2YXIgdmFsaWRUeXBlID0gaXNWYWxpZEVsZW1lbnRUeXBlKHR5cGUpOyAvLyBXZSB3YXJuIGluIHRoaXMgY2FzZSBidXQgZG9uJ3QgdGhyb3cuIFdlIGV4cGVjdCB0aGUgZWxlbWVudCBjcmVhdGlvbiB0b1xuICAgIC8vIHN1Y2NlZWQgYW5kIHRoZXJlIHdpbGwgbGlrZWx5IGJlIGVycm9ycyBpbiByZW5kZXIuXG5cbiAgICBpZiAoIXZhbGlkVHlwZSkge1xuICAgICAgdmFyIGluZm8gPSAnJztcblxuICAgICAgaWYgKHR5cGUgPT09IHVuZGVmaW5lZCB8fCB0eXBlb2YgdHlwZSA9PT0gJ29iamVjdCcgJiYgdHlwZSAhPT0gbnVsbCAmJiBPYmplY3Qua2V5cyh0eXBlKS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgaW5mbyArPSAnIFlvdSBsaWtlbHkgZm9yZ290IHRvIGV4cG9ydCB5b3VyIGNvbXBvbmVudCBmcm9tIHRoZSBmaWxlICcgKyBcIml0J3MgZGVmaW5lZCBpbiwgb3IgeW91IG1pZ2h0IGhhdmUgbWl4ZWQgdXAgZGVmYXVsdCBhbmQgbmFtZWQgaW1wb3J0cy5cIjtcbiAgICAgIH1cblxuICAgICAgdmFyIHNvdXJjZUluZm8gPSBnZXRTb3VyY2VJbmZvRXJyb3JBZGRlbmR1bShzb3VyY2UpO1xuXG4gICAgICBpZiAoc291cmNlSW5mbykge1xuICAgICAgICBpbmZvICs9IHNvdXJjZUluZm87XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpbmZvICs9IGdldERlY2xhcmF0aW9uRXJyb3JBZGRlbmR1bSgpO1xuICAgICAgfVxuXG4gICAgICB2YXIgdHlwZVN0cmluZztcblxuICAgICAgaWYgKHR5cGUgPT09IG51bGwpIHtcbiAgICAgICAgdHlwZVN0cmluZyA9ICdudWxsJztcbiAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheSh0eXBlKSkge1xuICAgICAgICB0eXBlU3RyaW5nID0gJ2FycmF5JztcbiAgICAgIH0gZWxzZSBpZiAodHlwZSAhPT0gdW5kZWZpbmVkICYmIHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX0VMRU1FTlRfVFlQRSkge1xuICAgICAgICB0eXBlU3RyaW5nID0gXCI8XCIgKyAoZ2V0Q29tcG9uZW50TmFtZSh0eXBlLnR5cGUpIHx8ICdVbmtub3duJykgKyBcIiAvPlwiO1xuICAgICAgICBpbmZvID0gJyBEaWQgeW91IGFjY2lkZW50YWxseSBleHBvcnQgYSBKU1ggbGl0ZXJhbCBpbnN0ZWFkIG9mIGEgY29tcG9uZW50Pyc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0eXBlU3RyaW5nID0gdHlwZW9mIHR5cGU7XG4gICAgICB9XG5cbiAgICAgIGVycm9yKCdSZWFjdC5qc3g6IHR5cGUgaXMgaW52YWxpZCAtLSBleHBlY3RlZCBhIHN0cmluZyAoZm9yICcgKyAnYnVpbHQtaW4gY29tcG9uZW50cykgb3IgYSBjbGFzcy9mdW5jdGlvbiAoZm9yIGNvbXBvc2l0ZSAnICsgJ2NvbXBvbmVudHMpIGJ1dCBnb3Q6ICVzLiVzJywgdHlwZVN0cmluZywgaW5mbyk7XG4gICAgfVxuXG4gICAgdmFyIGVsZW1lbnQgPSBqc3hERVYodHlwZSwgcHJvcHMsIGtleSwgc291cmNlLCBzZWxmKTsgLy8gVGhlIHJlc3VsdCBjYW4gYmUgbnVsbGlzaCBpZiBhIG1vY2sgb3IgYSBjdXN0b20gZnVuY3Rpb24gaXMgdXNlZC5cbiAgICAvLyBUT0RPOiBEcm9wIHRoaXMgd2hlbiB0aGVzZSBhcmUgbm8gbG9uZ2VyIGFsbG93ZWQgYXMgdGhlIHR5cGUgYXJndW1lbnQuXG5cbiAgICBpZiAoZWxlbWVudCA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gZWxlbWVudDtcbiAgICB9IC8vIFNraXAga2V5IHdhcm5pbmcgaWYgdGhlIHR5cGUgaXNuJ3QgdmFsaWQgc2luY2Ugb3VyIGtleSB2YWxpZGF0aW9uIGxvZ2ljXG4gICAgLy8gZG9lc24ndCBleHBlY3QgYSBub24tc3RyaW5nL2Z1bmN0aW9uIHR5cGUgYW5kIGNhbiB0aHJvdyBjb25mdXNpbmcgZXJyb3JzLlxuICAgIC8vIFdlIGRvbid0IHdhbnQgZXhjZXB0aW9uIGJlaGF2aW9yIHRvIGRpZmZlciBiZXR3ZWVuIGRldiBhbmQgcHJvZC5cbiAgICAvLyAoUmVuZGVyaW5nIHdpbGwgdGhyb3cgd2l0aCBhIGhlbHBmdWwgbWVzc2FnZSBhbmQgYXMgc29vbiBhcyB0aGUgdHlwZSBpc1xuICAgIC8vIGZpeGVkLCB0aGUga2V5IHdhcm5pbmdzIHdpbGwgYXBwZWFyLilcblxuXG4gICAgaWYgKHZhbGlkVHlwZSkge1xuICAgICAgdmFyIGNoaWxkcmVuID0gcHJvcHMuY2hpbGRyZW47XG5cbiAgICAgIGlmIChjaGlsZHJlbiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGlmIChpc1N0YXRpY0NoaWxkcmVuKSB7XG4gICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgIHZhbGlkYXRlQ2hpbGRLZXlzKGNoaWxkcmVuW2ldLCB0eXBlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKE9iamVjdC5mcmVlemUpIHtcbiAgICAgICAgICAgICAgT2JqZWN0LmZyZWV6ZShjaGlsZHJlbik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGVycm9yKCdSZWFjdC5qc3g6IFN0YXRpYyBjaGlsZHJlbiBzaG91bGQgYWx3YXlzIGJlIGFuIGFycmF5LiAnICsgJ1lvdSBhcmUgbGlrZWx5IGV4cGxpY2l0bHkgY2FsbGluZyBSZWFjdC5qc3hzIG9yIFJlYWN0LmpzeERFVi4gJyArICdVc2UgdGhlIEJhYmVsIHRyYW5zZm9ybSBpbnN0ZWFkLicpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YWxpZGF0ZUNoaWxkS2V5cyhjaGlsZHJlbiwgdHlwZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodHlwZSA9PT0gZXhwb3J0cy5GcmFnbWVudCkge1xuICAgICAgdmFsaWRhdGVGcmFnbWVudFByb3BzKGVsZW1lbnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YWxpZGF0ZVByb3BUeXBlcyhlbGVtZW50KTtcbiAgICB9XG5cbiAgICByZXR1cm4gZWxlbWVudDtcbiAgfVxufSAvLyBUaGVzZSB0d28gZnVuY3Rpb25zIGV4aXN0IHRvIHN0aWxsIGdldCBjaGlsZCB3YXJuaW5ncyBpbiBkZXZcblxudmFyIGpzeERFViQxID0gIGpzeFdpdGhWYWxpZGF0aW9uIDtcblxuZXhwb3J0cy5qc3hERVYgPSBqc3hERVYkMTtcbiAgfSkoKTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJmdW5jdGlvbiBjcmVhdGVUaHVua01pZGRsZXdhcmUoZXh0cmFBcmd1bWVudCkge1xuICByZXR1cm4gZnVuY3Rpb24gKF9yZWYpIHtcbiAgICB2YXIgZGlzcGF0Y2ggPSBfcmVmLmRpc3BhdGNoLFxuICAgICAgICBnZXRTdGF0ZSA9IF9yZWYuZ2V0U3RhdGU7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChuZXh0KSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gKGFjdGlvbikge1xuICAgICAgICBpZiAodHlwZW9mIGFjdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIHJldHVybiBhY3Rpb24oZGlzcGF0Y2gsIGdldFN0YXRlLCBleHRyYUFyZ3VtZW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBuZXh0KGFjdGlvbik7XG4gICAgICB9O1xuICAgIH07XG4gIH07XG59XG5cbnZhciB0aHVuayA9IGNyZWF0ZVRodW5rTWlkZGxld2FyZSgpO1xudGh1bmsud2l0aEV4dHJhQXJndW1lbnQgPSBjcmVhdGVUaHVua01pZGRsZXdhcmU7XG5cbmV4cG9ydCBkZWZhdWx0IHRodW5rOyIsImltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDInO1xuXG4vKipcbiAqIEFkYXB0ZWQgZnJvbSBSZWFjdDogaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2Jsb2IvbWFzdGVyL3BhY2thZ2VzL3NoYXJlZC9mb3JtYXRQcm9kRXJyb3JNZXNzYWdlLmpzXG4gKlxuICogRG8gbm90IHJlcXVpcmUgdGhpcyBtb2R1bGUgZGlyZWN0bHkhIFVzZSBub3JtYWwgdGhyb3cgZXJyb3IgY2FsbHMuIFRoZXNlIG1lc3NhZ2VzIHdpbGwgYmUgcmVwbGFjZWQgd2l0aCBlcnJvciBjb2Rlc1xuICogZHVyaW5nIGJ1aWxkLlxuICogQHBhcmFtIHtudW1iZXJ9IGNvZGVcbiAqL1xuZnVuY3Rpb24gZm9ybWF0UHJvZEVycm9yTWVzc2FnZShjb2RlKSB7XG4gIHJldHVybiBcIk1pbmlmaWVkIFJlZHV4IGVycm9yICNcIiArIGNvZGUgKyBcIjsgdmlzaXQgaHR0cHM6Ly9yZWR1eC5qcy5vcmcvRXJyb3JzP2NvZGU9XCIgKyBjb2RlICsgXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgXCIgKyAndXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycy4gJztcbn1cblxuLy8gSW5saW5lZCB2ZXJzaW9uIG9mIHRoZSBgc3ltYm9sLW9ic2VydmFibGVgIHBvbHlmaWxsXG52YXIgJCRvYnNlcnZhYmxlID0gKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgU3ltYm9sLm9ic2VydmFibGUgfHwgJ0BAb2JzZXJ2YWJsZSc7XG59KSgpO1xuXG4vKipcbiAqIFRoZXNlIGFyZSBwcml2YXRlIGFjdGlvbiB0eXBlcyByZXNlcnZlZCBieSBSZWR1eC5cbiAqIEZvciBhbnkgdW5rbm93biBhY3Rpb25zLCB5b3UgbXVzdCByZXR1cm4gdGhlIGN1cnJlbnQgc3RhdGUuXG4gKiBJZiB0aGUgY3VycmVudCBzdGF0ZSBpcyB1bmRlZmluZWQsIHlvdSBtdXN0IHJldHVybiB0aGUgaW5pdGlhbCBzdGF0ZS5cbiAqIERvIG5vdCByZWZlcmVuY2UgdGhlc2UgYWN0aW9uIHR5cGVzIGRpcmVjdGx5IGluIHlvdXIgY29kZS5cbiAqL1xudmFyIHJhbmRvbVN0cmluZyA9IGZ1bmN0aW9uIHJhbmRvbVN0cmluZygpIHtcbiAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cmluZyg3KS5zcGxpdCgnJykuam9pbignLicpO1xufTtcblxudmFyIEFjdGlvblR5cGVzID0ge1xuICBJTklUOiBcIkBAcmVkdXgvSU5JVFwiICsgcmFuZG9tU3RyaW5nKCksXG4gIFJFUExBQ0U6IFwiQEByZWR1eC9SRVBMQUNFXCIgKyByYW5kb21TdHJpbmcoKSxcbiAgUFJPQkVfVU5LTk9XTl9BQ1RJT046IGZ1bmN0aW9uIFBST0JFX1VOS05PV05fQUNUSU9OKCkge1xuICAgIHJldHVybiBcIkBAcmVkdXgvUFJPQkVfVU5LTk9XTl9BQ1RJT05cIiArIHJhbmRvbVN0cmluZygpO1xuICB9XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7YW55fSBvYmogVGhlIG9iamVjdCB0byBpbnNwZWN0LlxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIGFyZ3VtZW50IGFwcGVhcnMgdG8gYmUgYSBwbGFpbiBvYmplY3QuXG4gKi9cbmZ1bmN0aW9uIGlzUGxhaW5PYmplY3Qob2JqKSB7XG4gIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0JyB8fCBvYmogPT09IG51bGwpIHJldHVybiBmYWxzZTtcbiAgdmFyIHByb3RvID0gb2JqO1xuXG4gIHdoaWxlIChPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG8pICE9PSBudWxsKSB7XG4gICAgcHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG8pO1xuICB9XG5cbiAgcmV0dXJuIE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmopID09PSBwcm90bztcbn1cblxuLy8gSW5saW5lZCAvIHNob3J0ZW5lZCB2ZXJzaW9uIG9mIGBraW5kT2ZgIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2pvbnNjaGxpbmtlcnQva2luZC1vZlxuZnVuY3Rpb24gbWluaUtpbmRPZih2YWwpIHtcbiAgaWYgKHZhbCA9PT0gdm9pZCAwKSByZXR1cm4gJ3VuZGVmaW5lZCc7XG4gIGlmICh2YWwgPT09IG51bGwpIHJldHVybiAnbnVsbCc7XG4gIHZhciB0eXBlID0gdHlwZW9mIHZhbDtcblxuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlICdib29sZWFuJzpcbiAgICBjYXNlICdzdHJpbmcnOlxuICAgIGNhc2UgJ251bWJlcic6XG4gICAgY2FzZSAnc3ltYm9sJzpcbiAgICBjYXNlICdmdW5jdGlvbic6XG4gICAgICB7XG4gICAgICAgIHJldHVybiB0eXBlO1xuICAgICAgfVxuICB9XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsKSkgcmV0dXJuICdhcnJheSc7XG4gIGlmIChpc0RhdGUodmFsKSkgcmV0dXJuICdkYXRlJztcbiAgaWYgKGlzRXJyb3IodmFsKSkgcmV0dXJuICdlcnJvcic7XG4gIHZhciBjb25zdHJ1Y3Rvck5hbWUgPSBjdG9yTmFtZSh2YWwpO1xuXG4gIHN3aXRjaCAoY29uc3RydWN0b3JOYW1lKSB7XG4gICAgY2FzZSAnU3ltYm9sJzpcbiAgICBjYXNlICdQcm9taXNlJzpcbiAgICBjYXNlICdXZWFrTWFwJzpcbiAgICBjYXNlICdXZWFrU2V0JzpcbiAgICBjYXNlICdNYXAnOlxuICAgIGNhc2UgJ1NldCc6XG4gICAgICByZXR1cm4gY29uc3RydWN0b3JOYW1lO1xuICB9IC8vIG90aGVyXG5cblxuICByZXR1cm4gdHlwZS5zbGljZSg4LCAtMSkudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9cXHMvZywgJycpO1xufVxuXG5mdW5jdGlvbiBjdG9yTmFtZSh2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwuY29uc3RydWN0b3IgPT09ICdmdW5jdGlvbicgPyB2YWwuY29uc3RydWN0b3IubmFtZSA6IG51bGw7XG59XG5cbmZ1bmN0aW9uIGlzRXJyb3IodmFsKSB7XG4gIHJldHVybiB2YWwgaW5zdGFuY2VvZiBFcnJvciB8fCB0eXBlb2YgdmFsLm1lc3NhZ2UgPT09ICdzdHJpbmcnICYmIHZhbC5jb25zdHJ1Y3RvciAmJiB0eXBlb2YgdmFsLmNvbnN0cnVjdG9yLnN0YWNrVHJhY2VMaW1pdCA9PT0gJ251bWJlcic7XG59XG5cbmZ1bmN0aW9uIGlzRGF0ZSh2YWwpIHtcbiAgaWYgKHZhbCBpbnN0YW5jZW9mIERhdGUpIHJldHVybiB0cnVlO1xuICByZXR1cm4gdHlwZW9mIHZhbC50b0RhdGVTdHJpbmcgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIHZhbC5nZXREYXRlID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiB2YWwuc2V0RGF0ZSA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuZnVuY3Rpb24ga2luZE9mKHZhbCkge1xuICB2YXIgdHlwZU9mVmFsID0gdHlwZW9mIHZhbDtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIHR5cGVPZlZhbCA9IG1pbmlLaW5kT2YodmFsKTtcbiAgfVxuXG4gIHJldHVybiB0eXBlT2ZWYWw7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIFJlZHV4IHN0b3JlIHRoYXQgaG9sZHMgdGhlIHN0YXRlIHRyZWUuXG4gKiBUaGUgb25seSB3YXkgdG8gY2hhbmdlIHRoZSBkYXRhIGluIHRoZSBzdG9yZSBpcyB0byBjYWxsIGBkaXNwYXRjaCgpYCBvbiBpdC5cbiAqXG4gKiBUaGVyZSBzaG91bGQgb25seSBiZSBhIHNpbmdsZSBzdG9yZSBpbiB5b3VyIGFwcC4gVG8gc3BlY2lmeSBob3cgZGlmZmVyZW50XG4gKiBwYXJ0cyBvZiB0aGUgc3RhdGUgdHJlZSByZXNwb25kIHRvIGFjdGlvbnMsIHlvdSBtYXkgY29tYmluZSBzZXZlcmFsIHJlZHVjZXJzXG4gKiBpbnRvIGEgc2luZ2xlIHJlZHVjZXIgZnVuY3Rpb24gYnkgdXNpbmcgYGNvbWJpbmVSZWR1Y2Vyc2AuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVkdWNlciBBIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyB0aGUgbmV4dCBzdGF0ZSB0cmVlLCBnaXZlblxuICogdGhlIGN1cnJlbnQgc3RhdGUgdHJlZSBhbmQgdGhlIGFjdGlvbiB0byBoYW5kbGUuXG4gKlxuICogQHBhcmFtIHthbnl9IFtwcmVsb2FkZWRTdGF0ZV0gVGhlIGluaXRpYWwgc3RhdGUuIFlvdSBtYXkgb3B0aW9uYWxseSBzcGVjaWZ5IGl0XG4gKiB0byBoeWRyYXRlIHRoZSBzdGF0ZSBmcm9tIHRoZSBzZXJ2ZXIgaW4gdW5pdmVyc2FsIGFwcHMsIG9yIHRvIHJlc3RvcmUgYVxuICogcHJldmlvdXNseSBzZXJpYWxpemVkIHVzZXIgc2Vzc2lvbi5cbiAqIElmIHlvdSB1c2UgYGNvbWJpbmVSZWR1Y2Vyc2AgdG8gcHJvZHVjZSB0aGUgcm9vdCByZWR1Y2VyIGZ1bmN0aW9uLCB0aGlzIG11c3QgYmVcbiAqIGFuIG9iamVjdCB3aXRoIHRoZSBzYW1lIHNoYXBlIGFzIGBjb21iaW5lUmVkdWNlcnNgIGtleXMuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gW2VuaGFuY2VyXSBUaGUgc3RvcmUgZW5oYW5jZXIuIFlvdSBtYXkgb3B0aW9uYWxseSBzcGVjaWZ5IGl0XG4gKiB0byBlbmhhbmNlIHRoZSBzdG9yZSB3aXRoIHRoaXJkLXBhcnR5IGNhcGFiaWxpdGllcyBzdWNoIGFzIG1pZGRsZXdhcmUsXG4gKiB0aW1lIHRyYXZlbCwgcGVyc2lzdGVuY2UsIGV0Yy4gVGhlIG9ubHkgc3RvcmUgZW5oYW5jZXIgdGhhdCBzaGlwcyB3aXRoIFJlZHV4XG4gKiBpcyBgYXBwbHlNaWRkbGV3YXJlKClgLlxuICpcbiAqIEByZXR1cm5zIHtTdG9yZX0gQSBSZWR1eCBzdG9yZSB0aGF0IGxldHMgeW91IHJlYWQgdGhlIHN0YXRlLCBkaXNwYXRjaCBhY3Rpb25zXG4gKiBhbmQgc3Vic2NyaWJlIHRvIGNoYW5nZXMuXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlU3RvcmUocmVkdWNlciwgcHJlbG9hZGVkU3RhdGUsIGVuaGFuY2VyKSB7XG4gIHZhciBfcmVmMjtcblxuICBpZiAodHlwZW9mIHByZWxvYWRlZFN0YXRlID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBlbmhhbmNlciA9PT0gJ2Z1bmN0aW9uJyB8fCB0eXBlb2YgZW5oYW5jZXIgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGFyZ3VtZW50c1szXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDApIDogJ0l0IGxvb2tzIGxpa2UgeW91IGFyZSBwYXNzaW5nIHNldmVyYWwgc3RvcmUgZW5oYW5jZXJzIHRvICcgKyAnY3JlYXRlU3RvcmUoKS4gVGhpcyBpcyBub3Qgc3VwcG9ydGVkLiBJbnN0ZWFkLCBjb21wb3NlIHRoZW0gJyArICd0b2dldGhlciB0byBhIHNpbmdsZSBmdW5jdGlvbi4gU2VlIGh0dHBzOi8vcmVkdXguanMub3JnL3R1dG9yaWFscy9mdW5kYW1lbnRhbHMvcGFydC00LXN0b3JlI2NyZWF0aW5nLWEtc3RvcmUtd2l0aC1lbmhhbmNlcnMgZm9yIGFuIGV4YW1wbGUuJyk7XG4gIH1cblxuICBpZiAodHlwZW9mIHByZWxvYWRlZFN0YXRlID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBlbmhhbmNlciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBlbmhhbmNlciA9IHByZWxvYWRlZFN0YXRlO1xuICAgIHByZWxvYWRlZFN0YXRlID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBlbmhhbmNlciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBpZiAodHlwZW9mIGVuaGFuY2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSgxKSA6IFwiRXhwZWN0ZWQgdGhlIGVuaGFuY2VyIHRvIGJlIGEgZnVuY3Rpb24uIEluc3RlYWQsIHJlY2VpdmVkOiAnXCIgKyBraW5kT2YoZW5oYW5jZXIpICsgXCInXCIpO1xuICAgIH1cblxuICAgIHJldHVybiBlbmhhbmNlcihjcmVhdGVTdG9yZSkocmVkdWNlciwgcHJlbG9hZGVkU3RhdGUpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiByZWR1Y2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoMikgOiBcIkV4cGVjdGVkIHRoZSByb290IHJlZHVjZXIgdG8gYmUgYSBmdW5jdGlvbi4gSW5zdGVhZCwgcmVjZWl2ZWQ6ICdcIiArIGtpbmRPZihyZWR1Y2VyKSArIFwiJ1wiKTtcbiAgfVxuXG4gIHZhciBjdXJyZW50UmVkdWNlciA9IHJlZHVjZXI7XG4gIHZhciBjdXJyZW50U3RhdGUgPSBwcmVsb2FkZWRTdGF0ZTtcbiAgdmFyIGN1cnJlbnRMaXN0ZW5lcnMgPSBbXTtcbiAgdmFyIG5leHRMaXN0ZW5lcnMgPSBjdXJyZW50TGlzdGVuZXJzO1xuICB2YXIgaXNEaXNwYXRjaGluZyA9IGZhbHNlO1xuICAvKipcbiAgICogVGhpcyBtYWtlcyBhIHNoYWxsb3cgY29weSBvZiBjdXJyZW50TGlzdGVuZXJzIHNvIHdlIGNhbiB1c2VcbiAgICogbmV4dExpc3RlbmVycyBhcyBhIHRlbXBvcmFyeSBsaXN0IHdoaWxlIGRpc3BhdGNoaW5nLlxuICAgKlxuICAgKiBUaGlzIHByZXZlbnRzIGFueSBidWdzIGFyb3VuZCBjb25zdW1lcnMgY2FsbGluZ1xuICAgKiBzdWJzY3JpYmUvdW5zdWJzY3JpYmUgaW4gdGhlIG1pZGRsZSBvZiBhIGRpc3BhdGNoLlxuICAgKi9cblxuICBmdW5jdGlvbiBlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzKCkge1xuICAgIGlmIChuZXh0TGlzdGVuZXJzID09PSBjdXJyZW50TGlzdGVuZXJzKSB7XG4gICAgICBuZXh0TGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycy5zbGljZSgpO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICogUmVhZHMgdGhlIHN0YXRlIHRyZWUgbWFuYWdlZCBieSB0aGUgc3RvcmUuXG4gICAqXG4gICAqIEByZXR1cm5zIHthbnl9IFRoZSBjdXJyZW50IHN0YXRlIHRyZWUgb2YgeW91ciBhcHBsaWNhdGlvbi5cbiAgICovXG5cblxuICBmdW5jdGlvbiBnZXRTdGF0ZSgpIHtcbiAgICBpZiAoaXNEaXNwYXRjaGluZykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoMykgOiAnWW91IG1heSBub3QgY2FsbCBzdG9yZS5nZXRTdGF0ZSgpIHdoaWxlIHRoZSByZWR1Y2VyIGlzIGV4ZWN1dGluZy4gJyArICdUaGUgcmVkdWNlciBoYXMgYWxyZWFkeSByZWNlaXZlZCB0aGUgc3RhdGUgYXMgYW4gYXJndW1lbnQuICcgKyAnUGFzcyBpdCBkb3duIGZyb20gdGhlIHRvcCByZWR1Y2VyIGluc3RlYWQgb2YgcmVhZGluZyBpdCBmcm9tIHRoZSBzdG9yZS4nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY3VycmVudFN0YXRlO1xuICB9XG4gIC8qKlxuICAgKiBBZGRzIGEgY2hhbmdlIGxpc3RlbmVyLiBJdCB3aWxsIGJlIGNhbGxlZCBhbnkgdGltZSBhbiBhY3Rpb24gaXMgZGlzcGF0Y2hlZCxcbiAgICogYW5kIHNvbWUgcGFydCBvZiB0aGUgc3RhdGUgdHJlZSBtYXkgcG90ZW50aWFsbHkgaGF2ZSBjaGFuZ2VkLiBZb3UgbWF5IHRoZW5cbiAgICogY2FsbCBgZ2V0U3RhdGUoKWAgdG8gcmVhZCB0aGUgY3VycmVudCBzdGF0ZSB0cmVlIGluc2lkZSB0aGUgY2FsbGJhY2suXG4gICAqXG4gICAqIFlvdSBtYXkgY2FsbCBgZGlzcGF0Y2goKWAgZnJvbSBhIGNoYW5nZSBsaXN0ZW5lciwgd2l0aCB0aGUgZm9sbG93aW5nXG4gICAqIGNhdmVhdHM6XG4gICAqXG4gICAqIDEuIFRoZSBzdWJzY3JpcHRpb25zIGFyZSBzbmFwc2hvdHRlZCBqdXN0IGJlZm9yZSBldmVyeSBgZGlzcGF0Y2goKWAgY2FsbC5cbiAgICogSWYgeW91IHN1YnNjcmliZSBvciB1bnN1YnNjcmliZSB3aGlsZSB0aGUgbGlzdGVuZXJzIGFyZSBiZWluZyBpbnZva2VkLCB0aGlzXG4gICAqIHdpbGwgbm90IGhhdmUgYW55IGVmZmVjdCBvbiB0aGUgYGRpc3BhdGNoKClgIHRoYXQgaXMgY3VycmVudGx5IGluIHByb2dyZXNzLlxuICAgKiBIb3dldmVyLCB0aGUgbmV4dCBgZGlzcGF0Y2goKWAgY2FsbCwgd2hldGhlciBuZXN0ZWQgb3Igbm90LCB3aWxsIHVzZSBhIG1vcmVcbiAgICogcmVjZW50IHNuYXBzaG90IG9mIHRoZSBzdWJzY3JpcHRpb24gbGlzdC5cbiAgICpcbiAgICogMi4gVGhlIGxpc3RlbmVyIHNob3VsZCBub3QgZXhwZWN0IHRvIHNlZSBhbGwgc3RhdGUgY2hhbmdlcywgYXMgdGhlIHN0YXRlXG4gICAqIG1pZ2h0IGhhdmUgYmVlbiB1cGRhdGVkIG11bHRpcGxlIHRpbWVzIGR1cmluZyBhIG5lc3RlZCBgZGlzcGF0Y2goKWAgYmVmb3JlXG4gICAqIHRoZSBsaXN0ZW5lciBpcyBjYWxsZWQuIEl0IGlzLCBob3dldmVyLCBndWFyYW50ZWVkIHRoYXQgYWxsIHN1YnNjcmliZXJzXG4gICAqIHJlZ2lzdGVyZWQgYmVmb3JlIHRoZSBgZGlzcGF0Y2goKWAgc3RhcnRlZCB3aWxsIGJlIGNhbGxlZCB3aXRoIHRoZSBsYXRlc3RcbiAgICogc3RhdGUgYnkgdGhlIHRpbWUgaXQgZXhpdHMuXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGxpc3RlbmVyIEEgY2FsbGJhY2sgdG8gYmUgaW52b2tlZCBvbiBldmVyeSBkaXNwYXRjaC5cbiAgICogQHJldHVybnMge0Z1bmN0aW9ufSBBIGZ1bmN0aW9uIHRvIHJlbW92ZSB0aGlzIGNoYW5nZSBsaXN0ZW5lci5cbiAgICovXG5cblxuICBmdW5jdGlvbiBzdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgICBpZiAodHlwZW9mIGxpc3RlbmVyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSg0KSA6IFwiRXhwZWN0ZWQgdGhlIGxpc3RlbmVyIHRvIGJlIGEgZnVuY3Rpb24uIEluc3RlYWQsIHJlY2VpdmVkOiAnXCIgKyBraW5kT2YobGlzdGVuZXIpICsgXCInXCIpO1xuICAgIH1cblxuICAgIGlmIChpc0Rpc3BhdGNoaW5nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSg1KSA6ICdZb3UgbWF5IG5vdCBjYWxsIHN0b3JlLnN1YnNjcmliZSgpIHdoaWxlIHRoZSByZWR1Y2VyIGlzIGV4ZWN1dGluZy4gJyArICdJZiB5b3Ugd291bGQgbGlrZSB0byBiZSBub3RpZmllZCBhZnRlciB0aGUgc3RvcmUgaGFzIGJlZW4gdXBkYXRlZCwgc3Vic2NyaWJlIGZyb20gYSAnICsgJ2NvbXBvbmVudCBhbmQgaW52b2tlIHN0b3JlLmdldFN0YXRlKCkgaW4gdGhlIGNhbGxiYWNrIHRvIGFjY2VzcyB0aGUgbGF0ZXN0IHN0YXRlLiAnICsgJ1NlZSBodHRwczovL3JlZHV4LmpzLm9yZy9hcGkvc3RvcmUjc3Vic2NyaWJlbGlzdGVuZXIgZm9yIG1vcmUgZGV0YWlscy4nKTtcbiAgICB9XG5cbiAgICB2YXIgaXNTdWJzY3JpYmVkID0gdHJ1ZTtcbiAgICBlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzKCk7XG4gICAgbmV4dExpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gdW5zdWJzY3JpYmUoKSB7XG4gICAgICBpZiAoIWlzU3Vic2NyaWJlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChpc0Rpc3BhdGNoaW5nKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDYpIDogJ1lvdSBtYXkgbm90IHVuc3Vic2NyaWJlIGZyb20gYSBzdG9yZSBsaXN0ZW5lciB3aGlsZSB0aGUgcmVkdWNlciBpcyBleGVjdXRpbmcuICcgKyAnU2VlIGh0dHBzOi8vcmVkdXguanMub3JnL2FwaS9zdG9yZSNzdWJzY3JpYmVsaXN0ZW5lciBmb3IgbW9yZSBkZXRhaWxzLicpO1xuICAgICAgfVxuXG4gICAgICBpc1N1YnNjcmliZWQgPSBmYWxzZTtcbiAgICAgIGVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMoKTtcbiAgICAgIHZhciBpbmRleCA9IG5leHRMaXN0ZW5lcnMuaW5kZXhPZihsaXN0ZW5lcik7XG4gICAgICBuZXh0TGlzdGVuZXJzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICBjdXJyZW50TGlzdGVuZXJzID0gbnVsbDtcbiAgICB9O1xuICB9XG4gIC8qKlxuICAgKiBEaXNwYXRjaGVzIGFuIGFjdGlvbi4gSXQgaXMgdGhlIG9ubHkgd2F5IHRvIHRyaWdnZXIgYSBzdGF0ZSBjaGFuZ2UuXG4gICAqXG4gICAqIFRoZSBgcmVkdWNlcmAgZnVuY3Rpb24sIHVzZWQgdG8gY3JlYXRlIHRoZSBzdG9yZSwgd2lsbCBiZSBjYWxsZWQgd2l0aCB0aGVcbiAgICogY3VycmVudCBzdGF0ZSB0cmVlIGFuZCB0aGUgZ2l2ZW4gYGFjdGlvbmAuIEl0cyByZXR1cm4gdmFsdWUgd2lsbFxuICAgKiBiZSBjb25zaWRlcmVkIHRoZSAqKm5leHQqKiBzdGF0ZSBvZiB0aGUgdHJlZSwgYW5kIHRoZSBjaGFuZ2UgbGlzdGVuZXJzXG4gICAqIHdpbGwgYmUgbm90aWZpZWQuXG4gICAqXG4gICAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9ubHkgc3VwcG9ydHMgcGxhaW4gb2JqZWN0IGFjdGlvbnMuIElmIHlvdSB3YW50IHRvXG4gICAqIGRpc3BhdGNoIGEgUHJvbWlzZSwgYW4gT2JzZXJ2YWJsZSwgYSB0aHVuaywgb3Igc29tZXRoaW5nIGVsc2UsIHlvdSBuZWVkIHRvXG4gICAqIHdyYXAgeW91ciBzdG9yZSBjcmVhdGluZyBmdW5jdGlvbiBpbnRvIHRoZSBjb3JyZXNwb25kaW5nIG1pZGRsZXdhcmUuIEZvclxuICAgKiBleGFtcGxlLCBzZWUgdGhlIGRvY3VtZW50YXRpb24gZm9yIHRoZSBgcmVkdXgtdGh1bmtgIHBhY2thZ2UuIEV2ZW4gdGhlXG4gICAqIG1pZGRsZXdhcmUgd2lsbCBldmVudHVhbGx5IGRpc3BhdGNoIHBsYWluIG9iamVjdCBhY3Rpb25zIHVzaW5nIHRoaXMgbWV0aG9kLlxuICAgKlxuICAgKiBAcGFyYW0ge09iamVjdH0gYWN0aW9uIEEgcGxhaW4gb2JqZWN0IHJlcHJlc2VudGluZyDigJx3aGF0IGNoYW5nZWTigJ0uIEl0IGlzXG4gICAqIGEgZ29vZCBpZGVhIHRvIGtlZXAgYWN0aW9ucyBzZXJpYWxpemFibGUgc28geW91IGNhbiByZWNvcmQgYW5kIHJlcGxheSB1c2VyXG4gICAqIHNlc3Npb25zLCBvciB1c2UgdGhlIHRpbWUgdHJhdmVsbGluZyBgcmVkdXgtZGV2dG9vbHNgLiBBbiBhY3Rpb24gbXVzdCBoYXZlXG4gICAqIGEgYHR5cGVgIHByb3BlcnR5IHdoaWNoIG1heSBub3QgYmUgYHVuZGVmaW5lZGAuIEl0IGlzIGEgZ29vZCBpZGVhIHRvIHVzZVxuICAgKiBzdHJpbmcgY29uc3RhbnRzIGZvciBhY3Rpb24gdHlwZXMuXG4gICAqXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IEZvciBjb252ZW5pZW5jZSwgdGhlIHNhbWUgYWN0aW9uIG9iamVjdCB5b3UgZGlzcGF0Y2hlZC5cbiAgICpcbiAgICogTm90ZSB0aGF0LCBpZiB5b3UgdXNlIGEgY3VzdG9tIG1pZGRsZXdhcmUsIGl0IG1heSB3cmFwIGBkaXNwYXRjaCgpYCB0b1xuICAgKiByZXR1cm4gc29tZXRoaW5nIGVsc2UgKGZvciBleGFtcGxlLCBhIFByb21pc2UgeW91IGNhbiBhd2FpdCkuXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gZGlzcGF0Y2goYWN0aW9uKSB7XG4gICAgaWYgKCFpc1BsYWluT2JqZWN0KGFjdGlvbikpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDcpIDogXCJBY3Rpb25zIG11c3QgYmUgcGxhaW4gb2JqZWN0cy4gSW5zdGVhZCwgdGhlIGFjdHVhbCB0eXBlIHdhczogJ1wiICsga2luZE9mKGFjdGlvbikgKyBcIicuIFlvdSBtYXkgbmVlZCB0byBhZGQgbWlkZGxld2FyZSB0byB5b3VyIHN0b3JlIHNldHVwIHRvIGhhbmRsZSBkaXNwYXRjaGluZyBvdGhlciB2YWx1ZXMsIHN1Y2ggYXMgJ3JlZHV4LXRodW5rJyB0byBoYW5kbGUgZGlzcGF0Y2hpbmcgZnVuY3Rpb25zLiBTZWUgaHR0cHM6Ly9yZWR1eC5qcy5vcmcvdHV0b3JpYWxzL2Z1bmRhbWVudGFscy9wYXJ0LTQtc3RvcmUjbWlkZGxld2FyZSBhbmQgaHR0cHM6Ly9yZWR1eC5qcy5vcmcvdHV0b3JpYWxzL2Z1bmRhbWVudGFscy9wYXJ0LTYtYXN5bmMtbG9naWMjdXNpbmctdGhlLXJlZHV4LXRodW5rLW1pZGRsZXdhcmUgZm9yIGV4YW1wbGVzLlwiKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGFjdGlvbi50eXBlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoOCkgOiAnQWN0aW9ucyBtYXkgbm90IGhhdmUgYW4gdW5kZWZpbmVkIFwidHlwZVwiIHByb3BlcnR5LiBZb3UgbWF5IGhhdmUgbWlzc3BlbGxlZCBhbiBhY3Rpb24gdHlwZSBzdHJpbmcgY29uc3RhbnQuJyk7XG4gICAgfVxuXG4gICAgaWYgKGlzRGlzcGF0Y2hpbmcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDkpIDogJ1JlZHVjZXJzIG1heSBub3QgZGlzcGF0Y2ggYWN0aW9ucy4nKTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgaXNEaXNwYXRjaGluZyA9IHRydWU7XG4gICAgICBjdXJyZW50U3RhdGUgPSBjdXJyZW50UmVkdWNlcihjdXJyZW50U3RhdGUsIGFjdGlvbik7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlzRGlzcGF0Y2hpbmcgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgbGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycyA9IG5leHRMaXN0ZW5lcnM7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3RlbmVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGxpc3RlbmVyID0gbGlzdGVuZXJzW2ldO1xuICAgICAgbGlzdGVuZXIoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYWN0aW9uO1xuICB9XG4gIC8qKlxuICAgKiBSZXBsYWNlcyB0aGUgcmVkdWNlciBjdXJyZW50bHkgdXNlZCBieSB0aGUgc3RvcmUgdG8gY2FsY3VsYXRlIHRoZSBzdGF0ZS5cbiAgICpcbiAgICogWW91IG1pZ2h0IG5lZWQgdGhpcyBpZiB5b3VyIGFwcCBpbXBsZW1lbnRzIGNvZGUgc3BsaXR0aW5nIGFuZCB5b3Ugd2FudCB0b1xuICAgKiBsb2FkIHNvbWUgb2YgdGhlIHJlZHVjZXJzIGR5bmFtaWNhbGx5LiBZb3UgbWlnaHQgYWxzbyBuZWVkIHRoaXMgaWYgeW91XG4gICAqIGltcGxlbWVudCBhIGhvdCByZWxvYWRpbmcgbWVjaGFuaXNtIGZvciBSZWR1eC5cbiAgICpcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gbmV4dFJlZHVjZXIgVGhlIHJlZHVjZXIgZm9yIHRoZSBzdG9yZSB0byB1c2UgaW5zdGVhZC5cbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gcmVwbGFjZVJlZHVjZXIobmV4dFJlZHVjZXIpIHtcbiAgICBpZiAodHlwZW9mIG5leHRSZWR1Y2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSgxMCkgOiBcIkV4cGVjdGVkIHRoZSBuZXh0UmVkdWNlciB0byBiZSBhIGZ1bmN0aW9uLiBJbnN0ZWFkLCByZWNlaXZlZDogJ1wiICsga2luZE9mKG5leHRSZWR1Y2VyKSk7XG4gICAgfVxuXG4gICAgY3VycmVudFJlZHVjZXIgPSBuZXh0UmVkdWNlcjsgLy8gVGhpcyBhY3Rpb24gaGFzIGEgc2ltaWxpYXIgZWZmZWN0IHRvIEFjdGlvblR5cGVzLklOSVQuXG4gICAgLy8gQW55IHJlZHVjZXJzIHRoYXQgZXhpc3RlZCBpbiBib3RoIHRoZSBuZXcgYW5kIG9sZCByb290UmVkdWNlclxuICAgIC8vIHdpbGwgcmVjZWl2ZSB0aGUgcHJldmlvdXMgc3RhdGUuIFRoaXMgZWZmZWN0aXZlbHkgcG9wdWxhdGVzXG4gICAgLy8gdGhlIG5ldyBzdGF0ZSB0cmVlIHdpdGggYW55IHJlbGV2YW50IGRhdGEgZnJvbSB0aGUgb2xkIG9uZS5cblxuICAgIGRpc3BhdGNoKHtcbiAgICAgIHR5cGU6IEFjdGlvblR5cGVzLlJFUExBQ0VcbiAgICB9KTtcbiAgfVxuICAvKipcbiAgICogSW50ZXJvcGVyYWJpbGl0eSBwb2ludCBmb3Igb2JzZXJ2YWJsZS9yZWFjdGl2ZSBsaWJyYXJpZXMuXG4gICAqIEByZXR1cm5zIHtvYnNlcnZhYmxlfSBBIG1pbmltYWwgb2JzZXJ2YWJsZSBvZiBzdGF0ZSBjaGFuZ2VzLlxuICAgKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlIHRoZSBvYnNlcnZhYmxlIHByb3Bvc2FsOlxuICAgKiBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1vYnNlcnZhYmxlXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gb2JzZXJ2YWJsZSgpIHtcbiAgICB2YXIgX3JlZjtcblxuICAgIHZhciBvdXRlclN1YnNjcmliZSA9IHN1YnNjcmliZTtcbiAgICByZXR1cm4gX3JlZiA9IHtcbiAgICAgIC8qKlxuICAgICAgICogVGhlIG1pbmltYWwgb2JzZXJ2YWJsZSBzdWJzY3JpcHRpb24gbWV0aG9kLlxuICAgICAgICogQHBhcmFtIHtPYmplY3R9IG9ic2VydmVyIEFueSBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCBhcyBhbiBvYnNlcnZlci5cbiAgICAgICAqIFRoZSBvYnNlcnZlciBvYmplY3Qgc2hvdWxkIGhhdmUgYSBgbmV4dGAgbWV0aG9kLlxuICAgICAgICogQHJldHVybnMge3N1YnNjcmlwdGlvbn0gQW4gb2JqZWN0IHdpdGggYW4gYHVuc3Vic2NyaWJlYCBtZXRob2QgdGhhdCBjYW5cbiAgICAgICAqIGJlIHVzZWQgdG8gdW5zdWJzY3JpYmUgdGhlIG9ic2VydmFibGUgZnJvbSB0aGUgc3RvcmUsIGFuZCBwcmV2ZW50IGZ1cnRoZXJcbiAgICAgICAqIGVtaXNzaW9uIG9mIHZhbHVlcyBmcm9tIHRoZSBvYnNlcnZhYmxlLlxuICAgICAgICovXG4gICAgICBzdWJzY3JpYmU6IGZ1bmN0aW9uIHN1YnNjcmliZShvYnNlcnZlcikge1xuICAgICAgICBpZiAodHlwZW9mIG9ic2VydmVyICE9PSAnb2JqZWN0JyB8fCBvYnNlcnZlciA9PT0gbnVsbCkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDExKSA6IFwiRXhwZWN0ZWQgdGhlIG9ic2VydmVyIHRvIGJlIGFuIG9iamVjdC4gSW5zdGVhZCwgcmVjZWl2ZWQ6ICdcIiArIGtpbmRPZihvYnNlcnZlcikgKyBcIidcIik7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBvYnNlcnZlU3RhdGUoKSB7XG4gICAgICAgICAgaWYgKG9ic2VydmVyLm5leHQpIHtcbiAgICAgICAgICAgIG9ic2VydmVyLm5leHQoZ2V0U3RhdGUoKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgb2JzZXJ2ZVN0YXRlKCk7XG4gICAgICAgIHZhciB1bnN1YnNjcmliZSA9IG91dGVyU3Vic2NyaWJlKG9ic2VydmVTdGF0ZSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdW5zdWJzY3JpYmU6IHVuc3Vic2NyaWJlXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfSwgX3JlZlskJG9ic2VydmFibGVdID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSwgX3JlZjtcbiAgfSAvLyBXaGVuIGEgc3RvcmUgaXMgY3JlYXRlZCwgYW4gXCJJTklUXCIgYWN0aW9uIGlzIGRpc3BhdGNoZWQgc28gdGhhdCBldmVyeVxuICAvLyByZWR1Y2VyIHJldHVybnMgdGhlaXIgaW5pdGlhbCBzdGF0ZS4gVGhpcyBlZmZlY3RpdmVseSBwb3B1bGF0ZXNcbiAgLy8gdGhlIGluaXRpYWwgc3RhdGUgdHJlZS5cblxuXG4gIGRpc3BhdGNoKHtcbiAgICB0eXBlOiBBY3Rpb25UeXBlcy5JTklUXG4gIH0pO1xuICByZXR1cm4gX3JlZjIgPSB7XG4gICAgZGlzcGF0Y2g6IGRpc3BhdGNoLFxuICAgIHN1YnNjcmliZTogc3Vic2NyaWJlLFxuICAgIGdldFN0YXRlOiBnZXRTdGF0ZSxcbiAgICByZXBsYWNlUmVkdWNlcjogcmVwbGFjZVJlZHVjZXJcbiAgfSwgX3JlZjJbJCRvYnNlcnZhYmxlXSA9IG9ic2VydmFibGUsIF9yZWYyO1xufVxuXG4vKipcbiAqIFByaW50cyBhIHdhcm5pbmcgaW4gdGhlIGNvbnNvbGUgaWYgaXQgZXhpc3RzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBtZXNzYWdlIFRoZSB3YXJuaW5nIG1lc3NhZ2UuXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZnVuY3Rpb24gd2FybmluZyhtZXNzYWdlKSB7XG4gIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbiAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgY29uc29sZS5lcnJvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gIH1cbiAgLyogZXNsaW50LWVuYWJsZSBuby1jb25zb2xlICovXG5cblxuICB0cnkge1xuICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgaWYgeW91IGVuYWJsZVxuICAgIC8vIFwiYnJlYWsgb24gYWxsIGV4Y2VwdGlvbnNcIiBpbiB5b3VyIGNvbnNvbGUsXG4gICAgLy8gaXQgd291bGQgcGF1c2UgdGhlIGV4ZWN1dGlvbiBhdCB0aGlzIGxpbmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICB9IGNhdGNoIChlKSB7fSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWVtcHR5XG5cbn1cblxuZnVuY3Rpb24gZ2V0VW5leHBlY3RlZFN0YXRlU2hhcGVXYXJuaW5nTWVzc2FnZShpbnB1dFN0YXRlLCByZWR1Y2VycywgYWN0aW9uLCB1bmV4cGVjdGVkS2V5Q2FjaGUpIHtcbiAgdmFyIHJlZHVjZXJLZXlzID0gT2JqZWN0LmtleXMocmVkdWNlcnMpO1xuICB2YXIgYXJndW1lbnROYW1lID0gYWN0aW9uICYmIGFjdGlvbi50eXBlID09PSBBY3Rpb25UeXBlcy5JTklUID8gJ3ByZWxvYWRlZFN0YXRlIGFyZ3VtZW50IHBhc3NlZCB0byBjcmVhdGVTdG9yZScgOiAncHJldmlvdXMgc3RhdGUgcmVjZWl2ZWQgYnkgdGhlIHJlZHVjZXInO1xuXG4gIGlmIChyZWR1Y2VyS2V5cy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gJ1N0b3JlIGRvZXMgbm90IGhhdmUgYSB2YWxpZCByZWR1Y2VyLiBNYWtlIHN1cmUgdGhlIGFyZ3VtZW50IHBhc3NlZCAnICsgJ3RvIGNvbWJpbmVSZWR1Y2VycyBpcyBhbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSByZWR1Y2Vycy4nO1xuICB9XG5cbiAgaWYgKCFpc1BsYWluT2JqZWN0KGlucHV0U3RhdGUpKSB7XG4gICAgcmV0dXJuIFwiVGhlIFwiICsgYXJndW1lbnROYW1lICsgXCIgaGFzIHVuZXhwZWN0ZWQgdHlwZSBvZiBcXFwiXCIgKyBraW5kT2YoaW5wdXRTdGF0ZSkgKyBcIlxcXCIuIEV4cGVjdGVkIGFyZ3VtZW50IHRvIGJlIGFuIG9iamVjdCB3aXRoIHRoZSBmb2xsb3dpbmcgXCIgKyAoXCJrZXlzOiBcXFwiXCIgKyByZWR1Y2VyS2V5cy5qb2luKCdcIiwgXCInKSArIFwiXFxcIlwiKTtcbiAgfVxuXG4gIHZhciB1bmV4cGVjdGVkS2V5cyA9IE9iamVjdC5rZXlzKGlucHV0U3RhdGUpLmZpbHRlcihmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuICFyZWR1Y2Vycy5oYXNPd25Qcm9wZXJ0eShrZXkpICYmICF1bmV4cGVjdGVkS2V5Q2FjaGVba2V5XTtcbiAgfSk7XG4gIHVuZXhwZWN0ZWRLZXlzLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHVuZXhwZWN0ZWRLZXlDYWNoZVtrZXldID0gdHJ1ZTtcbiAgfSk7XG4gIGlmIChhY3Rpb24gJiYgYWN0aW9uLnR5cGUgPT09IEFjdGlvblR5cGVzLlJFUExBQ0UpIHJldHVybjtcblxuICBpZiAodW5leHBlY3RlZEtleXMubGVuZ3RoID4gMCkge1xuICAgIHJldHVybiBcIlVuZXhwZWN0ZWQgXCIgKyAodW5leHBlY3RlZEtleXMubGVuZ3RoID4gMSA/ICdrZXlzJyA6ICdrZXknKSArIFwiIFwiICsgKFwiXFxcIlwiICsgdW5leHBlY3RlZEtleXMuam9pbignXCIsIFwiJykgKyBcIlxcXCIgZm91bmQgaW4gXCIgKyBhcmd1bWVudE5hbWUgKyBcIi4gXCIpICsgXCJFeHBlY3RlZCB0byBmaW5kIG9uZSBvZiB0aGUga25vd24gcmVkdWNlciBrZXlzIGluc3RlYWQ6IFwiICsgKFwiXFxcIlwiICsgcmVkdWNlcktleXMuam9pbignXCIsIFwiJykgKyBcIlxcXCIuIFVuZXhwZWN0ZWQga2V5cyB3aWxsIGJlIGlnbm9yZWQuXCIpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGFzc2VydFJlZHVjZXJTaGFwZShyZWR1Y2Vycykge1xuICBPYmplY3Qua2V5cyhyZWR1Y2VycykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIHJlZHVjZXIgPSByZWR1Y2Vyc1trZXldO1xuICAgIHZhciBpbml0aWFsU3RhdGUgPSByZWR1Y2VyKHVuZGVmaW5lZCwge1xuICAgICAgdHlwZTogQWN0aW9uVHlwZXMuSU5JVFxuICAgIH0pO1xuXG4gICAgaWYgKHR5cGVvZiBpbml0aWFsU3RhdGUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSgxMikgOiBcIlRoZSBzbGljZSByZWR1Y2VyIGZvciBrZXkgXFxcIlwiICsga2V5ICsgXCJcXFwiIHJldHVybmVkIHVuZGVmaW5lZCBkdXJpbmcgaW5pdGlhbGl6YXRpb24uIFwiICsgXCJJZiB0aGUgc3RhdGUgcGFzc2VkIHRvIHRoZSByZWR1Y2VyIGlzIHVuZGVmaW5lZCwgeW91IG11c3QgXCIgKyBcImV4cGxpY2l0bHkgcmV0dXJuIHRoZSBpbml0aWFsIHN0YXRlLiBUaGUgaW5pdGlhbCBzdGF0ZSBtYXkgXCIgKyBcIm5vdCBiZSB1bmRlZmluZWQuIElmIHlvdSBkb24ndCB3YW50IHRvIHNldCBhIHZhbHVlIGZvciB0aGlzIHJlZHVjZXIsIFwiICsgXCJ5b3UgY2FuIHVzZSBudWxsIGluc3RlYWQgb2YgdW5kZWZpbmVkLlwiKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHJlZHVjZXIodW5kZWZpbmVkLCB7XG4gICAgICB0eXBlOiBBY3Rpb25UeXBlcy5QUk9CRV9VTktOT1dOX0FDVElPTigpXG4gICAgfSkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSgxMykgOiBcIlRoZSBzbGljZSByZWR1Y2VyIGZvciBrZXkgXFxcIlwiICsga2V5ICsgXCJcXFwiIHJldHVybmVkIHVuZGVmaW5lZCB3aGVuIHByb2JlZCB3aXRoIGEgcmFuZG9tIHR5cGUuIFwiICsgKFwiRG9uJ3QgdHJ5IHRvIGhhbmRsZSAnXCIgKyBBY3Rpb25UeXBlcy5JTklUICsgXCInIG9yIG90aGVyIGFjdGlvbnMgaW4gXFxcInJlZHV4LypcXFwiIFwiKSArIFwibmFtZXNwYWNlLiBUaGV5IGFyZSBjb25zaWRlcmVkIHByaXZhdGUuIEluc3RlYWQsIHlvdSBtdXN0IHJldHVybiB0aGUgXCIgKyBcImN1cnJlbnQgc3RhdGUgZm9yIGFueSB1bmtub3duIGFjdGlvbnMsIHVubGVzcyBpdCBpcyB1bmRlZmluZWQsIFwiICsgXCJpbiB3aGljaCBjYXNlIHlvdSBtdXN0IHJldHVybiB0aGUgaW5pdGlhbCBzdGF0ZSwgcmVnYXJkbGVzcyBvZiB0aGUgXCIgKyBcImFjdGlvbiB0eXBlLiBUaGUgaW5pdGlhbCBzdGF0ZSBtYXkgbm90IGJlIHVuZGVmaW5lZCwgYnV0IGNhbiBiZSBudWxsLlwiKTtcbiAgICB9XG4gIH0pO1xufVxuLyoqXG4gKiBUdXJucyBhbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSBkaWZmZXJlbnQgcmVkdWNlciBmdW5jdGlvbnMsIGludG8gYSBzaW5nbGVcbiAqIHJlZHVjZXIgZnVuY3Rpb24uIEl0IHdpbGwgY2FsbCBldmVyeSBjaGlsZCByZWR1Y2VyLCBhbmQgZ2F0aGVyIHRoZWlyIHJlc3VsdHNcbiAqIGludG8gYSBzaW5nbGUgc3RhdGUgb2JqZWN0LCB3aG9zZSBrZXlzIGNvcnJlc3BvbmQgdG8gdGhlIGtleXMgb2YgdGhlIHBhc3NlZFxuICogcmVkdWNlciBmdW5jdGlvbnMuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHJlZHVjZXJzIEFuIG9iamVjdCB3aG9zZSB2YWx1ZXMgY29ycmVzcG9uZCB0byBkaWZmZXJlbnRcbiAqIHJlZHVjZXIgZnVuY3Rpb25zIHRoYXQgbmVlZCB0byBiZSBjb21iaW5lZCBpbnRvIG9uZS4gT25lIGhhbmR5IHdheSB0byBvYnRhaW5cbiAqIGl0IGlzIHRvIHVzZSBFUzYgYGltcG9ydCAqIGFzIHJlZHVjZXJzYCBzeW50YXguIFRoZSByZWR1Y2VycyBtYXkgbmV2ZXIgcmV0dXJuXG4gKiB1bmRlZmluZWQgZm9yIGFueSBhY3Rpb24uIEluc3RlYWQsIHRoZXkgc2hvdWxkIHJldHVybiB0aGVpciBpbml0aWFsIHN0YXRlXG4gKiBpZiB0aGUgc3RhdGUgcGFzc2VkIHRvIHRoZW0gd2FzIHVuZGVmaW5lZCwgYW5kIHRoZSBjdXJyZW50IHN0YXRlIGZvciBhbnlcbiAqIHVucmVjb2duaXplZCBhY3Rpb24uXG4gKlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIHJlZHVjZXIgZnVuY3Rpb24gdGhhdCBpbnZva2VzIGV2ZXJ5IHJlZHVjZXIgaW5zaWRlIHRoZVxuICogcGFzc2VkIG9iamVjdCwgYW5kIGJ1aWxkcyBhIHN0YXRlIG9iamVjdCB3aXRoIHRoZSBzYW1lIHNoYXBlLlxuICovXG5cblxuZnVuY3Rpb24gY29tYmluZVJlZHVjZXJzKHJlZHVjZXJzKSB7XG4gIHZhciByZWR1Y2VyS2V5cyA9IE9iamVjdC5rZXlzKHJlZHVjZXJzKTtcbiAgdmFyIGZpbmFsUmVkdWNlcnMgPSB7fTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHJlZHVjZXJLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGtleSA9IHJlZHVjZXJLZXlzW2ldO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmICh0eXBlb2YgcmVkdWNlcnNba2V5XSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgd2FybmluZyhcIk5vIHJlZHVjZXIgcHJvdmlkZWQgZm9yIGtleSBcXFwiXCIgKyBrZXkgKyBcIlxcXCJcIik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiByZWR1Y2Vyc1trZXldID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBmaW5hbFJlZHVjZXJzW2tleV0gPSByZWR1Y2Vyc1trZXldO1xuICAgIH1cbiAgfVxuXG4gIHZhciBmaW5hbFJlZHVjZXJLZXlzID0gT2JqZWN0LmtleXMoZmluYWxSZWR1Y2Vycyk7IC8vIFRoaXMgaXMgdXNlZCB0byBtYWtlIHN1cmUgd2UgZG9uJ3Qgd2FybiBhYm91dCB0aGUgc2FtZVxuICAvLyBrZXlzIG11bHRpcGxlIHRpbWVzLlxuXG4gIHZhciB1bmV4cGVjdGVkS2V5Q2FjaGU7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICB1bmV4cGVjdGVkS2V5Q2FjaGUgPSB7fTtcbiAgfVxuXG4gIHZhciBzaGFwZUFzc2VydGlvbkVycm9yO1xuXG4gIHRyeSB7XG4gICAgYXNzZXJ0UmVkdWNlclNoYXBlKGZpbmFsUmVkdWNlcnMpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgc2hhcGVBc3NlcnRpb25FcnJvciA9IGU7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gY29tYmluYXRpb24oc3RhdGUsIGFjdGlvbikge1xuICAgIGlmIChzdGF0ZSA9PT0gdm9pZCAwKSB7XG4gICAgICBzdGF0ZSA9IHt9O1xuICAgIH1cblxuICAgIGlmIChzaGFwZUFzc2VydGlvbkVycm9yKSB7XG4gICAgICB0aHJvdyBzaGFwZUFzc2VydGlvbkVycm9yO1xuICAgIH1cblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICB2YXIgd2FybmluZ01lc3NhZ2UgPSBnZXRVbmV4cGVjdGVkU3RhdGVTaGFwZVdhcm5pbmdNZXNzYWdlKHN0YXRlLCBmaW5hbFJlZHVjZXJzLCBhY3Rpb24sIHVuZXhwZWN0ZWRLZXlDYWNoZSk7XG5cbiAgICAgIGlmICh3YXJuaW5nTWVzc2FnZSkge1xuICAgICAgICB3YXJuaW5nKHdhcm5pbmdNZXNzYWdlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgaGFzQ2hhbmdlZCA9IGZhbHNlO1xuICAgIHZhciBuZXh0U3RhdGUgPSB7fTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBmaW5hbFJlZHVjZXJLZXlzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9rZXkgPSBmaW5hbFJlZHVjZXJLZXlzW19pXTtcbiAgICAgIHZhciByZWR1Y2VyID0gZmluYWxSZWR1Y2Vyc1tfa2V5XTtcbiAgICAgIHZhciBwcmV2aW91c1N0YXRlRm9yS2V5ID0gc3RhdGVbX2tleV07XG4gICAgICB2YXIgbmV4dFN0YXRlRm9yS2V5ID0gcmVkdWNlcihwcmV2aW91c1N0YXRlRm9yS2V5LCBhY3Rpb24pO1xuXG4gICAgICBpZiAodHlwZW9mIG5leHRTdGF0ZUZvcktleSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdmFyIGFjdGlvblR5cGUgPSBhY3Rpb24gJiYgYWN0aW9uLnR5cGU7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBmb3JtYXRQcm9kRXJyb3JNZXNzYWdlKDE0KSA6IFwiV2hlbiBjYWxsZWQgd2l0aCBhbiBhY3Rpb24gb2YgdHlwZSBcIiArIChhY3Rpb25UeXBlID8gXCJcXFwiXCIgKyBTdHJpbmcoYWN0aW9uVHlwZSkgKyBcIlxcXCJcIiA6ICcodW5rbm93biB0eXBlKScpICsgXCIsIHRoZSBzbGljZSByZWR1Y2VyIGZvciBrZXkgXFxcIlwiICsgX2tleSArIFwiXFxcIiByZXR1cm5lZCB1bmRlZmluZWQuIFwiICsgXCJUbyBpZ25vcmUgYW4gYWN0aW9uLCB5b3UgbXVzdCBleHBsaWNpdGx5IHJldHVybiB0aGUgcHJldmlvdXMgc3RhdGUuIFwiICsgXCJJZiB5b3Ugd2FudCB0aGlzIHJlZHVjZXIgdG8gaG9sZCBubyB2YWx1ZSwgeW91IGNhbiByZXR1cm4gbnVsbCBpbnN0ZWFkIG9mIHVuZGVmaW5lZC5cIik7XG4gICAgICB9XG5cbiAgICAgIG5leHRTdGF0ZVtfa2V5XSA9IG5leHRTdGF0ZUZvcktleTtcbiAgICAgIGhhc0NoYW5nZWQgPSBoYXNDaGFuZ2VkIHx8IG5leHRTdGF0ZUZvcktleSAhPT0gcHJldmlvdXNTdGF0ZUZvcktleTtcbiAgICB9XG5cbiAgICBoYXNDaGFuZ2VkID0gaGFzQ2hhbmdlZCB8fCBmaW5hbFJlZHVjZXJLZXlzLmxlbmd0aCAhPT0gT2JqZWN0LmtleXMoc3RhdGUpLmxlbmd0aDtcbiAgICByZXR1cm4gaGFzQ2hhbmdlZCA/IG5leHRTdGF0ZSA6IHN0YXRlO1xuICB9O1xufVxuXG5mdW5jdGlvbiBiaW5kQWN0aW9uQ3JlYXRvcihhY3Rpb25DcmVhdG9yLCBkaXNwYXRjaCkge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBkaXNwYXRjaChhY3Rpb25DcmVhdG9yLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9O1xufVxuLyoqXG4gKiBUdXJucyBhbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSBhY3Rpb24gY3JlYXRvcnMsIGludG8gYW4gb2JqZWN0IHdpdGggdGhlXG4gKiBzYW1lIGtleXMsIGJ1dCB3aXRoIGV2ZXJ5IGZ1bmN0aW9uIHdyYXBwZWQgaW50byBhIGBkaXNwYXRjaGAgY2FsbCBzbyB0aGV5XG4gKiBtYXkgYmUgaW52b2tlZCBkaXJlY3RseS4gVGhpcyBpcyBqdXN0IGEgY29udmVuaWVuY2UgbWV0aG9kLCBhcyB5b3UgY2FuIGNhbGxcbiAqIGBzdG9yZS5kaXNwYXRjaChNeUFjdGlvbkNyZWF0b3JzLmRvU29tZXRoaW5nKCkpYCB5b3Vyc2VsZiBqdXN0IGZpbmUuXG4gKlxuICogRm9yIGNvbnZlbmllbmNlLCB5b3UgY2FuIGFsc28gcGFzcyBhbiBhY3Rpb24gY3JlYXRvciBhcyB0aGUgZmlyc3QgYXJndW1lbnQsXG4gKiBhbmQgZ2V0IGEgZGlzcGF0Y2ggd3JhcHBlZCBmdW5jdGlvbiBpbiByZXR1cm4uXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbnxPYmplY3R9IGFjdGlvbkNyZWF0b3JzIEFuIG9iamVjdCB3aG9zZSB2YWx1ZXMgYXJlIGFjdGlvblxuICogY3JlYXRvciBmdW5jdGlvbnMuIE9uZSBoYW5keSB3YXkgdG8gb2J0YWluIGl0IGlzIHRvIHVzZSBFUzYgYGltcG9ydCAqIGFzYFxuICogc3ludGF4LiBZb3UgbWF5IGFsc28gcGFzcyBhIHNpbmdsZSBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBkaXNwYXRjaCBUaGUgYGRpc3BhdGNoYCBmdW5jdGlvbiBhdmFpbGFibGUgb24geW91ciBSZWR1eFxuICogc3RvcmUuXG4gKlxuICogQHJldHVybnMge0Z1bmN0aW9ufE9iamVjdH0gVGhlIG9iamVjdCBtaW1pY2tpbmcgdGhlIG9yaWdpbmFsIG9iamVjdCwgYnV0IHdpdGhcbiAqIGV2ZXJ5IGFjdGlvbiBjcmVhdG9yIHdyYXBwZWQgaW50byB0aGUgYGRpc3BhdGNoYCBjYWxsLiBJZiB5b3UgcGFzc2VkIGFcbiAqIGZ1bmN0aW9uIGFzIGBhY3Rpb25DcmVhdG9yc2AsIHRoZSByZXR1cm4gdmFsdWUgd2lsbCBhbHNvIGJlIGEgc2luZ2xlXG4gKiBmdW5jdGlvbi5cbiAqL1xuXG5cbmZ1bmN0aW9uIGJpbmRBY3Rpb25DcmVhdG9ycyhhY3Rpb25DcmVhdG9ycywgZGlzcGF0Y2gpIHtcbiAgaWYgKHR5cGVvZiBhY3Rpb25DcmVhdG9ycyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBiaW5kQWN0aW9uQ3JlYXRvcihhY3Rpb25DcmVhdG9ycywgZGlzcGF0Y2gpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBhY3Rpb25DcmVhdG9ycyAhPT0gJ29iamVjdCcgfHwgYWN0aW9uQ3JlYXRvcnMgPT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gZm9ybWF0UHJvZEVycm9yTWVzc2FnZSgxNikgOiBcImJpbmRBY3Rpb25DcmVhdG9ycyBleHBlY3RlZCBhbiBvYmplY3Qgb3IgYSBmdW5jdGlvbiwgYnV0IGluc3RlYWQgcmVjZWl2ZWQ6ICdcIiArIGtpbmRPZihhY3Rpb25DcmVhdG9ycykgKyBcIicuIFwiICsgXCJEaWQgeW91IHdyaXRlIFxcXCJpbXBvcnQgQWN0aW9uQ3JlYXRvcnMgZnJvbVxcXCIgaW5zdGVhZCBvZiBcXFwiaW1wb3J0ICogYXMgQWN0aW9uQ3JlYXRvcnMgZnJvbVxcXCI/XCIpO1xuICB9XG5cbiAgdmFyIGJvdW5kQWN0aW9uQ3JlYXRvcnMgPSB7fTtcblxuICBmb3IgKHZhciBrZXkgaW4gYWN0aW9uQ3JlYXRvcnMpIHtcbiAgICB2YXIgYWN0aW9uQ3JlYXRvciA9IGFjdGlvbkNyZWF0b3JzW2tleV07XG5cbiAgICBpZiAodHlwZW9mIGFjdGlvbkNyZWF0b3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGJvdW5kQWN0aW9uQ3JlYXRvcnNba2V5XSA9IGJpbmRBY3Rpb25DcmVhdG9yKGFjdGlvbkNyZWF0b3IsIGRpc3BhdGNoKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYm91bmRBY3Rpb25DcmVhdG9ycztcbn1cblxuLyoqXG4gKiBDb21wb3NlcyBzaW5nbGUtYXJndW1lbnQgZnVuY3Rpb25zIGZyb20gcmlnaHQgdG8gbGVmdC4gVGhlIHJpZ2h0bW9zdFxuICogZnVuY3Rpb24gY2FuIHRha2UgbXVsdGlwbGUgYXJndW1lbnRzIGFzIGl0IHByb3ZpZGVzIHRoZSBzaWduYXR1cmUgZm9yXG4gKiB0aGUgcmVzdWx0aW5nIGNvbXBvc2l0ZSBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0gey4uLkZ1bmN0aW9ufSBmdW5jcyBUaGUgZnVuY3Rpb25zIHRvIGNvbXBvc2UuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgZnVuY3Rpb24gb2J0YWluZWQgYnkgY29tcG9zaW5nIHRoZSBhcmd1bWVudCBmdW5jdGlvbnNcbiAqIGZyb20gcmlnaHQgdG8gbGVmdC4gRm9yIGV4YW1wbGUsIGNvbXBvc2UoZiwgZywgaCkgaXMgaWRlbnRpY2FsIHRvIGRvaW5nXG4gKiAoLi4uYXJncykgPT4gZihnKGgoLi4uYXJncykpKS5cbiAqL1xuZnVuY3Rpb24gY29tcG9zZSgpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGZ1bmNzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGZ1bmNzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgaWYgKGZ1bmNzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoYXJnKSB7XG4gICAgICByZXR1cm4gYXJnO1xuICAgIH07XG4gIH1cblxuICBpZiAoZnVuY3MubGVuZ3RoID09PSAxKSB7XG4gICAgcmV0dXJuIGZ1bmNzWzBdO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmNzLnJlZHVjZShmdW5jdGlvbiAoYSwgYikge1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gYShiLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKSk7XG4gICAgfTtcbiAgfSk7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHN0b3JlIGVuaGFuY2VyIHRoYXQgYXBwbGllcyBtaWRkbGV3YXJlIHRvIHRoZSBkaXNwYXRjaCBtZXRob2RcbiAqIG9mIHRoZSBSZWR1eCBzdG9yZS4gVGhpcyBpcyBoYW5keSBmb3IgYSB2YXJpZXR5IG9mIHRhc2tzLCBzdWNoIGFzIGV4cHJlc3NpbmdcbiAqIGFzeW5jaHJvbm91cyBhY3Rpb25zIGluIGEgY29uY2lzZSBtYW5uZXIsIG9yIGxvZ2dpbmcgZXZlcnkgYWN0aW9uIHBheWxvYWQuXG4gKlxuICogU2VlIGByZWR1eC10aHVua2AgcGFja2FnZSBhcyBhbiBleGFtcGxlIG9mIHRoZSBSZWR1eCBtaWRkbGV3YXJlLlxuICpcbiAqIEJlY2F1c2UgbWlkZGxld2FyZSBpcyBwb3RlbnRpYWxseSBhc3luY2hyb25vdXMsIHRoaXMgc2hvdWxkIGJlIHRoZSBmaXJzdFxuICogc3RvcmUgZW5oYW5jZXIgaW4gdGhlIGNvbXBvc2l0aW9uIGNoYWluLlxuICpcbiAqIE5vdGUgdGhhdCBlYWNoIG1pZGRsZXdhcmUgd2lsbCBiZSBnaXZlbiB0aGUgYGRpc3BhdGNoYCBhbmQgYGdldFN0YXRlYCBmdW5jdGlvbnNcbiAqIGFzIG5hbWVkIGFyZ3VtZW50cy5cbiAqXG4gKiBAcGFyYW0gey4uLkZ1bmN0aW9ufSBtaWRkbGV3YXJlcyBUaGUgbWlkZGxld2FyZSBjaGFpbiB0byBiZSBhcHBsaWVkLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIHN0b3JlIGVuaGFuY2VyIGFwcGx5aW5nIHRoZSBtaWRkbGV3YXJlLlxuICovXG5cbmZ1bmN0aW9uIGFwcGx5TWlkZGxld2FyZSgpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIG1pZGRsZXdhcmVzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIG1pZGRsZXdhcmVzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChjcmVhdGVTdG9yZSkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgc3RvcmUgPSBjcmVhdGVTdG9yZS5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG5cbiAgICAgIHZhciBfZGlzcGF0Y2ggPSBmdW5jdGlvbiBkaXNwYXRjaCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IGZvcm1hdFByb2RFcnJvck1lc3NhZ2UoMTUpIDogJ0Rpc3BhdGNoaW5nIHdoaWxlIGNvbnN0cnVjdGluZyB5b3VyIG1pZGRsZXdhcmUgaXMgbm90IGFsbG93ZWQuICcgKyAnT3RoZXIgbWlkZGxld2FyZSB3b3VsZCBub3QgYmUgYXBwbGllZCB0byB0aGlzIGRpc3BhdGNoLicpO1xuICAgICAgfTtcblxuICAgICAgdmFyIG1pZGRsZXdhcmVBUEkgPSB7XG4gICAgICAgIGdldFN0YXRlOiBzdG9yZS5nZXRTdGF0ZSxcbiAgICAgICAgZGlzcGF0Y2g6IGZ1bmN0aW9uIGRpc3BhdGNoKCkge1xuICAgICAgICAgIHJldHVybiBfZGlzcGF0Y2guYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgdmFyIGNoYWluID0gbWlkZGxld2FyZXMubWFwKGZ1bmN0aW9uIChtaWRkbGV3YXJlKSB7XG4gICAgICAgIHJldHVybiBtaWRkbGV3YXJlKG1pZGRsZXdhcmVBUEkpO1xuICAgICAgfSk7XG4gICAgICBfZGlzcGF0Y2ggPSBjb21wb3NlLmFwcGx5KHZvaWQgMCwgY2hhaW4pKHN0b3JlLmRpc3BhdGNoKTtcbiAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHN0b3JlKSwge30sIHtcbiAgICAgICAgZGlzcGF0Y2g6IF9kaXNwYXRjaFxuICAgICAgfSk7XG4gICAgfTtcbiAgfTtcbn1cblxuLypcbiAqIFRoaXMgaXMgYSBkdW1teSBmdW5jdGlvbiB0byBjaGVjayBpZiB0aGUgZnVuY3Rpb24gbmFtZSBoYXMgYmVlbiBhbHRlcmVkIGJ5IG1pbmlmaWNhdGlvbi5cbiAqIElmIHRoZSBmdW5jdGlvbiBoYXMgYmVlbiBtaW5pZmllZCBhbmQgTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJywgd2FybiB0aGUgdXNlci5cbiAqL1xuXG5mdW5jdGlvbiBpc0NydXNoZWQoKSB7fVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB0eXBlb2YgaXNDcnVzaGVkLm5hbWUgPT09ICdzdHJpbmcnICYmIGlzQ3J1c2hlZC5uYW1lICE9PSAnaXNDcnVzaGVkJykge1xuICB3YXJuaW5nKCdZb3UgYXJlIGN1cnJlbnRseSB1c2luZyBtaW5pZmllZCBjb2RlIG91dHNpZGUgb2YgTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiLiAnICsgJ1RoaXMgbWVhbnMgdGhhdCB5b3UgYXJlIHJ1bm5pbmcgYSBzbG93ZXIgZGV2ZWxvcG1lbnQgYnVpbGQgb2YgUmVkdXguICcgKyAnWW91IGNhbiB1c2UgbG9vc2UtZW52aWZ5IChodHRwczovL2dpdGh1Yi5jb20vemVydG9zaC9sb29zZS1lbnZpZnkpIGZvciBicm93c2VyaWZ5ICcgKyAnb3Igc2V0dGluZyBtb2RlIHRvIHByb2R1Y3Rpb24gaW4gd2VicGFjayAoaHR0cHM6Ly93ZWJwYWNrLmpzLm9yZy9jb25jZXB0cy9tb2RlLykgJyArICd0byBlbnN1cmUgeW91IGhhdmUgdGhlIGNvcnJlY3QgY29kZSBmb3IgeW91ciBwcm9kdWN0aW9uIGJ1aWxkLicpO1xufVxuXG5leHBvcnQgeyBBY3Rpb25UeXBlcyBhcyBfX0RPX05PVF9VU0VfX0FjdGlvblR5cGVzLCBhcHBseU1pZGRsZXdhcmUsIGJpbmRBY3Rpb25DcmVhdG9ycywgY29tYmluZVJlZHVjZXJzLCBjb21wb3NlLCBjcmVhdGVTdG9yZSB9O1xuIiwiZnVuY3Rpb24gZGVmYXVsdEVxdWFsaXR5Q2hlY2soYSwgYikge1xuICByZXR1cm4gYSA9PT0gYjtcbn1cblxuZnVuY3Rpb24gYXJlQXJndW1lbnRzU2hhbGxvd2x5RXF1YWwoZXF1YWxpdHlDaGVjaywgcHJldiwgbmV4dCkge1xuICBpZiAocHJldiA9PT0gbnVsbCB8fCBuZXh0ID09PSBudWxsIHx8IHByZXYubGVuZ3RoICE9PSBuZXh0Lmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIC8vIERvIHRoaXMgaW4gYSBmb3IgbG9vcCAoYW5kIG5vdCBhIGBmb3JFYWNoYCBvciBhbiBgZXZlcnlgKSBzbyB3ZSBjYW4gZGV0ZXJtaW5lIGVxdWFsaXR5IGFzIGZhc3QgYXMgcG9zc2libGUuXG4gIHZhciBsZW5ndGggPSBwcmV2Lmxlbmd0aDtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgIGlmICghZXF1YWxpdHlDaGVjayhwcmV2W2ldLCBuZXh0W2ldKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGVmYXVsdE1lbW9pemUoZnVuYykge1xuICB2YXIgZXF1YWxpdHlDaGVjayA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZGVmYXVsdEVxdWFsaXR5Q2hlY2s7XG5cbiAgdmFyIGxhc3RBcmdzID0gbnVsbDtcbiAgdmFyIGxhc3RSZXN1bHQgPSBudWxsO1xuICAvLyB3ZSByZWZlcmVuY2UgYXJndW1lbnRzIGluc3RlYWQgb2Ygc3ByZWFkaW5nIHRoZW0gZm9yIHBlcmZvcm1hbmNlIHJlYXNvbnNcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoIWFyZUFyZ3VtZW50c1NoYWxsb3dseUVxdWFsKGVxdWFsaXR5Q2hlY2ssIGxhc3RBcmdzLCBhcmd1bWVudHMpKSB7XG4gICAgICAvLyBhcHBseSBhcmd1bWVudHMgaW5zdGVhZCBvZiBzcHJlYWRpbmcgZm9yIHBlcmZvcm1hbmNlLlxuICAgICAgbGFzdFJlc3VsdCA9IGZ1bmMuYXBwbHkobnVsbCwgYXJndW1lbnRzKTtcbiAgICB9XG5cbiAgICBsYXN0QXJncyA9IGFyZ3VtZW50cztcbiAgICByZXR1cm4gbGFzdFJlc3VsdDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gZ2V0RGVwZW5kZW5jaWVzKGZ1bmNzKSB7XG4gIHZhciBkZXBlbmRlbmNpZXMgPSBBcnJheS5pc0FycmF5KGZ1bmNzWzBdKSA/IGZ1bmNzWzBdIDogZnVuY3M7XG5cbiAgaWYgKCFkZXBlbmRlbmNpZXMuZXZlcnkoZnVuY3Rpb24gKGRlcCkge1xuICAgIHJldHVybiB0eXBlb2YgZGVwID09PSAnZnVuY3Rpb24nO1xuICB9KSkge1xuICAgIHZhciBkZXBlbmRlbmN5VHlwZXMgPSBkZXBlbmRlbmNpZXMubWFwKGZ1bmN0aW9uIChkZXApIHtcbiAgICAgIHJldHVybiB0eXBlb2YgZGVwO1xuICAgIH0pLmpvaW4oJywgJyk7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdTZWxlY3RvciBjcmVhdG9ycyBleHBlY3QgYWxsIGlucHV0LXNlbGVjdG9ycyB0byBiZSBmdW5jdGlvbnMsICcgKyAoJ2luc3RlYWQgcmVjZWl2ZWQgdGhlIGZvbGxvd2luZyB0eXBlczogWycgKyBkZXBlbmRlbmN5VHlwZXMgKyAnXScpKTtcbiAgfVxuXG4gIHJldHVybiBkZXBlbmRlbmNpZXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTZWxlY3RvckNyZWF0b3IobWVtb2l6ZSkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgbWVtb2l6ZU9wdGlvbnMgPSBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgbWVtb2l6ZU9wdGlvbnNbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGZ1bmNzID0gQXJyYXkoX2xlbjIpLCBfa2V5MiA9IDA7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICAgIGZ1bmNzW19rZXkyXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgfVxuXG4gICAgdmFyIHJlY29tcHV0YXRpb25zID0gMDtcbiAgICB2YXIgcmVzdWx0RnVuYyA9IGZ1bmNzLnBvcCgpO1xuICAgIHZhciBkZXBlbmRlbmNpZXMgPSBnZXREZXBlbmRlbmNpZXMoZnVuY3MpO1xuXG4gICAgdmFyIG1lbW9pemVkUmVzdWx0RnVuYyA9IG1lbW9pemUuYXBwbHkodW5kZWZpbmVkLCBbZnVuY3Rpb24gKCkge1xuICAgICAgcmVjb21wdXRhdGlvbnMrKztcbiAgICAgIC8vIGFwcGx5IGFyZ3VtZW50cyBpbnN0ZWFkIG9mIHNwcmVhZGluZyBmb3IgcGVyZm9ybWFuY2UuXG4gICAgICByZXR1cm4gcmVzdWx0RnVuYy5hcHBseShudWxsLCBhcmd1bWVudHMpO1xuICAgIH1dLmNvbmNhdChtZW1vaXplT3B0aW9ucykpO1xuXG4gICAgLy8gSWYgYSBzZWxlY3RvciBpcyBjYWxsZWQgd2l0aCB0aGUgZXhhY3Qgc2FtZSBhcmd1bWVudHMgd2UgZG9uJ3QgbmVlZCB0byB0cmF2ZXJzZSBvdXIgZGVwZW5kZW5jaWVzIGFnYWluLlxuICAgIHZhciBzZWxlY3RvciA9IG1lbW9pemUoZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHBhcmFtcyA9IFtdO1xuICAgICAgdmFyIGxlbmd0aCA9IGRlcGVuZGVuY2llcy5sZW5ndGg7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy8gYXBwbHkgYXJndW1lbnRzIGluc3RlYWQgb2Ygc3ByZWFkaW5nIGFuZCBtdXRhdGUgYSBsb2NhbCBsaXN0IG9mIHBhcmFtcyBmb3IgcGVyZm9ybWFuY2UuXG4gICAgICAgIHBhcmFtcy5wdXNoKGRlcGVuZGVuY2llc1tpXS5hcHBseShudWxsLCBhcmd1bWVudHMpKTtcbiAgICAgIH1cblxuICAgICAgLy8gYXBwbHkgYXJndW1lbnRzIGluc3RlYWQgb2Ygc3ByZWFkaW5nIGZvciBwZXJmb3JtYW5jZS5cbiAgICAgIHJldHVybiBtZW1vaXplZFJlc3VsdEZ1bmMuYXBwbHkobnVsbCwgcGFyYW1zKTtcbiAgICB9KTtcblxuICAgIHNlbGVjdG9yLnJlc3VsdEZ1bmMgPSByZXN1bHRGdW5jO1xuICAgIHNlbGVjdG9yLmRlcGVuZGVuY2llcyA9IGRlcGVuZGVuY2llcztcbiAgICBzZWxlY3Rvci5yZWNvbXB1dGF0aW9ucyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiByZWNvbXB1dGF0aW9ucztcbiAgICB9O1xuICAgIHNlbGVjdG9yLnJlc2V0UmVjb21wdXRhdGlvbnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gcmVjb21wdXRhdGlvbnMgPSAwO1xuICAgIH07XG4gICAgcmV0dXJuIHNlbGVjdG9yO1xuICB9O1xufVxuXG5leHBvcnQgdmFyIGNyZWF0ZVNlbGVjdG9yID0gY3JlYXRlU2VsZWN0b3JDcmVhdG9yKGRlZmF1bHRNZW1vaXplKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN0cnVjdHVyZWRTZWxlY3RvcihzZWxlY3RvcnMpIHtcbiAgdmFyIHNlbGVjdG9yQ3JlYXRvciA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogY3JlYXRlU2VsZWN0b3I7XG5cbiAgaWYgKHR5cGVvZiBzZWxlY3RvcnMgIT09ICdvYmplY3QnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdjcmVhdGVTdHJ1Y3R1cmVkU2VsZWN0b3IgZXhwZWN0cyBmaXJzdCBhcmd1bWVudCB0byBiZSBhbiBvYmplY3QgJyArICgnd2hlcmUgZWFjaCBwcm9wZXJ0eSBpcyBhIHNlbGVjdG9yLCBpbnN0ZWFkIHJlY2VpdmVkIGEgJyArIHR5cGVvZiBzZWxlY3RvcnMpKTtcbiAgfVxuICB2YXIgb2JqZWN0S2V5cyA9IE9iamVjdC5rZXlzKHNlbGVjdG9ycyk7XG4gIHJldHVybiBzZWxlY3RvckNyZWF0b3Iob2JqZWN0S2V5cy5tYXAoZnVuY3Rpb24gKGtleSkge1xuICAgIHJldHVybiBzZWxlY3RvcnNba2V5XTtcbiAgfSksIGZ1bmN0aW9uICgpIHtcbiAgICBmb3IgKHZhciBfbGVuMyA9IGFyZ3VtZW50cy5sZW5ndGgsIHZhbHVlcyA9IEFycmF5KF9sZW4zKSwgX2tleTMgPSAwOyBfa2V5MyA8IF9sZW4zOyBfa2V5MysrKSB7XG4gICAgICB2YWx1ZXNbX2tleTNdID0gYXJndW1lbnRzW19rZXkzXTtcbiAgICB9XG5cbiAgICByZXR1cm4gdmFsdWVzLnJlZHVjZShmdW5jdGlvbiAoY29tcG9zaXRpb24sIHZhbHVlLCBpbmRleCkge1xuICAgICAgY29tcG9zaXRpb25bb2JqZWN0S2V5c1tpbmRleF1dID0gdmFsdWU7XG4gICAgICByZXR1cm4gY29tcG9zaXRpb247XG4gICAgfSwge30pO1xuICB9KTtcbn0iXSwic291cmNlUm9vdCI6IiJ9