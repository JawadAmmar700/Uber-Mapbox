(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/defineProperty.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _defineProperty; }
/* harmony export */ });
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/extends.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _extends; }
/* harmony export */ });
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/objectSpread2.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _objectSpread2; }
/* harmony export */ });
/* harmony import */ var _defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defineProperty.js */ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js");


function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        (0,_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__.default)(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _objectWithoutPropertiesLoose; }
/* harmony export */ });
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

/***/ }),

/***/ "./node_modules/@badrap/bar-of-progress/dist/index.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@badrap/bar-of-progress/dist/index.mjs ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(e){var t=function(e,t){Object.keys(t).forEach(function(o){e[o]=t[o]})},o={size:2,color:"#29e",className:"bar-of-progress",delay:80};e&&t(o,e);var a,i,s={position:"fixed",top:0,left:0,margin:0,padding:0,border:"none",borderRadius:0,backgroundColor:"currentColor",zIndex:1e4,height:"number"==typeof o.size?o.size+"px":o.size,color:o.color,opacity:0,width:"0%"},n={opacity:1,width:"99%",transition:"width 10s cubic-bezier(0.1, 0.05, 0, 1)"},l={opacity:0,width:"100%",transition:"width 0.1s ease-out, opacity 0.5s ease 0.2s"},c={opacity:.4,boxShadow:"3px 0 8px",height:"100%"};this.start=function(){i&&i.parentNode&&i.parentNode.removeChild(i),(i=document.body.appendChild(document.createElement("div"))).className=o.className+" stopped",t(i.style,s);var e=i.appendChild(document.createElement("div"));e.className="glow",t(e.style,c),null!=a&&clearTimeout(a),a=setTimeout(function(){a=null,i.className=o.className+" started",t(i.style,n)},o.delay),i.scrollTop=0},this.finish=function(){null!=a&&(clearTimeout(a),a=null),i&&(i.className=o.className+" finished",t(i.style,l))}}
//# sourceMappingURL=index.mjs.map


/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var C_D_J_S_P_React_Next_All_Projects_Next_Projects_Next_Mapbox_mapbox_node_modules_next_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty */ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../styles/globals.css */ "./styles/globals.css");
/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _material_tailwind_react_tailwind_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @material-tailwind/react/tailwind.css */ "./node_modules/@material-tailwind/react/tailwind.css");
/* harmony import */ var _material_tailwind_react_tailwind_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_material_tailwind_react_tailwind_css__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var _redux_app_store__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../redux/app/store */ "./redux/app/store.js");
/* harmony import */ var _badrap_bar_of_progress__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @badrap/bar-of-progress */ "./node_modules/@badrap/bar-of-progress/dist/index.mjs");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/router */ "./node_modules/next/router.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var react_cookie__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-cookie */ "./node_modules/react-cookie/es6/index.js");
/* module decorator */ module = __webpack_require__.hmd(module);


var _jsxFileName = "C:\\D_J_S_P\\React,Next\\All_Projects\\Next_Projects\\Next_Mapbox\\mapbox\\pages\\_app.js";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,C_D_J_S_P_React_Next_All_Projects_Next_Projects_Next_Mapbox_mapbox_node_modules_next_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }








var progress = new _badrap_bar_of_progress__WEBPACK_IMPORTED_MODULE_6__.default({
  size: 2,
  color: "#38a169",
  className: "bar-of-progress",
  delay: 70
});
next_router__WEBPACK_IMPORTED_MODULE_7___default().events.on("routeChangeStart", progress.start);
next_router__WEBPACK_IMPORTED_MODULE_7___default().events.on("routeChangeComplete", progress.finish);
next_router__WEBPACK_IMPORTED_MODULE_7___default().events.on("routeChangeError", progress.finish);

function MyApp(_ref) {
  var Component = _ref.Component,
      pageProps = _ref.pageProps;
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_redux__WEBPACK_IMPORTED_MODULE_4__.Provider, {
    store: _redux_app_store__WEBPACK_IMPORTED_MODULE_5__.default,
    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_cookie__WEBPACK_IMPORTED_MODULE_8__.CookiesProvider, {
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(Component, _objectSpread({}, pageProps), void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 24,
        columnNumber: 9
      }, this)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 23,
      columnNumber: 7
    }, this)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 22,
    columnNumber: 5
  }, this);
}

_c = MyApp;
/* harmony default export */ __webpack_exports__["default"] = (MyApp);

var _c;

$RefreshReg$(_c, "MyApp");

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }


/***/ }),

/***/ "./redux/app/store.js":
/*!****************************!*\
  !*** ./redux/app/store.js ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @reduxjs/toolkit */ "./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js");
/* harmony import */ var _features_UserSlice__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../features/UserSlice */ "./redux/features/UserSlice.js");
/* harmony import */ var _features_todoSlice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../features/todoSlice */ "./redux/features/todoSlice.js");
/* module decorator */ module = __webpack_require__.hmd(module);



/* harmony default export */ __webpack_exports__["default"] = ((0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__.configureStore)({
  reducer: {
    User: _features_UserSlice__WEBPACK_IMPORTED_MODULE_0__.default,
    Todo: _features_todoSlice__WEBPACK_IMPORTED_MODULE_1__.default
  }
}));

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }


/***/ }),

/***/ "./redux/features/UserSlice.js":
/*!*************************************!*\
  !*** ./redux/features/UserSlice.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UserSlice": function() { return /* binding */ UserSlice; },
/* harmony export */   "Add": function() { return /* binding */ Add; },
/* harmony export */   "Remove": function() { return /* binding */ Remove; },
/* harmony export */   "Check": function() { return /* binding */ Check; },
/* harmony export */   "selectUser": function() { return /* binding */ selectUser; }
/* harmony export */ });
/* harmony import */ var C_D_J_S_P_React_Next_All_Projects_Next_Projects_Next_Mapbox_mapbox_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/regenerator */ "./node_modules/next/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var C_D_J_S_P_React_Next_All_Projects_Next_Projects_Next_Mapbox_mapbox_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(C_D_J_S_P_React_Next_All_Projects_Next_Projects_Next_Mapbox_mapbox_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var C_D_J_S_P_React_Next_All_Projects_Next_Projects_Next_Mapbox_mapbox_node_modules_next_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @reduxjs/toolkit */ "./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);
/* module decorator */ module = __webpack_require__.hmd(module);




var UserSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.createSlice)({
  name: "User",
  initialState: {
    user: null
  },
  reducers: {
    Add: function Add(state, action) {
      state.user = action.payload;

      var fetch = /*#__PURE__*/function () {
        var _ref = (0,C_D_J_S_P_React_Next_All_Projects_Next_Projects_Next_Mapbox_mapbox_node_modules_next_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__.default)( /*#__PURE__*/C_D_J_S_P_React_Next_All_Projects_Next_Projects_Next_Mapbox_mapbox_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {
          return C_D_J_S_P_React_Next_All_Projects_Next_Projects_Next_Mapbox_mapbox_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _context.next = 2;
                  return axios__WEBPACK_IMPORTED_MODULE_2___default().post("api/createUser", {
                    email: action.payload.email
                  }).then(function (res) {
                    return console.log(res);
                  })["catch"](function (err) {
                    return console.log(err);
                  });

                case 2:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        return function fetch() {
          return _ref.apply(this, arguments);
        };
      }();

      fetch();
    },
    Remove: function Remove(state, action) {
      state.user = null;
    },
    Check: function Check(state, action) {
      state.user = action.payload;
    }
  }
});
var _UserSlice$actions = UserSlice.actions,
    Add = _UserSlice$actions.Add,
    Remove = _UserSlice$actions.Remove,
    Check = _UserSlice$actions.Check; // The function below is called a thunk and allows us to perform async logic. It
// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This
// will call the thunk with the `dispatch` function as the first argument. Async
// code can then be executed and other actions can be dispatched
// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state) => state.counter.value)`


var selectUser = function selectUser(state) {
  return state.User.user;
};
/* harmony default export */ __webpack_exports__["default"] = (UserSlice.reducer);

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }


/***/ }),

/***/ "./redux/features/todoSlice.js":
/*!*************************************!*\
  !*** ./redux/features/todoSlice.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TodoReducer": function() { return /* binding */ TodoReducer; },
/* harmony export */   "SetTodo": function() { return /* binding */ SetTodo; },
/* harmony export */   "selectTodo": function() { return /* binding */ selectTodo; }
/* harmony export */ });
/* harmony import */ var C_D_J_S_P_React_Next_All_Projects_Next_Projects_Next_Mapbox_mapbox_node_modules_next_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js");
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @reduxjs/toolkit */ "./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);
/* module decorator */ module = __webpack_require__.hmd(module);



var TodoReducer = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__.createSlice)({
  name: 'Todo',
  initialState: {
    todo: []
  },
  reducers: {
    SetTodo: function SetTodo(state, action) {
      state.todo = (0,C_D_J_S_P_React_Next_All_Projects_Next_Projects_Next_Mapbox_mapbox_node_modules_next_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__.default)(action.payload).reverse();
    }
  }
});
var SetTodo = TodoReducer.actions.SetTodo; // The function below is called a thunk and allows us to perform async logic. It
// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This
// will call the thunk with the `dispatch` function as the first argument. Async
// code can then be executed and other actions can be dispatched
// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state) => state.counter.value)`


var selectTodo = function selectTodo(state) {
  return state.Todo.todo;
};
/* harmony default export */ __webpack_exports__["default"] = (TodoReducer.reducer);

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }


/***/ }),

/***/ "./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MiddlewareArray": function() { return /* binding */ MiddlewareArray; },
/* harmony export */   "configureStore": function() { return /* binding */ configureStore; },
/* harmony export */   "createAction": function() { return /* binding */ createAction; },
/* harmony export */   "createAsyncThunk": function() { return /* binding */ createAsyncThunk; },
/* harmony export */   "createDraftSafeSelector": function() { return /* binding */ createDraftSafeSelector; },
/* harmony export */   "createEntityAdapter": function() { return /* binding */ createEntityAdapter; },
/* harmony export */   "createImmutableStateInvariantMiddleware": function() { return /* binding */ createImmutableStateInvariantMiddleware; },
/* harmony export */   "createNextState": function() { return /* reexport safe */ immer__WEBPACK_IMPORTED_MODULE_2__.default; },
/* harmony export */   "createReducer": function() { return /* binding */ createReducer; },
/* harmony export */   "createSelector": function() { return /* reexport safe */ reselect__WEBPACK_IMPORTED_MODULE_1__.createSelector; },
/* harmony export */   "createSerializableStateInvariantMiddleware": function() { return /* binding */ createSerializableStateInvariantMiddleware; },
/* harmony export */   "createSlice": function() { return /* binding */ createSlice; },
/* harmony export */   "current": function() { return /* reexport safe */ immer__WEBPACK_IMPORTED_MODULE_2__.current; },
/* harmony export */   "findNonSerializableValue": function() { return /* binding */ findNonSerializableValue; },
/* harmony export */   "freeze": function() { return /* reexport safe */ immer__WEBPACK_IMPORTED_MODULE_2__.freeze; },
/* harmony export */   "getDefaultMiddleware": function() { return /* binding */ getDefaultMiddleware; },
/* harmony export */   "getType": function() { return /* binding */ getType; },
/* harmony export */   "isAllOf": function() { return /* binding */ isAllOf; },
/* harmony export */   "isAnyOf": function() { return /* binding */ isAnyOf; },
/* harmony export */   "isAsyncThunkAction": function() { return /* binding */ isAsyncThunkAction; },
/* harmony export */   "isDraft": function() { return /* reexport safe */ immer__WEBPACK_IMPORTED_MODULE_2__.isDraft; },
/* harmony export */   "isFulfilled": function() { return /* binding */ isFulfilled; },
/* harmony export */   "isImmutableDefault": function() { return /* binding */ isImmutableDefault; },
/* harmony export */   "isPending": function() { return /* binding */ isPending; },
/* harmony export */   "isPlain": function() { return /* binding */ isPlain; },
/* harmony export */   "isPlainObject": function() { return /* binding */ isPlainObject; },
/* harmony export */   "isRejected": function() { return /* binding */ isRejected; },
/* harmony export */   "isRejectedWithValue": function() { return /* binding */ isRejectedWithValue; },
/* harmony export */   "miniSerializeError": function() { return /* binding */ miniSerializeError; },
/* harmony export */   "nanoid": function() { return /* binding */ nanoid; },
/* harmony export */   "original": function() { return /* reexport safe */ immer__WEBPACK_IMPORTED_MODULE_2__.original; },
/* harmony export */   "unwrapResult": function() { return /* binding */ unwrapResult; }
/* harmony export */ });
/* harmony import */ var immer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! immer */ "./node_modules/immer/dist/immer.esm.js");
/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! redux */ "./node_modules/redux/es/redux.js");
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in redux__WEBPACK_IMPORTED_MODULE_0__) if(["default","MiddlewareArray","configureStore","createAction","createAsyncThunk","createDraftSafeSelector","createEntityAdapter","createImmutableStateInvariantMiddleware","createNextState","createReducer","createSelector","createSerializableStateInvariantMiddleware","createSlice","current","findNonSerializableValue","freeze","getDefaultMiddleware","getType","isAllOf","isAnyOf","isAsyncThunkAction","isDraft","isFulfilled","isImmutableDefault","isPending","isPlain","isPlainObject","isRejected","isRejectedWithValue","miniSerializeError","nanoid","original","unwrapResult"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return redux__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var reselect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! reselect */ "./node_modules/reselect/es/index.js");
/* harmony import */ var redux_thunk__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! redux-thunk */ "./node_modules/redux-thunk/es/index.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = function (obj, key, value) { return key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value: value }) : obj[key] = value; };
var __spreadValues = function (a, b) {
    for (var prop in b || (b = {}))
        if (__hasOwnProp.call(b, prop))
            __defNormalProp(a, prop, b[prop]);
    if (__getOwnPropSymbols)
        for (var _i = 0, _b = __getOwnPropSymbols(b); _i < _b.length; _i++) {
            var prop = _b[_i];
            if (__propIsEnum.call(b, prop))
                __defNormalProp(a, prop, b[prop]);
        }
    return a;
};
var __spreadProps = function (a, b) { return __defProps(a, __getOwnPropDescs(b)); };
var __async = function (__this, __arguments, generator) {
    return new Promise(function (resolve, reject) {
        var fulfilled = function (value) {
            try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            }
        };
        var rejected = function (value) {
            try {
                step(generator.throw(value));
            }
            catch (e) {
                reject(e);
            }
        };
        var step = function (x) { return x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected); };
        step((generator = generator.apply(__this, __arguments)).next());
    });
};
// src/index.ts




// src/createDraftSafeSelector.ts


var createDraftSafeSelector = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var selector = reselect__WEBPACK_IMPORTED_MODULE_1__.createSelector.apply(void 0, args);
    var wrappedSelector = function (value) {
        var rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            rest[_i - 1] = arguments[_i];
        }
        return selector.apply(void 0, __spreadArray([(0,immer__WEBPACK_IMPORTED_MODULE_2__.isDraft)(value) ? (0,immer__WEBPACK_IMPORTED_MODULE_2__.current)(value) : value], rest));
    };
    return wrappedSelector;
};
// src/configureStore.ts

// src/devtoolsExtension.ts

var composeWithDevTools = typeof window !== "undefined" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : function () {
    if (arguments.length === 0)
        return void 0;
    if (typeof arguments[0] === "object")
        return redux__WEBPACK_IMPORTED_MODULE_0__.compose;
    return redux__WEBPACK_IMPORTED_MODULE_0__.compose.apply(null, arguments);
};
var devToolsEnhancer = typeof window !== "undefined" && window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__ : function () {
    return function (noop) {
        return noop;
    };
};
// src/isPlainObject.ts
function isPlainObject(value) {
    if (typeof value !== "object" || value === null)
        return false;
    var proto = value;
    while (Object.getPrototypeOf(proto) !== null) {
        proto = Object.getPrototypeOf(proto);
    }
    return Object.getPrototypeOf(value) === proto;
}
// src/getDefaultMiddleware.ts

// src/utils.ts
function getTimeMeasureUtils(maxDelay, fnName) {
    var elapsed = 0;
    return {
        measureTime: function (fn) {
            var started = Date.now();
            try {
                return fn();
            }
            finally {
                var finished = Date.now();
                elapsed += finished - started;
            }
        },
        warnIfExceeded: function () {
            if (elapsed > maxDelay) {
                console.warn(fnName + " took " + elapsed + "ms, which is more than the warning threshold of " + maxDelay + "ms. \nIf your state or actions are very large, you may want to disable the middleware as it might cause too much of a slowdown in development mode. See https://redux-toolkit.js.org/api/getDefaultMiddleware for instructions.\nIt is disabled in production builds, so you don't need to worry about that.");
            }
        }
    };
}
var MiddlewareArray = /** @class */ (function (_super) {
    __extends(MiddlewareArray, _super);
    function MiddlewareArray() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = _super.apply(this, args) || this;
        Object.setPrototypeOf(_this, MiddlewareArray.prototype);
        return _this;
    }
    Object.defineProperty(MiddlewareArray, Symbol.species, {
        get: function () {
            return MiddlewareArray;
        },
        enumerable: false,
        configurable: true
    });
    MiddlewareArray.prototype.concat = function () {
        var arr = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            arr[_i] = arguments[_i];
        }
        return _super.prototype.concat.apply(this, arr);
    };
    MiddlewareArray.prototype.prepend = function () {
        var arr = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            arr[_i] = arguments[_i];
        }
        if (arr.length === 1 && Array.isArray(arr[0])) {
            return new (MiddlewareArray.bind.apply(MiddlewareArray, __spreadArray([void 0], arr[0].concat(this))))();
        }
        return new (MiddlewareArray.bind.apply(MiddlewareArray, __spreadArray([void 0], arr.concat(this))))();
    };
    return MiddlewareArray;
}(Array));
// src/immutableStateInvariantMiddleware.ts
var isProduction = "development" === "production";
var prefix = "Invariant failed";
function invariant(condition, message) {
    if (condition) {
        return;
    }
    if (isProduction) {
        throw new Error(prefix);
    }
    throw new Error(prefix + ": " + (message || ""));
}
function stringify(obj, serializer, indent, decycler) {
    return JSON.stringify(obj, getSerialize(serializer, decycler), indent);
}
function getSerialize(serializer, decycler) {
    var stack = [], keys = [];
    if (!decycler)
        decycler = function (_, value) {
            if (stack[0] === value)
                return "[Circular ~]";
            return "[Circular ~." + keys.slice(0, stack.indexOf(value)).join(".") + "]";
        };
    return function (key, value) {
        if (stack.length > 0) {
            var thisPos = stack.indexOf(this);
            ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);
            ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);
            if (~stack.indexOf(value))
                value = decycler.call(this, key, value);
        }
        else
            stack.push(value);
        return serializer == null ? value : serializer.call(this, key, value);
    };
}
function isImmutableDefault(value) {
    return typeof value !== "object" || value === null || typeof value === "undefined" || Object.isFrozen(value);
}
function trackForMutations(isImmutable, ignorePaths, obj) {
    var trackedProperties = trackProperties(isImmutable, ignorePaths, obj);
    return {
        detectMutations: function () {
            return detectMutations(isImmutable, ignorePaths, trackedProperties, obj);
        }
    };
}
function trackProperties(isImmutable, ignorePaths, obj, path) {
    if (ignorePaths === void 0) { ignorePaths = []; }
    if (path === void 0) { path = ""; }
    var tracked = { value: obj };
    if (!isImmutable(obj)) {
        tracked.children = {};
        for (var key in obj) {
            var childPath = path ? path + "." + key : key;
            if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {
                continue;
            }
            tracked.children[key] = trackProperties(isImmutable, ignorePaths, obj[key], childPath);
        }
    }
    return tracked;
}
function detectMutations(isImmutable, ignorePaths, trackedProperty, obj, sameParentRef, path) {
    if (ignorePaths === void 0) { ignorePaths = []; }
    if (sameParentRef === void 0) { sameParentRef = false; }
    if (path === void 0) { path = ""; }
    var prevObj = trackedProperty ? trackedProperty.value : void 0;
    var sameRef = prevObj === obj;
    if (sameParentRef && !sameRef && !Number.isNaN(obj)) {
        return { wasMutated: true, path: path };
    }
    if (isImmutable(prevObj) || isImmutable(obj)) {
        return { wasMutated: false };
    }
    var keysToDetect = {};
    for (var key in trackedProperty.children) {
        keysToDetect[key] = true;
    }
    for (var key in obj) {
        keysToDetect[key] = true;
    }
    for (var key in keysToDetect) {
        var childPath = path ? path + "." + key : key;
        if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {
            continue;
        }
        var result = detectMutations(isImmutable, ignorePaths, trackedProperty.children[key], obj[key], sameRef, childPath);
        if (result.wasMutated) {
            return result;
        }
    }
    return { wasMutated: false };
}
function createImmutableStateInvariantMiddleware(options) {
    if (options === void 0) { options = {}; }
    if (false) {}
    var _b = options.isImmutable, isImmutable = _b === void 0 ? isImmutableDefault : _b, ignoredPaths = options.ignoredPaths, _c = options.warnAfter, warnAfter = _c === void 0 ? 32 : _c, ignore = options.ignore;
    ignoredPaths = ignoredPaths || ignore;
    var track = trackForMutations.bind(null, isImmutable, ignoredPaths);
    return function (_b) {
        var getState = _b.getState;
        var state = getState();
        var tracker = track(state);
        var result;
        return function (next) { return function (action) {
            var measureUtils = getTimeMeasureUtils(warnAfter, "ImmutableStateInvariantMiddleware");
            measureUtils.measureTime(function () {
                state = getState();
                result = tracker.detectMutations();
                tracker = track(state);
                invariant(!result.wasMutated, "A state mutation was detected between dispatches, in the path '" + (result.path || "") + "'.  This may cause incorrect behavior. (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)");
            });
            var dispatchedAction = next(action);
            measureUtils.measureTime(function () {
                state = getState();
                result = tracker.detectMutations();
                tracker = track(state);
                result.wasMutated && invariant(!result.wasMutated, "A state mutation was detected inside a dispatch, in the path: " + (result.path || "") + ". Take a look at the reducer(s) handling the action " + stringify(action) + ". (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)");
            });
            measureUtils.warnIfExceeded();
            return dispatchedAction;
        }; };
    };
}
// src/serializableStateInvariantMiddleware.ts
function isPlain(val) {
    var type = typeof val;
    return type === "undefined" || val === null || type === "string" || type === "boolean" || type === "number" || Array.isArray(val) || isPlainObject(val);
}
function findNonSerializableValue(value, path, isSerializable, getEntries, ignoredPaths) {
    if (path === void 0) { path = ""; }
    if (isSerializable === void 0) { isSerializable = isPlain; }
    if (ignoredPaths === void 0) { ignoredPaths = []; }
    var foundNestedSerializable;
    if (!isSerializable(value)) {
        return {
            keyPath: path || "<root>",
            value: value
        };
    }
    if (typeof value !== "object" || value === null) {
        return false;
    }
    var entries = getEntries != null ? getEntries(value) : Object.entries(value);
    var hasIgnoredPaths = ignoredPaths.length > 0;
    for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
        var _b = entries_1[_i], key = _b[0], nestedValue = _b[1];
        var nestedPath = path ? path + "." + key : key;
        if (hasIgnoredPaths && ignoredPaths.indexOf(nestedPath) >= 0) {
            continue;
        }
        if (!isSerializable(nestedValue)) {
            return {
                keyPath: nestedPath,
                value: nestedValue
            };
        }
        if (typeof nestedValue === "object") {
            foundNestedSerializable = findNonSerializableValue(nestedValue, nestedPath, isSerializable, getEntries, ignoredPaths);
            if (foundNestedSerializable) {
                return foundNestedSerializable;
            }
        }
    }
    return false;
}
function createSerializableStateInvariantMiddleware(options) {
    if (options === void 0) { options = {}; }
    if (false) {}
    var _b = options.isSerializable, isSerializable = _b === void 0 ? isPlain : _b, getEntries = options.getEntries, _c = options.ignoredActions, ignoredActions = _c === void 0 ? [] : _c, _d = options.ignoredActionPaths, ignoredActionPaths = _d === void 0 ? ["meta.arg", "meta.baseQueryMeta"] : _d, _e = options.ignoredPaths, ignoredPaths = _e === void 0 ? [] : _e, _f = options.warnAfter, warnAfter = _f === void 0 ? 32 : _f, _g = options.ignoreState, ignoreState = _g === void 0 ? false : _g;
    return function (storeAPI) { return function (next) { return function (action) {
        if (ignoredActions.length && ignoredActions.indexOf(action.type) !== -1) {
            return next(action);
        }
        var measureUtils = getTimeMeasureUtils(warnAfter, "SerializableStateInvariantMiddleware");
        measureUtils.measureTime(function () {
            var foundActionNonSerializableValue = findNonSerializableValue(action, "", isSerializable, getEntries, ignoredActionPaths);
            if (foundActionNonSerializableValue) {
                var keyPath = foundActionNonSerializableValue.keyPath, value = foundActionNonSerializableValue.value;
                console.error("A non-serializable value was detected in an action, in the path: `" + keyPath + "`. Value:", value, "\nTake a look at the logic that dispatched this action: ", action, "\n(See https://redux.js.org/faq/actions#why-should-type-be-a-string-or-at-least-serializable-why-should-my-action-types-be-constants)", "\n(To allow non-serializable values see: https://redux-toolkit.js.org/usage/usage-guide#working-with-non-serializable-data)");
            }
        });
        var result = next(action);
        if (!ignoreState) {
            measureUtils.measureTime(function () {
                var state = storeAPI.getState();
                var foundStateNonSerializableValue = findNonSerializableValue(state, "", isSerializable, getEntries, ignoredPaths);
                if (foundStateNonSerializableValue) {
                    var keyPath = foundStateNonSerializableValue.keyPath, value = foundStateNonSerializableValue.value;
                    console.error("A non-serializable value was detected in the state, in the path: `" + keyPath + "`. Value:", value, "\nTake a look at the reducer(s) handling this action type: " + action.type + ".\n(See https://redux.js.org/faq/organizing-state#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state)");
                }
            });
            measureUtils.warnIfExceeded();
        }
        return result;
    }; }; };
}
// src/getDefaultMiddleware.ts
function isBoolean(x) {
    return typeof x === "boolean";
}
function curryGetDefaultMiddleware() {
    return function curriedGetDefaultMiddleware(options) {
        return getDefaultMiddleware(options);
    };
}
function getDefaultMiddleware(options) {
    if (options === void 0) { options = {}; }
    var _b = options.thunk, thunk = _b === void 0 ? true : _b, _c = options.immutableCheck, immutableCheck = _c === void 0 ? true : _c, _d = options.serializableCheck, serializableCheck = _d === void 0 ? true : _d;
    var middlewareArray = new MiddlewareArray();
    if (thunk) {
        if (isBoolean(thunk)) {
            middlewareArray.push(redux_thunk__WEBPACK_IMPORTED_MODULE_3__.default);
        }
        else {
            middlewareArray.push(redux_thunk__WEBPACK_IMPORTED_MODULE_3__.default.withExtraArgument(thunk.extraArgument));
        }
    }
    if (true) {
        if (immutableCheck) {
            var immutableOptions = {};
            if (!isBoolean(immutableCheck)) {
                immutableOptions = immutableCheck;
            }
            middlewareArray.unshift(createImmutableStateInvariantMiddleware(immutableOptions));
        }
        if (serializableCheck) {
            var serializableOptions = {};
            if (!isBoolean(serializableCheck)) {
                serializableOptions = serializableCheck;
            }
            middlewareArray.push(createSerializableStateInvariantMiddleware(serializableOptions));
        }
    }
    return middlewareArray;
}
// src/configureStore.ts
var IS_PRODUCTION = "development" === "production";
function configureStore(options) {
    var curriedGetDefaultMiddleware = curryGetDefaultMiddleware();
    var _b = options || {}, _c = _b.reducer, reducer = _c === void 0 ? void 0 : _c, _d = _b.middleware, middleware = _d === void 0 ? curriedGetDefaultMiddleware() : _d, _e = _b.devTools, devTools = _e === void 0 ? true : _e, _f = _b.preloadedState, preloadedState = _f === void 0 ? void 0 : _f, _g = _b.enhancers, enhancers = _g === void 0 ? void 0 : _g;
    var rootReducer;
    if (typeof reducer === "function") {
        rootReducer = reducer;
    }
    else if (isPlainObject(reducer)) {
        rootReducer = (0,redux__WEBPACK_IMPORTED_MODULE_0__.combineReducers)(reducer);
    }
    else {
        throw new Error('"reducer" is a required argument, and must be a function or an object of functions that can be passed to combineReducers');
    }
    var finalMiddleware = middleware;
    if (typeof finalMiddleware === "function") {
        finalMiddleware = finalMiddleware(curriedGetDefaultMiddleware);
        if (!IS_PRODUCTION && !Array.isArray(finalMiddleware)) {
            throw new Error("when using a middleware builder function, an array of middleware must be returned");
        }
    }
    if (!IS_PRODUCTION && finalMiddleware.some(function (item) { return typeof item !== "function"; })) {
        throw new Error("each middleware provided to configureStore must be a function");
    }
    var middlewareEnhancer = redux__WEBPACK_IMPORTED_MODULE_0__.applyMiddleware.apply(void 0, finalMiddleware);
    var finalCompose = redux__WEBPACK_IMPORTED_MODULE_0__.compose;
    if (devTools) {
        finalCompose = composeWithDevTools(__spreadValues({
            trace: !IS_PRODUCTION
        }, typeof devTools === "object" && devTools));
    }
    var storeEnhancers = [middlewareEnhancer];
    if (Array.isArray(enhancers)) {
        storeEnhancers = __spreadArray([middlewareEnhancer], enhancers);
    }
    else if (typeof enhancers === "function") {
        storeEnhancers = enhancers(storeEnhancers);
    }
    var composedEnhancer = finalCompose.apply(void 0, storeEnhancers);
    return (0,redux__WEBPACK_IMPORTED_MODULE_0__.createStore)(rootReducer, preloadedState, composedEnhancer);
}
// src/createAction.ts
function createAction(type, prepareAction) {
    function actionCreator() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (prepareAction) {
            var prepared = prepareAction.apply(void 0, args);
            if (!prepared) {
                throw new Error("prepareAction did not return an object");
            }
            return __spreadValues(__spreadValues({
                type: type,
                payload: prepared.payload
            }, "meta" in prepared && { meta: prepared.meta }), "error" in prepared && { error: prepared.error });
        }
        return { type: type, payload: args[0] };
    }
    actionCreator.toString = function () { return "" + type; };
    actionCreator.type = type;
    actionCreator.match = function (action) { return action.type === type; };
    return actionCreator;
}
function isFSA(action) {
    return isPlainObject(action) && typeof action.type === "string" && Object.keys(action).every(isValidKey);
}
function isValidKey(key) {
    return ["type", "payload", "error", "meta"].indexOf(key) > -1;
}
function getType(actionCreator) {
    return "" + actionCreator;
}
// src/createReducer.ts

// src/mapBuilders.ts
function executeReducerBuilderCallback(builderCallback) {
    var actionsMap = {};
    var actionMatchers = [];
    var defaultCaseReducer;
    var builder = {
        addCase: function (typeOrActionCreator, reducer) {
            if (true) {
                if (actionMatchers.length > 0) {
                    throw new Error("`builder.addCase` should only be called before calling `builder.addMatcher`");
                }
                if (defaultCaseReducer) {
                    throw new Error("`builder.addCase` should only be called before calling `builder.addDefaultCase`");
                }
            }
            var type = typeof typeOrActionCreator === "string" ? typeOrActionCreator : typeOrActionCreator.type;
            if (type in actionsMap) {
                throw new Error("addCase cannot be called with two reducers for the same action type");
            }
            actionsMap[type] = reducer;
            return builder;
        },
        addMatcher: function (matcher, reducer) {
            if (true) {
                if (defaultCaseReducer) {
                    throw new Error("`builder.addMatcher` should only be called before calling `builder.addDefaultCase`");
                }
            }
            actionMatchers.push({ matcher: matcher, reducer: reducer });
            return builder;
        },
        addDefaultCase: function (reducer) {
            if (true) {
                if (defaultCaseReducer) {
                    throw new Error("`builder.addDefaultCase` can only be called once");
                }
            }
            defaultCaseReducer = reducer;
            return builder;
        }
    };
    builderCallback(builder);
    return [actionsMap, actionMatchers, defaultCaseReducer];
}
// src/createReducer.ts
function createReducer(initialState, mapOrBuilderCallback, actionMatchers, defaultCaseReducer) {
    if (actionMatchers === void 0) { actionMatchers = []; }
    var _b = typeof mapOrBuilderCallback === "function" ? executeReducerBuilderCallback(mapOrBuilderCallback) : [mapOrBuilderCallback, actionMatchers, defaultCaseReducer], actionsMap = _b[0], finalActionMatchers = _b[1], finalDefaultCaseReducer = _b[2];
    var frozenInitialState = (0,immer__WEBPACK_IMPORTED_MODULE_2__.default)(initialState, function () {
    });
    return function (state, action) {
        if (state === void 0) { state = frozenInitialState; }
        var caseReducers = __spreadArray([
            actionsMap[action.type]
        ], finalActionMatchers.filter(function (_b) {
            var matcher = _b.matcher;
            return matcher(action);
        }).map(function (_b) {
            var reducer = _b.reducer;
            return reducer;
        }));
        if (caseReducers.filter(function (cr) { return !!cr; }).length === 0) {
            caseReducers = [finalDefaultCaseReducer];
        }
        return caseReducers.reduce(function (previousState, caseReducer) {
            if (caseReducer) {
                if ((0,immer__WEBPACK_IMPORTED_MODULE_2__.isDraft)(previousState)) {
                    var draft = previousState;
                    var result = caseReducer(draft, action);
                    if (typeof result === "undefined") {
                        return previousState;
                    }
                    return result;
                }
                else if (!(0,immer__WEBPACK_IMPORTED_MODULE_2__.isDraftable)(previousState)) {
                    var result = caseReducer(previousState, action);
                    if (typeof result === "undefined") {
                        if (previousState === null) {
                            return previousState;
                        }
                        throw Error("A case reducer on a non-draftable value must not return undefined");
                    }
                    return result;
                }
                else {
                    return (0,immer__WEBPACK_IMPORTED_MODULE_2__.default)(previousState, function (draft) {
                        return caseReducer(draft, action);
                    });
                }
            }
            return previousState;
        }, state);
    };
}
// src/createSlice.ts
function getType2(slice, actionKey) {
    return slice + "/" + actionKey;
}
function createSlice(options) {
    var name = options.name, initialState = options.initialState;
    if (!name) {
        throw new Error("`name` is a required option for createSlice");
    }
    var reducers = options.reducers || {};
    var _b = typeof options.extraReducers === "function" ? executeReducerBuilderCallback(options.extraReducers) : [options.extraReducers], _c = _b[0], extraReducers = _c === void 0 ? {} : _c, _d = _b[1], actionMatchers = _d === void 0 ? [] : _d, _e = _b[2], defaultCaseReducer = _e === void 0 ? void 0 : _e;
    var reducerNames = Object.keys(reducers);
    var sliceCaseReducersByName = {};
    var sliceCaseReducersByType = {};
    var actionCreators = {};
    reducerNames.forEach(function (reducerName) {
        var maybeReducerWithPrepare = reducers[reducerName];
        var type = getType2(name, reducerName);
        var caseReducer;
        var prepareCallback;
        if ("reducer" in maybeReducerWithPrepare) {
            caseReducer = maybeReducerWithPrepare.reducer;
            prepareCallback = maybeReducerWithPrepare.prepare;
        }
        else {
            caseReducer = maybeReducerWithPrepare;
        }
        sliceCaseReducersByName[reducerName] = caseReducer;
        sliceCaseReducersByType[type] = caseReducer;
        actionCreators[reducerName] = prepareCallback ? createAction(type, prepareCallback) : createAction(type);
    });
    var finalCaseReducers = __spreadValues(__spreadValues({}, extraReducers), sliceCaseReducersByType);
    var reducer = createReducer(initialState, finalCaseReducers, actionMatchers, defaultCaseReducer);
    return {
        name: name,
        reducer: reducer,
        actions: actionCreators,
        caseReducers: sliceCaseReducersByName
    };
}
// src/entities/entity_state.ts
function getInitialEntityState() {
    return {
        ids: [],
        entities: {}
    };
}
function createInitialStateFactory() {
    function getInitialState(additionalState) {
        if (additionalState === void 0) { additionalState = {}; }
        return Object.assign(getInitialEntityState(), additionalState);
    }
    return { getInitialState: getInitialState };
}
// src/entities/state_selectors.ts
function createSelectorsFactory() {
    function getSelectors(selectState) {
        var selectIds = function (state) { return state.ids; };
        var selectEntities = function (state) { return state.entities; };
        var selectAll = createDraftSafeSelector(selectIds, selectEntities, function (ids, entities) { return ids.map(function (id) { return entities[id]; }); });
        var selectId = function (_, id) { return id; };
        var selectById = function (entities, id) { return entities[id]; };
        var selectTotal = createDraftSafeSelector(selectIds, function (ids) { return ids.length; });
        if (!selectState) {
            return {
                selectIds: selectIds,
                selectEntities: selectEntities,
                selectAll: selectAll,
                selectTotal: selectTotal,
                selectById: createDraftSafeSelector(selectEntities, selectId, selectById)
            };
        }
        var selectGlobalizedEntities = createDraftSafeSelector(selectState, selectEntities);
        return {
            selectIds: createDraftSafeSelector(selectState, selectIds),
            selectEntities: selectGlobalizedEntities,
            selectAll: createDraftSafeSelector(selectState, selectAll),
            selectTotal: createDraftSafeSelector(selectState, selectTotal),
            selectById: createDraftSafeSelector(selectGlobalizedEntities, selectId, selectById)
        };
    }
    return { getSelectors: getSelectors };
}
// src/entities/state_adapter.ts

function createSingleArgumentStateOperator(mutator) {
    var operator = createStateOperator(function (_, state) { return mutator(state); });
    return function operation(state) {
        return operator(state, void 0);
    };
}
function createStateOperator(mutator) {
    return function operation(state, arg) {
        function isPayloadActionArgument(arg2) {
            return isFSA(arg2);
        }
        var runMutator = function (draft) {
            if (isPayloadActionArgument(arg)) {
                mutator(arg.payload, draft);
            }
            else {
                mutator(arg, draft);
            }
        };
        if ((0,immer__WEBPACK_IMPORTED_MODULE_2__.isDraft)(state)) {
            runMutator(state);
            return state;
        }
        else {
            return (0,immer__WEBPACK_IMPORTED_MODULE_2__.default)(state, runMutator);
        }
    };
}
// src/entities/utils.ts
function selectIdValue(entity, selectId) {
    var key = selectId(entity);
    if ( true && key === void 0) {
        console.warn("The entity passed to the `selectId` implementation returned undefined.", "You should probably provide your own `selectId` implementation.", "The entity that was passed:", entity, "The `selectId` implementation:", selectId.toString());
    }
    return key;
}
function ensureEntitiesArray(entities) {
    if (!Array.isArray(entities)) {
        entities = Object.values(entities);
    }
    return entities;
}
function splitAddedUpdatedEntities(newEntities, selectId, state) {
    newEntities = ensureEntitiesArray(newEntities);
    var added = [];
    var updated = [];
    for (var _i = 0, newEntities_1 = newEntities; _i < newEntities_1.length; _i++) {
        var entity = newEntities_1[_i];
        var id = selectIdValue(entity, selectId);
        if (id in state.entities) {
            updated.push({ id: id, changes: entity });
        }
        else {
            added.push(entity);
        }
    }
    return [added, updated];
}
// src/entities/unsorted_state_adapter.ts
function createUnsortedStateAdapter(selectId) {
    function addOneMutably(entity, state) {
        var key = selectIdValue(entity, selectId);
        if (key in state.entities) {
            return;
        }
        state.ids.push(key);
        state.entities[key] = entity;
    }
    function addManyMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        for (var _i = 0, newEntities_2 = newEntities; _i < newEntities_2.length; _i++) {
            var entity = newEntities_2[_i];
            addOneMutably(entity, state);
        }
    }
    function setOneMutably(entity, state) {
        var key = selectIdValue(entity, selectId);
        if (!(key in state.entities)) {
            state.ids.push(key);
        }
        state.entities[key] = entity;
    }
    function setManyMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        for (var _i = 0, newEntities_3 = newEntities; _i < newEntities_3.length; _i++) {
            var entity = newEntities_3[_i];
            setOneMutably(entity, state);
        }
    }
    function setAllMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        state.ids = [];
        state.entities = {};
        addManyMutably(newEntities, state);
    }
    function removeOneMutably(key, state) {
        return removeManyMutably([key], state);
    }
    function removeManyMutably(keys, state) {
        var didMutate = false;
        keys.forEach(function (key) {
            if (key in state.entities) {
                delete state.entities[key];
                didMutate = true;
            }
        });
        if (didMutate) {
            state.ids = state.ids.filter(function (id) { return id in state.entities; });
        }
    }
    function removeAllMutably(state) {
        Object.assign(state, {
            ids: [],
            entities: {}
        });
    }
    function takeNewKey(keys, update, state) {
        var original2 = state.entities[update.id];
        var updated = Object.assign({}, original2, update.changes);
        var newKey = selectIdValue(updated, selectId);
        var hasNewKey = newKey !== update.id;
        if (hasNewKey) {
            keys[update.id] = newKey;
            delete state.entities[update.id];
        }
        state.entities[newKey] = updated;
        return hasNewKey;
    }
    function updateOneMutably(update, state) {
        return updateManyMutably([update], state);
    }
    function updateManyMutably(updates, state) {
        var newKeys = {};
        var updatesPerEntity = {};
        updates.forEach(function (update) {
            if (update.id in state.entities) {
                updatesPerEntity[update.id] = {
                    id: update.id,
                    changes: __spreadValues(__spreadValues({}, updatesPerEntity[update.id] ? updatesPerEntity[update.id].changes : null), update.changes)
                };
            }
        });
        updates = Object.values(updatesPerEntity);
        var didMutateEntities = updates.length > 0;
        if (didMutateEntities) {
            var didMutateIds = updates.filter(function (update) { return takeNewKey(newKeys, update, state); }).length > 0;
            if (didMutateIds) {
                state.ids = state.ids.map(function (id) { return newKeys[id] || id; });
            }
        }
    }
    function upsertOneMutably(entity, state) {
        return upsertManyMutably([entity], state);
    }
    function upsertManyMutably(newEntities, state) {
        var _b = splitAddedUpdatedEntities(newEntities, selectId, state), added = _b[0], updated = _b[1];
        updateManyMutably(updated, state);
        addManyMutably(added, state);
    }
    return {
        removeAll: createSingleArgumentStateOperator(removeAllMutably),
        addOne: createStateOperator(addOneMutably),
        addMany: createStateOperator(addManyMutably),
        setOne: createStateOperator(setOneMutably),
        setMany: createStateOperator(setManyMutably),
        setAll: createStateOperator(setAllMutably),
        updateOne: createStateOperator(updateOneMutably),
        updateMany: createStateOperator(updateManyMutably),
        upsertOne: createStateOperator(upsertOneMutably),
        upsertMany: createStateOperator(upsertManyMutably),
        removeOne: createStateOperator(removeOneMutably),
        removeMany: createStateOperator(removeManyMutably)
    };
}
// src/entities/sorted_state_adapter.ts
function createSortedStateAdapter(selectId, sort) {
    var _b = createUnsortedStateAdapter(selectId), removeOne = _b.removeOne, removeMany = _b.removeMany, removeAll = _b.removeAll;
    function addOneMutably(entity, state) {
        return addManyMutably([entity], state);
    }
    function addManyMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        var models = newEntities.filter(function (model) { return !(selectIdValue(model, selectId) in state.entities); });
        if (models.length !== 0) {
            merge(models, state);
        }
    }
    function setOneMutably(entity, state) {
        return setManyMutably([entity], state);
    }
    function setManyMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        if (newEntities.length !== 0) {
            merge(newEntities, state);
        }
    }
    function setAllMutably(newEntities, state) {
        newEntities = ensureEntitiesArray(newEntities);
        state.entities = {};
        state.ids = [];
        addManyMutably(newEntities, state);
    }
    function updateOneMutably(update, state) {
        return updateManyMutably([update], state);
    }
    function takeUpdatedModel(models, update, state) {
        if (!(update.id in state.entities)) {
            return false;
        }
        var original2 = state.entities[update.id];
        var updated = Object.assign({}, original2, update.changes);
        var newKey = selectIdValue(updated, selectId);
        delete state.entities[update.id];
        models.push(updated);
        return newKey !== update.id;
    }
    function updateManyMutably(updates, state) {
        var models = [];
        updates.forEach(function (update) { return takeUpdatedModel(models, update, state); });
        if (models.length !== 0) {
            merge(models, state);
        }
    }
    function upsertOneMutably(entity, state) {
        return upsertManyMutably([entity], state);
    }
    function upsertManyMutably(newEntities, state) {
        var _b = splitAddedUpdatedEntities(newEntities, selectId, state), added = _b[0], updated = _b[1];
        updateManyMutably(updated, state);
        addManyMutably(added, state);
    }
    function areArraysEqual(a, b) {
        if (a.length !== b.length) {
            return false;
        }
        for (var i = 0; i < a.length && i < b.length; i++) {
            if (a[i] === b[i]) {
                continue;
            }
            return false;
        }
        return true;
    }
    function merge(models, state) {
        models.forEach(function (model) {
            state.entities[selectId(model)] = model;
        });
        var allEntities = Object.values(state.entities);
        allEntities.sort(sort);
        var newSortedIds = allEntities.map(selectId);
        var ids = state.ids;
        if (!areArraysEqual(ids, newSortedIds)) {
            state.ids = newSortedIds;
        }
    }
    return {
        removeOne: removeOne,
        removeMany: removeMany,
        removeAll: removeAll,
        addOne: createStateOperator(addOneMutably),
        updateOne: createStateOperator(updateOneMutably),
        upsertOne: createStateOperator(upsertOneMutably),
        setOne: createStateOperator(setOneMutably),
        setMany: createStateOperator(setManyMutably),
        setAll: createStateOperator(setAllMutably),
        addMany: createStateOperator(addManyMutably),
        updateMany: createStateOperator(updateManyMutably),
        upsertMany: createStateOperator(upsertManyMutably)
    };
}
// src/entities/create_adapter.ts
function createEntityAdapter(options) {
    if (options === void 0) { options = {}; }
    var _b = __spreadValues({
        sortComparer: false,
        selectId: function (instance) { return instance.id; }
    }, options), selectId = _b.selectId, sortComparer = _b.sortComparer;
    var stateFactory = createInitialStateFactory();
    var selectorsFactory = createSelectorsFactory();
    var stateAdapter = sortComparer ? createSortedStateAdapter(selectId, sortComparer) : createUnsortedStateAdapter(selectId);
    return __spreadValues(__spreadValues(__spreadValues({
        selectId: selectId,
        sortComparer: sortComparer
    }, stateFactory), selectorsFactory), stateAdapter);
}
// src/nanoid.ts
var urlAlphabet = "ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW";
var nanoid = function (size) {
    if (size === void 0) { size = 21; }
    var id = "";
    var i = size;
    while (i--) {
        id += urlAlphabet[Math.random() * 64 | 0];
    }
    return id;
};
// src/createAsyncThunk.ts
var commonProperties = [
    "name",
    "message",
    "stack",
    "code"
];
var RejectWithValue = /** @class */ (function () {
    function RejectWithValue(payload, meta) {
        this.payload = payload;
        this.meta = meta;
    }
    return RejectWithValue;
}());
var FulfillWithMeta = /** @class */ (function () {
    function FulfillWithMeta(payload, meta) {
        this.payload = payload;
        this.meta = meta;
    }
    return FulfillWithMeta;
}());
var miniSerializeError = function (value) {
    if (typeof value === "object" && value !== null) {
        var simpleError = {};
        for (var _i = 0, commonProperties_1 = commonProperties; _i < commonProperties_1.length; _i++) {
            var property = commonProperties_1[_i];
            if (typeof value[property] === "string") {
                simpleError[property] = value[property];
            }
        }
        return simpleError;
    }
    return { message: String(value) };
};
function createAsyncThunk(typePrefix, payloadCreator, options) {
    var fulfilled = createAction(typePrefix + "/fulfilled", function (payload, requestId, arg, meta) { return ({
        payload: payload,
        meta: __spreadProps(__spreadValues({}, meta || {}), {
            arg: arg,
            requestId: requestId,
            requestStatus: "fulfilled"
        })
    }); });
    var pending = createAction(typePrefix + "/pending", function (requestId, arg, meta) { return ({
        payload: void 0,
        meta: __spreadProps(__spreadValues({}, meta || {}), {
            arg: arg,
            requestId: requestId,
            requestStatus: "pending"
        })
    }); });
    var rejected = createAction(typePrefix + "/rejected", function (error, requestId, arg, payload, meta) { return ({
        payload: payload,
        error: (options && options.serializeError || miniSerializeError)(error || "Rejected"),
        meta: __spreadProps(__spreadValues({}, meta || {}), {
            arg: arg,
            requestId: requestId,
            rejectedWithValue: !!payload,
            requestStatus: "rejected",
            aborted: (error == null ? void 0 : error.name) === "AbortError",
            condition: (error == null ? void 0 : error.name) === "ConditionError"
        })
    }); });
    var displayedWarning = false;
    var AC = typeof AbortController !== "undefined" ? AbortController : /** @class */ (function () {
        function class_1() {
            this.signal = {
                aborted: false,
                addEventListener: function () {
                },
                dispatchEvent: function () {
                    return false;
                },
                onabort: function () {
                },
                removeEventListener: function () {
                }
            };
        }
        class_1.prototype.abort = function () {
            if (true) {
                if (!displayedWarning) {
                    displayedWarning = true;
                    console.info("This platform does not implement AbortController. \nIf you want to use the AbortController to react to `abort` events, please consider importing a polyfill like 'abortcontroller-polyfill/dist/abortcontroller-polyfill-only'.");
                }
            }
        };
        return class_1;
    }());
    function actionCreator(arg) {
        return function (dispatch, getState, extra) {
            var _a;
            var requestId = ((_a = options == null ? void 0 : options.idGenerator) != null ? _a : nanoid)();
            var abortController = new AC();
            var abortReason;
            var abortedPromise = new Promise(function (_, reject) { return abortController.signal.addEventListener("abort", function () { return reject({ name: "AbortError", message: abortReason || "Aborted" }); }); });
            var started = false;
            function abort(reason) {
                if (started) {
                    abortReason = reason;
                    abortController.abort();
                }
            }
            var promise = function () {
                return __async(this, null, function () {
                    var _a2, finalAction, err_1, skipDispatch;
                    return __generator(this, function (_b) {
                        switch (_b.label) {
                            case 0:
                                _b.trys.push([0, 2, , 3]);
                                if (options && options.condition && options.condition(arg, { getState: getState, extra: extra }) === false) {
                                    throw {
                                        name: "ConditionError",
                                        message: "Aborted due to condition callback returning false."
                                    };
                                }
                                started = true;
                                dispatch(pending(requestId, arg, (_a2 = options == null ? void 0 : options.getPendingMeta) == null ? void 0 : _a2.call(options, { requestId: requestId, arg: arg }, { getState: getState, extra: extra })));
                                return [4 /*yield*/, Promise.race([
                                        abortedPromise,
                                        Promise.resolve(payloadCreator(arg, {
                                            dispatch: dispatch,
                                            getState: getState,
                                            extra: extra,
                                            requestId: requestId,
                                            signal: abortController.signal,
                                            rejectWithValue: function (value, meta) {
                                                return new RejectWithValue(value, meta);
                                            },
                                            fulfillWithValue: function (value, meta) {
                                                return new FulfillWithMeta(value, meta);
                                            }
                                        })).then(function (result) {
                                            if (result instanceof RejectWithValue) {
                                                throw result;
                                            }
                                            if (result instanceof FulfillWithMeta) {
                                                return fulfilled(result.payload, requestId, arg, result.meta);
                                            }
                                            return fulfilled(result, requestId, arg);
                                        })
                                    ])];
                            case 1:
                                finalAction = _b.sent();
                                return [3 /*break*/, 3];
                            case 2:
                                err_1 = _b.sent();
                                finalAction = err_1 instanceof RejectWithValue ? rejected(null, requestId, arg, err_1.payload, err_1.meta) : rejected(err_1, requestId, arg);
                                return [3 /*break*/, 3];
                            case 3:
                                skipDispatch = options && !options.dispatchConditionRejection && rejected.match(finalAction) && finalAction.meta.condition;
                                if (!skipDispatch) {
                                    dispatch(finalAction);
                                }
                                return [2 /*return*/, finalAction];
                        }
                    });
                });
            }();
            return Object.assign(promise, {
                abort: abort,
                requestId: requestId,
                arg: arg,
                unwrap: function () {
                    return promise.then(unwrapResult);
                }
            });
        };
    }
    return Object.assign(actionCreator, {
        pending: pending,
        rejected: rejected,
        fulfilled: fulfilled,
        typePrefix: typePrefix
    });
}
function unwrapResult(action) {
    if (action.meta && action.meta.rejectedWithValue) {
        throw action.payload;
    }
    if (action.error) {
        throw action.error;
    }
    return action.payload;
}
// src/tsHelpers.ts
var hasMatchFunction = function (v) {
    return v && typeof v.match === "function";
};
// src/matchers.ts
var matches = function (matcher, action) {
    if (hasMatchFunction(matcher)) {
        return matcher.match(action);
    }
    else {
        return matcher(action);
    }
};
function isAnyOf() {
    var matchers = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        matchers[_i] = arguments[_i];
    }
    return function (action) {
        return matchers.some(function (matcher) { return matches(matcher, action); });
    };
}
function isAllOf() {
    var matchers = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        matchers[_i] = arguments[_i];
    }
    return function (action) {
        return matchers.every(function (matcher) { return matches(matcher, action); });
    };
}
function hasExpectedRequestMetadata(action, validStatus) {
    if (!action || !action.meta)
        return false;
    var hasValidRequestId = typeof action.meta.requestId === "string";
    var hasValidRequestStatus = validStatus.indexOf(action.meta.requestStatus) > -1;
    return hasValidRequestId && hasValidRequestStatus;
}
function isAsyncThunkArray(a) {
    return typeof a[0] === "function" && "pending" in a[0] && "fulfilled" in a[0] && "rejected" in a[0];
}
function isPending() {
    var asyncThunks = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        asyncThunks[_i] = arguments[_i];
    }
    if (asyncThunks.length === 0) {
        return function (action) { return hasExpectedRequestMetadata(action, ["pending"]); };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
        return isPending()(asyncThunks[0]);
    }
    return function (action) {
        var matchers = asyncThunks.map(function (asyncThunk) { return asyncThunk.pending; });
        var combinedMatcher = isAnyOf.apply(void 0, matchers);
        return combinedMatcher(action);
    };
}
function isRejected() {
    var asyncThunks = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        asyncThunks[_i] = arguments[_i];
    }
    if (asyncThunks.length === 0) {
        return function (action) { return hasExpectedRequestMetadata(action, ["rejected"]); };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
        return isRejected()(asyncThunks[0]);
    }
    return function (action) {
        var matchers = asyncThunks.map(function (asyncThunk) { return asyncThunk.rejected; });
        var combinedMatcher = isAnyOf.apply(void 0, matchers);
        return combinedMatcher(action);
    };
}
function isRejectedWithValue() {
    var asyncThunks = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        asyncThunks[_i] = arguments[_i];
    }
    var hasFlag = function (action) {
        return action && action.meta && action.meta.rejectedWithValue;
    };
    if (asyncThunks.length === 0) {
        return function (action) {
            var combinedMatcher = isAllOf(isRejected.apply(void 0, asyncThunks), hasFlag);
            return combinedMatcher(action);
        };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
        return isRejectedWithValue()(asyncThunks[0]);
    }
    return function (action) {
        var combinedMatcher = isAllOf(isRejected.apply(void 0, asyncThunks), hasFlag);
        return combinedMatcher(action);
    };
}
function isFulfilled() {
    var asyncThunks = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        asyncThunks[_i] = arguments[_i];
    }
    if (asyncThunks.length === 0) {
        return function (action) { return hasExpectedRequestMetadata(action, ["fulfilled"]); };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
        return isFulfilled()(asyncThunks[0]);
    }
    return function (action) {
        var matchers = asyncThunks.map(function (asyncThunk) { return asyncThunk.fulfilled; });
        var combinedMatcher = isAnyOf.apply(void 0, matchers);
        return combinedMatcher(action);
    };
}
function isAsyncThunkAction() {
    var asyncThunks = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        asyncThunks[_i] = arguments[_i];
    }
    if (asyncThunks.length === 0) {
        return function (action) { return hasExpectedRequestMetadata(action, ["pending", "fulfilled", "rejected"]); };
    }
    if (!isAsyncThunkArray(asyncThunks)) {
        return isAsyncThunkAction()(asyncThunks[0]);
    }
    return function (action) {
        var matchers = [];
        for (var _i = 0, asyncThunks_1 = asyncThunks; _i < asyncThunks_1.length; _i++) {
            var asyncThunk = asyncThunks_1[_i];
            matchers.push(asyncThunk.pending, asyncThunk.rejected, asyncThunk.fulfilled);
        }
        var combinedMatcher = isAnyOf.apply(void 0, matchers);
        return combinedMatcher(action);
    };
}
// src/index.ts
(0,immer__WEBPACK_IMPORTED_MODULE_2__.enableES5)();

//# sourceMappingURL=module.js.map

/***/ }),

/***/ "./node_modules/axios/index.js":
/*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./lib/axios */ "./node_modules/axios/lib/axios.js");

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var settle = __webpack_require__(/*! ./../core/settle */ "./node_modules/axios/lib/core/settle.js");
var cookies = __webpack_require__(/*! ./../helpers/cookies */ "./node_modules/axios/lib/helpers/cookies.js");
var buildURL = __webpack_require__(/*! ./../helpers/buildURL */ "./node_modules/axios/lib/helpers/buildURL.js");
var buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ "./node_modules/axios/lib/core/buildFullPath.js");
var parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ "./node_modules/axios/lib/helpers/parseHeaders.js");
var isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ "./node_modules/axios/lib/helpers/isURLSameOrigin.js");
var createError = __webpack_require__(/*! ../core/createError */ "./node_modules/axios/lib/core/createError.js");

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request.onreadystatechange = function handleLoad() {
      if (!request || request.readyState !== 4) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(createError('Request aborted', config, 'ECONNABORTED', request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
        cookies.read(config.xsrfCookieName) :
        undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (!requestData) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/axios/lib/utils.js");
var bind = __webpack_require__(/*! ./helpers/bind */ "./node_modules/axios/lib/helpers/bind.js");
var Axios = __webpack_require__(/*! ./core/Axios */ "./node_modules/axios/lib/core/Axios.js");
var mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ "./node_modules/axios/lib/core/mergeConfig.js");
var defaults = __webpack_require__(/*! ./defaults */ "./node_modules/axios/lib/defaults.js");

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(mergeConfig(axios.defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ "./node_modules/axios/lib/cancel/Cancel.js");
axios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ "./node_modules/axios/lib/cancel/CancelToken.js");
axios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ "./node_modules/axios/lib/cancel/isCancel.js");

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(/*! ./helpers/spread */ "./node_modules/axios/lib/helpers/spread.js");

// Expose isAxiosError
axios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ "./node_modules/axios/lib/helpers/isAxiosError.js");

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/Cancel.js":
/*!*************************************************!*\
  !*** ./node_modules/axios/lib/cancel/Cancel.js ***!
  \*************************************************/
/***/ (function(module) {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(/*! ./Cancel */ "./node_modules/axios/lib/cancel/Cancel.js");

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/***/ (function(module) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var buildURL = __webpack_require__(/*! ../helpers/buildURL */ "./node_modules/axios/lib/helpers/buildURL.js");
var InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ "./node_modules/axios/lib/core/InterceptorManager.js");
var dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ "./node_modules/axios/lib/core/dispatchRequest.js");
var mergeConfig = __webpack_require__(/*! ./mergeConfig */ "./node_modules/axios/lib/core/mergeConfig.js");

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = arguments[1] || {};
    config.url = arguments[0];
  } else {
    config = config || {};
  }

  config = mergeConfig(this.defaults, config);

  // Set config.method
  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: (config || {}).data
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),

/***/ "./node_modules/axios/lib/core/buildFullPath.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/buildFullPath.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ "./node_modules/axios/lib/helpers/isAbsoluteURL.js");
var combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ "./node_modules/axios/lib/helpers/combineURLs.js");

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */
module.exports = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
};


/***/ }),

/***/ "./node_modules/axios/lib/core/createError.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/createError.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(/*! ./enhanceError */ "./node_modules/axios/lib/core/enhanceError.js");

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var transformData = __webpack_require__(/*! ./transformData */ "./node_modules/axios/lib/core/transformData.js");
var isCancel = __webpack_require__(/*! ../cancel/isCancel */ "./node_modules/axios/lib/cancel/isCancel.js");
var defaults = __webpack_require__(/*! ../defaults */ "./node_modules/axios/lib/defaults.js");

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/core/enhanceError.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/enhanceError.js ***!
  \*****************************************************/
/***/ (function(module) {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  error.isAxiosError = true;

  error.toJSON = function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code
    };
  };
  return error;
};


/***/ }),

/***/ "./node_modules/axios/lib/core/mergeConfig.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/mergeConfig.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/axios/lib/utils.js");

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */
module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  var valueFromConfig2Keys = ['url', 'method', 'data'];
  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];
  var defaultToConfig2Keys = [
    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',
    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',
    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',
    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',
    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'
  ];
  var directMergeKeys = ['validateStatus'];

  function getMergedValue(target, source) {
    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
      return utils.merge(target, source);
    } else if (utils.isPlainObject(source)) {
      return utils.merge({}, source);
    } else if (utils.isArray(source)) {
      return source.slice();
    }
    return source;
  }

  function mergeDeepProperties(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  }

  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    }
  });

  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);

  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  utils.forEach(directMergeKeys, function merge(prop) {
    if (prop in config2) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (prop in config1) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  var axiosKeys = valueFromConfig2Keys
    .concat(mergeDeepPropertiesKeys)
    .concat(defaultToConfig2Keys)
    .concat(directMergeKeys);

  var otherKeys = Object
    .keys(config1)
    .concat(Object.keys(config2))
    .filter(function filterAxiosKeys(key) {
      return axiosKeys.indexOf(key) === -1;
    });

  utils.forEach(otherKeys, mergeDeepProperties);

  return config;
};


/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(/*! ./createError */ "./node_modules/axios/lib/core/createError.js");

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),

/***/ "./node_modules/axios/lib/defaults.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/defaults.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
/* provided dependency */ var process = __webpack_require__(/*! process */ "./node_modules/process/browser.js");


var utils = __webpack_require__(/*! ./utils */ "./node_modules/axios/lib/utils.js");
var normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ "./node_modules/axios/lib/helpers/normalizeHeaderName.js");

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(/*! ./adapters/xhr */ "./node_modules/axios/lib/adapters/xhr.js");
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = __webpack_require__(/*! ./adapters/http */ "./node_modules/axios/lib/adapters/xhr.js");
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,
  maxBodyLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;


/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/***/ (function(module) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

function encode(val) {
  return encodeURIComponent(val).
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/***/ (function(module) {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
    (function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + '=' + encodeURIComponent(value));

          if (utils.isNumber(expires)) {
            cookie.push('expires=' + new Date(expires).toGMTString());
          }

          if (utils.isString(path)) {
            cookie.push('path=' + path);
          }

          if (utils.isString(domain)) {
            cookie.push('domain=' + domain);
          }

          if (secure === true) {
            cookie.push('secure');
          }

          document.cookie = cookie.join('; ');
        },

        read: function read(name) {
          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
          return (match ? decodeURIComponent(match[3]) : null);
        },

        remove: function remove(name) {
          this.write(name, '', Date.now() - 86400000);
        }
      };
    })() :

  // Non standard browser env (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return {
        write: function write() {},
        read: function read() { return null; },
        remove: function remove() {}
      };
    })()
);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/***/ (function(module) {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAxiosError.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAxiosError.js ***!
  \********************************************************/
/***/ (function(module) {

"use strict";


/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */
module.exports = function isAxiosError(payload) {
  return (typeof payload === 'object') && (payload.isAxiosError === true);
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
    (function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement('a');
      var originURL;

      /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
      function resolveURL(url) {
        var href = url;

        if (msie) {
        // IE needs attribute set twice to normalize properties
          urlParsingNode.setAttribute('href', href);
          href = urlParsingNode.href;
        }

        urlParsingNode.setAttribute('href', href);

        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
            urlParsingNode.pathname :
            '/' + urlParsingNode.pathname
        };
      }

      originURL = resolveURL(window.location.href);

      /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
      return function isURLSameOrigin(requestURL) {
        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
        return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
      };
    })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    })()
);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!***************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/axios/lib/utils.js");

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/***/ (function(module) {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(/*! ./helpers/bind */ "./node_modules/axios/lib/helpers/bind.js");

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a plain Object
 *
 * @param {Object} val The value to test
 * @return {boolean} True if value is a plain Object, otherwise false
 */
function isPlainObject(val) {
  if (toString.call(val) !== '[object Object]') {
    return false;
  }

  var prototype = Object.getPrototypeOf(val);
  return prototype === null || prototype === Object.prototype;
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
                                           navigator.product === 'NativeScript' ||
                                           navigator.product === 'NS')) {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (isPlainObject(result[key]) && isPlainObject(val)) {
      result[key] = merge(result[key], val);
    } else if (isPlainObject(val)) {
      result[key] = merge({}, val);
    } else if (isArray(val)) {
      result[key] = val.slice();
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 * @return {string} content value without BOM
 */
function stripBOM(content) {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }
  return content;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isPlainObject: isPlainObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim,
  stripBOM: stripBOM
};


/***/ }),

/***/ "./node_modules/cookie/index.js":
/*!**************************************!*\
  !*** ./node_modules/cookie/index.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
/*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */



/**
 * Module exports.
 * @public
 */

exports.parse = parse;
exports.serialize = serialize;

/**
 * Module variables.
 * @private
 */

var decode = decodeURIComponent;
var encode = encodeURIComponent;
var pairSplitRegExp = /; */;

/**
 * RegExp to match field-content in RFC 7230 sec 3.2
 *
 * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]
 * field-vchar   = VCHAR / obs-text
 * obs-text      = %x80-FF
 */

var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;

/**
 * Parse a cookie header.
 *
 * Parse the given cookie header string into an object
 * The object has the various cookies as keys(names) => values
 *
 * @param {string} str
 * @param {object} [options]
 * @return {object}
 * @public
 */

function parse(str, options) {
  if (typeof str !== 'string') {
    throw new TypeError('argument str must be a string');
  }

  var obj = {}
  var opt = options || {};
  var pairs = str.split(pairSplitRegExp);
  var dec = opt.decode || decode;

  for (var i = 0; i < pairs.length; i++) {
    var pair = pairs[i];
    var eq_idx = pair.indexOf('=');

    // skip things that don't look like key=value
    if (eq_idx < 0) {
      continue;
    }

    var key = pair.substr(0, eq_idx).trim()
    var val = pair.substr(++eq_idx, pair.length).trim();

    // quoted values
    if ('"' == val[0]) {
      val = val.slice(1, -1);
    }

    // only assign once
    if (undefined == obj[key]) {
      obj[key] = tryDecode(val, dec);
    }
  }

  return obj;
}

/**
 * Serialize data into a cookie header.
 *
 * Serialize the a name value pair into a cookie string suitable for
 * http headers. An optional options object specified cookie parameters.
 *
 * serialize('foo', 'bar', { httpOnly: true })
 *   => "foo=bar; httpOnly"
 *
 * @param {string} name
 * @param {string} val
 * @param {object} [options]
 * @return {string}
 * @public
 */

function serialize(name, val, options) {
  var opt = options || {};
  var enc = opt.encode || encode;

  if (typeof enc !== 'function') {
    throw new TypeError('option encode is invalid');
  }

  if (!fieldContentRegExp.test(name)) {
    throw new TypeError('argument name is invalid');
  }

  var value = enc(val);

  if (value && !fieldContentRegExp.test(value)) {
    throw new TypeError('argument val is invalid');
  }

  var str = name + '=' + value;

  if (null != opt.maxAge) {
    var maxAge = opt.maxAge - 0;

    if (isNaN(maxAge) || !isFinite(maxAge)) {
      throw new TypeError('option maxAge is invalid')
    }

    str += '; Max-Age=' + Math.floor(maxAge);
  }

  if (opt.domain) {
    if (!fieldContentRegExp.test(opt.domain)) {
      throw new TypeError('option domain is invalid');
    }

    str += '; Domain=' + opt.domain;
  }

  if (opt.path) {
    if (!fieldContentRegExp.test(opt.path)) {
      throw new TypeError('option path is invalid');
    }

    str += '; Path=' + opt.path;
  }

  if (opt.expires) {
    if (typeof opt.expires.toUTCString !== 'function') {
      throw new TypeError('option expires is invalid');
    }

    str += '; Expires=' + opt.expires.toUTCString();
  }

  if (opt.httpOnly) {
    str += '; HttpOnly';
  }

  if (opt.secure) {
    str += '; Secure';
  }

  if (opt.sameSite) {
    var sameSite = typeof opt.sameSite === 'string'
      ? opt.sameSite.toLowerCase() : opt.sameSite;

    switch (sameSite) {
      case true:
        str += '; SameSite=Strict';
        break;
      case 'lax':
        str += '; SameSite=Lax';
        break;
      case 'strict':
        str += '; SameSite=Strict';
        break;
      case 'none':
        str += '; SameSite=None';
        break;
      default:
        throw new TypeError('option sameSite is invalid');
    }
  }

  return str;
}

/**
 * Try decoding a string using a decoding function.
 *
 * @param {string} str
 * @param {function} decode
 * @private
 */

function tryDecode(str, decode) {
  try {
    return decode(str);
  } catch (e) {
    return str;
  }
}


/***/ }),

/***/ "./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js ***!
  \**********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


var reactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  '$$typeof': true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  '$$typeof': true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

function getStatics(component) {
  // React v16.11 and below
  if (reactIs.isMemo(component)) {
    return MEMO_STATICS;
  } // React v16.12 and above


  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== 'string') {
    // don't hoist over string (html) components
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf(sourceComponent);

      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }

    var keys = getOwnPropertyNames(sourceComponent);

    if (getOwnPropertySymbols) {
      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
    }

    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

        try {
          // Avoid failures from read-only properties
          defineProperty(targetComponent, key, descriptor);
        } catch (e) {}
      }
    }
  }

  return targetComponent;
}

module.exports = hoistNonReactStatics;


/***/ }),

/***/ "./node_modules/immer/dist/immer.esm.js":
/*!**********************************************!*\
  !*** ./node_modules/immer/dist/immer.esm.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Immer": function() { return /* binding */ un; },
/* harmony export */   "applyPatches": function() { return /* binding */ pn; },
/* harmony export */   "castDraft": function() { return /* binding */ K; },
/* harmony export */   "castImmutable": function() { return /* binding */ $; },
/* harmony export */   "createDraft": function() { return /* binding */ ln; },
/* harmony export */   "current": function() { return /* binding */ D; },
/* harmony export */   "enableAllPlugins": function() { return /* binding */ J; },
/* harmony export */   "enableES5": function() { return /* binding */ N; },
/* harmony export */   "enableMapSet": function() { return /* binding */ C; },
/* harmony export */   "enablePatches": function() { return /* binding */ T; },
/* harmony export */   "finishDraft": function() { return /* binding */ dn; },
/* harmony export */   "freeze": function() { return /* binding */ d; },
/* harmony export */   "immerable": function() { return /* binding */ L; },
/* harmony export */   "isDraft": function() { return /* binding */ t; },
/* harmony export */   "isDraftable": function() { return /* binding */ r; },
/* harmony export */   "nothing": function() { return /* binding */ H; },
/* harmony export */   "original": function() { return /* binding */ e; },
/* harmony export */   "produce": function() { return /* binding */ fn; },
/* harmony export */   "produceWithPatches": function() { return /* binding */ cn; },
/* harmony export */   "setAutoFreeze": function() { return /* binding */ sn; },
/* harmony export */   "setUseProxies": function() { return /* binding */ vn; }
/* harmony export */ });
function n(n){for(var t=arguments.length,r=Array(t>1?t-1:0),e=1;e<t;e++)r[e-1]=arguments[e];if(true){var i=Y[n],o=i?"function"==typeof i?i.apply(null,r):i:"unknown error nr: "+n;throw Error("[Immer] "+o)}throw Error("[Immer] minified error nr: "+n+(r.length?" "+r.map((function(n){return"'"+n+"'"})).join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function t(n){return!!n&&!!n[Q]}function r(n){return!!n&&(function(n){if(!n||"object"!=typeof n)return!1;var t=Object.getPrototypeOf(n);if(null===t)return!0;var r=Object.hasOwnProperty.call(t,"constructor")&&t.constructor;return r===Object||"function"==typeof r&&Function.toString.call(r)===Z}(n)||Array.isArray(n)||!!n[L]||!!n.constructor[L]||s(n)||v(n))}function e(r){return t(r)||n(23,r),r[Q].t}function i(n,t,r){void 0===r&&(r=!1),0===o(n)?(r?Object.keys:nn)(n).forEach((function(e){r&&"symbol"==typeof e||t(e,n[e],n)})):n.forEach((function(r,e){return t(e,r,n)}))}function o(n){var t=n[Q];return t?t.i>3?t.i-4:t.i:Array.isArray(n)?1:s(n)?2:v(n)?3:0}function u(n,t){return 2===o(n)?n.has(t):Object.prototype.hasOwnProperty.call(n,t)}function a(n,t){return 2===o(n)?n.get(t):n[t]}function f(n,t,r){var e=o(n);2===e?n.set(t,r):3===e?(n.delete(t),n.add(r)):n[t]=r}function c(n,t){return n===t?0!==n||1/n==1/t:n!=n&&t!=t}function s(n){return X&&n instanceof Map}function v(n){return q&&n instanceof Set}function p(n){return n.o||n.t}function l(n){if(Array.isArray(n))return Array.prototype.slice.call(n);var t=tn(n);delete t[Q];for(var r=nn(t),e=0;e<r.length;e++){var i=r[e],o=t[i];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(t[i]={configurable:!0,writable:!0,enumerable:o.enumerable,value:n[i]})}return Object.create(Object.getPrototypeOf(n),t)}function d(n,e){return void 0===e&&(e=!1),y(n)||t(n)||!r(n)?n:(o(n)>1&&(n.set=n.add=n.clear=n.delete=h),Object.freeze(n),e&&i(n,(function(n,t){return d(t,!0)}),!0),n)}function h(){n(2)}function y(n){return null==n||"object"!=typeof n||Object.isFrozen(n)}function b(t){var r=rn[t];return r||n(18,t),r}function m(n,t){rn[n]||(rn[n]=t)}function _(){return false||U||n(0),U}function j(n,t){t&&(b("Patches"),n.u=[],n.s=[],n.v=t)}function O(n){g(n),n.p.forEach(S),n.p=null}function g(n){n===U&&(U=n.l)}function w(n){return U={p:[],l:U,h:n,m:!0,_:0}}function S(n){var t=n[Q];0===t.i||1===t.i?t.j():t.O=!0}function P(t,e){e._=e.p.length;var i=e.p[0],o=void 0!==t&&t!==i;return e.h.g||b("ES5").S(e,t,o),o?(i[Q].P&&(O(e),n(4)),r(t)&&(t=M(e,t),e.l||x(e,t)),e.u&&b("Patches").M(i[Q],t,e.u,e.s)):t=M(e,i,[]),O(e),e.u&&e.v(e.u,e.s),t!==H?t:void 0}function M(n,t,r){if(y(t))return t;var e=t[Q];if(!e)return i(t,(function(i,o){return A(n,e,t,i,o,r)}),!0),t;if(e.A!==n)return t;if(!e.P)return x(n,e.t,!0),e.t;if(!e.I){e.I=!0,e.A._--;var o=4===e.i||5===e.i?e.o=l(e.k):e.o;i(3===e.i?new Set(o):o,(function(t,i){return A(n,e,o,t,i,r)})),x(n,o,!1),r&&n.u&&b("Patches").R(e,r,n.u,n.s)}return e.o}function A(e,i,o,a,c,s){if( true&&c===o&&n(5),t(c)){var v=M(e,c,s&&i&&3!==i.i&&!u(i.D,a)?s.concat(a):void 0);if(f(o,a,v),!t(v))return;e.m=!1}if(r(c)&&!y(c)){if(!e.h.F&&e._<1)return;M(e,c),i&&i.A.l||x(e,c)}}function x(n,t,r){void 0===r&&(r=!1),n.h.F&&n.m&&d(t,r)}function z(n,t){var r=n[Q];return(r?p(r):n)[t]}function I(n,t){if(t in n)for(var r=Object.getPrototypeOf(n);r;){var e=Object.getOwnPropertyDescriptor(r,t);if(e)return e;r=Object.getPrototypeOf(r)}}function k(n){n.P||(n.P=!0,n.l&&k(n.l))}function E(n){n.o||(n.o=l(n.t))}function R(n,t,r){var e=s(t)?b("MapSet").N(t,r):v(t)?b("MapSet").T(t,r):n.g?function(n,t){var r=Array.isArray(n),e={i:r?1:0,A:t?t.A:_(),P:!1,I:!1,D:{},l:t,t:n,k:null,o:null,j:null,C:!1},i=e,o=en;r&&(i=[e],o=on);var u=Proxy.revocable(i,o),a=u.revoke,f=u.proxy;return e.k=f,e.j=a,f}(t,r):b("ES5").J(t,r);return(r?r.A:_()).p.push(e),e}function D(e){return t(e)||n(22,e),function n(t){if(!r(t))return t;var e,u=t[Q],c=o(t);if(u){if(!u.P&&(u.i<4||!b("ES5").K(u)))return u.t;u.I=!0,e=F(t,c),u.I=!1}else e=F(t,c);return i(e,(function(t,r){u&&a(u.t,t)===r||f(e,t,n(r))})),3===c?new Set(e):e}(e)}function F(n,t){switch(t){case 2:return new Map(n);case 3:return Array.from(n)}return l(n)}function N(){function r(n,t){var r=s[n];return r?r.enumerable=t:s[n]=r={configurable:!0,enumerable:t,get:function(){var t=this[Q];return true&&f(t),en.get(t,n)},set:function(t){var r=this[Q]; true&&f(r),en.set(r,n,t)}},r}function e(n){for(var t=n.length-1;t>=0;t--){var r=n[t][Q];if(!r.P)switch(r.i){case 5:a(r)&&k(r);break;case 4:o(r)&&k(r)}}}function o(n){for(var t=n.t,r=n.k,e=nn(r),i=e.length-1;i>=0;i--){var o=e[i];if(o!==Q){var a=t[o];if(void 0===a&&!u(t,o))return!0;var f=r[o],s=f&&f[Q];if(s?s.t!==a:!c(f,a))return!0}}var v=!!t[Q];return e.length!==nn(t).length+(v?0:1)}function a(n){var t=n.k;if(t.length!==n.t.length)return!0;var r=Object.getOwnPropertyDescriptor(t,t.length-1);return!(!r||r.get)}function f(t){t.O&&n(3,JSON.stringify(p(t)))}var s={};m("ES5",{J:function(n,t){var e=Array.isArray(n),i=function(n,t){if(n){for(var e=Array(t.length),i=0;i<t.length;i++)Object.defineProperty(e,""+i,r(i,!0));return e}var o=tn(t);delete o[Q];for(var u=nn(o),a=0;a<u.length;a++){var f=u[a];o[f]=r(f,n||!!o[f].enumerable)}return Object.create(Object.getPrototypeOf(t),o)}(e,n),o={i:e?5:4,A:t?t.A:_(),P:!1,I:!1,D:{},l:t,t:n,k:i,o:null,O:!1,C:!1};return Object.defineProperty(i,Q,{value:o,writable:!0}),i},S:function(n,r,o){o?t(r)&&r[Q].A===n&&e(n.p):(n.u&&function n(t){if(t&&"object"==typeof t){var r=t[Q];if(r){var e=r.t,o=r.k,f=r.D,c=r.i;if(4===c)i(o,(function(t){t!==Q&&(void 0!==e[t]||u(e,t)?f[t]||n(o[t]):(f[t]=!0,k(r)))})),i(e,(function(n){void 0!==o[n]||u(o,n)||(f[n]=!1,k(r))}));else if(5===c){if(a(r)&&(k(r),f.length=!0),o.length<e.length)for(var s=o.length;s<e.length;s++)f[s]=!1;else for(var v=e.length;v<o.length;v++)f[v]=!0;for(var p=Math.min(o.length,e.length),l=0;l<p;l++)void 0===f[l]&&n(o[l])}}}}(n.p[0]),e(n.p))},K:function(n){return 4===n.i?o(n):a(n)}})}function T(){function e(n){if(!r(n))return n;if(Array.isArray(n))return n.map(e);if(s(n))return new Map(Array.from(n.entries()).map((function(n){return[n[0],e(n[1])]})));if(v(n))return new Set(Array.from(n).map(e));var t=Object.create(Object.getPrototypeOf(n));for(var i in n)t[i]=e(n[i]);return u(n,L)&&(t[L]=n[L]),t}function f(n){return t(n)?e(n):n}var c="add";m("Patches",{$:function(t,r){return r.forEach((function(r){for(var i=r.path,u=r.op,f=t,s=0;s<i.length-1;s++){var v=o(f),p=i[s];0!==v&&1!==v||"__proto__"!==p&&"constructor"!==p||n(24),"function"==typeof f&&"prototype"===p&&n(24),"object"!=typeof(f=a(f,p))&&n(15,i.join("/"))}var l=o(f),d=e(r.value),h=i[i.length-1];switch(u){case"replace":switch(l){case 2:return f.set(h,d);case 3:n(16);default:return f[h]=d}case c:switch(l){case 1:return f.splice(h,0,d);case 2:return f.set(h,d);case 3:return f.add(d);default:return f[h]=d}case"remove":switch(l){case 1:return f.splice(h,1);case 2:return f.delete(h);case 3:return f.delete(r.value);default:return delete f[h]}default:n(17,u)}})),t},R:function(n,t,r,e){switch(n.i){case 0:case 4:case 2:return function(n,t,r,e){var o=n.t,s=n.o;i(n.D,(function(n,i){var v=a(o,n),p=a(s,n),l=i?u(o,n)?"replace":c:"remove";if(v!==p||"replace"!==l){var d=t.concat(n);r.push("remove"===l?{op:l,path:d}:{op:l,path:d,value:p}),e.push(l===c?{op:"remove",path:d}:"remove"===l?{op:c,path:d,value:f(v)}:{op:"replace",path:d,value:f(v)})}}))}(n,t,r,e);case 5:case 1:return function(n,t,r,e){var i=n.t,o=n.D,u=n.o;if(u.length<i.length){var a=[u,i];i=a[0],u=a[1];var s=[e,r];r=s[0],e=s[1]}for(var v=0;v<i.length;v++)if(o[v]&&u[v]!==i[v]){var p=t.concat([v]);r.push({op:"replace",path:p,value:f(u[v])}),e.push({op:"replace",path:p,value:f(i[v])})}for(var l=i.length;l<u.length;l++){var d=t.concat([l]);r.push({op:c,path:d,value:f(u[l])})}i.length<u.length&&e.push({op:"replace",path:t.concat(["length"]),value:i.length})}(n,t,r,e);case 3:return function(n,t,r,e){var i=n.t,o=n.o,u=0;i.forEach((function(n){if(!o.has(n)){var i=t.concat([u]);r.push({op:"remove",path:i,value:n}),e.unshift({op:c,path:i,value:n})}u++})),u=0,o.forEach((function(n){if(!i.has(n)){var o=t.concat([u]);r.push({op:c,path:o,value:n}),e.unshift({op:"remove",path:o,value:n})}u++}))}(n,t,r,e)}},M:function(n,t,r,e){r.push({op:"replace",path:[],value:t===H?void 0:t}),e.push({op:"replace",path:[],value:n.t})}})}function C(){function t(n,t){function r(){this.constructor=n}a(n,t),n.prototype=(r.prototype=t.prototype,new r)}function e(n){n.o||(n.D=new Map,n.o=new Map(n.t))}function o(n){n.o||(n.o=new Set,n.t.forEach((function(t){if(r(t)){var e=R(n.A.h,t,n);n.p.set(t,e),n.o.add(e)}else n.o.add(t)})))}function u(t){t.O&&n(3,JSON.stringify(p(t)))}var a=function(n,t){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)t.hasOwnProperty(r)&&(n[r]=t[r])})(n,t)},f=function(){function n(n,t){return this[Q]={i:2,l:t,A:t?t.A:_(),P:!1,I:!1,o:void 0,D:void 0,t:n,k:this,C:!1,O:!1},this}t(n,Map);var o=n.prototype;return Object.defineProperty(o,"size",{get:function(){return p(this[Q]).size}}),o.has=function(n){return p(this[Q]).has(n)},o.set=function(n,t){var r=this[Q];return u(r),p(r).has(n)&&p(r).get(n)===t||(e(r),k(r),r.D.set(n,!0),r.o.set(n,t),r.D.set(n,!0)),this},o.delete=function(n){if(!this.has(n))return!1;var t=this[Q];return u(t),e(t),k(t),t.D.set(n,!1),t.o.delete(n),!0},o.clear=function(){var n=this[Q];u(n),p(n).size&&(e(n),k(n),n.D=new Map,i(n.t,(function(t){n.D.set(t,!1)})),n.o.clear())},o.forEach=function(n,t){var r=this;p(this[Q]).forEach((function(e,i){n.call(t,r.get(i),i,r)}))},o.get=function(n){var t=this[Q];u(t);var i=p(t).get(n);if(t.I||!r(i))return i;if(i!==t.t.get(n))return i;var o=R(t.A.h,i,t);return e(t),t.o.set(n,o),o},o.keys=function(){return p(this[Q]).keys()},o.values=function(){var n,t=this,r=this.keys();return(n={})[V]=function(){return t.values()},n.next=function(){var n=r.next();return n.done?n:{done:!1,value:t.get(n.value)}},n},o.entries=function(){var n,t=this,r=this.keys();return(n={})[V]=function(){return t.entries()},n.next=function(){var n=r.next();if(n.done)return n;var e=t.get(n.value);return{done:!1,value:[n.value,e]}},n},o[V]=function(){return this.entries()},n}(),c=function(){function n(n,t){return this[Q]={i:3,l:t,A:t?t.A:_(),P:!1,I:!1,o:void 0,t:n,k:this,p:new Map,O:!1,C:!1},this}t(n,Set);var r=n.prototype;return Object.defineProperty(r,"size",{get:function(){return p(this[Q]).size}}),r.has=function(n){var t=this[Q];return u(t),t.o?!!t.o.has(n)||!(!t.p.has(n)||!t.o.has(t.p.get(n))):t.t.has(n)},r.add=function(n){var t=this[Q];return u(t),this.has(n)||(o(t),k(t),t.o.add(n)),this},r.delete=function(n){if(!this.has(n))return!1;var t=this[Q];return u(t),o(t),k(t),t.o.delete(n)||!!t.p.has(n)&&t.o.delete(t.p.get(n))},r.clear=function(){var n=this[Q];u(n),p(n).size&&(o(n),k(n),n.o.clear())},r.values=function(){var n=this[Q];return u(n),o(n),n.o.values()},r.entries=function(){var n=this[Q];return u(n),o(n),n.o.entries()},r.keys=function(){return this.values()},r[V]=function(){return this.values()},r.forEach=function(n,t){for(var r=this.values(),e=r.next();!e.done;)n.call(t,e.value,e.value,this),e=r.next()},n}();m("MapSet",{N:function(n,t){return new f(n,t)},T:function(n,t){return new c(n,t)}})}function J(){N(),C(),T()}function K(n){return n}function $(n){return n}var G,U,W="undefined"!=typeof Symbol&&"symbol"==typeof Symbol("x"),X="undefined"!=typeof Map,q="undefined"!=typeof Set,B="undefined"!=typeof Proxy&&void 0!==Proxy.revocable&&"undefined"!=typeof Reflect,H=W?Symbol.for("immer-nothing"):((G={})["immer-nothing"]=!0,G),L=W?Symbol.for("immer-draftable"):"__$immer_draftable",Q=W?Symbol.for("immer-state"):"__$immer_state",V="undefined"!=typeof Symbol&&Symbol.iterator||"@@iterator",Y={0:"Illegal state",1:"Immer drafts cannot have computed properties",2:"This object has been frozen and should not be mutated",3:function(n){return"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? "+n},4:"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.",5:"Immer forbids circular references",6:"The first or second argument to `produce` must be a function",7:"The third argument to `produce` must be a function or undefined",8:"First argument to `createDraft` must be a plain object, an array, or an immerable object",9:"First argument to `finishDraft` must be a draft returned by `createDraft`",10:"The given draft is already finalized",11:"Object.defineProperty() cannot be used on an Immer draft",12:"Object.setPrototypeOf() cannot be used on an Immer draft",13:"Immer only supports deleting array indices",14:"Immer only supports setting array indices and the 'length' property",15:function(n){return"Cannot apply patch, path doesn't resolve: "+n},16:'Sets cannot have "replace" patches.',17:function(n){return"Unsupported patch operation: "+n},18:function(n){return"The plugin for '"+n+"' has not been loaded into Immer. To enable the plugin, import and call `enable"+n+"()` when initializing your application."},20:"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available",21:function(n){return"produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '"+n+"'"},22:function(n){return"'current' expects a draft, got: "+n},23:function(n){return"'original' expects a draft, got: "+n},24:"Patching reserved attributes like __proto__, prototype and constructor is not allowed"},Z=""+Object.prototype.constructor,nn="undefined"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(n){return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n))}:Object.getOwnPropertyNames,tn=Object.getOwnPropertyDescriptors||function(n){var t={};return nn(n).forEach((function(r){t[r]=Object.getOwnPropertyDescriptor(n,r)})),t},rn={},en={get:function(n,t){if(t===Q)return n;var e=p(n);if(!u(e,t))return function(n,t,r){var e,i=I(t,r);return i?"value"in i?i.value:null===(e=i.get)||void 0===e?void 0:e.call(n.k):void 0}(n,e,t);var i=e[t];return n.I||!r(i)?i:i===z(n.t,t)?(E(n),n.o[t]=R(n.A.h,i,n)):i},has:function(n,t){return t in p(n)},ownKeys:function(n){return Reflect.ownKeys(p(n))},set:function(n,t,r){var e=I(p(n),t);if(null==e?void 0:e.set)return e.set.call(n.k,r),!0;if(!n.P){var i=z(p(n),t),o=null==i?void 0:i[Q];if(o&&o.t===r)return n.o[t]=r,n.D[t]=!1,!0;if(c(r,i)&&(void 0!==r||u(n.t,t)))return!0;E(n),k(n)}return n.o[t]===r&&"number"!=typeof r&&(void 0!==r||t in n.o)||(n.o[t]=r,n.D[t]=!0,!0)},deleteProperty:function(n,t){return void 0!==z(n.t,t)||t in n.t?(n.D[t]=!1,E(n),k(n)):delete n.D[t],n.o&&delete n.o[t],!0},getOwnPropertyDescriptor:function(n,t){var r=p(n),e=Reflect.getOwnPropertyDescriptor(r,t);return e?{writable:!0,configurable:1!==n.i||"length"!==t,enumerable:e.enumerable,value:r[t]}:e},defineProperty:function(){n(11)},getPrototypeOf:function(n){return Object.getPrototypeOf(n.t)},setPrototypeOf:function(){n(12)}},on={};i(en,(function(n,t){on[n]=function(){return arguments[0]=arguments[0][0],t.apply(this,arguments)}})),on.deleteProperty=function(t,r){return true&&isNaN(parseInt(r))&&n(13),en.deleteProperty.call(this,t[0],r)},on.set=function(t,r,e){return true&&"length"!==r&&isNaN(parseInt(r))&&n(14),en.set.call(this,t[0],r,e,t[0])};var un=function(){function e(t){var e=this;this.g=B,this.F=!0,this.produce=function(t,i,o){if("function"==typeof t&&"function"!=typeof i){var u=i;i=t;var a=e;return function(n){var t=this;void 0===n&&(n=u);for(var r=arguments.length,e=Array(r>1?r-1:0),o=1;o<r;o++)e[o-1]=arguments[o];return a.produce(n,(function(n){var r;return(r=i).call.apply(r,[t,n].concat(e))}))}}var f;if("function"!=typeof i&&n(6),void 0!==o&&"function"!=typeof o&&n(7),r(t)){var c=w(e),s=R(e,t,void 0),v=!0;try{f=i(s),v=!1}finally{v?O(c):g(c)}return"undefined"!=typeof Promise&&f instanceof Promise?f.then((function(n){return j(c,o),P(n,c)}),(function(n){throw O(c),n})):(j(c,o),P(f,c))}if(!t||"object"!=typeof t){if((f=i(t))===H)return;return void 0===f&&(f=t),e.F&&d(f,!0),f}n(21,t)},this.produceWithPatches=function(n,t){return"function"==typeof n?function(t){for(var r=arguments.length,i=Array(r>1?r-1:0),o=1;o<r;o++)i[o-1]=arguments[o];return e.produceWithPatches(t,(function(t){return n.apply(void 0,[t].concat(i))}))}:[e.produce(n,t,(function(n,t){r=n,i=t})),r,i];var r,i},"boolean"==typeof(null==t?void 0:t.useProxies)&&this.setUseProxies(t.useProxies),"boolean"==typeof(null==t?void 0:t.autoFreeze)&&this.setAutoFreeze(t.autoFreeze)}var i=e.prototype;return i.createDraft=function(e){r(e)||n(8),t(e)&&(e=D(e));var i=w(this),o=R(this,e,void 0);return o[Q].C=!0,g(i),o},i.finishDraft=function(t,r){var e=t&&t[Q]; true&&(e&&e.C||n(9),e.I&&n(10));var i=e.A;return j(i,r),P(void 0,i)},i.setAutoFreeze=function(n){this.F=n},i.setUseProxies=function(t){t&&!B&&n(20),this.g=t},i.applyPatches=function(n,r){var e;for(e=r.length-1;e>=0;e--){var i=r[e];if(0===i.path.length&&"replace"===i.op){n=i.value;break}}var o=b("Patches").$;return t(n)?o(n,r):this.produce(n,(function(n){return o(n,r.slice(e+1))}))},e}(),an=new un,fn=an.produce,cn=an.produceWithPatches.bind(an),sn=an.setAutoFreeze.bind(an),vn=an.setUseProxies.bind(an),pn=an.applyPatches.bind(an),ln=an.createDraft.bind(an),dn=an.finishDraft.bind(an);/* harmony default export */ __webpack_exports__["default"] = (fn);
//# sourceMappingURL=immer.esm.js.map


/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js!":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js! ***!
  \**********************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


    (window.__NEXT_P = window.__NEXT_P || []).push([
      "/_app",
      function () {
        return __webpack_require__(/*! private-next-pages/_app.js */ "./pages/_app.js");
      }
    ]);
  

/***/ }),

/***/ "./node_modules/@material-tailwind/react/tailwind.css":
/*!************************************************************!*\
  !*** ./node_modules/@material-tailwind/react/tailwind.css ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var api = __webpack_require__(/*! !../../next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !!../../next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!../../next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./tailwind.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./node_modules/@material-tailwind/react/tailwind.css");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.id, content, '']];
            }

var options = {};

options.insert = function(element){// These elements should always exist. If they do not,
// this code should fail.
var anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>
// Each style tag should be placed right before our
// anchor. By inserting before and not after, we do not
// need to track the last inserted element.
parentNode.insertBefore(element,anchorElement);};
options.singleton = false;

var update = api(content, options);


if (true) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a,b,isNamedExport){if(!a&&b||a&&!b){return false;}let p;for(p in a){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(a[p]!==b[p]){return false;}}for(p in b){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(!a[p]){return false;}}return true;};
    var oldLocals = content.locals;

    module.hot.accept(
      /*! !!../../next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!../../next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./tailwind.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./node_modules/@material-tailwind/react/tailwind.css",
      function () {
        content = __webpack_require__(/*! !!../../next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!../../next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./tailwind.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./node_modules/@material-tailwind/react/tailwind.css");

              content = content.__esModule ? content.default : content;

              if (typeof content === 'string') {
                content = [[module.id, content, '']];
              }

              if (!isEqualLocals(oldLocals, content.locals)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}

module.exports = content.locals || {};

/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var api = __webpack_require__(/*! !../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !!../node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[1]!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[2]!./globals.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[2]!./styles/globals.css");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.id, content, '']];
            }

var options = {};

options.insert = function(element){// These elements should always exist. If they do not,
// this code should fail.
var anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>
// Each style tag should be placed right before our
// anchor. By inserting before and not after, we do not
// need to track the last inserted element.
parentNode.insertBefore(element,anchorElement);};
options.singleton = false;

var update = api(content, options);


if (true) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a,b,isNamedExport){if(!a&&b||a&&!b){return false;}let p;for(p in a){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(a[p]!==b[p]){return false;}}for(p in b){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(!a[p]){return false;}}return true;};
    var oldLocals = content.locals;

    module.hot.accept(
      /*! !!../node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[1]!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[2]!./globals.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[2]!./styles/globals.css",
      function () {
        content = __webpack_require__(/*! !!../node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[1]!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[2]!./globals.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[2]!./styles/globals.css");

              content = content.__esModule ? content.default : content;

              if (typeof content === 'string') {
                content = [[module.id, content, '']];
              }

              if (!isEqualLocals(oldLocals, content.locals)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}

module.exports = content.locals || {};

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
const isOldIE=function isOldIE(){let memo;return function memorize(){if(typeof memo==='undefined'){// Test for IE <= 9 as proposed by Browserhacks
// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
// Tests for existence of standard globals is to allow style-loader
// to operate correctly into non-standard environments
// @see https://github.com/webpack-contrib/style-loader/issues/177
memo=Boolean(window&&document&&document.all&&!window.atob);}return memo;};}();const getTarget=function getTarget(){const memo={};return function memorize(target){if(typeof memo[target]==='undefined'){let styleTarget=document.querySelector(target);// Special case to return head of iframe instead of iframe itself
if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement){try{// This will throw an exception if access to iframe is blocked
// due to cross-origin restrictions
styleTarget=styleTarget.contentDocument.head;}catch(e){// istanbul ignore next
styleTarget=null;}}memo[target]=styleTarget;}return memo[target];};}();const stylesInDom=[];function getIndexByIdentifier(identifier){let result=-1;for(let i=0;i<stylesInDom.length;i++){if(stylesInDom[i].identifier===identifier){result=i;break;}}return result;}function modulesToDom(list,options){const idCountMap={};const identifiers=[];for(let i=0;i<list.length;i++){const item=list[i];const id=options.base?item[0]+options.base:item[0];const count=idCountMap[id]||0;const identifier=id+' '+count.toString();idCountMap[id]=count+1;const index=getIndexByIdentifier(identifier);const obj={css:item[1],media:item[2],sourceMap:item[3]};if(index!==-1){stylesInDom[index].references++;stylesInDom[index].updater(obj);}else{stylesInDom.push({identifier:identifier,updater:addStyle(obj,options),references:1});}identifiers.push(identifier);}return identifiers;}function insertStyleElement(options){const style=document.createElement('style');const attributes=options.attributes||{};if(typeof attributes.nonce==='undefined'){const nonce=// eslint-disable-next-line no-undef
 true?__webpack_require__.nc:0;if(nonce){attributes.nonce=nonce;}}Object.keys(attributes).forEach(function(key){style.setAttribute(key,attributes[key]);});if(typeof options.insert==='function'){options.insert(style);}else{const target=getTarget(options.insert||'head');if(!target){throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");}target.appendChild(style);}return style;}function removeStyleElement(style){// istanbul ignore if
if(style.parentNode===null){return false;}style.parentNode.removeChild(style);}/* istanbul ignore next  */const replaceText=function replaceText(){const textStore=[];return function replace(index,replacement){textStore[index]=replacement;return textStore.filter(Boolean).join('\n');};}();function applyToSingletonTag(style,index,remove,obj){const css=remove?'':obj.media?'@media '+obj.media+' {'+obj.css+'}':obj.css;// For old IE
/* istanbul ignore if  */if(style.styleSheet){style.styleSheet.cssText=replaceText(index,css);}else{const cssNode=document.createTextNode(css);const childNodes=style.childNodes;if(childNodes[index]){style.removeChild(childNodes[index]);}if(childNodes.length){style.insertBefore(cssNode,childNodes[index]);}else{style.appendChild(cssNode);}}}function applyToTag(style,options,obj){let css=obj.css;const media=obj.media;const sourceMap=obj.sourceMap;if(media){style.setAttribute('media',media);}else{style.removeAttribute('media');}if(sourceMap&&typeof btoa!=='undefined'){css+='\n/*# sourceMappingURL=data:application/json;base64,'+btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))+' */';}// For old IE
/* istanbul ignore if  */if(style.styleSheet){style.styleSheet.cssText=css;}else{while(style.firstChild){style.removeChild(style.firstChild);}style.appendChild(document.createTextNode(css));}}let singleton=null;let singletonCounter=0;function addStyle(obj,options){let style;let update;let remove;if(options.singleton){const styleIndex=singletonCounter++;style=singleton||(singleton=insertStyleElement(options));update=applyToSingletonTag.bind(null,style,styleIndex,false);remove=applyToSingletonTag.bind(null,style,styleIndex,true);}else{style=insertStyleElement(options);update=applyToTag.bind(null,style,options);remove=function(){removeStyleElement(style);};}update(obj);return function updateStyle(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap){return;}update(obj=newObj);}else{remove();}};}module.exports=function(list,options){options=options||{};// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
// tags it will allow on a page
if(!options.singleton&&typeof options.singleton!=='boolean'){options.singleton=isOldIE();}list=list||[];let lastIdentifiers=modulesToDom(list,options);return function update(newList){newList=newList||[];if(Object.prototype.toString.call(newList)!=='[object Array]'){return;}for(let i=0;i<lastIdentifiers.length;i++){const identifier=lastIdentifiers[i];const index=getIndexByIdentifier(identifier);stylesInDom[index].references--;}const newLastIdentifiers=modulesToDom(newList,options);for(let i=0;i<lastIdentifiers.length;i++){const identifier=lastIdentifiers[i];const index=getIndexByIdentifier(identifier);if(stylesInDom[index].references===0){stylesInDom[index].updater();stylesInDom.splice(index,1);}}lastIdentifiers=newLastIdentifiers;};};
//# sourceMappingURL=injectStylesIntoStyleTag.js.map

/***/ }),

/***/ "./node_modules/next/dist/compiled/css-loader/api.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/compiled/css-loader/api.js ***!
  \***********************************************************/
/***/ (function(module) {

var __dirname = "/";
module.exports=function(){"use strict";var n={762:function(n){n.exports=function(n){var t=[];t.toString=function toString(){return this.map(function(t){var r=cssWithMappingToString(t,n);if(t[2]){return"@media ".concat(t[2]," {").concat(r,"}")}return r}).join("")};t.i=function(n,r,o){if(typeof n==="string"){n=[[null,n,""]]}var e={};if(o){for(var a=0;a<this.length;a++){var c=this[a][0];if(c!=null){e[c]=true}}}for(var i=0;i<n.length;i++){var u=[].concat(n[i]);if(o&&e[u[0]]){continue}if(r){if(!u[2]){u[2]=r}else{u[2]="".concat(r," and ").concat(u[2])}}t.push(u)}};return t};function cssWithMappingToString(n,t){var r=n[1]||"";var o=n[3];if(!o){return r}if(t&&typeof btoa==="function"){var e=toComment(o);var a=o.sources.map(function(n){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(n," */")});return[r].concat(a).concat([e]).join("\n")}return[r].join("\n")}function toComment(n){var t=btoa(unescape(encodeURIComponent(JSON.stringify(n))));var r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t);return"/*# ".concat(r," */")}}};var t={};function __nccwpck_require__(r){if(t[r]){return t[r].exports}var o=t[r]={exports:{}};var e=true;try{n[r](o,o.exports,__nccwpck_require__);e=false}finally{if(e)delete t[r]}return o.exports}__nccwpck_require__.ab=__dirname+"/";return __nccwpck_require__(762)}();

/***/ }),

/***/ "./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./node_modules/@material-tailwind/react/tailwind.css":
/*!**************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[2]!./node_modules/@material-tailwind/react/tailwind.css ***!
  \**************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../next/dist/compiled/css-loader/api.js */ "./node_modules/next/dist/compiled/css-loader/api.js");
/* harmony import */ var _next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
___CSS_LOADER_EXPORT___.push([module.id, "@import url(https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@100;200;300;400;500;600;700;800;900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap);"]);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".tippy-box[data-placement^=top]>.tippy-svg-arrow{bottom:0}\n.tippy-box[data-placement^=top]>.tippy-svg-arrow:after,.tippy-box[data-placement^=top]>.tippy-svg-arrow>svg{top:16px;transform:rotate(180deg)}\n.tippy-box[data-placement^=bottom]>.tippy-svg-arrow{top:0}\n.tippy-box[data-placement^=bottom]>.tippy-svg-arrow>svg{bottom:16px}\n.tippy-box[data-placement^=left]>.tippy-svg-arrow{right:0}\n.tippy-box[data-placement^=left]>.tippy-svg-arrow:after,.tippy-box[data-placement^=left]>.tippy-svg-arrow>svg{transform:rotate(90deg);top:calc(50% - 3px);left:11px}\n.tippy-box[data-placement^=right]>.tippy-svg-arrow{left:0}\n.tippy-box[data-placement^=right]>.tippy-svg-arrow:after,.tippy-box[data-placement^=right]>.tippy-svg-arrow>svg{transform:rotate(-90deg);top:calc(50% - 3px);right:11px}\n.tippy-svg-arrow{width:16px;height:16px;fill:#333;text-align:initial}\n.tippy-svg-arrow,.tippy-svg-arrow>svg{position:absolute}\n.tippy-box[data-animation=scale][data-placement^=top]{transform-origin:bottom}\n.tippy-box[data-animation=scale][data-placement^=bottom]{transform-origin:top}\n.tippy-box[data-animation=scale][data-placement^=left]{transform-origin:right}\n.tippy-box[data-animation=scale][data-placement^=right]{transform-origin:left}\n.tippy-box[data-animation=scale][data-state=hidden]{transform:scale(.5);opacity:0}\n.tippy-box[data-animation=shift-away][data-state=hidden]{opacity:0}\n.tippy-box[data-animation=shift-away][data-state=hidden][data-placement^=top]{transform:translateY(10px)}\n.tippy-box[data-animation=shift-away][data-state=hidden][data-placement^=bottom]{transform:translateY(-10px)}\n.tippy-box[data-animation=shift-away][data-state=hidden][data-placement^=left]{transform:translateX(10px)}\n.tippy-box[data-animation=shift-away][data-state=hidden][data-placement^=right]{transform:translateX(-10px)}\n/*! tailwindcss v2.1.4 | MIT License | https://tailwindcss.com */\n/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */\n/*\nDocument\n========\n*/\n/**\nUse a better box model (opinionated).\n*/\n*,\n::before,\n::after {\n\tbox-sizing: border-box;\n}\n/**\nUse a more readable tab size (opinionated).\n*/\nhtml {\n\t-moz-tab-size: 4;\n\t-o-tab-size: 4;\n\t   tab-size: 4;\n}\n/**\n1. Correct the line height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n*/\nhtml {\n\tline-height: 1.15; /* 1 */\n\t-webkit-text-size-adjust: 100%; /* 2 */\n}\n/*\nSections\n========\n*/\n/**\nRemove the margin in all browsers.\n*/\nbody {\n\tmargin: 0;\n}\n/**\nImprove consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n*/\nbody {\n\tfont-family:\n\t\tsystem-ui,\n\t\t-apple-system, /* Firefox supports this but not yet `system-ui` */\n\t\t'Segoe UI',\n\t\tRoboto,\n\t\tHelvetica,\n\t\tArial,\n\t\tsans-serif,\n\t\t'Apple Color Emoji',\n\t\t'Segoe UI Emoji';\n}\n/*\nGrouping content\n================\n*/\n/**\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n*/\nhr {\n\theight: 0; /* 1 */\n\tcolor: inherit; /* 2 */\n}\n/*\nText-level semantics\n====================\n*/\n/**\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\nabbr[title] {\n\t-webkit-text-decoration: underline dotted;\n\t        text-decoration: underline dotted;\n}\n/**\nAdd the correct font weight in Edge and Safari.\n*/\nb,\nstrong {\n\tfont-weight: bolder;\n}\n/**\n1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n2. Correct the odd 'em' font sizing in all browsers.\n*/\ncode,\nkbd,\nsamp,\npre {\n\tfont-family:\n\t\tui-monospace,\n\t\tSFMono-Regular,\n\t\tConsolas,\n\t\t'Liberation Mono',\n\t\tMenlo,\n\t\tmonospace; /* 1 */\n\tfont-size: 1em; /* 2 */\n}\n/**\nAdd the correct font size in all browsers.\n*/\nsmall {\n\tfont-size: 80%;\n}\n/**\nPrevent 'sub' and 'sup' elements from affecting the line height in all browsers.\n*/\nsub,\nsup {\n\tfont-size: 75%;\n\tline-height: 0;\n\tposition: relative;\n\tvertical-align: baseline;\n}\nsub {\n\tbottom: -0.25em;\n}\nsup {\n\ttop: -0.5em;\n}\n/*\nTabular data\n============\n*/\n/**\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n*/\ntable {\n\ttext-indent: 0; /* 1 */\n\tborder-color: inherit; /* 2 */\n}\n/*\nForms\n=====\n*/\n/**\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n*/\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n\tfont-family: inherit; /* 1 */\n\tfont-size: 100%; /* 1 */\n\tline-height: 1.15; /* 1 */\n\tmargin: 0; /* 2 */\n}\n/**\nRemove the inheritance of text transform in Edge and Firefox.\n1. Remove the inheritance of text transform in Firefox.\n*/\nbutton,\nselect { /* 1 */\n\ttext-transform: none;\n}\n/**\nCorrect the inability to style clickable types in iOS and Safari.\n*/\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n\t-webkit-appearance: button;\n}\n/**\nRemove the inner border and padding in Firefox.\n*/\n::-moz-focus-inner {\n\tborder-style: none;\n\tpadding: 0;\n}\n/**\nRestore the focus styles unset by the previous rule.\n*/\n:-moz-focusring {\n\toutline: 1px dotted ButtonText;\n}\n/**\nRemove the additional ':invalid' styles in Firefox.\nSee: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737\n*/\n:-moz-ui-invalid {\n\tbox-shadow: none;\n}\n/**\nRemove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.\n*/\nlegend {\n\tpadding: 0;\n}\n/**\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\nprogress {\n\tvertical-align: baseline;\n}\n/**\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n\theight: auto;\n}\n/**\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n[type='search'] {\n\t-webkit-appearance: textfield; /* 1 */\n\toutline-offset: -2px; /* 2 */\n}\n/**\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n::-webkit-search-decoration {\n\t-webkit-appearance: none;\n}\n/**\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to 'inherit' in Safari.\n*/\n::-webkit-file-upload-button {\n\t-webkit-appearance: button; /* 1 */\n\tfont: inherit; /* 2 */\n}\n/*\nInteractive\n===========\n*/\n/*\nAdd the correct display in Chrome and Safari.\n*/\nsummary {\n\tdisplay: list-item;\n}\n/**\n * Manually forked from SUIT CSS Base: https://github.com/suitcss/base\n * A thin layer on top of normalize.css that provides a starting point more\n * suitable for web applications.\n */\n/**\n * Removes the default spacing and border for appropriate elements.\n */\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\nbutton {\n  background-color: transparent;\n  background-image: none;\n}\n/**\n * Work around a Firefox/IE bug where the transparent `button` background\n * results in a loss of the default `button` focus styles.\n */\nbutton:focus {\n  outline: 1px dotted;\n  outline: 5px auto -webkit-focus-ring-color;\n}\nfieldset {\n  margin: 0;\n  padding: 0;\n}\nol,\nul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n/**\n * Tailwind custom reset styles\n */\n/**\n * 1. Use the user's configured `sans` font-family (with Tailwind's default\n *    sans-serif font stack as a fallback) as a sane default.\n * 2. Use Tailwind's default \"normal\" line-height so the user isn't forced\n *    to override it to ensure consistency even when using the default theme.\n */\nhtml {\n  font-family: Roboto, sans-serif; /* 1 */\n  line-height: 1.5; /* 2 */\n}\n/**\n * Inherit font-family and line-height from `html` so users can set them as\n * a class directly on the `html` element.\n */\nbody {\n  font-family: inherit;\n  line-height: inherit;\n}\n/**\n * 1. Prevent padding and border from affecting element width.\n *\n *    We used to set this in the html element and inherit from\n *    the parent element for everything else. This caused issues\n *    in shadow-dom-enhanced elements like <details> where the content\n *    is wrapped by a div with box-sizing set to `content-box`.\n *\n *    https://github.com/mozdevs/cssremedy/issues/4\n *\n *\n * 2. Allow adding a border to an element by just adding a border-width.\n *\n *    By default, the way the browser specifies that an element should have no\n *    border is by setting it's border-style to `none` in the user-agent\n *    stylesheet.\n *\n *    In order to easily add borders to elements by just setting the `border-width`\n *    property, we change the default border-style for all elements to `solid`, and\n *    use border-width to hide them instead. This way our `border` utilities only\n *    need to set the `border-width` property instead of the entire `border`\n *    shorthand, making our border utilities much more straightforward to compose.\n *\n *    https://github.com/tailwindcss/tailwindcss/pull/116\n */\n*,\n::before,\n::after {\n  box-sizing: border-box; /* 1 */\n  border-width: 0; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: #eeeeee; /* 2 */\n}\n/*\n * Ensure horizontal rules are visible by default\n */\nhr {\n  border-top-width: 1px;\n}\n/**\n * Undo the `border-style: none` reset that Normalize applies to images so that\n * our `border-{width}` utilities have the expected effect.\n *\n * The Normalize reset is unnecessary for us since we default the border-width\n * to 0 on all elements.\n *\n * https://github.com/tailwindcss/tailwindcss/issues/362\n */\nimg {\n  border-style: solid;\n}\ntextarea {\n  resize: vertical;\n}\ninput::-moz-placeholder, textarea::-moz-placeholder {\n  opacity: 1;\n  color: #bdbdbd;\n}\ninput:-ms-input-placeholder, textarea:-ms-input-placeholder {\n  opacity: 1;\n  color: #bdbdbd;\n}\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1;\n  color: #bdbdbd;\n}\nbutton,\n[role=\"button\"] {\n  cursor: pointer;\n}\ntable {\n  border-collapse: collapse;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n/**\n * Reset links to optimize for opt-in styling instead of\n * opt-out.\n */\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n/**\n * Reset form element properties that are easy to forget to\n * style explicitly so you don't inadvertently introduce\n * styles that deviate from your design system. These styles\n * supplement a partial reset that is already applied by\n * normalize.css.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  padding: 0;\n  line-height: inherit;\n  color: inherit;\n}\n/**\n * Use the configured 'mono' font family for elements that\n * are expected to be rendered with a monospace font, falling\n * back to the system monospace stack if there is no configured\n * 'mono' font family.\n */\npre,\ncode,\nkbd,\nsamp {\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n}\n/**\n * Make replaced elements `display: block` by default as that's\n * the behavior you want almost all of the time. Inspired by\n * CSS Remedy, with `svg` added as well.\n *\n * https://github.com/mozdevs/cssremedy/issues/14\n */\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block;\n  vertical-align: middle;\n}\n/**\n * Constrain images and videos to the parent width and preserve\n * their intrinsic aspect ratio.\n *\n * https://github.com/mozdevs/cssremedy/issues/14\n */\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n*{--tw-shadow:0 0 #0000;--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(33, 150, 243, 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000}\n.container{width:100%}\n@media (min-width: 640px){\n.container{max-width:640px}}\n@media (min-width: 768px){\n.container{max-width:768px}}\n@media (min-width: 1024px){\n.container{max-width:1024px}}\n@media (min-width: 1280px){\n.container{max-width:1280px}}\n@media (min-width: 1536px){\n.container{max-width:1536px}}\n.pointer-events-none{pointer-events:none}\n.pointer-events-auto{pointer-events:auto}\n.relative{position:relative}\n.absolute{position:absolute}\n.sticky{position:sticky}\n.fixed{position:fixed}\n.inset-0{top:0px;right:0px;bottom:0px;left:0px}\n.right-4{right:1rem}\n.top-1\\/3{top:33.333333%}\n.left-0{left:0px}\n.right-0{right:0px}\n.top-16{top:4rem}\n.-top-1\\.5{top:-0.375rem}\n.-top-0\\.5{top:-0.125rem}\n.-top-1{top:-0.25rem}\n.-top-0{top:0px}\n.top-1\\/4{top:25%}\n.top-1\\/2{top:50%}\n.right-2{right:0.5rem}\n.right-3{right:0.75rem}\n.top-2{top:0.5rem}\n.top-0{top:0px}\n.-bottom-4{bottom:-1rem}\n.-bottom-5{bottom:-1.25rem}\n.z-30{z-index:30}\n.z-20{z-index:20}\n.z-10{z-index:10}\n.z-50{z-index:50}\n.z-40{z-index:40}\n.float-left{float:left}\n.float-right{float:right}\n.mx-auto{margin-left:auto;margin-right:auto}\n.my-16{margin-top:4rem;margin-bottom:4rem}\n.my-4{margin-top:1rem;margin-bottom:1rem}\n.my-6{margin-top:1.5rem;margin-bottom:1.5rem}\n.mx-4{margin-left:1rem;margin-right:1rem}\n.mx-1{margin-left:0.25rem;margin-right:0.25rem}\n.my-8{margin-top:2rem;margin-bottom:2rem}\n.mx-5{margin-left:1.25rem;margin-right:1.25rem}\n.mb-16{margin-bottom:4rem}\n.mt-36{margin-top:9rem}\n.mt-10{margin-top:2.5rem}\n.mt-5{margin-top:1.25rem}\n.mt-16{margin-top:4rem}\n.mt-4{margin-top:1rem}\n.mt-20{margin-top:5rem}\n.mb-10{margin-bottom:2.5rem}\n.mt-8{margin-top:2rem}\n.mt-12{margin-top:3rem}\n.mb-24{margin-bottom:6rem}\n.mt-48{margin-top:12rem}\n.mr-auto{margin-right:auto}\n.ml-auto{margin-left:auto}\n.mb-6{margin-bottom:1.5rem}\n.mr-2{margin-right:0.5rem}\n.mt-2{margin-top:0.5rem}\n.mt-32{margin-top:8rem}\n.mt-6{margin-top:1.5rem}\n.mr-3{margin-right:0.75rem}\n.-mt-64{margin-top:-16rem}\n.mb-5{margin-bottom:1.25rem}\n.mb-12{margin-bottom:3rem}\n.mb-8{margin-bottom:2rem}\n.mb-4{margin-bottom:1rem}\n.mb-2{margin-bottom:0.5rem}\n.-mt-10{margin-top:-2.5rem}\n.-mt-9{margin-top:-2.25rem}\n.mb-1{margin-bottom:0.25rem}\n.ml-1{margin-left:0.25rem}\n.mr-1{margin-right:0.25rem}\n.mt-1{margin-top:0.25rem}\n.mb-0{margin-bottom:0px}\n.mt-3{margin-top:0.75rem}\n.ml-7{margin-left:1.75rem}\n.ml-2{margin-left:0.5rem}\n.mt-0{margin-top:0px}\n.mb-3{margin-bottom:0.75rem}\n.mr-4{margin-right:1rem}\n.-mt-12{margin-top:-3rem}\n.mr-10{margin-right:2.5rem}\n.block{display:block}\n.inline-block{display:inline-block}\n.flex{display:flex}\n.inline-flex{display:inline-flex}\n.grid{display:grid}\n.hidden{display:none}\n.h-16{height:4rem}\n.h-7{height:1.75rem}\n.h-10{height:2.5rem}\n.h-32{height:8rem}\n.h-20{height:5rem}\n.h-12{height:3rem}\n.h-6{height:1.5rem}\n.h-8{height:2rem}\n.h-24{height:6rem}\n.h-28{height:7rem}\n.h-5{height:1.25rem}\n.h-screen{height:100vh}\n.h-auto{height:auto}\n.h-full{height:100%}\n.h-9{height:2.25rem}\n.h-11{height:2.75rem}\n.h-4{height:1rem}\n.h-px{height:1px}\n.h-2{height:0.5rem}\n.w-full{width:100%}\n.w-40{width:10rem}\n.w-72{width:18rem}\n.w-\\[28rem\\]{width:28rem}\n.w-64{width:16rem}\n.w-96{width:24rem}\n.w-48{width:12rem}\n.w-16{width:4rem}\n.w-7{width:1.75rem}\n.w-32{width:8rem}\n.w-12{width:3rem}\n.w-10{width:2.5rem}\n.w-6{width:1.5rem}\n.w-8{width:2rem}\n.w-20{width:5rem}\n.w-24{width:6rem}\n.w-28{width:7rem}\n.w-5{width:1.25rem}\n.w-10\\/12{width:83.333333%}\n.w-4{width:1rem}\n.w-auto{width:auto}\n.w-14{width:3.5rem}\n.min-w-0{min-width:0px}\n.max-w-7xl{max-width:80rem}\n.max-w-full{max-width:100%}\n.max-w-max{max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}\n.max-w-sm{max-width:24rem}\n.max-w-6xl{max-width:72rem}\n.max-w-3xl{max-width:48rem}\n.max-w-xs{max-width:20rem}\n.flex-auto{flex:1 1 auto}\n.flex-1{flex:1 1 0%}\n.flex-none{flex:none}\n.flex-grow{flex-grow:1}\n.transform{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}\n.-translate-y-1\\/3{--tw-translate-y:-33.333333%}\n.-translate-y-1\\/2{--tw-translate-y:-50%}\n.translate-y-0{--tw-translate-y:0px}\n.-translate-y-10{--tw-translate-y:-2.5rem}\n.cursor-pointer{cursor:pointer}\n.cursor-not-allowed{cursor:not-allowed}\n.select-none{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}\n.resize-none{resize:none}\n.list-none{list-style-type:none}\n.flex-col{flex-direction:column}\n.flex-wrap{flex-wrap:wrap}\n.place-items-center{place-items:center}\n.items-center{align-items:center}\n.items-end{align-items:flex-end}\n.items-start{align-items:flex-start}\n.justify-between{justify-content:space-between}\n.justify-center{justify-content:center}\n.justify-start{justify-content:flex-start}\n.justify-end{justify-content:flex-end}\n.gap-8{gap:2rem}\n.gap-10{gap:2.5rem}\n.gap-4{gap:1rem}\n.gap-2{gap:0.5rem}\n.gap-3{gap:0.75rem}\n.gap-1{gap:0.25rem}\n.gap-x-2{-moz-column-gap:0.5rem;column-gap:0.5rem}\n.gap-y-8{row-gap:2rem}\n.gap-x-24{-moz-column-gap:6rem;column-gap:6rem}\n.gap-y-4{row-gap:1rem}\n.gap-x-8{-moz-column-gap:2rem;column-gap:2rem}\n.space-y-4 > :not([hidden]) ~ :not([hidden]){--tw-space-y-reverse:0;margin-top:calc(1rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1rem * var(--tw-space-y-reverse))}\n.overflow-hidden{overflow:hidden}\n.overflow-y-scroll{overflow-y:scroll}\n.overflow-x-hidden{overflow-x:hidden}\n.overflow-y-auto{overflow-y:auto}\n.whitespace-nowrap{white-space:nowrap}\n.break-words{overflow-wrap:break-word}\n.rounded{border-radius:0.25rem}\n.rounded-lg{border-radius:0.5rem}\n.rounded-full{border-radius:9999px}\n.rounded-xl{border-radius:0.75rem}\n.rounded-md{border-radius:0.375rem}\n.rounded-sm{border-radius:0.125rem}\n.rounded-t{border-top-left-radius:0.25rem;border-top-right-radius:0.25rem}\n.border{border-width:1px}\n.border-0{border-width:0px}\n.border-t-0{border-top-width:0px}\n.border-r-0{border-right-width:0px}\n.border-l-0{border-left-width:0px}\n.border-t{border-top-width:1px}\n.border-b{border-bottom-width:1px}\n.border-b-0{border-bottom-width:0px}\n.border-r{border-right-width:1px}\n.border-solid{border-style:solid}\n.border-none{border-style:none}\n.border-blue-gray-50{--tw-border-opacity:1;border-color:rgba(236, 239, 241, var(--tw-border-opacity))}\n.border-gray-200{--tw-border-opacity:1;border-color:rgba(238, 238, 238, var(--tw-border-opacity))}\n.border-gray-300{--tw-border-opacity:1;border-color:rgba(224, 224, 224, var(--tw-border-opacity))}\n.border-blue-gray-500{--tw-border-opacity:1;border-color:rgba(96, 125, 139, var(--tw-border-opacity))}\n.border-gray-500{--tw-border-opacity:1;border-color:rgba(158, 158, 158, var(--tw-border-opacity))}\n.border-brown-500{--tw-border-opacity:1;border-color:rgba(121, 85, 72, var(--tw-border-opacity))}\n.border-deep-orange-500{--tw-border-opacity:1;border-color:rgba(255, 87, 34, var(--tw-border-opacity))}\n.border-orange-500{--tw-border-opacity:1;border-color:rgba(255, 152, 0, var(--tw-border-opacity))}\n.border-amber-500{--tw-border-opacity:1;border-color:rgba(255, 193, 7, var(--tw-border-opacity))}\n.border-yellow-600{--tw-border-opacity:1;border-color:rgba(253, 216, 53, var(--tw-border-opacity))}\n.border-lime-500{--tw-border-opacity:1;border-color:rgba(205, 220, 57, var(--tw-border-opacity))}\n.border-light-green-500{--tw-border-opacity:1;border-color:rgba(139, 195, 74, var(--tw-border-opacity))}\n.border-green-500{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity))}\n.border-teal-500{--tw-border-opacity:1;border-color:rgba(0, 150, 136, var(--tw-border-opacity))}\n.border-cyan-500{--tw-border-opacity:1;border-color:rgba(0, 188, 212, var(--tw-border-opacity))}\n.border-light-blue-500{--tw-border-opacity:1;border-color:rgba(3, 169, 244, var(--tw-border-opacity))}\n.border-blue-500{--tw-border-opacity:1;border-color:rgba(33, 150, 243, var(--tw-border-opacity))}\n.border-indigo-500{--tw-border-opacity:1;border-color:rgba(63, 81, 181, var(--tw-border-opacity))}\n.border-deep-purple-500{--tw-border-opacity:1;border-color:rgba(103, 58, 183, var(--tw-border-opacity))}\n.border-purple-500{--tw-border-opacity:1;border-color:rgba(156, 39, 176, var(--tw-border-opacity))}\n.border-pink-500{--tw-border-opacity:1;border-color:rgba(233, 30, 99, var(--tw-border-opacity))}\n.border-red-500{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity))}\n.border-transparent{border-color:transparent}\n.bg-white{--tw-bg-opacity:1;background-color:rgba(255, 255, 255, var(--tw-bg-opacity))}\n.bg-gray-100{--tw-bg-opacity:1;background-color:rgba(245, 245, 245, var(--tw-bg-opacity))}\n.bg-orange-900{--tw-bg-opacity:1;background-color:rgba(230, 81, 0, var(--tw-bg-opacity))}\n.bg-light-blue-500{--tw-bg-opacity:1;background-color:rgba(3, 169, 244, var(--tw-bg-opacity))}\n.bg-gray-900{--tw-bg-opacity:1;background-color:rgba(33, 33, 33, var(--tw-bg-opacity))}\n.bg-yellow-600{--tw-bg-opacity:1;background-color:rgba(253, 216, 53, var(--tw-bg-opacity))}\n.bg-red-700{--tw-bg-opacity:1;background-color:rgba(211, 47, 47, var(--tw-bg-opacity))}\n.bg-green-500{--tw-bg-opacity:1;background-color:rgba(76, 175, 80, var(--tw-bg-opacity))}\n.bg-blue-gray-800{--tw-bg-opacity:1;background-color:rgba(55, 71, 79, var(--tw-bg-opacity))}\n.bg-blue-gray-500{--tw-bg-opacity:1;background-color:rgba(96, 125, 139, var(--tw-bg-opacity))}\n.bg-gray-500{--tw-bg-opacity:1;background-color:rgba(158, 158, 158, var(--tw-bg-opacity))}\n.bg-brown-500{--tw-bg-opacity:1;background-color:rgba(121, 85, 72, var(--tw-bg-opacity))}\n.bg-deep-orange-500{--tw-bg-opacity:1;background-color:rgba(255, 87, 34, var(--tw-bg-opacity))}\n.bg-orange-500{--tw-bg-opacity:1;background-color:rgba(255, 152, 0, var(--tw-bg-opacity))}\n.bg-amber-500{--tw-bg-opacity:1;background-color:rgba(255, 193, 7, var(--tw-bg-opacity))}\n.bg-lime-500{--tw-bg-opacity:1;background-color:rgba(205, 220, 57, var(--tw-bg-opacity))}\n.bg-light-green-500{--tw-bg-opacity:1;background-color:rgba(139, 195, 74, var(--tw-bg-opacity))}\n.bg-teal-500{--tw-bg-opacity:1;background-color:rgba(0, 150, 136, var(--tw-bg-opacity))}\n.bg-cyan-500{--tw-bg-opacity:1;background-color:rgba(0, 188, 212, var(--tw-bg-opacity))}\n.bg-blue-500{--tw-bg-opacity:1;background-color:rgba(33, 150, 243, var(--tw-bg-opacity))}\n.bg-indigo-500{--tw-bg-opacity:1;background-color:rgba(63, 81, 181, var(--tw-bg-opacity))}\n.bg-deep-purple-500{--tw-bg-opacity:1;background-color:rgba(103, 58, 183, var(--tw-bg-opacity))}\n.bg-purple-500{--tw-bg-opacity:1;background-color:rgba(156, 39, 176, var(--tw-bg-opacity))}\n.bg-pink-500{--tw-bg-opacity:1;background-color:rgba(233, 30, 99, var(--tw-bg-opacity))}\n.bg-red-500{--tw-bg-opacity:1;background-color:rgba(244, 67, 54, var(--tw-bg-opacity))}\n.bg-transparent{background-color:transparent}\n.bg-gray-200{--tw-bg-opacity:1;background-color:rgba(238, 238, 238, var(--tw-bg-opacity))}\n.bg-blue-gray-100{--tw-bg-opacity:1;background-color:rgba(207, 216, 220, var(--tw-bg-opacity))}\n.bg-brown-100{--tw-bg-opacity:1;background-color:rgba(215, 204, 200, var(--tw-bg-opacity))}\n.bg-deep-orange-100{--tw-bg-opacity:1;background-color:rgba(255, 204, 188, var(--tw-bg-opacity))}\n.bg-orange-100{--tw-bg-opacity:1;background-color:rgba(255, 224, 178, var(--tw-bg-opacity))}\n.bg-amber-100{--tw-bg-opacity:1;background-color:rgba(255, 236, 179, var(--tw-bg-opacity))}\n.bg-yellow-100{--tw-bg-opacity:1;background-color:rgba(255, 249, 196, var(--tw-bg-opacity))}\n.bg-lime-100{--tw-bg-opacity:1;background-color:rgba(240, 244, 195, var(--tw-bg-opacity))}\n.bg-light-green-100{--tw-bg-opacity:1;background-color:rgba(220, 237, 200, var(--tw-bg-opacity))}\n.bg-green-100{--tw-bg-opacity:1;background-color:rgba(200, 230, 201, var(--tw-bg-opacity))}\n.bg-teal-100{--tw-bg-opacity:1;background-color:rgba(178, 223, 219, var(--tw-bg-opacity))}\n.bg-cyan-100{--tw-bg-opacity:1;background-color:rgba(178, 235, 242, var(--tw-bg-opacity))}\n.bg-light-blue-100{--tw-bg-opacity:1;background-color:rgba(179, 229, 252, var(--tw-bg-opacity))}\n.bg-blue-100{--tw-bg-opacity:1;background-color:rgba(187, 222, 251, var(--tw-bg-opacity))}\n.bg-indigo-100{--tw-bg-opacity:1;background-color:rgba(197, 202, 233, var(--tw-bg-opacity))}\n.bg-deep-purple-100{--tw-bg-opacity:1;background-color:rgba(209, 196, 233, var(--tw-bg-opacity))}\n.bg-purple-100{--tw-bg-opacity:1;background-color:rgba(225, 190, 231, var(--tw-bg-opacity))}\n.bg-pink-100{--tw-bg-opacity:1;background-color:rgba(248, 187, 208, var(--tw-bg-opacity))}\n.bg-red-100{--tw-bg-opacity:1;background-color:rgba(255, 205, 210, var(--tw-bg-opacity))}\n.bg-blue-gray-900{--tw-bg-opacity:1;background-color:rgba(38, 50, 56, var(--tw-bg-opacity))}\n.bg-brown-900{--tw-bg-opacity:1;background-color:rgba(62, 39, 35, var(--tw-bg-opacity))}\n.bg-deep-orange-900{--tw-bg-opacity:1;background-color:rgba(191, 54, 12, var(--tw-bg-opacity))}\n.bg-amber-900{--tw-bg-opacity:1;background-color:rgba(255, 111, 0, var(--tw-bg-opacity))}\n.bg-yellow-900{--tw-bg-opacity:1;background-color:rgba(245, 127, 23, var(--tw-bg-opacity))}\n.bg-lime-900{--tw-bg-opacity:1;background-color:rgba(130, 119, 23, var(--tw-bg-opacity))}\n.bg-light-green-900{--tw-bg-opacity:1;background-color:rgba(51, 105, 30, var(--tw-bg-opacity))}\n.bg-green-900{--tw-bg-opacity:1;background-color:rgba(27, 94, 32, var(--tw-bg-opacity))}\n.bg-teal-900{--tw-bg-opacity:1;background-color:rgba(0, 77, 64, var(--tw-bg-opacity))}\n.bg-cyan-900{--tw-bg-opacity:1;background-color:rgba(0, 96, 100, var(--tw-bg-opacity))}\n.bg-light-blue-900{--tw-bg-opacity:1;background-color:rgba(1, 87, 155, var(--tw-bg-opacity))}\n.bg-blue-900{--tw-bg-opacity:1;background-color:rgba(13, 71, 161, var(--tw-bg-opacity))}\n.bg-indigo-900{--tw-bg-opacity:1;background-color:rgba(26, 35, 126, var(--tw-bg-opacity))}\n.bg-deep-purple-900{--tw-bg-opacity:1;background-color:rgba(49, 27, 146, var(--tw-bg-opacity))}\n.bg-purple-900{--tw-bg-opacity:1;background-color:rgba(74, 20, 140, var(--tw-bg-opacity))}\n.bg-pink-900{--tw-bg-opacity:1;background-color:rgba(136, 14, 79, var(--tw-bg-opacity))}\n.bg-red-900{--tw-bg-opacity:1;background-color:rgba(183, 28, 28, var(--tw-bg-opacity))}\n.bg-black{--tw-bg-opacity:1;background-color:rgba(0, 0, 0, var(--tw-bg-opacity))}\n.bg-gray-700{--tw-bg-opacity:1;background-color:rgba(97, 97, 97, var(--tw-bg-opacity))}\n.bg-blue-gray-200{--tw-bg-opacity:1;background-color:rgba(176, 190, 197, var(--tw-bg-opacity))}\n.bg-brown-200{--tw-bg-opacity:1;background-color:rgba(188, 170, 164, var(--tw-bg-opacity))}\n.bg-deep-orange-200{--tw-bg-opacity:1;background-color:rgba(255, 171, 145, var(--tw-bg-opacity))}\n.bg-orange-200{--tw-bg-opacity:1;background-color:rgba(255, 204, 128, var(--tw-bg-opacity))}\n.bg-amber-200{--tw-bg-opacity:1;background-color:rgba(255, 224, 130, var(--tw-bg-opacity))}\n.bg-yellow-200{--tw-bg-opacity:1;background-color:rgba(255, 245, 157, var(--tw-bg-opacity))}\n.bg-lime-200{--tw-bg-opacity:1;background-color:rgba(230, 238, 156, var(--tw-bg-opacity))}\n.bg-light-green-200{--tw-bg-opacity:1;background-color:rgba(197, 225, 165, var(--tw-bg-opacity))}\n.bg-green-200{--tw-bg-opacity:1;background-color:rgba(165, 214, 167, var(--tw-bg-opacity))}\n.bg-teal-200{--tw-bg-opacity:1;background-color:rgba(128, 203, 196, var(--tw-bg-opacity))}\n.bg-cyan-200{--tw-bg-opacity:1;background-color:rgba(128, 222, 234, var(--tw-bg-opacity))}\n.bg-light-blue-200{--tw-bg-opacity:1;background-color:rgba(129, 212, 250, var(--tw-bg-opacity))}\n.bg-blue-200{--tw-bg-opacity:1;background-color:rgba(144, 202, 249, var(--tw-bg-opacity))}\n.bg-indigo-200{--tw-bg-opacity:1;background-color:rgba(159, 168, 218, var(--tw-bg-opacity))}\n.bg-deep-purple-200{--tw-bg-opacity:1;background-color:rgba(179, 157, 219, var(--tw-bg-opacity))}\n.bg-purple-200{--tw-bg-opacity:1;background-color:rgba(206, 147, 216, var(--tw-bg-opacity))}\n.bg-pink-200{--tw-bg-opacity:1;background-color:rgba(244, 143, 177, var(--tw-bg-opacity))}\n.bg-red-200{--tw-bg-opacity:1;background-color:rgba(239, 154, 154, var(--tw-bg-opacity))}\n.bg-opacity-20{--tw-bg-opacity:0.2}\n.bg-opacity-80{--tw-bg-opacity:0.8}\n.bg-gradient-to-tr{background-image:linear-gradient(to top right, var(--tw-gradient-stops))}\n.from-blue-gray-500{--tw-gradient-from:#607d8b;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(96, 125, 139, 0))}\n.from-gray-500{--tw-gradient-from:#9e9e9e;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(158, 158, 158, 0))}\n.from-brown-500{--tw-gradient-from:#795548;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(121, 85, 72, 0))}\n.from-deep-orange-500{--tw-gradient-from:#ff5722;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(255, 87, 34, 0))}\n.from-orange-500{--tw-gradient-from:#ff9800;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(255, 152, 0, 0))}\n.from-amber-500{--tw-gradient-from:#ffc107;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(255, 193, 7, 0))}\n.from-yellow-600{--tw-gradient-from:#fdd835;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(253, 216, 53, 0))}\n.from-lime-500{--tw-gradient-from:#cddc39;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(205, 220, 57, 0))}\n.from-light-green-500{--tw-gradient-from:#8bc34a;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(139, 195, 74, 0))}\n.from-green-500{--tw-gradient-from:#4caf50;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(76, 175, 80, 0))}\n.from-teal-500{--tw-gradient-from:#009688;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 150, 136, 0))}\n.from-cyan-500{--tw-gradient-from:#00bcd4;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 188, 212, 0))}\n.from-light-blue-500{--tw-gradient-from:#03a9f4;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(3, 169, 244, 0))}\n.from-blue-500{--tw-gradient-from:#2196f3;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(33, 150, 243, 0))}\n.from-indigo-500{--tw-gradient-from:#3f51b5;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(63, 81, 181, 0))}\n.from-deep-purple-500{--tw-gradient-from:#673ab7;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(103, 58, 183, 0))}\n.from-purple-500{--tw-gradient-from:#9c27b0;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(156, 39, 176, 0))}\n.from-pink-500{--tw-gradient-from:#e91e63;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(233, 30, 99, 0))}\n.from-red-500{--tw-gradient-from:#f44336;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(244, 67, 54, 0))}\n.from-light-blue-700{--tw-gradient-from:#0288d1;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(2, 136, 209, 0))}\n.to-blue-gray-700{--tw-gradient-to:#455a64}\n.to-gray-700{--tw-gradient-to:#616161}\n.to-brown-700{--tw-gradient-to:#5d4037}\n.to-deep-orange-700{--tw-gradient-to:#e64a19}\n.to-orange-700{--tw-gradient-to:#f57c00}\n.to-amber-700{--tw-gradient-to:#ffa000}\n.to-yellow-800{--tw-gradient-to:#f9a825}\n.to-lime-700{--tw-gradient-to:#afb42b}\n.to-light-green-700{--tw-gradient-to:#689f38}\n.to-green-700{--tw-gradient-to:#388e3c}\n.to-teal-700{--tw-gradient-to:#00796b}\n.to-cyan-700{--tw-gradient-to:#0097a7}\n.to-light-blue-700{--tw-gradient-to:#0288d1}\n.to-blue-700{--tw-gradient-to:#1976d2}\n.to-indigo-700{--tw-gradient-to:#303f9f}\n.to-deep-purple-700{--tw-gradient-to:#512da8}\n.to-purple-700{--tw-gradient-to:#7b1fa2}\n.to-pink-700{--tw-gradient-to:#c2185b}\n.to-red-700{--tw-gradient-to:#d32f2f}\n.to-light-blue-500{--tw-gradient-to:#03a9f4}\n.p-4{padding:1rem}\n.p-3{padding:0.75rem}\n.p-8{padding:2rem}\n.p-2{padding:0.5rem}\n.p-0{padding:0px}\n.p-2\\.5{padding:0.625rem}\n.p-6{padding:1.5rem}\n.p-1{padding:0.25rem}\n.p-5{padding:1.25rem}\n.p-10{padding:2.5rem}\n.px-4{padding-left:1rem;padding-right:1rem}\n.py-16{padding-top:4rem;padding-bottom:4rem}\n.py-1{padding-top:0.25rem;padding-bottom:0.25rem}\n.py-8{padding-top:2rem;padding-bottom:2rem}\n.py-28{padding-top:7rem;padding-bottom:7rem}\n.px-12{padding-left:3rem;padding-right:3rem}\n.px-2\\.5{padding-left:0.625rem;padding-right:0.625rem}\n.px-2{padding-left:0.5rem;padding-right:0.5rem}\n.py-2{padding-top:0.5rem;padding-bottom:0.5rem}\n.py-20{padding-top:5rem;padding-bottom:5rem}\n.py-24{padding-top:6rem;padding-bottom:6rem}\n.py-5{padding-top:1.25rem;padding-bottom:1.25rem}\n.py-1\\.5{padding-top:0.375rem;padding-bottom:0.375rem}\n.py-2\\.5{padding-top:0.625rem;padding-bottom:0.625rem}\n.px-6{padding-left:1.5rem;padding-right:1.5rem}\n.py-3{padding-top:0.75rem;padding-bottom:0.75rem}\n.px-7{padding-left:1.75rem;padding-right:1.75rem}\n.py-4{padding-top:1rem;padding-bottom:1rem}\n.px-8{padding-left:2rem;padding-right:2rem}\n.px-9{padding-left:2.25rem;padding-right:2.25rem}\n.px-3{padding-left:0.75rem;padding-right:0.75rem}\n.px-0{padding-left:0px;padding-right:0px}\n.px-5{padding-left:1.25rem;padding-right:1.25rem}\n.px-1\\.5{padding-left:0.375rem;padding-right:0.375rem}\n.px-1{padding-left:0.25rem;padding-right:0.25rem}\n.pt-28{padding-top:7rem}\n.pb-36{padding-bottom:9rem}\n.pt-8{padding-top:2rem}\n.pb-6{padding-bottom:1.5rem}\n.pb-2{padding-bottom:0.5rem}\n.pt-6{padding-top:1.5rem}\n.pb-4{padding-bottom:1rem}\n.pb-20{padding-bottom:5rem}\n.pt-32{padding-top:8rem}\n.pt-48{padding-top:12rem}\n.pt-24{padding-top:6rem}\n.pb-64{padding-bottom:16rem}\n.pb-16{padding-bottom:4rem}\n.pr-12{padding-right:3rem}\n.pl-4{padding-left:1rem}\n.pt-4{padding-top:1rem}\n.pt-9{padding-top:2.25rem}\n.pl-0{padding-left:0px}\n.pt-10{padding-top:2.5rem}\n.pl-5{padding-left:1.25rem}\n.pr-3{padding-right:0.75rem}\n.pl-7{padding-left:1.75rem}\n.pr-5{padding-right:1.25rem}\n.pl-8{padding-left:2rem}\n.pr-6{padding-right:1.5rem}\n.pt-1\\.5{padding-top:0.375rem}\n.pb-0\\.5{padding-bottom:0.125rem}\n.pt-1{padding-top:0.25rem}\n.pb-0{padding-bottom:0px}\n.pt-2\\.5{padding-top:0.625rem}\n.pb-1\\.5{padding-bottom:0.375rem}\n.pt-2{padding-top:0.5rem}\n.pb-1{padding-bottom:0.25rem}\n.pt-3\\.5{padding-top:0.875rem}\n.pb-2\\.5{padding-bottom:0.625rem}\n.pt-3{padding-top:0.75rem}\n.pl-2{padding-left:0.5rem}\n.pr-7{padding-right:1.75rem}\n.pl-3{padding-left:0.75rem}\n.pr-9{padding-right:2.25rem}\n.pr-1{padding-right:0.25rem}\n.pb-10{padding-bottom:2.5rem}\n.pt-16{padding-top:4rem}\n.text-center{text-align:center}\n.text-right{text-align:right}\n.text-left{text-align:left}\n.align-middle{vertical-align:middle}\n.font-serif{font-family:\"Roboto Slab\", serif}\n.text-xl{font-size:1.25rem;line-height:1.75rem}\n.text-sm{font-size:0.875rem;line-height:1.25rem}\n.text-xs{font-size:0.75rem;line-height:1rem}\n.text-6xl{font-size:3.75rem;line-height:1}\n.text-lg{font-size:1.125rem;line-height:1.75rem}\n.text-base{font-size:1rem;line-height:1.5rem}\n.text-2xl{font-size:1.5rem;line-height:2rem}\n.text-4xl{font-size:2.25rem;line-height:2.5rem}\n.text-3xl{font-size:1.875rem;line-height:2.25rem}\n.text-5xl{font-size:3rem;line-height:1}\n.text-7xl{font-size:4.5rem;line-height:1}\n.text-8xl{font-size:6rem;line-height:1}\n.text-9xl{font-size:8rem;line-height:1}\n.font-medium{font-weight:500}\n.font-semibold{font-weight:600}\n.font-bold{font-weight:700}\n.font-light{font-weight:300}\n.font-normal{font-weight:400}\n.uppercase{text-transform:uppercase}\n.capitalize{text-transform:capitalize}\n.leading-relaxed{line-height:1.625}\n.leading-none{line-height:1}\n.leading-normal{line-height:1.5}\n.leading-10{line-height:2.5rem}\n.leading-snug{line-height:1.375}\n.tracking-wider{letter-spacing:0.05em}\n.tracking-wide{letter-spacing:0.025em}\n.text-gray-700{--tw-text-opacity:1;color:rgba(97, 97, 97, var(--tw-text-opacity))}\n.text-blue-gray-700{--tw-text-opacity:1;color:rgba(69, 90, 100, var(--tw-text-opacity))}\n.text-light-blue-500{--tw-text-opacity:1;color:rgba(3, 169, 244, var(--tw-text-opacity))}\n.text-blue-gray-800{--tw-text-opacity:1;color:rgba(55, 71, 79, var(--tw-text-opacity))}\n.text-blue-gray-900{--tw-text-opacity:1;color:rgba(38, 50, 56, var(--tw-text-opacity))}\n.text-blue-gray-200{--tw-text-opacity:1;color:rgba(176, 190, 197, var(--tw-text-opacity))}\n.text-blue-gray-50{--tw-text-opacity:1;color:rgba(236, 239, 241, var(--tw-text-opacity))}\n.text-cyan-600{--tw-text-opacity:1;color:rgba(0, 172, 193, var(--tw-text-opacity))}\n.text-gray-500{--tw-text-opacity:1;color:rgba(158, 158, 158, var(--tw-text-opacity))}\n.text-gray-900{--tw-text-opacity:1;color:rgba(33, 33, 33, var(--tw-text-opacity))}\n.text-blue-600{--tw-text-opacity:1;color:rgba(30, 136, 229, var(--tw-text-opacity))}\n.text-blue-400{--tw-text-opacity:1;color:rgba(66, 165, 245, var(--tw-text-opacity))}\n.text-indigo-500{--tw-text-opacity:1;color:rgba(63, 81, 181, var(--tw-text-opacity))}\n.text-pink-400{--tw-text-opacity:1;color:rgba(236, 64, 122, var(--tw-text-opacity))}\n.text-red-600{--tw-text-opacity:1;color:rgba(229, 57, 53, var(--tw-text-opacity))}\n.text-gray-600{--tw-text-opacity:1;color:rgba(117, 117, 117, var(--tw-text-opacity))}\n.text-white{--tw-text-opacity:1;color:rgba(255, 255, 255, var(--tw-text-opacity))}\n.text-blue-gray-500{--tw-text-opacity:1;color:rgba(96, 125, 139, var(--tw-text-opacity))}\n.text-brown-500{--tw-text-opacity:1;color:rgba(121, 85, 72, var(--tw-text-opacity))}\n.text-deep-orange-500{--tw-text-opacity:1;color:rgba(255, 87, 34, var(--tw-text-opacity))}\n.text-orange-500{--tw-text-opacity:1;color:rgba(255, 152, 0, var(--tw-text-opacity))}\n.text-amber-500{--tw-text-opacity:1;color:rgba(255, 193, 7, var(--tw-text-opacity))}\n.text-yellow-600{--tw-text-opacity:1;color:rgba(253, 216, 53, var(--tw-text-opacity))}\n.text-lime-500{--tw-text-opacity:1;color:rgba(205, 220, 57, var(--tw-text-opacity))}\n.text-light-green-500{--tw-text-opacity:1;color:rgba(139, 195, 74, var(--tw-text-opacity))}\n.text-green-500{--tw-text-opacity:1;color:rgba(76, 175, 80, var(--tw-text-opacity))}\n.text-teal-500{--tw-text-opacity:1;color:rgba(0, 150, 136, var(--tw-text-opacity))}\n.text-cyan-500{--tw-text-opacity:1;color:rgba(0, 188, 212, var(--tw-text-opacity))}\n.text-blue-500{--tw-text-opacity:1;color:rgba(33, 150, 243, var(--tw-text-opacity))}\n.text-deep-purple-500{--tw-text-opacity:1;color:rgba(103, 58, 183, var(--tw-text-opacity))}\n.text-purple-500{--tw-text-opacity:1;color:rgba(156, 39, 176, var(--tw-text-opacity))}\n.text-pink-500{--tw-text-opacity:1;color:rgba(233, 30, 99, var(--tw-text-opacity))}\n.text-red-500{--tw-text-opacity:1;color:rgba(244, 67, 54, var(--tw-text-opacity))}\n.text-gray-400{--tw-text-opacity:1;color:rgba(189, 189, 189, var(--tw-text-opacity))}\n.text-gray-800{--tw-text-opacity:1;color:rgba(66, 66, 66, var(--tw-text-opacity))}\n.text-brown-700{--tw-text-opacity:1;color:rgba(93, 64, 55, var(--tw-text-opacity))}\n.text-deep-orange-700{--tw-text-opacity:1;color:rgba(230, 74, 25, var(--tw-text-opacity))}\n.text-orange-700{--tw-text-opacity:1;color:rgba(245, 124, 0, var(--tw-text-opacity))}\n.text-amber-700{--tw-text-opacity:1;color:rgba(255, 160, 0, var(--tw-text-opacity))}\n.text-yellow-700{--tw-text-opacity:1;color:rgba(251, 192, 45, var(--tw-text-opacity))}\n.text-lime-700{--tw-text-opacity:1;color:rgba(175, 180, 43, var(--tw-text-opacity))}\n.text-light-green-700{--tw-text-opacity:1;color:rgba(104, 159, 56, var(--tw-text-opacity))}\n.text-green-700{--tw-text-opacity:1;color:rgba(56, 142, 60, var(--tw-text-opacity))}\n.text-teal-700{--tw-text-opacity:1;color:rgba(0, 121, 107, var(--tw-text-opacity))}\n.text-cyan-700{--tw-text-opacity:1;color:rgba(0, 151, 167, var(--tw-text-opacity))}\n.text-light-blue-700{--tw-text-opacity:1;color:rgba(2, 136, 209, var(--tw-text-opacity))}\n.text-blue-700{--tw-text-opacity:1;color:rgba(25, 118, 210, var(--tw-text-opacity))}\n.text-indigo-700{--tw-text-opacity:1;color:rgba(48, 63, 159, var(--tw-text-opacity))}\n.text-deep-purple-700{--tw-text-opacity:1;color:rgba(81, 45, 168, var(--tw-text-opacity))}\n.text-purple-700{--tw-text-opacity:1;color:rgba(123, 31, 162, var(--tw-text-opacity))}\n.text-pink-700{--tw-text-opacity:1;color:rgba(194, 24, 91, var(--tw-text-opacity))}\n.text-red-700{--tw-text-opacity:1;color:rgba(211, 47, 47, var(--tw-text-opacity))}\n.text-gray-200{--tw-text-opacity:1;color:rgba(238, 238, 238, var(--tw-text-opacity))}\n.text-brown-800{--tw-text-opacity:1;color:rgba(78, 52, 46, var(--tw-text-opacity))}\n.text-deep-orange-800{--tw-text-opacity:1;color:rgba(216, 67, 21, var(--tw-text-opacity))}\n.text-orange-800{--tw-text-opacity:1;color:rgba(239, 108, 0, var(--tw-text-opacity))}\n.text-amber-800{--tw-text-opacity:1;color:rgba(255, 143, 0, var(--tw-text-opacity))}\n.text-yellow-800{--tw-text-opacity:1;color:rgba(249, 168, 37, var(--tw-text-opacity))}\n.text-lime-800{--tw-text-opacity:1;color:rgba(158, 157, 36, var(--tw-text-opacity))}\n.text-light-green-800{--tw-text-opacity:1;color:rgba(85, 139, 47, var(--tw-text-opacity))}\n.text-green-800{--tw-text-opacity:1;color:rgba(46, 125, 50, var(--tw-text-opacity))}\n.text-teal-800{--tw-text-opacity:1;color:rgba(0, 105, 92, var(--tw-text-opacity))}\n.text-cyan-800{--tw-text-opacity:1;color:rgba(0, 131, 143, var(--tw-text-opacity))}\n.text-light-blue-800{--tw-text-opacity:1;color:rgba(2, 119, 189, var(--tw-text-opacity))}\n.text-blue-800{--tw-text-opacity:1;color:rgba(21, 101, 192, var(--tw-text-opacity))}\n.text-indigo-800{--tw-text-opacity:1;color:rgba(40, 53, 147, var(--tw-text-opacity))}\n.text-deep-purple-800{--tw-text-opacity:1;color:rgba(69, 39, 160, var(--tw-text-opacity))}\n.text-purple-800{--tw-text-opacity:1;color:rgba(106, 27, 154, var(--tw-text-opacity))}\n.text-pink-800{--tw-text-opacity:1;color:rgba(173, 20, 87, var(--tw-text-opacity))}\n.text-red-800{--tw-text-opacity:1;color:rgba(198, 40, 40, var(--tw-text-opacity))}\n.text-black{--tw-text-opacity:1;color:rgba(0, 0, 0, var(--tw-text-opacity))}\n.text-opacity-60{--tw-text-opacity:0.6}\n.no-underline{text-decoration:none}\n.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}\n.placeholder-white::-moz-placeholder{--tw-placeholder-opacity:1;color:rgba(255, 255, 255, var(--tw-placeholder-opacity))}\n.placeholder-white:-ms-input-placeholder{--tw-placeholder-opacity:1;color:rgba(255, 255, 255, var(--tw-placeholder-opacity))}\n.placeholder-white::placeholder{--tw-placeholder-opacity:1;color:rgba(255, 255, 255, var(--tw-placeholder-opacity))}\n.placeholder-opacity-50::-moz-placeholder{--tw-placeholder-opacity:0.5}\n.placeholder-opacity-50:-ms-input-placeholder{--tw-placeholder-opacity:0.5}\n.placeholder-opacity-50::placeholder{--tw-placeholder-opacity:0.5}\n.opacity-50{opacity:0.5}\n.opacity-0{opacity:0}\n.opacity-100{opacity:1}\n.opacity-25{opacity:0.25}\n.opacity-5{opacity:0.05}\n.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-blue-gray{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(96, 125, 139, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-gray{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(158, 158, 158, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-brown{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(121, 85, 72, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-deep-orange{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 87, 36, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-orange{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 152, 0, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-amber{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 193, 7, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-yellow{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 235, 59, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-lime{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(205, 220, 57, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-light-green{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(139, 195, 74, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-green{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(76, 175, 80, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-teal{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(0, 150, 136, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-cyan{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(0, 188, 212, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-light-blue{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(3, 169, 244, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-blue{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(33, 150, 243, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-indigo{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(63, 81, 181, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-deep-purple{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(103, 58, 183, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-purple{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(156, 39, 176, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-pink{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(233, 30, 99, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-red{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(244, 67, 54, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-none{--tw-shadow:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-blue-gray{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(69, 90, 100, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-gray{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(97, 97, 97, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-brown{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(93, 64, 55, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-deep-orange{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(230, 74, 25, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-orange{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(245, 122, 0, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-amber{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(255, 160, 0, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-yellow{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(251, 192, 45, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-lime{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(175, 180, 43, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-light-green{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(104, 159, 56, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-green{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(56, 142, 60, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-teal{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(0, 121, 107, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-cyan{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(0, 151, 167, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-light-blue{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(2, 136, 209, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-blue{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(25, 118, 210, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-indigo{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(48, 63, 159, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-deep-purple{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(81, 45, 168, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-purple{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(123, 31, 162, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-pink{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(194, 24, 91, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-red{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(211, 47, 47, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0, 0, 0, 0.05);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.outline-none{outline:2px solid transparent;outline-offset:2px}\n.transition-all{transition-property:all;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}\n.duration-300{transition-duration:300ms}\n.duration{transition-duration:150ms}\n.duration-500{transition-duration:500ms}\n/* Material Tailwind Input */\n.mt-input + label:after {\n        content: '';\n        pointer-events:none;\n        position:absolute;\n        top:0.125rem;\n        left:0px;\n        height:100%;\n        width:100%;\n        --tw-translate-x:0;\n        --tw-translate-y:0;\n        --tw-rotate:0;\n        --tw-skew-x:0;\n        --tw-skew-y:0;\n        --tw-scale-x:1;\n        --tw-scale-y:1;\n        transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n        --tw-scale-x:0;\n        border-width:1px;\n        border-top-width:0px;\n        border-left-width:0px;\n        border-right-width:0px;\n        border-bottom-width:2px;\n        transition-property:all;\n        transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration:150ms;\n        transition-duration:300ms;\n    }\n.mt-input:focus + label:after{--tw-scale-x:1}\n.mt-input:not(:-moz-placeholder-shown) + label span {\n        top: -14%;\n    }\n.mt-input:not(:-ms-input-placeholder) + label span {\n        top: -14%;\n    }\n.mt-input:focus + label span,\n    .mt-input:not(:placeholder-shown) + label span {\n        top: -14%;\n    }\n.mt-input:not(:-moz-placeholder-shown) + label span{font-size:0.75rem;line-height:1rem;line-height:1.25}\n.mt-input:not(:-ms-input-placeholder) + label span{font-size:0.75rem;line-height:1rem;line-height:1.25}\n.mt-input:focus + label span, .mt-input:not(:placeholder-shown) + label span{font-size:0.75rem;line-height:1rem;line-height:1.25}\n.texterea:not(:-moz-placeholder-shown) + label span {\n        top: -22px !important;\n    }\n.texterea:not(:-ms-input-placeholder) + label span {\n        top: -22px !important;\n    }\n.texterea:focus + label span,\n    .texterea:not(:placeholder-shown) + label span {\n        top: -22px !important;\n    }\n/* Material Tailwind Input Outline */\n.mt-input-outline:not(:-moz-placeholder-shown) {\n        border-top: transparent !important;\n    }\n.mt-input-outline:not(:-ms-input-placeholder) {\n        border-top: transparent !important;\n    }\n.mt-input-outline:focus,\n    .mt-input-outline:not(:placeholder-shown) {\n        border-top: transparent !important;\n    }\n.mt-input-outline + label {\n        line-height: 3.625 !important;\n    }\n.mt-input-outline:not(:-moz-placeholder-shown) + label{font-size:0.75rem !important;line-height:1rem !important;line-height:1.25 !important}\n.mt-input-outline:not(:-ms-input-placeholder) + label{font-size:0.75rem !important;line-height:1rem !important;line-height:1.25 !important}\n.mt-input-outline:focus + label, .mt-input-outline:not(:placeholder-shown) + label{font-size:0.75rem !important;line-height:1rem !important;line-height:1.25 !important}\n.mt-input-outline + label:before,\n    .mt-input-outline + label:after {\n        content: '';pointer-events:none;margin-top:0.375rem;box-sizing:border-box;display:block;height:0.5rem;width:0.625rem;border-width:1px;border-top-width:2px;border-bottom-width:0px;border-left-width:0px;border-right-width:0px;border-color:transparent;\n    }\n.mt-input-outline:not(:-moz-placeholder-shown) + label:before, .mt-input-outline:not(:-moz-placeholder-shown) + label:after{border-top-width:1px;--tw-border-opacity:1;border-color:rgba(224, 224, 224, var(--tw-border-opacity))}\n.mt-input-outline:not(:-ms-input-placeholder) + label:before, .mt-input-outline:not(:-ms-input-placeholder) + label:after{border-top-width:1px;--tw-border-opacity:1;border-color:rgba(224, 224, 224, var(--tw-border-opacity))}\n.mt-input-outline:not(:placeholder-shown) + label:before, .mt-input-outline:not(:placeholder-shown) + label:after{border-top-width:1px;--tw-border-opacity:1;border-color:rgba(224, 224, 224, var(--tw-border-opacity))}\n.mt-input-outline:focus + label::before, .mt-input-outline:focus + label::after{border-top-width:2px}\n.mt-input-outline + label:before{margin-right:0.25rem;border-top-left-radius:0.5rem}\n.mt-input-outline + label:after{margin-left:0.25rem;flex-grow:1;border-top-right-radius:0.5rem}\n/* Material Tailwind Radio Button */\n.mt-radio:checked + label span {\n        box-shadow: 0px 0px 0px 2px white inset;\n        --tw-bg-opacity:1 !important;\n    }\n.mt-radio:checked + label{--tw-text-opacity:1;color:rgba(97, 97, 97, var(--tw-text-opacity))}\n.mt-radio + label span::before {\n        content: '';\n        top: -1.5px;\n        left: -1.5px;\n        transform: scale3d(1, 1, 1);\n        position:absolute;\n        z-index:10;\n        margin:0px;\n        display:block;\n        height:1rem;\n        width:1rem;\n        border-radius:9999px;\n        opacity:0;\n    }\n.mt-radio:checked + label span::before {\n        -webkit-animation: radio-ripple 0.3s linear;\n                animation: radio-ripple 0.3s linear;\n    }\n/* Material Tailwind Checkbox */\n.mt-checkbox:checked + label span{--tw-bg-opacity:1 !important}\n.mt-checkbox:checked + label{--tw-text-opacity:1;color:rgba(97, 97, 97, var(--tw-text-opacity))}\n.mt-checkbox + label span::before {\n        content: '';\n        top: -1px;\n        left: -1.5px;\n        transform: scale3d(2, 2, 1);\n        position:absolute;\n        z-index:10;\n        margin:0px;\n        display:block;\n        height:1.25rem;\n        width:1.25rem;\n        border-radius:9999px;\n        opacity:0;\n    }\n.mt-checkbox + label span::after {\n        content: '';\n        top: 1px;\n        left: 6px;\n        position:absolute;\n        height:0.875rem;\n        width:0.375rem;\n        --tw-translate-x:0;\n        --tw-translate-y:0;\n        --tw-rotate:0;\n        --tw-skew-x:0;\n        --tw-skew-y:0;\n        --tw-scale-x:1;\n        --tw-scale-y:1;\n        transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n        --tw-rotate:45deg;\n        border-bottom-width:2px;\n        border-right-width:2px;\n        border-color:transparent;\n        transition-property:all;\n        transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration:150ms;\n        transition-duration:200ms;\n    }\n.mt-checkbox:checked + label span::before {\n        -webkit-animation: radio-ripple 0.3s linear;\n                animation: radio-ripple 0.3s linear;\n    }\n.mt-checkbox:checked + label span::after{--tw-border-opacity:1;border-color:rgba(255, 255, 255, var(--tw-border-opacity))}\n/* Material Tailwind Input Colors */\n.mt-input-blue-gray-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(96, 125, 139, var(--tw-border-opacity))}\n.mt-input-gray-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(158, 158, 158, var(--tw-border-opacity))}\n.mt-input-orange-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 152, 0, var(--tw-border-opacity))}\n.mt-input-deep-orange-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 87, 34, var(--tw-border-opacity))}\n.mt-input-amber-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 193, 7, var(--tw-border-opacity))}\n.mt-input-yellow-600:focus + label:after{--tw-border-opacity:1;border-color:rgba(253, 216, 53, var(--tw-border-opacity))}\n.mt-input-lime-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(205, 220, 57, var(--tw-border-opacity))}\n.mt-input-light-green-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(139, 195, 74, var(--tw-border-opacity))}\n.mt-input-green-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity))}\n.mt-input-teal-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(0, 150, 136, var(--tw-border-opacity))}\n.mt-input-cyan-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(0, 188, 212, var(--tw-border-opacity))}\n.mt-input-light-blue-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(3, 169, 244, var(--tw-border-opacity))}\n.mt-input-blue-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(33, 150, 243, var(--tw-border-opacity))}\n.mt-input-indigo-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(63, 81, 181, var(--tw-border-opacity))}\n.mt-input-purple-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(156, 39, 176, var(--tw-border-opacity))}\n.mt-input-deep-purple-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(103, 58, 183, var(--tw-border-opacity))}\n.mt-input-pink-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(233, 30, 99, var(--tw-border-opacity))}\n.mt-input-red-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity))}\n/* Material Tailwind Input Outline Colors */\n.mt-input-outline-blue-gray-500:focus, .mt-input-outline-blue-gray-500:focus + label, .mt-input-outline-blue-gray-500:focus + label:before, .mt-input-outline-blue-gray-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(96, 125, 139, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(96, 125, 139, var(--tw-text-opacity))}\n.mt-input-outline-gray-500:focus, .mt-input-outline-gray-500:focus + label, .mt-input-outline-gray-500:focus + label:before, .mt-input-outline-gray-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(158, 158, 158, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(158, 158, 158, var(--tw-text-opacity))}\n.mt-input-outline-orange-500:focus, .mt-input-outline-orange-500:focus + label, .mt-input-outline-orange-500:focus + label:before, .mt-input-outline-orange-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 152, 0, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(255, 152, 0, var(--tw-text-opacity))}\n.mt-input-outline-deep-orange-500:focus, .mt-input-outline-deep-orange-500:focus + label, .mt-input-outline-deep-orange-500:focus + label:before, .mt-input-outline-deep-orange-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 87, 34, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(255, 87, 34, var(--tw-text-opacity))}\n.mt-input-outline-brown-500:focus, .mt-input-outline-brown-500:focus + label, .mt-input-outline-brown-500:focus + label:before, .mt-input-outline-brown-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(121, 85, 72, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(121, 85, 72, var(--tw-text-opacity))}\n.mt-input-outline-amber-500:focus, .mt-input-outline-amber-500:focus + label, .mt-input-outline-amber-500:focus + label:before, .mt-input-outline-amber-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 193, 7, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(255, 193, 7, var(--tw-text-opacity))}\n.mt-input-outline-yellow-600:focus, .mt-input-outline-yellow-600:focus + label, .mt-input-outline-yellow-600:focus + label:before, .mt-input-outline-yellow-600:focus + label:after{--tw-border-opacity:1;border-color:rgba(253, 216, 53, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(253, 216, 53, var(--tw-text-opacity))}\n.mt-input-outline-lime-500:focus, .mt-input-outline-lime-500:focus + label, .mt-input-outline-lime-500:focus + label:before, .mt-input-outline-lime-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(205, 220, 57, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(205, 220, 57, var(--tw-text-opacity))}\n.mt-input-outline-light-green-500:focus, .mt-input-outline-light-green-500:focus + label, .mt-input-outline-light-green-500:focus + label:before, .mt-input-outline-light-green-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(139, 195, 74, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(139, 195, 74, var(--tw-text-opacity))}\n.mt-input-outline-green-500:focus, .mt-input-outline-green-500:focus + label, .mt-input-outline-green-500:focus + label:before, .mt-input-outline-green-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(76, 175, 80, var(--tw-text-opacity))}\n.mt-input-outline-teal-500:focus, .mt-input-outline-teal-500:focus + label, .mt-input-outline-teal-500:focus + label:before, .mt-input-outline-teal-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(0, 150, 136, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(0, 150, 136, var(--tw-text-opacity))}\n.mt-input-outline-cyan-500:focus, .mt-input-outline-cyan-500:focus + label, .mt-input-outline-cyan-500:focus + label:before, .mt-input-outline-cyan-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(0, 188, 212, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(0, 188, 212, var(--tw-text-opacity))}\n.mt-input-outline-light-blue-500:focus, .mt-input-outline-light-blue-500:focus + label, .mt-input-outline-light-blue-500:focus + label:before, .mt-input-outline-light-blue-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(3, 169, 244, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(3, 169, 244, var(--tw-text-opacity))}\n.mt-input-outline-blue-500:focus, .mt-input-outline-blue-500:focus + label, .mt-input-outline-blue-500:focus + label:before, .mt-input-outline-blue-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(33, 150, 243, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(33, 150, 243, var(--tw-text-opacity))}\n.mt-input-outline-indigo-500:focus, .mt-input-outline-indigo-500:focus + label, .mt-input-outline-indigo-500:focus + label:before, .mt-input-outline-indigo-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(63, 81, 181, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(63, 81, 181, var(--tw-text-opacity))}\n.mt-input-outline-purple-500:focus, .mt-input-outline-purple-500:focus + label, .mt-input-outline-purple-500:focus + label:before, .mt-input-outline-purple-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(156, 39, 176, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(156, 39, 176, var(--tw-text-opacity))}\n.mt-input-outline-deep-purple-500:focus, .mt-input-outline-deep-purple-500:focus + label, .mt-input-outline-deep-purple-500:focus + label:before, .mt-input-outline-deep-purple-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(103, 58, 183, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(103, 58, 183, var(--tw-text-opacity))}\n.mt-input-outline-pink-500:focus, .mt-input-outline-pink-500:focus + label, .mt-input-outline-pink-500:focus + label:before, .mt-input-outline-pink-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(233, 30, 99, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(233, 30, 99, var(--tw-text-opacity))}\n.mt-input-outline-red-500:focus, .mt-input-outline-red-500:focus + label, .mt-input-outline-red-500:focus + label:before, .mt-input-outline-red-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(244, 67, 54, var(--tw-text-opacity))}\n.mt-input-outline-error:not(:-moz-placeholder-shown) + label, .mt-input-outline-error:not(:-moz-placeholder-shown) + label:before, .mt-input-outline-error:not(:-moz-placeholder-shown) + label:after{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(244, 67, 54, var(--tw-text-opacity))}\n.mt-input-outline-error:not(:-ms-input-placeholder) + label, .mt-input-outline-error:not(:-ms-input-placeholder) + label:before, .mt-input-outline-error:not(:-ms-input-placeholder) + label:after{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(244, 67, 54, var(--tw-text-opacity))}\n.mt-input-outline-error:not(:placeholder-shown) + label, .mt-input-outline-error:not(:placeholder-shown) + label:before, .mt-input-outline-error:not(:placeholder-shown) + label:after{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(244, 67, 54, var(--tw-text-opacity))}\n.mt-input-outline-success:not(:-moz-placeholder-shown) + label, .mt-input-outline-success:not(:-moz-placeholder-shown) + label:before, .mt-input-outline-success:not(:-moz-placeholder-shown) + label:after{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(76, 175, 80, var(--tw-text-opacity))}\n.mt-input-outline-success:not(:-ms-input-placeholder) + label, .mt-input-outline-success:not(:-ms-input-placeholder) + label:before, .mt-input-outline-success:not(:-ms-input-placeholder) + label:after{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(76, 175, 80, var(--tw-text-opacity))}\n.mt-input-outline-success:not(:placeholder-shown) + label, .mt-input-outline-success:not(:placeholder-shown) + label:before, .mt-input-outline-success:not(:placeholder-shown) + label:after{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(76, 175, 80, var(--tw-text-opacity))}\n/* Material Tailwind Radio Button and Checkbox Colors */\n.mt-radio-blue-gray-500:checked + label span, .mt-radio-blue-gray-500 + label span::before, .mt-checkbox-blue-gray-500:checked + label span, .mt-checkbox-blue-gray-500 + label span::before{--tw-border-opacity:1;border-color:rgba(96, 125, 139, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(96, 125, 139, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-gray-500:checked + label span, .mt-radio-gray-500 + label span::before, .mt-checkbox-gray-500:checked + label span, .mt-checkbox-gray-500 + label span::before{--tw-border-opacity:1;border-color:rgba(158, 158, 158, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(158, 158, 158, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-orange-500:checked + label span, .mt-radio-orange-500 + label span::before, .mt-checkbox-orange-500:checked + label span, .mt-checkbox-orange-500 + label span::before{--tw-border-opacity:1;border-color:rgba(255, 152, 0, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(255, 152, 0, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-deep-orange-500:checked + label span, .mt-radio-deep-orange-500 + label span::before, .mt-checkbox-deep-orange-500:checked + label span, .mt-checkbox-deep-orange-500 + label span::before{--tw-border-opacity:1;border-color:rgba(255, 87, 34, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(255, 87, 34, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-brown-500:checked + label span, .mt-radio-brown-500 + label span::before, .mt-checkbox-brown-500:checked + label span, .mt-checkbox-brown-500 + label span::before{--tw-border-opacity:1;border-color:rgba(121, 85, 72, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(121, 85, 72, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-amber-500:checked + label span, .mt-radio-amber-500 + label span::before, .mt-checkbox-amber-500:checked + label span, .mt-checkbox-amber-500 + label span::before{--tw-border-opacity:1;border-color:rgba(255, 193, 7, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(255, 193, 7, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-yellow-600:checked + label span, .mt-radio-yellow-600 + label span::before, .mt-checkbox-yellow-600:checked + label span, .mt-checkbox-yellow-600 + label span::before{--tw-border-opacity:1;border-color:rgba(253, 216, 53, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(253, 216, 53, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-lime-500:checked + label span, .mt-radio-lime-500 + label span::before, .mt-checkbox-lime-500:checked + label span, .mt-checkbox-lime-500 + label span::before{--tw-border-opacity:1;border-color:rgba(205, 220, 57, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(205, 220, 57, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-light-green-500:checked + label span, .mt-radio-light-green-500 + label span::before, .mt-checkbox-light-green-500:checked + label span, .mt-checkbox-light-green-500 + label span::before{--tw-border-opacity:1;border-color:rgba(139, 195, 74, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(139, 195, 74, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-green-500:checked + label span, .mt-radio-green-500 + label span::before, .mt-checkbox-green-500:checked + label span, .mt-checkbox-green-500 + label span::before{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(76, 175, 80, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-teal-500:checked + label span, .mt-radio-teal-500 + label span::before, .mt-checkbox-teal-500:checked + label span, .mt-checkbox-teal-500 + label span::before{--tw-border-opacity:1;border-color:rgba(0, 150, 136, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(0, 150, 136, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-cyan-500:checked + label span, .mt-radio-cyan-500 + label span::before, .mt-checkbox-cyan-500:checked + label span, .mt-checkbox-cyan-500 + label span::before{--tw-border-opacity:1;border-color:rgba(0, 188, 212, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(0, 188, 212, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-light-blue-500:checked + label span, .mt-radio-light-blue-500 + label span::before, .mt-checkbox-light-blue-500:checked + label span, .mt-checkbox-light-blue-500 + label span::before{--tw-border-opacity:1;border-color:rgba(3, 169, 244, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(3, 169, 244, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-blue-500:checked + label span, .mt-radio-blue-500 + label span::before, .mt-checkbox-blue-500:checked + label span, .mt-checkbox-blue-500 + label span::before{--tw-border-opacity:1;border-color:rgba(33, 150, 243, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(33, 150, 243, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-indigo-500:checked + label span, .mt-radio-indigo-500 + label span::before, .mt-checkbox-indigo-500:checked + label span, .mt-checkbox-indigo-500 + label span::before{--tw-border-opacity:1;border-color:rgba(63, 81, 181, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(63, 81, 181, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-purple-500:checked + label span, .mt-radio-purple-500 + label span::before, .mt-checkbox-purple-500:checked + label span, .mt-checkbox-purple-500 + label span::before{--tw-border-opacity:1;border-color:rgba(156, 39, 176, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(156, 39, 176, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-deep-purple-500:checked + label span, .mt-radio-deep-purple-500 + label span::before, .mt-checkbox-deep-purple-500:checked + label span, .mt-checkbox-deep-purple-500 + label span::before{--tw-border-opacity:1;border-color:rgba(103, 58, 183, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(103, 58, 183, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-pink-500:checked + label span, .mt-radio-pink-500 + label span::before, .mt-checkbox-pink-500:checked + label span, .mt-checkbox-pink-500 + label span::before{--tw-border-opacity:1;border-color:rgba(233, 30, 99, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(233, 30, 99, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-red-500:checked + label span, .mt-radio-red-500 + label span::before, .mt-checkbox-red-500:checked + label span, .mt-checkbox-red-500 + label span::before{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(244, 67, 54, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n/* Tippy Boxx */\n.tippy-box:focus {\n    outline: none;\n}\n/* Tippy Animation */\n.tippy-box[data-animation='scale'] {\n    transform-origin: top left !important;\n}\n/* Tippy Arrow */\n.arrow-light .tippy-svg-arrow {\n    fill: #fff;\n}\n.arrow-dark .tippy-svg-arrow {\n    fill: rgba(0, 0, 0, 0.8);\n}\n/* Material Tailwind Radio Button Ripple Effect Animation */\n@-webkit-keyframes radio-ripple {\n    from {\n        opacity: 0;\n        transform: scale3d(1, 1, 1);\n    }\n    50% {\n        opacity: 1;\n        transform: scale3d(2, 2, 1);\n    }\n    to {\n        opacity: 0;\n        transform: scale3d(3, 3, 1);\n    }\n}\n@keyframes radio-ripple {\n    from {\n        opacity: 0;\n        transform: scale3d(1, 1, 1);\n    }\n    50% {\n        opacity: 1;\n        transform: scale3d(2, 2, 1);\n    }\n    to {\n        opacity: 0;\n        transform: scale3d(3, 3, 1);\n    }\n}\n.last\\:mr-0:last-child{margin-right:0px}\n.hover\\:border-blue-gray-700:hover{--tw-border-opacity:1;border-color:rgba(69, 90, 100, var(--tw-border-opacity))}\n.hover\\:border-gray-700:hover{--tw-border-opacity:1;border-color:rgba(97, 97, 97, var(--tw-border-opacity))}\n.hover\\:border-brown-700:hover{--tw-border-opacity:1;border-color:rgba(93, 64, 55, var(--tw-border-opacity))}\n.hover\\:border-deep-orange-700:hover{--tw-border-opacity:1;border-color:rgba(230, 74, 25, var(--tw-border-opacity))}\n.hover\\:border-orange-700:hover{--tw-border-opacity:1;border-color:rgba(245, 124, 0, var(--tw-border-opacity))}\n.hover\\:border-amber-700:hover{--tw-border-opacity:1;border-color:rgba(255, 160, 0, var(--tw-border-opacity))}\n.hover\\:border-yellow-700:hover{--tw-border-opacity:1;border-color:rgba(251, 192, 45, var(--tw-border-opacity))}\n.hover\\:border-lime-700:hover{--tw-border-opacity:1;border-color:rgba(175, 180, 43, var(--tw-border-opacity))}\n.hover\\:border-light-green-700:hover{--tw-border-opacity:1;border-color:rgba(104, 159, 56, var(--tw-border-opacity))}\n.hover\\:border-green-700:hover{--tw-border-opacity:1;border-color:rgba(56, 142, 60, var(--tw-border-opacity))}\n.hover\\:border-teal-700:hover{--tw-border-opacity:1;border-color:rgba(0, 121, 107, var(--tw-border-opacity))}\n.hover\\:border-cyan-700:hover{--tw-border-opacity:1;border-color:rgba(0, 151, 167, var(--tw-border-opacity))}\n.hover\\:border-light-blue-700:hover{--tw-border-opacity:1;border-color:rgba(2, 136, 209, var(--tw-border-opacity))}\n.hover\\:border-blue-700:hover{--tw-border-opacity:1;border-color:rgba(25, 118, 210, var(--tw-border-opacity))}\n.hover\\:border-indigo-700:hover{--tw-border-opacity:1;border-color:rgba(48, 63, 159, var(--tw-border-opacity))}\n.hover\\:border-deep-purple-700:hover{--tw-border-opacity:1;border-color:rgba(81, 45, 168, var(--tw-border-opacity))}\n.hover\\:border-purple-700:hover{--tw-border-opacity:1;border-color:rgba(123, 31, 162, var(--tw-border-opacity))}\n.hover\\:border-pink-700:hover{--tw-border-opacity:1;border-color:rgba(194, 24, 91, var(--tw-border-opacity))}\n.hover\\:border-red-700:hover{--tw-border-opacity:1;border-color:rgba(211, 47, 47, var(--tw-border-opacity))}\n.hover\\:bg-blue-gray-700:hover{--tw-bg-opacity:1;background-color:rgba(69, 90, 100, var(--tw-bg-opacity))}\n.hover\\:bg-gray-700:hover{--tw-bg-opacity:1;background-color:rgba(97, 97, 97, var(--tw-bg-opacity))}\n.hover\\:bg-brown-700:hover{--tw-bg-opacity:1;background-color:rgba(93, 64, 55, var(--tw-bg-opacity))}\n.hover\\:bg-deep-orange-700:hover{--tw-bg-opacity:1;background-color:rgba(230, 74, 25, var(--tw-bg-opacity))}\n.hover\\:bg-orange-700:hover{--tw-bg-opacity:1;background-color:rgba(245, 124, 0, var(--tw-bg-opacity))}\n.hover\\:bg-amber-700:hover{--tw-bg-opacity:1;background-color:rgba(255, 160, 0, var(--tw-bg-opacity))}\n.hover\\:bg-yellow-700:hover{--tw-bg-opacity:1;background-color:rgba(251, 192, 45, var(--tw-bg-opacity))}\n.hover\\:bg-lime-700:hover{--tw-bg-opacity:1;background-color:rgba(175, 180, 43, var(--tw-bg-opacity))}\n.hover\\:bg-light-green-700:hover{--tw-bg-opacity:1;background-color:rgba(104, 159, 56, var(--tw-bg-opacity))}\n.hover\\:bg-green-700:hover{--tw-bg-opacity:1;background-color:rgba(56, 142, 60, var(--tw-bg-opacity))}\n.hover\\:bg-teal-700:hover{--tw-bg-opacity:1;background-color:rgba(0, 121, 107, var(--tw-bg-opacity))}\n.hover\\:bg-cyan-700:hover{--tw-bg-opacity:1;background-color:rgba(0, 151, 167, var(--tw-bg-opacity))}\n.hover\\:bg-light-blue-700:hover{--tw-bg-opacity:1;background-color:rgba(2, 136, 209, var(--tw-bg-opacity))}\n.hover\\:bg-blue-700:hover{--tw-bg-opacity:1;background-color:rgba(25, 118, 210, var(--tw-bg-opacity))}\n.hover\\:bg-indigo-700:hover{--tw-bg-opacity:1;background-color:rgba(48, 63, 159, var(--tw-bg-opacity))}\n.hover\\:bg-deep-purple-700:hover{--tw-bg-opacity:1;background-color:rgba(81, 45, 168, var(--tw-bg-opacity))}\n.hover\\:bg-purple-700:hover{--tw-bg-opacity:1;background-color:rgba(123, 31, 162, var(--tw-bg-opacity))}\n.hover\\:bg-pink-700:hover{--tw-bg-opacity:1;background-color:rgba(194, 24, 91, var(--tw-bg-opacity))}\n.hover\\:bg-red-700:hover{--tw-bg-opacity:1;background-color:rgba(211, 47, 47, var(--tw-bg-opacity))}\n.hover\\:bg-blue-gray-50:hover{--tw-bg-opacity:1;background-color:rgba(236, 239, 241, var(--tw-bg-opacity))}\n.hover\\:bg-gray-50:hover{--tw-bg-opacity:1;background-color:rgba(250, 250, 250, var(--tw-bg-opacity))}\n.hover\\:bg-brown-50:hover{--tw-bg-opacity:1;background-color:rgba(239, 235, 233, var(--tw-bg-opacity))}\n.hover\\:bg-deep-orange-50:hover{--tw-bg-opacity:1;background-color:rgba(251, 233, 231, var(--tw-bg-opacity))}\n.hover\\:bg-orange-50:hover{--tw-bg-opacity:1;background-color:rgba(255, 243, 224, var(--tw-bg-opacity))}\n.hover\\:bg-amber-50:hover{--tw-bg-opacity:1;background-color:rgba(255, 248, 225, var(--tw-bg-opacity))}\n.hover\\:bg-yellow-50:hover{--tw-bg-opacity:1;background-color:rgba(255, 253, 231, var(--tw-bg-opacity))}\n.hover\\:bg-lime-50:hover{--tw-bg-opacity:1;background-color:rgba(249, 251, 231, var(--tw-bg-opacity))}\n.hover\\:bg-light-green-50:hover{--tw-bg-opacity:1;background-color:rgba(241, 248, 233, var(--tw-bg-opacity))}\n.hover\\:bg-green-50:hover{--tw-bg-opacity:1;background-color:rgba(232, 245, 233, var(--tw-bg-opacity))}\n.hover\\:bg-teal-50:hover{--tw-bg-opacity:1;background-color:rgba(224, 242, 241, var(--tw-bg-opacity))}\n.hover\\:bg-cyan-50:hover{--tw-bg-opacity:1;background-color:rgba(224, 247, 250, var(--tw-bg-opacity))}\n.hover\\:bg-light-blue-50:hover{--tw-bg-opacity:1;background-color:rgba(225, 245, 254, var(--tw-bg-opacity))}\n.hover\\:bg-blue-50:hover{--tw-bg-opacity:1;background-color:rgba(227, 242, 253, var(--tw-bg-opacity))}\n.hover\\:bg-indigo-50:hover{--tw-bg-opacity:1;background-color:rgba(232, 234, 246, var(--tw-bg-opacity))}\n.hover\\:bg-deep-purple-50:hover{--tw-bg-opacity:1;background-color:rgba(237, 231, 246, var(--tw-bg-opacity))}\n.hover\\:bg-purple-50:hover{--tw-bg-opacity:1;background-color:rgba(243, 229, 245, var(--tw-bg-opacity))}\n.hover\\:bg-pink-50:hover{--tw-bg-opacity:1;background-color:rgba(252, 228, 236, var(--tw-bg-opacity))}\n.hover\\:bg-red-50:hover{--tw-bg-opacity:1;background-color:rgba(255, 235, 238, var(--tw-bg-opacity))}\n.hover\\:bg-blue-gray-500:hover{--tw-bg-opacity:1;background-color:rgba(96, 125, 139, var(--tw-bg-opacity))}\n.hover\\:bg-gray-500:hover{--tw-bg-opacity:1;background-color:rgba(158, 158, 158, var(--tw-bg-opacity))}\n.hover\\:bg-brown-500:hover{--tw-bg-opacity:1;background-color:rgba(121, 85, 72, var(--tw-bg-opacity))}\n.hover\\:bg-deep-orange-500:hover{--tw-bg-opacity:1;background-color:rgba(255, 87, 34, var(--tw-bg-opacity))}\n.hover\\:bg-orange-500:hover{--tw-bg-opacity:1;background-color:rgba(255, 152, 0, var(--tw-bg-opacity))}\n.hover\\:bg-amber-500:hover{--tw-bg-opacity:1;background-color:rgba(255, 193, 7, var(--tw-bg-opacity))}\n.hover\\:bg-yellow-600:hover{--tw-bg-opacity:1;background-color:rgba(253, 216, 53, var(--tw-bg-opacity))}\n.hover\\:bg-lime-500:hover{--tw-bg-opacity:1;background-color:rgba(205, 220, 57, var(--tw-bg-opacity))}\n.hover\\:bg-light-green-500:hover{--tw-bg-opacity:1;background-color:rgba(139, 195, 74, var(--tw-bg-opacity))}\n.hover\\:bg-green-500:hover{--tw-bg-opacity:1;background-color:rgba(76, 175, 80, var(--tw-bg-opacity))}\n.hover\\:bg-teal-500:hover{--tw-bg-opacity:1;background-color:rgba(0, 150, 136, var(--tw-bg-opacity))}\n.hover\\:bg-cyan-500:hover{--tw-bg-opacity:1;background-color:rgba(0, 188, 212, var(--tw-bg-opacity))}\n.hover\\:bg-light-blue-500:hover{--tw-bg-opacity:1;background-color:rgba(3, 169, 244, var(--tw-bg-opacity))}\n.hover\\:bg-blue-500:hover{--tw-bg-opacity:1;background-color:rgba(33, 150, 243, var(--tw-bg-opacity))}\n.hover\\:bg-indigo-500:hover{--tw-bg-opacity:1;background-color:rgba(63, 81, 181, var(--tw-bg-opacity))}\n.hover\\:bg-deep-purple-500:hover{--tw-bg-opacity:1;background-color:rgba(103, 58, 183, var(--tw-bg-opacity))}\n.hover\\:bg-purple-500:hover{--tw-bg-opacity:1;background-color:rgba(156, 39, 176, var(--tw-bg-opacity))}\n.hover\\:bg-pink-500:hover{--tw-bg-opacity:1;background-color:rgba(233, 30, 99, var(--tw-bg-opacity))}\n.hover\\:bg-red-500:hover{--tw-bg-opacity:1;background-color:rgba(244, 67, 54, var(--tw-bg-opacity))}\n.hover\\:bg-white:hover{--tw-bg-opacity:1;background-color:rgba(255, 255, 255, var(--tw-bg-opacity))}\n.hover\\:bg-opacity-20:hover{--tw-bg-opacity:0.2}\n.hover\\:text-gray-900:hover{--tw-text-opacity:1;color:rgba(33, 33, 33, var(--tw-text-opacity))}\n.hover\\:text-blue-gray-800:hover{--tw-text-opacity:1;color:rgba(55, 71, 79, var(--tw-text-opacity))}\n.hover\\:text-blue-gray-700:hover{--tw-text-opacity:1;color:rgba(69, 90, 100, var(--tw-text-opacity))}\n.hover\\:text-gray-700:hover{--tw-text-opacity:1;color:rgba(97, 97, 97, var(--tw-text-opacity))}\n.hover\\:text-brown-700:hover{--tw-text-opacity:1;color:rgba(93, 64, 55, var(--tw-text-opacity))}\n.hover\\:text-deep-orange-700:hover{--tw-text-opacity:1;color:rgba(230, 74, 25, var(--tw-text-opacity))}\n.hover\\:text-orange-700:hover{--tw-text-opacity:1;color:rgba(245, 124, 0, var(--tw-text-opacity))}\n.hover\\:text-amber-700:hover{--tw-text-opacity:1;color:rgba(255, 160, 0, var(--tw-text-opacity))}\n.hover\\:text-yellow-700:hover{--tw-text-opacity:1;color:rgba(251, 192, 45, var(--tw-text-opacity))}\n.hover\\:text-lime-700:hover{--tw-text-opacity:1;color:rgba(175, 180, 43, var(--tw-text-opacity))}\n.hover\\:text-light-green-700:hover{--tw-text-opacity:1;color:rgba(104, 159, 56, var(--tw-text-opacity))}\n.hover\\:text-green-700:hover{--tw-text-opacity:1;color:rgba(56, 142, 60, var(--tw-text-opacity))}\n.hover\\:text-teal-700:hover{--tw-text-opacity:1;color:rgba(0, 121, 107, var(--tw-text-opacity))}\n.hover\\:text-cyan-700:hover{--tw-text-opacity:1;color:rgba(0, 151, 167, var(--tw-text-opacity))}\n.hover\\:text-light-blue-700:hover{--tw-text-opacity:1;color:rgba(2, 136, 209, var(--tw-text-opacity))}\n.hover\\:text-blue-700:hover{--tw-text-opacity:1;color:rgba(25, 118, 210, var(--tw-text-opacity))}\n.hover\\:text-indigo-700:hover{--tw-text-opacity:1;color:rgba(48, 63, 159, var(--tw-text-opacity))}\n.hover\\:text-deep-purple-700:hover{--tw-text-opacity:1;color:rgba(81, 45, 168, var(--tw-text-opacity))}\n.hover\\:text-purple-700:hover{--tw-text-opacity:1;color:rgba(123, 31, 162, var(--tw-text-opacity))}\n.hover\\:text-pink-700:hover{--tw-text-opacity:1;color:rgba(194, 24, 91, var(--tw-text-opacity))}\n.hover\\:text-red-700:hover{--tw-text-opacity:1;color:rgba(211, 47, 47, var(--tw-text-opacity))}\n.hover\\:text-white:hover{--tw-text-opacity:1;color:rgba(255, 255, 255, var(--tw-text-opacity))}\n.hover\\:shadow-lg-blue-gray:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(69, 90, 100, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-gray:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(97, 97, 97, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-brown:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(93, 64, 55, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-deep-orange:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(230, 74, 25, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-orange:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(245, 122, 0, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-amber:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(255, 160, 0, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-yellow:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(251, 192, 45, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-lime:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(175, 180, 43, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-light-green:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(104, 159, 56, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-green:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(56, 142, 60, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-teal:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(0, 121, 107, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-cyan:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(0, 151, 167, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-light-blue:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(2, 136, 209, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-blue:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(25, 118, 210, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-indigo:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(48, 63, 159, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-deep-purple:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(81, 45, 168, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-purple:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(123, 31, 162, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-pink:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(194, 24, 91, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-red:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(211, 47, 47, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-blue-gray:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(96, 125, 139, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-gray:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(158, 158, 158, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-brown:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(121, 85, 72, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-deep-orange:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 87, 36, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-orange:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 152, 0, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-amber:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 193, 7, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-yellow:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 235, 59, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-lime:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(205, 220, 57, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-light-green:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(139, 195, 74, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-green:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(76, 175, 80, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-teal:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(0, 150, 136, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-cyan:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(0, 188, 212, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-light-blue:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(3, 169, 244, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-blue:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(33, 150, 243, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-indigo:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(63, 81, 181, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-deep-purple:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(103, 58, 183, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-purple:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(156, 39, 176, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-pink:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(233, 30, 99, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-red:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(244, 67, 54, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.focus\\:border-2:focus{border-width:2px}\n.focus\\:border-blue-gray-500:focus{--tw-border-opacity:1;border-color:rgba(96, 125, 139, var(--tw-border-opacity))}\n.focus\\:border-gray-500:focus{--tw-border-opacity:1;border-color:rgba(158, 158, 158, var(--tw-border-opacity))}\n.focus\\:border-brown-500:focus{--tw-border-opacity:1;border-color:rgba(121, 85, 72, var(--tw-border-opacity))}\n.focus\\:border-deep-orange-500:focus{--tw-border-opacity:1;border-color:rgba(255, 87, 34, var(--tw-border-opacity))}\n.focus\\:border-orange-500:focus{--tw-border-opacity:1;border-color:rgba(255, 152, 0, var(--tw-border-opacity))}\n.focus\\:border-amber-500:focus{--tw-border-opacity:1;border-color:rgba(255, 193, 7, var(--tw-border-opacity))}\n.focus\\:border-yellow-600:focus{--tw-border-opacity:1;border-color:rgba(253, 216, 53, var(--tw-border-opacity))}\n.focus\\:border-lime-500:focus{--tw-border-opacity:1;border-color:rgba(205, 220, 57, var(--tw-border-opacity))}\n.focus\\:border-light-green-500:focus{--tw-border-opacity:1;border-color:rgba(139, 195, 74, var(--tw-border-opacity))}\n.focus\\:border-green-500:focus{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity))}\n.focus\\:border-teal-500:focus{--tw-border-opacity:1;border-color:rgba(0, 150, 136, var(--tw-border-opacity))}\n.focus\\:border-cyan-500:focus{--tw-border-opacity:1;border-color:rgba(0, 188, 212, var(--tw-border-opacity))}\n.focus\\:border-light-blue-500:focus{--tw-border-opacity:1;border-color:rgba(3, 169, 244, var(--tw-border-opacity))}\n.focus\\:border-blue-500:focus{--tw-border-opacity:1;border-color:rgba(33, 150, 243, var(--tw-border-opacity))}\n.focus\\:border-indigo-500:focus{--tw-border-opacity:1;border-color:rgba(63, 81, 181, var(--tw-border-opacity))}\n.focus\\:border-deep-purple-500:focus{--tw-border-opacity:1;border-color:rgba(103, 58, 183, var(--tw-border-opacity))}\n.focus\\:border-purple-500:focus{--tw-border-opacity:1;border-color:rgba(156, 39, 176, var(--tw-border-opacity))}\n.focus\\:border-pink-500:focus{--tw-border-opacity:1;border-color:rgba(233, 30, 99, var(--tw-border-opacity))}\n.focus\\:border-red-500:focus{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity))}\n.focus\\:bg-blue-gray-400:focus{--tw-bg-opacity:1;background-color:rgba(120, 144, 156, var(--tw-bg-opacity))}\n.focus\\:bg-gray-400:focus{--tw-bg-opacity:1;background-color:rgba(189, 189, 189, var(--tw-bg-opacity))}\n.focus\\:bg-brown-400:focus{--tw-bg-opacity:1;background-color:rgba(141, 110, 99, var(--tw-bg-opacity))}\n.focus\\:bg-deep-orange-400:focus{--tw-bg-opacity:1;background-color:rgba(255, 112, 67, var(--tw-bg-opacity))}\n.focus\\:bg-orange-400:focus{--tw-bg-opacity:1;background-color:rgba(255, 167, 38, var(--tw-bg-opacity))}\n.focus\\:bg-amber-400:focus{--tw-bg-opacity:1;background-color:rgba(255, 202, 40, var(--tw-bg-opacity))}\n.focus\\:bg-yellow-500:focus{--tw-bg-opacity:1;background-color:rgba(255, 235, 59, var(--tw-bg-opacity))}\n.focus\\:bg-lime-400:focus{--tw-bg-opacity:1;background-color:rgba(212, 225, 87, var(--tw-bg-opacity))}\n.focus\\:bg-light-green-400:focus{--tw-bg-opacity:1;background-color:rgba(156, 204, 101, var(--tw-bg-opacity))}\n.focus\\:bg-green-400:focus{--tw-bg-opacity:1;background-color:rgba(102, 187, 106, var(--tw-bg-opacity))}\n.focus\\:bg-teal-400:focus{--tw-bg-opacity:1;background-color:rgba(38, 166, 154, var(--tw-bg-opacity))}\n.focus\\:bg-cyan-400:focus{--tw-bg-opacity:1;background-color:rgba(38, 198, 218, var(--tw-bg-opacity))}\n.focus\\:bg-light-blue-400:focus{--tw-bg-opacity:1;background-color:rgba(41, 182, 246, var(--tw-bg-opacity))}\n.focus\\:bg-blue-400:focus{--tw-bg-opacity:1;background-color:rgba(66, 165, 245, var(--tw-bg-opacity))}\n.focus\\:bg-indigo-400:focus{--tw-bg-opacity:1;background-color:rgba(92, 107, 192, var(--tw-bg-opacity))}\n.focus\\:bg-deep-purple-400:focus{--tw-bg-opacity:1;background-color:rgba(126, 87, 194, var(--tw-bg-opacity))}\n.focus\\:bg-purple-400:focus{--tw-bg-opacity:1;background-color:rgba(171, 71, 188, var(--tw-bg-opacity))}\n.focus\\:bg-pink-400:focus{--tw-bg-opacity:1;background-color:rgba(236, 64, 122, var(--tw-bg-opacity))}\n.focus\\:bg-red-400:focus{--tw-bg-opacity:1;background-color:rgba(239, 83, 80, var(--tw-bg-opacity))}\n.focus\\:bg-gray-500:focus{--tw-bg-opacity:1;background-color:rgba(158, 158, 158, var(--tw-bg-opacity))}\n.focus\\:bg-opacity-20:focus{--tw-bg-opacity:0.2}\n.focus\\:text-gray-800:focus{--tw-text-opacity:1;color:rgba(66, 66, 66, var(--tw-text-opacity))}\n.focus\\:shadow-none:focus{--tw-shadow:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}\n.focus\\:ring-0:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)}\n.active\\:bg-blue-gray-800:active{--tw-bg-opacity:1;background-color:rgba(55, 71, 79, var(--tw-bg-opacity))}\n.active\\:bg-gray-800:active{--tw-bg-opacity:1;background-color:rgba(66, 66, 66, var(--tw-bg-opacity))}\n.active\\:bg-brown-800:active{--tw-bg-opacity:1;background-color:rgba(78, 52, 46, var(--tw-bg-opacity))}\n.active\\:bg-deep-orange-800:active{--tw-bg-opacity:1;background-color:rgba(216, 67, 21, var(--tw-bg-opacity))}\n.active\\:bg-orange-800:active{--tw-bg-opacity:1;background-color:rgba(239, 108, 0, var(--tw-bg-opacity))}\n.active\\:bg-amber-800:active{--tw-bg-opacity:1;background-color:rgba(255, 143, 0, var(--tw-bg-opacity))}\n.active\\:bg-yellow-800:active{--tw-bg-opacity:1;background-color:rgba(249, 168, 37, var(--tw-bg-opacity))}\n.active\\:bg-lime-800:active{--tw-bg-opacity:1;background-color:rgba(158, 157, 36, var(--tw-bg-opacity))}\n.active\\:bg-light-green-800:active{--tw-bg-opacity:1;background-color:rgba(85, 139, 47, var(--tw-bg-opacity))}\n.active\\:bg-green-800:active{--tw-bg-opacity:1;background-color:rgba(46, 125, 50, var(--tw-bg-opacity))}\n.active\\:bg-teal-800:active{--tw-bg-opacity:1;background-color:rgba(0, 105, 92, var(--tw-bg-opacity))}\n.active\\:bg-cyan-800:active{--tw-bg-opacity:1;background-color:rgba(0, 131, 143, var(--tw-bg-opacity))}\n.active\\:bg-light-blue-800:active{--tw-bg-opacity:1;background-color:rgba(2, 119, 189, var(--tw-bg-opacity))}\n.active\\:bg-blue-800:active{--tw-bg-opacity:1;background-color:rgba(21, 101, 192, var(--tw-bg-opacity))}\n.active\\:bg-indigo-800:active{--tw-bg-opacity:1;background-color:rgba(40, 53, 147, var(--tw-bg-opacity))}\n.active\\:bg-deep-purple-800:active{--tw-bg-opacity:1;background-color:rgba(69, 39, 160, var(--tw-bg-opacity))}\n.active\\:bg-purple-800:active{--tw-bg-opacity:1;background-color:rgba(106, 27, 154, var(--tw-bg-opacity))}\n.active\\:bg-pink-800:active{--tw-bg-opacity:1;background-color:rgba(173, 20, 87, var(--tw-bg-opacity))}\n.active\\:bg-red-800:active{--tw-bg-opacity:1;background-color:rgba(198, 40, 40, var(--tw-bg-opacity))}\n.active\\:bg-blue-gray-100:active{--tw-bg-opacity:1;background-color:rgba(207, 216, 220, var(--tw-bg-opacity))}\n.active\\:bg-gray-100:active{--tw-bg-opacity:1;background-color:rgba(245, 245, 245, var(--tw-bg-opacity))}\n.active\\:bg-brown-100:active{--tw-bg-opacity:1;background-color:rgba(215, 204, 200, var(--tw-bg-opacity))}\n.active\\:bg-deep-orange-100:active{--tw-bg-opacity:1;background-color:rgba(255, 204, 188, var(--tw-bg-opacity))}\n.active\\:bg-orange-100:active{--tw-bg-opacity:1;background-color:rgba(255, 224, 178, var(--tw-bg-opacity))}\n.active\\:bg-amber-100:active{--tw-bg-opacity:1;background-color:rgba(255, 236, 179, var(--tw-bg-opacity))}\n.active\\:bg-yellow-100:active{--tw-bg-opacity:1;background-color:rgba(255, 249, 196, var(--tw-bg-opacity))}\n.active\\:bg-lime-100:active{--tw-bg-opacity:1;background-color:rgba(240, 244, 195, var(--tw-bg-opacity))}\n.active\\:bg-light-green-100:active{--tw-bg-opacity:1;background-color:rgba(220, 237, 200, var(--tw-bg-opacity))}\n.active\\:bg-green-100:active{--tw-bg-opacity:1;background-color:rgba(200, 230, 201, var(--tw-bg-opacity))}\n.active\\:bg-teal-100:active{--tw-bg-opacity:1;background-color:rgba(178, 223, 219, var(--tw-bg-opacity))}\n.active\\:bg-cyan-100:active{--tw-bg-opacity:1;background-color:rgba(178, 235, 242, var(--tw-bg-opacity))}\n.active\\:bg-light-blue-100:active{--tw-bg-opacity:1;background-color:rgba(179, 229, 252, var(--tw-bg-opacity))}\n.active\\:bg-blue-100:active{--tw-bg-opacity:1;background-color:rgba(187, 222, 251, var(--tw-bg-opacity))}\n.active\\:bg-indigo-100:active{--tw-bg-opacity:1;background-color:rgba(197, 202, 233, var(--tw-bg-opacity))}\n.active\\:bg-deep-purple-100:active{--tw-bg-opacity:1;background-color:rgba(209, 196, 233, var(--tw-bg-opacity))}\n.active\\:bg-purple-100:active{--tw-bg-opacity:1;background-color:rgba(225, 190, 231, var(--tw-bg-opacity))}\n.active\\:bg-pink-100:active{--tw-bg-opacity:1;background-color:rgba(248, 187, 208, var(--tw-bg-opacity))}\n.active\\:bg-red-100:active{--tw-bg-opacity:1;background-color:rgba(255, 205, 210, var(--tw-bg-opacity))}\n.active\\:bg-gray-500:active{--tw-bg-opacity:1;background-color:rgba(158, 158, 158, var(--tw-bg-opacity))}\n.active\\:bg-opacity-40:active{--tw-bg-opacity:0.4}\n@media (min-width: 640px){\n.sm\\:left-auto{left:auto}\n.sm\\:w-full{width:100%}}\n@media (min-width: 768px){\n.md\\:mt-40{margin-top:10rem}\n.md\\:mt-0{margin-top:0px}\n.md\\:mt-64{margin-top:16rem}\n.md\\:mb-0{margin-bottom:0px}\n.md\\:w-9\\/12{width:75%}\n.md\\:w-48{width:12rem}\n.md\\:w-6\\/12{width:50%}\n.md\\:w-4\\/12{width:33.333333%}\n.md\\:w-5\\/12{width:41.666667%}\n.md\\:w-8\\/12{width:66.666667%}\n.md\\:flex-row{flex-direction:row}\n.md\\:justify-start{justify-content:flex-start}\n.md\\:justify-between{justify-content:space-between}\n.md\\:gap-6{gap:1.5rem}\n.md\\:px-8{padding-left:2rem;padding-right:2rem}\n.md\\:px-4{padding-left:1rem;padding-right:1rem}\n.md\\:pr-12{padding-right:3rem}\n.md\\:pt-0{padding-top:0px}}\n@media (min-width: 1024px){\n.lg\\:static{position:static}\n.lg\\:mr-5{margin-right:1.25rem}\n.lg\\:ml-5{margin-left:1.25rem}\n.lg\\:mt-16{margin-top:4rem}\n.lg\\:block{display:block}\n.lg\\:flex{display:flex}\n.lg\\:hidden{display:none}\n.lg\\:w-4\\/12{width:33.333333%}\n.lg\\:w-6\\/12{width:50%}\n.lg\\:w-8\\/12{width:66.666667%}\n.lg\\:w-60{width:15rem}\n.lg\\:w-auto{width:auto}\n.lg\\:flex-row{flex-direction:row}\n.lg\\:items-center{align-items:center}\n.lg\\:justify-between{justify-content:space-between}\n.lg\\:justify-start{justify-content:flex-start}\n.lg\\:px-36{padding-left:9rem;padding-right:9rem}\n.lg\\:text-left{text-align:left}}\n", "",{"version":3,"sources":["webpack://node_modules/@material-tailwind/react/tailwind.css"],"names":[],"mappings":"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","sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@100;200;300;400;500;600;700;800;900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');\n.tippy-box[data-placement^=top]>.tippy-svg-arrow{bottom:0}\n.tippy-box[data-placement^=top]>.tippy-svg-arrow:after,.tippy-box[data-placement^=top]>.tippy-svg-arrow>svg{top:16px;transform:rotate(180deg)}\n.tippy-box[data-placement^=bottom]>.tippy-svg-arrow{top:0}\n.tippy-box[data-placement^=bottom]>.tippy-svg-arrow>svg{bottom:16px}\n.tippy-box[data-placement^=left]>.tippy-svg-arrow{right:0}\n.tippy-box[data-placement^=left]>.tippy-svg-arrow:after,.tippy-box[data-placement^=left]>.tippy-svg-arrow>svg{transform:rotate(90deg);top:calc(50% - 3px);left:11px}\n.tippy-box[data-placement^=right]>.tippy-svg-arrow{left:0}\n.tippy-box[data-placement^=right]>.tippy-svg-arrow:after,.tippy-box[data-placement^=right]>.tippy-svg-arrow>svg{transform:rotate(-90deg);top:calc(50% - 3px);right:11px}\n.tippy-svg-arrow{width:16px;height:16px;fill:#333;text-align:initial}\n.tippy-svg-arrow,.tippy-svg-arrow>svg{position:absolute}\n.tippy-box[data-animation=scale][data-placement^=top]{transform-origin:bottom}\n.tippy-box[data-animation=scale][data-placement^=bottom]{transform-origin:top}\n.tippy-box[data-animation=scale][data-placement^=left]{transform-origin:right}\n.tippy-box[data-animation=scale][data-placement^=right]{transform-origin:left}\n.tippy-box[data-animation=scale][data-state=hidden]{transform:scale(.5);opacity:0}\n.tippy-box[data-animation=shift-away][data-state=hidden]{opacity:0}\n.tippy-box[data-animation=shift-away][data-state=hidden][data-placement^=top]{transform:translateY(10px)}\n.tippy-box[data-animation=shift-away][data-state=hidden][data-placement^=bottom]{transform:translateY(-10px)}\n.tippy-box[data-animation=shift-away][data-state=hidden][data-placement^=left]{transform:translateX(10px)}\n.tippy-box[data-animation=shift-away][data-state=hidden][data-placement^=right]{transform:translateX(-10px)}\n/*! tailwindcss v2.1.4 | MIT License | https://tailwindcss.com */\n/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */\n/*\nDocument\n========\n*/\n/**\nUse a better box model (opinionated).\n*/\n*,\n::before,\n::after {\n\tbox-sizing: border-box;\n}\n/**\nUse a more readable tab size (opinionated).\n*/\nhtml {\n\t-moz-tab-size: 4;\n\t-o-tab-size: 4;\n\t   tab-size: 4;\n}\n/**\n1. Correct the line height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n*/\nhtml {\n\tline-height: 1.15; /* 1 */\n\t-webkit-text-size-adjust: 100%; /* 2 */\n}\n/*\nSections\n========\n*/\n/**\nRemove the margin in all browsers.\n*/\nbody {\n\tmargin: 0;\n}\n/**\nImprove consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n*/\nbody {\n\tfont-family:\n\t\tsystem-ui,\n\t\t-apple-system, /* Firefox supports this but not yet `system-ui` */\n\t\t'Segoe UI',\n\t\tRoboto,\n\t\tHelvetica,\n\t\tArial,\n\t\tsans-serif,\n\t\t'Apple Color Emoji',\n\t\t'Segoe UI Emoji';\n}\n/*\nGrouping content\n================\n*/\n/**\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n*/\nhr {\n\theight: 0; /* 1 */\n\tcolor: inherit; /* 2 */\n}\n/*\nText-level semantics\n====================\n*/\n/**\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\nabbr[title] {\n\t-webkit-text-decoration: underline dotted;\n\t        text-decoration: underline dotted;\n}\n/**\nAdd the correct font weight in Edge and Safari.\n*/\nb,\nstrong {\n\tfont-weight: bolder;\n}\n/**\n1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n2. Correct the odd 'em' font sizing in all browsers.\n*/\ncode,\nkbd,\nsamp,\npre {\n\tfont-family:\n\t\tui-monospace,\n\t\tSFMono-Regular,\n\t\tConsolas,\n\t\t'Liberation Mono',\n\t\tMenlo,\n\t\tmonospace; /* 1 */\n\tfont-size: 1em; /* 2 */\n}\n/**\nAdd the correct font size in all browsers.\n*/\nsmall {\n\tfont-size: 80%;\n}\n/**\nPrevent 'sub' and 'sup' elements from affecting the line height in all browsers.\n*/\nsub,\nsup {\n\tfont-size: 75%;\n\tline-height: 0;\n\tposition: relative;\n\tvertical-align: baseline;\n}\nsub {\n\tbottom: -0.25em;\n}\nsup {\n\ttop: -0.5em;\n}\n/*\nTabular data\n============\n*/\n/**\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n*/\ntable {\n\ttext-indent: 0; /* 1 */\n\tborder-color: inherit; /* 2 */\n}\n/*\nForms\n=====\n*/\n/**\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n*/\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n\tfont-family: inherit; /* 1 */\n\tfont-size: 100%; /* 1 */\n\tline-height: 1.15; /* 1 */\n\tmargin: 0; /* 2 */\n}\n/**\nRemove the inheritance of text transform in Edge and Firefox.\n1. Remove the inheritance of text transform in Firefox.\n*/\nbutton,\nselect { /* 1 */\n\ttext-transform: none;\n}\n/**\nCorrect the inability to style clickable types in iOS and Safari.\n*/\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n\t-webkit-appearance: button;\n}\n/**\nRemove the inner border and padding in Firefox.\n*/\n::-moz-focus-inner {\n\tborder-style: none;\n\tpadding: 0;\n}\n/**\nRestore the focus styles unset by the previous rule.\n*/\n:-moz-focusring {\n\toutline: 1px dotted ButtonText;\n}\n/**\nRemove the additional ':invalid' styles in Firefox.\nSee: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737\n*/\n:-moz-ui-invalid {\n\tbox-shadow: none;\n}\n/**\nRemove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.\n*/\nlegend {\n\tpadding: 0;\n}\n/**\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\nprogress {\n\tvertical-align: baseline;\n}\n/**\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n\theight: auto;\n}\n/**\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n[type='search'] {\n\t-webkit-appearance: textfield; /* 1 */\n\toutline-offset: -2px; /* 2 */\n}\n/**\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n::-webkit-search-decoration {\n\t-webkit-appearance: none;\n}\n/**\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to 'inherit' in Safari.\n*/\n::-webkit-file-upload-button {\n\t-webkit-appearance: button; /* 1 */\n\tfont: inherit; /* 2 */\n}\n/*\nInteractive\n===========\n*/\n/*\nAdd the correct display in Chrome and Safari.\n*/\nsummary {\n\tdisplay: list-item;\n}\n/**\n * Manually forked from SUIT CSS Base: https://github.com/suitcss/base\n * A thin layer on top of normalize.css that provides a starting point more\n * suitable for web applications.\n */\n/**\n * Removes the default spacing and border for appropriate elements.\n */\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\nbutton {\n  background-color: transparent;\n  background-image: none;\n}\n/**\n * Work around a Firefox/IE bug where the transparent `button` background\n * results in a loss of the default `button` focus styles.\n */\nbutton:focus {\n  outline: 1px dotted;\n  outline: 5px auto -webkit-focus-ring-color;\n}\nfieldset {\n  margin: 0;\n  padding: 0;\n}\nol,\nul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n/**\n * Tailwind custom reset styles\n */\n/**\n * 1. Use the user's configured `sans` font-family (with Tailwind's default\n *    sans-serif font stack as a fallback) as a sane default.\n * 2. Use Tailwind's default \"normal\" line-height so the user isn't forced\n *    to override it to ensure consistency even when using the default theme.\n */\nhtml {\n  font-family: Roboto, sans-serif; /* 1 */\n  line-height: 1.5; /* 2 */\n}\n/**\n * Inherit font-family and line-height from `html` so users can set them as\n * a class directly on the `html` element.\n */\nbody {\n  font-family: inherit;\n  line-height: inherit;\n}\n/**\n * 1. Prevent padding and border from affecting element width.\n *\n *    We used to set this in the html element and inherit from\n *    the parent element for everything else. This caused issues\n *    in shadow-dom-enhanced elements like <details> where the content\n *    is wrapped by a div with box-sizing set to `content-box`.\n *\n *    https://github.com/mozdevs/cssremedy/issues/4\n *\n *\n * 2. Allow adding a border to an element by just adding a border-width.\n *\n *    By default, the way the browser specifies that an element should have no\n *    border is by setting it's border-style to `none` in the user-agent\n *    stylesheet.\n *\n *    In order to easily add borders to elements by just setting the `border-width`\n *    property, we change the default border-style for all elements to `solid`, and\n *    use border-width to hide them instead. This way our `border` utilities only\n *    need to set the `border-width` property instead of the entire `border`\n *    shorthand, making our border utilities much more straightforward to compose.\n *\n *    https://github.com/tailwindcss/tailwindcss/pull/116\n */\n*,\n::before,\n::after {\n  box-sizing: border-box; /* 1 */\n  border-width: 0; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: #eeeeee; /* 2 */\n}\n/*\n * Ensure horizontal rules are visible by default\n */\nhr {\n  border-top-width: 1px;\n}\n/**\n * Undo the `border-style: none` reset that Normalize applies to images so that\n * our `border-{width}` utilities have the expected effect.\n *\n * The Normalize reset is unnecessary for us since we default the border-width\n * to 0 on all elements.\n *\n * https://github.com/tailwindcss/tailwindcss/issues/362\n */\nimg {\n  border-style: solid;\n}\ntextarea {\n  resize: vertical;\n}\ninput::-moz-placeholder, textarea::-moz-placeholder {\n  opacity: 1;\n  color: #bdbdbd;\n}\ninput:-ms-input-placeholder, textarea:-ms-input-placeholder {\n  opacity: 1;\n  color: #bdbdbd;\n}\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1;\n  color: #bdbdbd;\n}\nbutton,\n[role=\"button\"] {\n  cursor: pointer;\n}\ntable {\n  border-collapse: collapse;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n/**\n * Reset links to optimize for opt-in styling instead of\n * opt-out.\n */\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n/**\n * Reset form element properties that are easy to forget to\n * style explicitly so you don't inadvertently introduce\n * styles that deviate from your design system. These styles\n * supplement a partial reset that is already applied by\n * normalize.css.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  padding: 0;\n  line-height: inherit;\n  color: inherit;\n}\n/**\n * Use the configured 'mono' font family for elements that\n * are expected to be rendered with a monospace font, falling\n * back to the system monospace stack if there is no configured\n * 'mono' font family.\n */\npre,\ncode,\nkbd,\nsamp {\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n}\n/**\n * Make replaced elements `display: block` by default as that's\n * the behavior you want almost all of the time. Inspired by\n * CSS Remedy, with `svg` added as well.\n *\n * https://github.com/mozdevs/cssremedy/issues/14\n */\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block;\n  vertical-align: middle;\n}\n/**\n * Constrain images and videos to the parent width and preserve\n * their intrinsic aspect ratio.\n *\n * https://github.com/mozdevs/cssremedy/issues/14\n */\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n*{--tw-shadow:0 0 #0000;--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(33, 150, 243, 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000}\n.container{width:100%}\n@media (min-width: 640px){\n.container{max-width:640px}}\n@media (min-width: 768px){\n.container{max-width:768px}}\n@media (min-width: 1024px){\n.container{max-width:1024px}}\n@media (min-width: 1280px){\n.container{max-width:1280px}}\n@media (min-width: 1536px){\n.container{max-width:1536px}}\n.pointer-events-none{pointer-events:none}\n.pointer-events-auto{pointer-events:auto}\n.relative{position:relative}\n.absolute{position:absolute}\n.sticky{position:sticky}\n.fixed{position:fixed}\n.inset-0{top:0px;right:0px;bottom:0px;left:0px}\n.right-4{right:1rem}\n.top-1\\/3{top:33.333333%}\n.left-0{left:0px}\n.right-0{right:0px}\n.top-16{top:4rem}\n.-top-1\\.5{top:-0.375rem}\n.-top-0\\.5{top:-0.125rem}\n.-top-1{top:-0.25rem}\n.-top-0{top:0px}\n.top-1\\/4{top:25%}\n.top-1\\/2{top:50%}\n.right-2{right:0.5rem}\n.right-3{right:0.75rem}\n.top-2{top:0.5rem}\n.top-0{top:0px}\n.-bottom-4{bottom:-1rem}\n.-bottom-5{bottom:-1.25rem}\n.z-30{z-index:30}\n.z-20{z-index:20}\n.z-10{z-index:10}\n.z-50{z-index:50}\n.z-40{z-index:40}\n.float-left{float:left}\n.float-right{float:right}\n.mx-auto{margin-left:auto;margin-right:auto}\n.my-16{margin-top:4rem;margin-bottom:4rem}\n.my-4{margin-top:1rem;margin-bottom:1rem}\n.my-6{margin-top:1.5rem;margin-bottom:1.5rem}\n.mx-4{margin-left:1rem;margin-right:1rem}\n.mx-1{margin-left:0.25rem;margin-right:0.25rem}\n.my-8{margin-top:2rem;margin-bottom:2rem}\n.mx-5{margin-left:1.25rem;margin-right:1.25rem}\n.mb-16{margin-bottom:4rem}\n.mt-36{margin-top:9rem}\n.mt-10{margin-top:2.5rem}\n.mt-5{margin-top:1.25rem}\n.mt-16{margin-top:4rem}\n.mt-4{margin-top:1rem}\n.mt-20{margin-top:5rem}\n.mb-10{margin-bottom:2.5rem}\n.mt-8{margin-top:2rem}\n.mt-12{margin-top:3rem}\n.mb-24{margin-bottom:6rem}\n.mt-48{margin-top:12rem}\n.mr-auto{margin-right:auto}\n.ml-auto{margin-left:auto}\n.mb-6{margin-bottom:1.5rem}\n.mr-2{margin-right:0.5rem}\n.mt-2{margin-top:0.5rem}\n.mt-32{margin-top:8rem}\n.mt-6{margin-top:1.5rem}\n.mr-3{margin-right:0.75rem}\n.-mt-64{margin-top:-16rem}\n.mb-5{margin-bottom:1.25rem}\n.mb-12{margin-bottom:3rem}\n.mb-8{margin-bottom:2rem}\n.mb-4{margin-bottom:1rem}\n.mb-2{margin-bottom:0.5rem}\n.-mt-10{margin-top:-2.5rem}\n.-mt-9{margin-top:-2.25rem}\n.mb-1{margin-bottom:0.25rem}\n.ml-1{margin-left:0.25rem}\n.mr-1{margin-right:0.25rem}\n.mt-1{margin-top:0.25rem}\n.mb-0{margin-bottom:0px}\n.mt-3{margin-top:0.75rem}\n.ml-7{margin-left:1.75rem}\n.ml-2{margin-left:0.5rem}\n.mt-0{margin-top:0px}\n.mb-3{margin-bottom:0.75rem}\n.mr-4{margin-right:1rem}\n.-mt-12{margin-top:-3rem}\n.mr-10{margin-right:2.5rem}\n.block{display:block}\n.inline-block{display:inline-block}\n.flex{display:flex}\n.inline-flex{display:inline-flex}\n.grid{display:grid}\n.hidden{display:none}\n.h-16{height:4rem}\n.h-7{height:1.75rem}\n.h-10{height:2.5rem}\n.h-32{height:8rem}\n.h-20{height:5rem}\n.h-12{height:3rem}\n.h-6{height:1.5rem}\n.h-8{height:2rem}\n.h-24{height:6rem}\n.h-28{height:7rem}\n.h-5{height:1.25rem}\n.h-screen{height:100vh}\n.h-auto{height:auto}\n.h-full{height:100%}\n.h-9{height:2.25rem}\n.h-11{height:2.75rem}\n.h-4{height:1rem}\n.h-px{height:1px}\n.h-2{height:0.5rem}\n.w-full{width:100%}\n.w-40{width:10rem}\n.w-72{width:18rem}\n.w-\\[28rem\\]{width:28rem}\n.w-64{width:16rem}\n.w-96{width:24rem}\n.w-48{width:12rem}\n.w-16{width:4rem}\n.w-7{width:1.75rem}\n.w-32{width:8rem}\n.w-12{width:3rem}\n.w-10{width:2.5rem}\n.w-6{width:1.5rem}\n.w-8{width:2rem}\n.w-20{width:5rem}\n.w-24{width:6rem}\n.w-28{width:7rem}\n.w-5{width:1.25rem}\n.w-10\\/12{width:83.333333%}\n.w-4{width:1rem}\n.w-auto{width:auto}\n.w-14{width:3.5rem}\n.min-w-0{min-width:0px}\n.max-w-7xl{max-width:80rem}\n.max-w-full{max-width:100%}\n.max-w-max{max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}\n.max-w-sm{max-width:24rem}\n.max-w-6xl{max-width:72rem}\n.max-w-3xl{max-width:48rem}\n.max-w-xs{max-width:20rem}\n.flex-auto{flex:1 1 auto}\n.flex-1{flex:1 1 0%}\n.flex-none{flex:none}\n.flex-grow{flex-grow:1}\n.transform{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}\n.-translate-y-1\\/3{--tw-translate-y:-33.333333%}\n.-translate-y-1\\/2{--tw-translate-y:-50%}\n.translate-y-0{--tw-translate-y:0px}\n.-translate-y-10{--tw-translate-y:-2.5rem}\n.cursor-pointer{cursor:pointer}\n.cursor-not-allowed{cursor:not-allowed}\n.select-none{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}\n.resize-none{resize:none}\n.list-none{list-style-type:none}\n.flex-col{flex-direction:column}\n.flex-wrap{flex-wrap:wrap}\n.place-items-center{place-items:center}\n.items-center{align-items:center}\n.items-end{align-items:flex-end}\n.items-start{align-items:flex-start}\n.justify-between{justify-content:space-between}\n.justify-center{justify-content:center}\n.justify-start{justify-content:flex-start}\n.justify-end{justify-content:flex-end}\n.gap-8{gap:2rem}\n.gap-10{gap:2.5rem}\n.gap-4{gap:1rem}\n.gap-2{gap:0.5rem}\n.gap-3{gap:0.75rem}\n.gap-1{gap:0.25rem}\n.gap-x-2{-moz-column-gap:0.5rem;column-gap:0.5rem}\n.gap-y-8{row-gap:2rem}\n.gap-x-24{-moz-column-gap:6rem;column-gap:6rem}\n.gap-y-4{row-gap:1rem}\n.gap-x-8{-moz-column-gap:2rem;column-gap:2rem}\n.space-y-4 > :not([hidden]) ~ :not([hidden]){--tw-space-y-reverse:0;margin-top:calc(1rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1rem * var(--tw-space-y-reverse))}\n.overflow-hidden{overflow:hidden}\n.overflow-y-scroll{overflow-y:scroll}\n.overflow-x-hidden{overflow-x:hidden}\n.overflow-y-auto{overflow-y:auto}\n.whitespace-nowrap{white-space:nowrap}\n.break-words{overflow-wrap:break-word}\n.rounded{border-radius:0.25rem}\n.rounded-lg{border-radius:0.5rem}\n.rounded-full{border-radius:9999px}\n.rounded-xl{border-radius:0.75rem}\n.rounded-md{border-radius:0.375rem}\n.rounded-sm{border-radius:0.125rem}\n.rounded-t{border-top-left-radius:0.25rem;border-top-right-radius:0.25rem}\n.border{border-width:1px}\n.border-0{border-width:0px}\n.border-t-0{border-top-width:0px}\n.border-r-0{border-right-width:0px}\n.border-l-0{border-left-width:0px}\n.border-t{border-top-width:1px}\n.border-b{border-bottom-width:1px}\n.border-b-0{border-bottom-width:0px}\n.border-r{border-right-width:1px}\n.border-solid{border-style:solid}\n.border-none{border-style:none}\n.border-blue-gray-50{--tw-border-opacity:1;border-color:rgba(236, 239, 241, var(--tw-border-opacity))}\n.border-gray-200{--tw-border-opacity:1;border-color:rgba(238, 238, 238, var(--tw-border-opacity))}\n.border-gray-300{--tw-border-opacity:1;border-color:rgba(224, 224, 224, var(--tw-border-opacity))}\n.border-blue-gray-500{--tw-border-opacity:1;border-color:rgba(96, 125, 139, var(--tw-border-opacity))}\n.border-gray-500{--tw-border-opacity:1;border-color:rgba(158, 158, 158, var(--tw-border-opacity))}\n.border-brown-500{--tw-border-opacity:1;border-color:rgba(121, 85, 72, var(--tw-border-opacity))}\n.border-deep-orange-500{--tw-border-opacity:1;border-color:rgba(255, 87, 34, var(--tw-border-opacity))}\n.border-orange-500{--tw-border-opacity:1;border-color:rgba(255, 152, 0, var(--tw-border-opacity))}\n.border-amber-500{--tw-border-opacity:1;border-color:rgba(255, 193, 7, var(--tw-border-opacity))}\n.border-yellow-600{--tw-border-opacity:1;border-color:rgba(253, 216, 53, var(--tw-border-opacity))}\n.border-lime-500{--tw-border-opacity:1;border-color:rgba(205, 220, 57, var(--tw-border-opacity))}\n.border-light-green-500{--tw-border-opacity:1;border-color:rgba(139, 195, 74, var(--tw-border-opacity))}\n.border-green-500{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity))}\n.border-teal-500{--tw-border-opacity:1;border-color:rgba(0, 150, 136, var(--tw-border-opacity))}\n.border-cyan-500{--tw-border-opacity:1;border-color:rgba(0, 188, 212, var(--tw-border-opacity))}\n.border-light-blue-500{--tw-border-opacity:1;border-color:rgba(3, 169, 244, var(--tw-border-opacity))}\n.border-blue-500{--tw-border-opacity:1;border-color:rgba(33, 150, 243, var(--tw-border-opacity))}\n.border-indigo-500{--tw-border-opacity:1;border-color:rgba(63, 81, 181, var(--tw-border-opacity))}\n.border-deep-purple-500{--tw-border-opacity:1;border-color:rgba(103, 58, 183, var(--tw-border-opacity))}\n.border-purple-500{--tw-border-opacity:1;border-color:rgba(156, 39, 176, var(--tw-border-opacity))}\n.border-pink-500{--tw-border-opacity:1;border-color:rgba(233, 30, 99, var(--tw-border-opacity))}\n.border-red-500{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity))}\n.border-transparent{border-color:transparent}\n.bg-white{--tw-bg-opacity:1;background-color:rgba(255, 255, 255, var(--tw-bg-opacity))}\n.bg-gray-100{--tw-bg-opacity:1;background-color:rgba(245, 245, 245, var(--tw-bg-opacity))}\n.bg-orange-900{--tw-bg-opacity:1;background-color:rgba(230, 81, 0, var(--tw-bg-opacity))}\n.bg-light-blue-500{--tw-bg-opacity:1;background-color:rgba(3, 169, 244, var(--tw-bg-opacity))}\n.bg-gray-900{--tw-bg-opacity:1;background-color:rgba(33, 33, 33, var(--tw-bg-opacity))}\n.bg-yellow-600{--tw-bg-opacity:1;background-color:rgba(253, 216, 53, var(--tw-bg-opacity))}\n.bg-red-700{--tw-bg-opacity:1;background-color:rgba(211, 47, 47, var(--tw-bg-opacity))}\n.bg-green-500{--tw-bg-opacity:1;background-color:rgba(76, 175, 80, var(--tw-bg-opacity))}\n.bg-blue-gray-800{--tw-bg-opacity:1;background-color:rgba(55, 71, 79, var(--tw-bg-opacity))}\n.bg-blue-gray-500{--tw-bg-opacity:1;background-color:rgba(96, 125, 139, var(--tw-bg-opacity))}\n.bg-gray-500{--tw-bg-opacity:1;background-color:rgba(158, 158, 158, var(--tw-bg-opacity))}\n.bg-brown-500{--tw-bg-opacity:1;background-color:rgba(121, 85, 72, var(--tw-bg-opacity))}\n.bg-deep-orange-500{--tw-bg-opacity:1;background-color:rgba(255, 87, 34, var(--tw-bg-opacity))}\n.bg-orange-500{--tw-bg-opacity:1;background-color:rgba(255, 152, 0, var(--tw-bg-opacity))}\n.bg-amber-500{--tw-bg-opacity:1;background-color:rgba(255, 193, 7, var(--tw-bg-opacity))}\n.bg-lime-500{--tw-bg-opacity:1;background-color:rgba(205, 220, 57, var(--tw-bg-opacity))}\n.bg-light-green-500{--tw-bg-opacity:1;background-color:rgba(139, 195, 74, var(--tw-bg-opacity))}\n.bg-teal-500{--tw-bg-opacity:1;background-color:rgba(0, 150, 136, var(--tw-bg-opacity))}\n.bg-cyan-500{--tw-bg-opacity:1;background-color:rgba(0, 188, 212, var(--tw-bg-opacity))}\n.bg-blue-500{--tw-bg-opacity:1;background-color:rgba(33, 150, 243, var(--tw-bg-opacity))}\n.bg-indigo-500{--tw-bg-opacity:1;background-color:rgba(63, 81, 181, var(--tw-bg-opacity))}\n.bg-deep-purple-500{--tw-bg-opacity:1;background-color:rgba(103, 58, 183, var(--tw-bg-opacity))}\n.bg-purple-500{--tw-bg-opacity:1;background-color:rgba(156, 39, 176, var(--tw-bg-opacity))}\n.bg-pink-500{--tw-bg-opacity:1;background-color:rgba(233, 30, 99, var(--tw-bg-opacity))}\n.bg-red-500{--tw-bg-opacity:1;background-color:rgba(244, 67, 54, var(--tw-bg-opacity))}\n.bg-transparent{background-color:transparent}\n.bg-gray-200{--tw-bg-opacity:1;background-color:rgba(238, 238, 238, var(--tw-bg-opacity))}\n.bg-blue-gray-100{--tw-bg-opacity:1;background-color:rgba(207, 216, 220, var(--tw-bg-opacity))}\n.bg-brown-100{--tw-bg-opacity:1;background-color:rgba(215, 204, 200, var(--tw-bg-opacity))}\n.bg-deep-orange-100{--tw-bg-opacity:1;background-color:rgba(255, 204, 188, var(--tw-bg-opacity))}\n.bg-orange-100{--tw-bg-opacity:1;background-color:rgba(255, 224, 178, var(--tw-bg-opacity))}\n.bg-amber-100{--tw-bg-opacity:1;background-color:rgba(255, 236, 179, var(--tw-bg-opacity))}\n.bg-yellow-100{--tw-bg-opacity:1;background-color:rgba(255, 249, 196, var(--tw-bg-opacity))}\n.bg-lime-100{--tw-bg-opacity:1;background-color:rgba(240, 244, 195, var(--tw-bg-opacity))}\n.bg-light-green-100{--tw-bg-opacity:1;background-color:rgba(220, 237, 200, var(--tw-bg-opacity))}\n.bg-green-100{--tw-bg-opacity:1;background-color:rgba(200, 230, 201, var(--tw-bg-opacity))}\n.bg-teal-100{--tw-bg-opacity:1;background-color:rgba(178, 223, 219, var(--tw-bg-opacity))}\n.bg-cyan-100{--tw-bg-opacity:1;background-color:rgba(178, 235, 242, var(--tw-bg-opacity))}\n.bg-light-blue-100{--tw-bg-opacity:1;background-color:rgba(179, 229, 252, var(--tw-bg-opacity))}\n.bg-blue-100{--tw-bg-opacity:1;background-color:rgba(187, 222, 251, var(--tw-bg-opacity))}\n.bg-indigo-100{--tw-bg-opacity:1;background-color:rgba(197, 202, 233, var(--tw-bg-opacity))}\n.bg-deep-purple-100{--tw-bg-opacity:1;background-color:rgba(209, 196, 233, var(--tw-bg-opacity))}\n.bg-purple-100{--tw-bg-opacity:1;background-color:rgba(225, 190, 231, var(--tw-bg-opacity))}\n.bg-pink-100{--tw-bg-opacity:1;background-color:rgba(248, 187, 208, var(--tw-bg-opacity))}\n.bg-red-100{--tw-bg-opacity:1;background-color:rgba(255, 205, 210, var(--tw-bg-opacity))}\n.bg-blue-gray-900{--tw-bg-opacity:1;background-color:rgba(38, 50, 56, var(--tw-bg-opacity))}\n.bg-brown-900{--tw-bg-opacity:1;background-color:rgba(62, 39, 35, var(--tw-bg-opacity))}\n.bg-deep-orange-900{--tw-bg-opacity:1;background-color:rgba(191, 54, 12, var(--tw-bg-opacity))}\n.bg-amber-900{--tw-bg-opacity:1;background-color:rgba(255, 111, 0, var(--tw-bg-opacity))}\n.bg-yellow-900{--tw-bg-opacity:1;background-color:rgba(245, 127, 23, var(--tw-bg-opacity))}\n.bg-lime-900{--tw-bg-opacity:1;background-color:rgba(130, 119, 23, var(--tw-bg-opacity))}\n.bg-light-green-900{--tw-bg-opacity:1;background-color:rgba(51, 105, 30, var(--tw-bg-opacity))}\n.bg-green-900{--tw-bg-opacity:1;background-color:rgba(27, 94, 32, var(--tw-bg-opacity))}\n.bg-teal-900{--tw-bg-opacity:1;background-color:rgba(0, 77, 64, var(--tw-bg-opacity))}\n.bg-cyan-900{--tw-bg-opacity:1;background-color:rgba(0, 96, 100, var(--tw-bg-opacity))}\n.bg-light-blue-900{--tw-bg-opacity:1;background-color:rgba(1, 87, 155, var(--tw-bg-opacity))}\n.bg-blue-900{--tw-bg-opacity:1;background-color:rgba(13, 71, 161, var(--tw-bg-opacity))}\n.bg-indigo-900{--tw-bg-opacity:1;background-color:rgba(26, 35, 126, var(--tw-bg-opacity))}\n.bg-deep-purple-900{--tw-bg-opacity:1;background-color:rgba(49, 27, 146, var(--tw-bg-opacity))}\n.bg-purple-900{--tw-bg-opacity:1;background-color:rgba(74, 20, 140, var(--tw-bg-opacity))}\n.bg-pink-900{--tw-bg-opacity:1;background-color:rgba(136, 14, 79, var(--tw-bg-opacity))}\n.bg-red-900{--tw-bg-opacity:1;background-color:rgba(183, 28, 28, var(--tw-bg-opacity))}\n.bg-black{--tw-bg-opacity:1;background-color:rgba(0, 0, 0, var(--tw-bg-opacity))}\n.bg-gray-700{--tw-bg-opacity:1;background-color:rgba(97, 97, 97, var(--tw-bg-opacity))}\n.bg-blue-gray-200{--tw-bg-opacity:1;background-color:rgba(176, 190, 197, var(--tw-bg-opacity))}\n.bg-brown-200{--tw-bg-opacity:1;background-color:rgba(188, 170, 164, var(--tw-bg-opacity))}\n.bg-deep-orange-200{--tw-bg-opacity:1;background-color:rgba(255, 171, 145, var(--tw-bg-opacity))}\n.bg-orange-200{--tw-bg-opacity:1;background-color:rgba(255, 204, 128, var(--tw-bg-opacity))}\n.bg-amber-200{--tw-bg-opacity:1;background-color:rgba(255, 224, 130, var(--tw-bg-opacity))}\n.bg-yellow-200{--tw-bg-opacity:1;background-color:rgba(255, 245, 157, var(--tw-bg-opacity))}\n.bg-lime-200{--tw-bg-opacity:1;background-color:rgba(230, 238, 156, var(--tw-bg-opacity))}\n.bg-light-green-200{--tw-bg-opacity:1;background-color:rgba(197, 225, 165, var(--tw-bg-opacity))}\n.bg-green-200{--tw-bg-opacity:1;background-color:rgba(165, 214, 167, var(--tw-bg-opacity))}\n.bg-teal-200{--tw-bg-opacity:1;background-color:rgba(128, 203, 196, var(--tw-bg-opacity))}\n.bg-cyan-200{--tw-bg-opacity:1;background-color:rgba(128, 222, 234, var(--tw-bg-opacity))}\n.bg-light-blue-200{--tw-bg-opacity:1;background-color:rgba(129, 212, 250, var(--tw-bg-opacity))}\n.bg-blue-200{--tw-bg-opacity:1;background-color:rgba(144, 202, 249, var(--tw-bg-opacity))}\n.bg-indigo-200{--tw-bg-opacity:1;background-color:rgba(159, 168, 218, var(--tw-bg-opacity))}\n.bg-deep-purple-200{--tw-bg-opacity:1;background-color:rgba(179, 157, 219, var(--tw-bg-opacity))}\n.bg-purple-200{--tw-bg-opacity:1;background-color:rgba(206, 147, 216, var(--tw-bg-opacity))}\n.bg-pink-200{--tw-bg-opacity:1;background-color:rgba(244, 143, 177, var(--tw-bg-opacity))}\n.bg-red-200{--tw-bg-opacity:1;background-color:rgba(239, 154, 154, var(--tw-bg-opacity))}\n.bg-opacity-20{--tw-bg-opacity:0.2}\n.bg-opacity-80{--tw-bg-opacity:0.8}\n.bg-gradient-to-tr{background-image:linear-gradient(to top right, var(--tw-gradient-stops))}\n.from-blue-gray-500{--tw-gradient-from:#607d8b;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(96, 125, 139, 0))}\n.from-gray-500{--tw-gradient-from:#9e9e9e;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(158, 158, 158, 0))}\n.from-brown-500{--tw-gradient-from:#795548;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(121, 85, 72, 0))}\n.from-deep-orange-500{--tw-gradient-from:#ff5722;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(255, 87, 34, 0))}\n.from-orange-500{--tw-gradient-from:#ff9800;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(255, 152, 0, 0))}\n.from-amber-500{--tw-gradient-from:#ffc107;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(255, 193, 7, 0))}\n.from-yellow-600{--tw-gradient-from:#fdd835;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(253, 216, 53, 0))}\n.from-lime-500{--tw-gradient-from:#cddc39;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(205, 220, 57, 0))}\n.from-light-green-500{--tw-gradient-from:#8bc34a;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(139, 195, 74, 0))}\n.from-green-500{--tw-gradient-from:#4caf50;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(76, 175, 80, 0))}\n.from-teal-500{--tw-gradient-from:#009688;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 150, 136, 0))}\n.from-cyan-500{--tw-gradient-from:#00bcd4;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 188, 212, 0))}\n.from-light-blue-500{--tw-gradient-from:#03a9f4;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(3, 169, 244, 0))}\n.from-blue-500{--tw-gradient-from:#2196f3;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(33, 150, 243, 0))}\n.from-indigo-500{--tw-gradient-from:#3f51b5;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(63, 81, 181, 0))}\n.from-deep-purple-500{--tw-gradient-from:#673ab7;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(103, 58, 183, 0))}\n.from-purple-500{--tw-gradient-from:#9c27b0;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(156, 39, 176, 0))}\n.from-pink-500{--tw-gradient-from:#e91e63;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(233, 30, 99, 0))}\n.from-red-500{--tw-gradient-from:#f44336;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(244, 67, 54, 0))}\n.from-light-blue-700{--tw-gradient-from:#0288d1;--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to, rgba(2, 136, 209, 0))}\n.to-blue-gray-700{--tw-gradient-to:#455a64}\n.to-gray-700{--tw-gradient-to:#616161}\n.to-brown-700{--tw-gradient-to:#5d4037}\n.to-deep-orange-700{--tw-gradient-to:#e64a19}\n.to-orange-700{--tw-gradient-to:#f57c00}\n.to-amber-700{--tw-gradient-to:#ffa000}\n.to-yellow-800{--tw-gradient-to:#f9a825}\n.to-lime-700{--tw-gradient-to:#afb42b}\n.to-light-green-700{--tw-gradient-to:#689f38}\n.to-green-700{--tw-gradient-to:#388e3c}\n.to-teal-700{--tw-gradient-to:#00796b}\n.to-cyan-700{--tw-gradient-to:#0097a7}\n.to-light-blue-700{--tw-gradient-to:#0288d1}\n.to-blue-700{--tw-gradient-to:#1976d2}\n.to-indigo-700{--tw-gradient-to:#303f9f}\n.to-deep-purple-700{--tw-gradient-to:#512da8}\n.to-purple-700{--tw-gradient-to:#7b1fa2}\n.to-pink-700{--tw-gradient-to:#c2185b}\n.to-red-700{--tw-gradient-to:#d32f2f}\n.to-light-blue-500{--tw-gradient-to:#03a9f4}\n.p-4{padding:1rem}\n.p-3{padding:0.75rem}\n.p-8{padding:2rem}\n.p-2{padding:0.5rem}\n.p-0{padding:0px}\n.p-2\\.5{padding:0.625rem}\n.p-6{padding:1.5rem}\n.p-1{padding:0.25rem}\n.p-5{padding:1.25rem}\n.p-10{padding:2.5rem}\n.px-4{padding-left:1rem;padding-right:1rem}\n.py-16{padding-top:4rem;padding-bottom:4rem}\n.py-1{padding-top:0.25rem;padding-bottom:0.25rem}\n.py-8{padding-top:2rem;padding-bottom:2rem}\n.py-28{padding-top:7rem;padding-bottom:7rem}\n.px-12{padding-left:3rem;padding-right:3rem}\n.px-2\\.5{padding-left:0.625rem;padding-right:0.625rem}\n.px-2{padding-left:0.5rem;padding-right:0.5rem}\n.py-2{padding-top:0.5rem;padding-bottom:0.5rem}\n.py-20{padding-top:5rem;padding-bottom:5rem}\n.py-24{padding-top:6rem;padding-bottom:6rem}\n.py-5{padding-top:1.25rem;padding-bottom:1.25rem}\n.py-1\\.5{padding-top:0.375rem;padding-bottom:0.375rem}\n.py-2\\.5{padding-top:0.625rem;padding-bottom:0.625rem}\n.px-6{padding-left:1.5rem;padding-right:1.5rem}\n.py-3{padding-top:0.75rem;padding-bottom:0.75rem}\n.px-7{padding-left:1.75rem;padding-right:1.75rem}\n.py-4{padding-top:1rem;padding-bottom:1rem}\n.px-8{padding-left:2rem;padding-right:2rem}\n.px-9{padding-left:2.25rem;padding-right:2.25rem}\n.px-3{padding-left:0.75rem;padding-right:0.75rem}\n.px-0{padding-left:0px;padding-right:0px}\n.px-5{padding-left:1.25rem;padding-right:1.25rem}\n.px-1\\.5{padding-left:0.375rem;padding-right:0.375rem}\n.px-1{padding-left:0.25rem;padding-right:0.25rem}\n.pt-28{padding-top:7rem}\n.pb-36{padding-bottom:9rem}\n.pt-8{padding-top:2rem}\n.pb-6{padding-bottom:1.5rem}\n.pb-2{padding-bottom:0.5rem}\n.pt-6{padding-top:1.5rem}\n.pb-4{padding-bottom:1rem}\n.pb-20{padding-bottom:5rem}\n.pt-32{padding-top:8rem}\n.pt-48{padding-top:12rem}\n.pt-24{padding-top:6rem}\n.pb-64{padding-bottom:16rem}\n.pb-16{padding-bottom:4rem}\n.pr-12{padding-right:3rem}\n.pl-4{padding-left:1rem}\n.pt-4{padding-top:1rem}\n.pt-9{padding-top:2.25rem}\n.pl-0{padding-left:0px}\n.pt-10{padding-top:2.5rem}\n.pl-5{padding-left:1.25rem}\n.pr-3{padding-right:0.75rem}\n.pl-7{padding-left:1.75rem}\n.pr-5{padding-right:1.25rem}\n.pl-8{padding-left:2rem}\n.pr-6{padding-right:1.5rem}\n.pt-1\\.5{padding-top:0.375rem}\n.pb-0\\.5{padding-bottom:0.125rem}\n.pt-1{padding-top:0.25rem}\n.pb-0{padding-bottom:0px}\n.pt-2\\.5{padding-top:0.625rem}\n.pb-1\\.5{padding-bottom:0.375rem}\n.pt-2{padding-top:0.5rem}\n.pb-1{padding-bottom:0.25rem}\n.pt-3\\.5{padding-top:0.875rem}\n.pb-2\\.5{padding-bottom:0.625rem}\n.pt-3{padding-top:0.75rem}\n.pl-2{padding-left:0.5rem}\n.pr-7{padding-right:1.75rem}\n.pl-3{padding-left:0.75rem}\n.pr-9{padding-right:2.25rem}\n.pr-1{padding-right:0.25rem}\n.pb-10{padding-bottom:2.5rem}\n.pt-16{padding-top:4rem}\n.text-center{text-align:center}\n.text-right{text-align:right}\n.text-left{text-align:left}\n.align-middle{vertical-align:middle}\n.font-serif{font-family:\"Roboto Slab\", serif}\n.text-xl{font-size:1.25rem;line-height:1.75rem}\n.text-sm{font-size:0.875rem;line-height:1.25rem}\n.text-xs{font-size:0.75rem;line-height:1rem}\n.text-6xl{font-size:3.75rem;line-height:1}\n.text-lg{font-size:1.125rem;line-height:1.75rem}\n.text-base{font-size:1rem;line-height:1.5rem}\n.text-2xl{font-size:1.5rem;line-height:2rem}\n.text-4xl{font-size:2.25rem;line-height:2.5rem}\n.text-3xl{font-size:1.875rem;line-height:2.25rem}\n.text-5xl{font-size:3rem;line-height:1}\n.text-7xl{font-size:4.5rem;line-height:1}\n.text-8xl{font-size:6rem;line-height:1}\n.text-9xl{font-size:8rem;line-height:1}\n.font-medium{font-weight:500}\n.font-semibold{font-weight:600}\n.font-bold{font-weight:700}\n.font-light{font-weight:300}\n.font-normal{font-weight:400}\n.uppercase{text-transform:uppercase}\n.capitalize{text-transform:capitalize}\n.leading-relaxed{line-height:1.625}\n.leading-none{line-height:1}\n.leading-normal{line-height:1.5}\n.leading-10{line-height:2.5rem}\n.leading-snug{line-height:1.375}\n.tracking-wider{letter-spacing:0.05em}\n.tracking-wide{letter-spacing:0.025em}\n.text-gray-700{--tw-text-opacity:1;color:rgba(97, 97, 97, var(--tw-text-opacity))}\n.text-blue-gray-700{--tw-text-opacity:1;color:rgba(69, 90, 100, var(--tw-text-opacity))}\n.text-light-blue-500{--tw-text-opacity:1;color:rgba(3, 169, 244, var(--tw-text-opacity))}\n.text-blue-gray-800{--tw-text-opacity:1;color:rgba(55, 71, 79, var(--tw-text-opacity))}\n.text-blue-gray-900{--tw-text-opacity:1;color:rgba(38, 50, 56, var(--tw-text-opacity))}\n.text-blue-gray-200{--tw-text-opacity:1;color:rgba(176, 190, 197, var(--tw-text-opacity))}\n.text-blue-gray-50{--tw-text-opacity:1;color:rgba(236, 239, 241, var(--tw-text-opacity))}\n.text-cyan-600{--tw-text-opacity:1;color:rgba(0, 172, 193, var(--tw-text-opacity))}\n.text-gray-500{--tw-text-opacity:1;color:rgba(158, 158, 158, var(--tw-text-opacity))}\n.text-gray-900{--tw-text-opacity:1;color:rgba(33, 33, 33, var(--tw-text-opacity))}\n.text-blue-600{--tw-text-opacity:1;color:rgba(30, 136, 229, var(--tw-text-opacity))}\n.text-blue-400{--tw-text-opacity:1;color:rgba(66, 165, 245, var(--tw-text-opacity))}\n.text-indigo-500{--tw-text-opacity:1;color:rgba(63, 81, 181, var(--tw-text-opacity))}\n.text-pink-400{--tw-text-opacity:1;color:rgba(236, 64, 122, var(--tw-text-opacity))}\n.text-red-600{--tw-text-opacity:1;color:rgba(229, 57, 53, var(--tw-text-opacity))}\n.text-gray-600{--tw-text-opacity:1;color:rgba(117, 117, 117, var(--tw-text-opacity))}\n.text-white{--tw-text-opacity:1;color:rgba(255, 255, 255, var(--tw-text-opacity))}\n.text-blue-gray-500{--tw-text-opacity:1;color:rgba(96, 125, 139, var(--tw-text-opacity))}\n.text-brown-500{--tw-text-opacity:1;color:rgba(121, 85, 72, var(--tw-text-opacity))}\n.text-deep-orange-500{--tw-text-opacity:1;color:rgba(255, 87, 34, var(--tw-text-opacity))}\n.text-orange-500{--tw-text-opacity:1;color:rgba(255, 152, 0, var(--tw-text-opacity))}\n.text-amber-500{--tw-text-opacity:1;color:rgba(255, 193, 7, var(--tw-text-opacity))}\n.text-yellow-600{--tw-text-opacity:1;color:rgba(253, 216, 53, var(--tw-text-opacity))}\n.text-lime-500{--tw-text-opacity:1;color:rgba(205, 220, 57, var(--tw-text-opacity))}\n.text-light-green-500{--tw-text-opacity:1;color:rgba(139, 195, 74, var(--tw-text-opacity))}\n.text-green-500{--tw-text-opacity:1;color:rgba(76, 175, 80, var(--tw-text-opacity))}\n.text-teal-500{--tw-text-opacity:1;color:rgba(0, 150, 136, var(--tw-text-opacity))}\n.text-cyan-500{--tw-text-opacity:1;color:rgba(0, 188, 212, var(--tw-text-opacity))}\n.text-blue-500{--tw-text-opacity:1;color:rgba(33, 150, 243, var(--tw-text-opacity))}\n.text-deep-purple-500{--tw-text-opacity:1;color:rgba(103, 58, 183, var(--tw-text-opacity))}\n.text-purple-500{--tw-text-opacity:1;color:rgba(156, 39, 176, var(--tw-text-opacity))}\n.text-pink-500{--tw-text-opacity:1;color:rgba(233, 30, 99, var(--tw-text-opacity))}\n.text-red-500{--tw-text-opacity:1;color:rgba(244, 67, 54, var(--tw-text-opacity))}\n.text-gray-400{--tw-text-opacity:1;color:rgba(189, 189, 189, var(--tw-text-opacity))}\n.text-gray-800{--tw-text-opacity:1;color:rgba(66, 66, 66, var(--tw-text-opacity))}\n.text-brown-700{--tw-text-opacity:1;color:rgba(93, 64, 55, var(--tw-text-opacity))}\n.text-deep-orange-700{--tw-text-opacity:1;color:rgba(230, 74, 25, var(--tw-text-opacity))}\n.text-orange-700{--tw-text-opacity:1;color:rgba(245, 124, 0, var(--tw-text-opacity))}\n.text-amber-700{--tw-text-opacity:1;color:rgba(255, 160, 0, var(--tw-text-opacity))}\n.text-yellow-700{--tw-text-opacity:1;color:rgba(251, 192, 45, var(--tw-text-opacity))}\n.text-lime-700{--tw-text-opacity:1;color:rgba(175, 180, 43, var(--tw-text-opacity))}\n.text-light-green-700{--tw-text-opacity:1;color:rgba(104, 159, 56, var(--tw-text-opacity))}\n.text-green-700{--tw-text-opacity:1;color:rgba(56, 142, 60, var(--tw-text-opacity))}\n.text-teal-700{--tw-text-opacity:1;color:rgba(0, 121, 107, var(--tw-text-opacity))}\n.text-cyan-700{--tw-text-opacity:1;color:rgba(0, 151, 167, var(--tw-text-opacity))}\n.text-light-blue-700{--tw-text-opacity:1;color:rgba(2, 136, 209, var(--tw-text-opacity))}\n.text-blue-700{--tw-text-opacity:1;color:rgba(25, 118, 210, var(--tw-text-opacity))}\n.text-indigo-700{--tw-text-opacity:1;color:rgba(48, 63, 159, var(--tw-text-opacity))}\n.text-deep-purple-700{--tw-text-opacity:1;color:rgba(81, 45, 168, var(--tw-text-opacity))}\n.text-purple-700{--tw-text-opacity:1;color:rgba(123, 31, 162, var(--tw-text-opacity))}\n.text-pink-700{--tw-text-opacity:1;color:rgba(194, 24, 91, var(--tw-text-opacity))}\n.text-red-700{--tw-text-opacity:1;color:rgba(211, 47, 47, var(--tw-text-opacity))}\n.text-gray-200{--tw-text-opacity:1;color:rgba(238, 238, 238, var(--tw-text-opacity))}\n.text-brown-800{--tw-text-opacity:1;color:rgba(78, 52, 46, var(--tw-text-opacity))}\n.text-deep-orange-800{--tw-text-opacity:1;color:rgba(216, 67, 21, var(--tw-text-opacity))}\n.text-orange-800{--tw-text-opacity:1;color:rgba(239, 108, 0, var(--tw-text-opacity))}\n.text-amber-800{--tw-text-opacity:1;color:rgba(255, 143, 0, var(--tw-text-opacity))}\n.text-yellow-800{--tw-text-opacity:1;color:rgba(249, 168, 37, var(--tw-text-opacity))}\n.text-lime-800{--tw-text-opacity:1;color:rgba(158, 157, 36, var(--tw-text-opacity))}\n.text-light-green-800{--tw-text-opacity:1;color:rgba(85, 139, 47, var(--tw-text-opacity))}\n.text-green-800{--tw-text-opacity:1;color:rgba(46, 125, 50, var(--tw-text-opacity))}\n.text-teal-800{--tw-text-opacity:1;color:rgba(0, 105, 92, var(--tw-text-opacity))}\n.text-cyan-800{--tw-text-opacity:1;color:rgba(0, 131, 143, var(--tw-text-opacity))}\n.text-light-blue-800{--tw-text-opacity:1;color:rgba(2, 119, 189, var(--tw-text-opacity))}\n.text-blue-800{--tw-text-opacity:1;color:rgba(21, 101, 192, var(--tw-text-opacity))}\n.text-indigo-800{--tw-text-opacity:1;color:rgba(40, 53, 147, var(--tw-text-opacity))}\n.text-deep-purple-800{--tw-text-opacity:1;color:rgba(69, 39, 160, var(--tw-text-opacity))}\n.text-purple-800{--tw-text-opacity:1;color:rgba(106, 27, 154, var(--tw-text-opacity))}\n.text-pink-800{--tw-text-opacity:1;color:rgba(173, 20, 87, var(--tw-text-opacity))}\n.text-red-800{--tw-text-opacity:1;color:rgba(198, 40, 40, var(--tw-text-opacity))}\n.text-black{--tw-text-opacity:1;color:rgba(0, 0, 0, var(--tw-text-opacity))}\n.text-opacity-60{--tw-text-opacity:0.6}\n.no-underline{text-decoration:none}\n.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}\n.placeholder-white::-moz-placeholder{--tw-placeholder-opacity:1;color:rgba(255, 255, 255, var(--tw-placeholder-opacity))}\n.placeholder-white:-ms-input-placeholder{--tw-placeholder-opacity:1;color:rgba(255, 255, 255, var(--tw-placeholder-opacity))}\n.placeholder-white::placeholder{--tw-placeholder-opacity:1;color:rgba(255, 255, 255, var(--tw-placeholder-opacity))}\n.placeholder-opacity-50::-moz-placeholder{--tw-placeholder-opacity:0.5}\n.placeholder-opacity-50:-ms-input-placeholder{--tw-placeholder-opacity:0.5}\n.placeholder-opacity-50::placeholder{--tw-placeholder-opacity:0.5}\n.opacity-50{opacity:0.5}\n.opacity-0{opacity:0}\n.opacity-100{opacity:1}\n.opacity-25{opacity:0.25}\n.opacity-5{opacity:0.05}\n.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-blue-gray{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(96, 125, 139, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-gray{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(158, 158, 158, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-brown{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(121, 85, 72, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-deep-orange{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 87, 36, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-orange{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 152, 0, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-amber{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 193, 7, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-yellow{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 235, 59, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-lime{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(205, 220, 57, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-light-green{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(139, 195, 74, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-green{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(76, 175, 80, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-teal{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(0, 150, 136, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-cyan{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(0, 188, 212, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-light-blue{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(3, 169, 244, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-blue{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(33, 150, 243, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-indigo{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(63, 81, 181, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-deep-purple{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(103, 58, 183, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-purple{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(156, 39, 176, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-pink{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(233, 30, 99, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-md-red{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(244, 67, 54, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-none{--tw-shadow:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-blue-gray{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(69, 90, 100, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-gray{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(97, 97, 97, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-brown{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(93, 64, 55, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-deep-orange{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(230, 74, 25, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-orange{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(245, 122, 0, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-amber{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(255, 160, 0, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-yellow{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(251, 192, 45, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-lime{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(175, 180, 43, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-light-green{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(104, 159, 56, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-green{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(56, 142, 60, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-teal{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(0, 121, 107, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-cyan{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(0, 151, 167, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-light-blue{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(2, 136, 209, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-blue{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(25, 118, 210, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-indigo{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(48, 63, 159, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-deep-purple{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(81, 45, 168, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-purple{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(123, 31, 162, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-pink{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(194, 24, 91, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-lg-red{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(211, 47, 47, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0, 0, 0, 0.05);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.outline-none{outline:2px solid transparent;outline-offset:2px}\n.transition-all{transition-property:all;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}\n.duration-300{transition-duration:300ms}\n.duration{transition-duration:150ms}\n.duration-500{transition-duration:500ms}\n/* Material Tailwind Input */\n.mt-input + label:after {\n        content: '';\n        pointer-events:none;\n        position:absolute;\n        top:0.125rem;\n        left:0px;\n        height:100%;\n        width:100%;\n        --tw-translate-x:0;\n        --tw-translate-y:0;\n        --tw-rotate:0;\n        --tw-skew-x:0;\n        --tw-skew-y:0;\n        --tw-scale-x:1;\n        --tw-scale-y:1;\n        transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n        --tw-scale-x:0;\n        border-width:1px;\n        border-top-width:0px;\n        border-left-width:0px;\n        border-right-width:0px;\n        border-bottom-width:2px;\n        transition-property:all;\n        transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration:150ms;\n        transition-duration:300ms;\n    }\n.mt-input:focus + label:after{--tw-scale-x:1}\n.mt-input:not(:-moz-placeholder-shown) + label span {\n        top: -14%;\n    }\n.mt-input:not(:-ms-input-placeholder) + label span {\n        top: -14%;\n    }\n.mt-input:focus + label span,\n    .mt-input:not(:placeholder-shown) + label span {\n        top: -14%;\n    }\n.mt-input:not(:-moz-placeholder-shown) + label span{font-size:0.75rem;line-height:1rem;line-height:1.25}\n.mt-input:not(:-ms-input-placeholder) + label span{font-size:0.75rem;line-height:1rem;line-height:1.25}\n.mt-input:focus + label span, .mt-input:not(:placeholder-shown) + label span{font-size:0.75rem;line-height:1rem;line-height:1.25}\n.texterea:not(:-moz-placeholder-shown) + label span {\n        top: -22px !important;\n    }\n.texterea:not(:-ms-input-placeholder) + label span {\n        top: -22px !important;\n    }\n.texterea:focus + label span,\n    .texterea:not(:placeholder-shown) + label span {\n        top: -22px !important;\n    }\n/* Material Tailwind Input Outline */\n.mt-input-outline:not(:-moz-placeholder-shown) {\n        border-top: transparent !important;\n    }\n.mt-input-outline:not(:-ms-input-placeholder) {\n        border-top: transparent !important;\n    }\n.mt-input-outline:focus,\n    .mt-input-outline:not(:placeholder-shown) {\n        border-top: transparent !important;\n    }\n.mt-input-outline + label {\n        line-height: 3.625 !important;\n    }\n.mt-input-outline:not(:-moz-placeholder-shown) + label{font-size:0.75rem !important;line-height:1rem !important;line-height:1.25 !important}\n.mt-input-outline:not(:-ms-input-placeholder) + label{font-size:0.75rem !important;line-height:1rem !important;line-height:1.25 !important}\n.mt-input-outline:focus + label, .mt-input-outline:not(:placeholder-shown) + label{font-size:0.75rem !important;line-height:1rem !important;line-height:1.25 !important}\n.mt-input-outline + label:before,\n    .mt-input-outline + label:after {\n        content: '';\n    }\n.mt-input-outline + label:before, .mt-input-outline + label:after{pointer-events:none;margin-top:0.375rem;box-sizing:border-box;display:block;height:0.5rem;width:0.625rem;border-width:1px;border-top-width:2px;border-bottom-width:0px;border-left-width:0px;border-right-width:0px;border-color:transparent}\n.mt-input-outline:not(:-moz-placeholder-shown) + label:before, .mt-input-outline:not(:-moz-placeholder-shown) + label:after{border-top-width:1px;--tw-border-opacity:1;border-color:rgba(224, 224, 224, var(--tw-border-opacity))}\n.mt-input-outline:not(:-ms-input-placeholder) + label:before, .mt-input-outline:not(:-ms-input-placeholder) + label:after{border-top-width:1px;--tw-border-opacity:1;border-color:rgba(224, 224, 224, var(--tw-border-opacity))}\n.mt-input-outline:not(:placeholder-shown) + label:before, .mt-input-outline:not(:placeholder-shown) + label:after{border-top-width:1px;--tw-border-opacity:1;border-color:rgba(224, 224, 224, var(--tw-border-opacity))}\n.mt-input-outline:focus + label::before, .mt-input-outline:focus + label::after{border-top-width:2px}\n.mt-input-outline + label:before{margin-right:0.25rem;border-top-left-radius:0.5rem}\n.mt-input-outline + label:after{margin-left:0.25rem;flex-grow:1;border-top-right-radius:0.5rem}\n/* Material Tailwind Radio Button */\n.mt-radio:checked + label span {\n        box-shadow: 0px 0px 0px 2px white inset;\n        --tw-bg-opacity:1 !important;\n    }\n.mt-radio:checked + label{--tw-text-opacity:1;color:rgba(97, 97, 97, var(--tw-text-opacity))}\n.mt-radio + label span::before {\n        content: '';\n        top: -1.5px;\n        left: -1.5px;\n        transform: scale3d(1, 1, 1);\n        position:absolute;\n        z-index:10;\n        margin:0px;\n        display:block;\n        height:1rem;\n        width:1rem;\n        border-radius:9999px;\n        opacity:0;\n    }\n.mt-radio:checked + label span::before {\n        -webkit-animation: radio-ripple 0.3s linear;\n                animation: radio-ripple 0.3s linear;\n    }\n/* Material Tailwind Checkbox */\n.mt-checkbox:checked + label span{--tw-bg-opacity:1 !important}\n.mt-checkbox:checked + label{--tw-text-opacity:1;color:rgba(97, 97, 97, var(--tw-text-opacity))}\n.mt-checkbox + label span::before {\n        content: '';\n        top: -1px;\n        left: -1.5px;\n        transform: scale3d(2, 2, 1);\n        position:absolute;\n        z-index:10;\n        margin:0px;\n        display:block;\n        height:1.25rem;\n        width:1.25rem;\n        border-radius:9999px;\n        opacity:0;\n    }\n.mt-checkbox + label span::after {\n        content: '';\n        top: 1px;\n        left: 6px;\n        position:absolute;\n        height:0.875rem;\n        width:0.375rem;\n        --tw-translate-x:0;\n        --tw-translate-y:0;\n        --tw-rotate:0;\n        --tw-skew-x:0;\n        --tw-skew-y:0;\n        --tw-scale-x:1;\n        --tw-scale-y:1;\n        transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n        --tw-rotate:45deg;\n        border-bottom-width:2px;\n        border-right-width:2px;\n        border-color:transparent;\n        transition-property:all;\n        transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);\n        transition-duration:150ms;\n        transition-duration:200ms;\n    }\n.mt-checkbox:checked + label span::before {\n        -webkit-animation: radio-ripple 0.3s linear;\n                animation: radio-ripple 0.3s linear;\n    }\n.mt-checkbox:checked + label span::after{--tw-border-opacity:1;border-color:rgba(255, 255, 255, var(--tw-border-opacity))}\n/* Material Tailwind Input Colors */\n.mt-input-blue-gray-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(96, 125, 139, var(--tw-border-opacity))}\n.mt-input-gray-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(158, 158, 158, var(--tw-border-opacity))}\n.mt-input-orange-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 152, 0, var(--tw-border-opacity))}\n.mt-input-deep-orange-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 87, 34, var(--tw-border-opacity))}\n.mt-input-amber-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 193, 7, var(--tw-border-opacity))}\n.mt-input-yellow-600:focus + label:after{--tw-border-opacity:1;border-color:rgba(253, 216, 53, var(--tw-border-opacity))}\n.mt-input-lime-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(205, 220, 57, var(--tw-border-opacity))}\n.mt-input-light-green-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(139, 195, 74, var(--tw-border-opacity))}\n.mt-input-green-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity))}\n.mt-input-teal-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(0, 150, 136, var(--tw-border-opacity))}\n.mt-input-cyan-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(0, 188, 212, var(--tw-border-opacity))}\n.mt-input-light-blue-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(3, 169, 244, var(--tw-border-opacity))}\n.mt-input-blue-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(33, 150, 243, var(--tw-border-opacity))}\n.mt-input-indigo-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(63, 81, 181, var(--tw-border-opacity))}\n.mt-input-purple-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(156, 39, 176, var(--tw-border-opacity))}\n.mt-input-deep-purple-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(103, 58, 183, var(--tw-border-opacity))}\n.mt-input-pink-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(233, 30, 99, var(--tw-border-opacity))}\n.mt-input-red-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity))}\n/* Material Tailwind Input Outline Colors */\n.mt-input-outline-blue-gray-500:focus, .mt-input-outline-blue-gray-500:focus + label, .mt-input-outline-blue-gray-500:focus + label:before, .mt-input-outline-blue-gray-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(96, 125, 139, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(96, 125, 139, var(--tw-text-opacity))}\n.mt-input-outline-gray-500:focus, .mt-input-outline-gray-500:focus + label, .mt-input-outline-gray-500:focus + label:before, .mt-input-outline-gray-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(158, 158, 158, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(158, 158, 158, var(--tw-text-opacity))}\n.mt-input-outline-orange-500:focus, .mt-input-outline-orange-500:focus + label, .mt-input-outline-orange-500:focus + label:before, .mt-input-outline-orange-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 152, 0, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(255, 152, 0, var(--tw-text-opacity))}\n.mt-input-outline-deep-orange-500:focus, .mt-input-outline-deep-orange-500:focus + label, .mt-input-outline-deep-orange-500:focus + label:before, .mt-input-outline-deep-orange-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 87, 34, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(255, 87, 34, var(--tw-text-opacity))}\n.mt-input-outline-brown-500:focus, .mt-input-outline-brown-500:focus + label, .mt-input-outline-brown-500:focus + label:before, .mt-input-outline-brown-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(121, 85, 72, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(121, 85, 72, var(--tw-text-opacity))}\n.mt-input-outline-amber-500:focus, .mt-input-outline-amber-500:focus + label, .mt-input-outline-amber-500:focus + label:before, .mt-input-outline-amber-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(255, 193, 7, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(255, 193, 7, var(--tw-text-opacity))}\n.mt-input-outline-yellow-600:focus, .mt-input-outline-yellow-600:focus + label, .mt-input-outline-yellow-600:focus + label:before, .mt-input-outline-yellow-600:focus + label:after{--tw-border-opacity:1;border-color:rgba(253, 216, 53, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(253, 216, 53, var(--tw-text-opacity))}\n.mt-input-outline-lime-500:focus, .mt-input-outline-lime-500:focus + label, .mt-input-outline-lime-500:focus + label:before, .mt-input-outline-lime-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(205, 220, 57, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(205, 220, 57, var(--tw-text-opacity))}\n.mt-input-outline-light-green-500:focus, .mt-input-outline-light-green-500:focus + label, .mt-input-outline-light-green-500:focus + label:before, .mt-input-outline-light-green-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(139, 195, 74, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(139, 195, 74, var(--tw-text-opacity))}\n.mt-input-outline-green-500:focus, .mt-input-outline-green-500:focus + label, .mt-input-outline-green-500:focus + label:before, .mt-input-outline-green-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(76, 175, 80, var(--tw-text-opacity))}\n.mt-input-outline-teal-500:focus, .mt-input-outline-teal-500:focus + label, .mt-input-outline-teal-500:focus + label:before, .mt-input-outline-teal-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(0, 150, 136, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(0, 150, 136, var(--tw-text-opacity))}\n.mt-input-outline-cyan-500:focus, .mt-input-outline-cyan-500:focus + label, .mt-input-outline-cyan-500:focus + label:before, .mt-input-outline-cyan-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(0, 188, 212, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(0, 188, 212, var(--tw-text-opacity))}\n.mt-input-outline-light-blue-500:focus, .mt-input-outline-light-blue-500:focus + label, .mt-input-outline-light-blue-500:focus + label:before, .mt-input-outline-light-blue-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(3, 169, 244, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(3, 169, 244, var(--tw-text-opacity))}\n.mt-input-outline-blue-500:focus, .mt-input-outline-blue-500:focus + label, .mt-input-outline-blue-500:focus + label:before, .mt-input-outline-blue-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(33, 150, 243, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(33, 150, 243, var(--tw-text-opacity))}\n.mt-input-outline-indigo-500:focus, .mt-input-outline-indigo-500:focus + label, .mt-input-outline-indigo-500:focus + label:before, .mt-input-outline-indigo-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(63, 81, 181, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(63, 81, 181, var(--tw-text-opacity))}\n.mt-input-outline-purple-500:focus, .mt-input-outline-purple-500:focus + label, .mt-input-outline-purple-500:focus + label:before, .mt-input-outline-purple-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(156, 39, 176, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(156, 39, 176, var(--tw-text-opacity))}\n.mt-input-outline-deep-purple-500:focus, .mt-input-outline-deep-purple-500:focus + label, .mt-input-outline-deep-purple-500:focus + label:before, .mt-input-outline-deep-purple-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(103, 58, 183, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(103, 58, 183, var(--tw-text-opacity))}\n.mt-input-outline-pink-500:focus, .mt-input-outline-pink-500:focus + label, .mt-input-outline-pink-500:focus + label:before, .mt-input-outline-pink-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(233, 30, 99, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(233, 30, 99, var(--tw-text-opacity))}\n.mt-input-outline-red-500:focus, .mt-input-outline-red-500:focus + label, .mt-input-outline-red-500:focus + label:before, .mt-input-outline-red-500:focus + label:after{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(244, 67, 54, var(--tw-text-opacity))}\n.mt-input-outline-error:not(:-moz-placeholder-shown) + label, .mt-input-outline-error:not(:-moz-placeholder-shown) + label:before, .mt-input-outline-error:not(:-moz-placeholder-shown) + label:after{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(244, 67, 54, var(--tw-text-opacity))}\n.mt-input-outline-error:not(:-ms-input-placeholder) + label, .mt-input-outline-error:not(:-ms-input-placeholder) + label:before, .mt-input-outline-error:not(:-ms-input-placeholder) + label:after{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(244, 67, 54, var(--tw-text-opacity))}\n.mt-input-outline-error:not(:placeholder-shown) + label, .mt-input-outline-error:not(:placeholder-shown) + label:before, .mt-input-outline-error:not(:placeholder-shown) + label:after{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(244, 67, 54, var(--tw-text-opacity))}\n.mt-input-outline-success:not(:-moz-placeholder-shown) + label, .mt-input-outline-success:not(:-moz-placeholder-shown) + label:before, .mt-input-outline-success:not(:-moz-placeholder-shown) + label:after{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(76, 175, 80, var(--tw-text-opacity))}\n.mt-input-outline-success:not(:-ms-input-placeholder) + label, .mt-input-outline-success:not(:-ms-input-placeholder) + label:before, .mt-input-outline-success:not(:-ms-input-placeholder) + label:after{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(76, 175, 80, var(--tw-text-opacity))}\n.mt-input-outline-success:not(:placeholder-shown) + label, .mt-input-outline-success:not(:placeholder-shown) + label:before, .mt-input-outline-success:not(:placeholder-shown) + label:after{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity));--tw-text-opacity:1;color:rgba(76, 175, 80, var(--tw-text-opacity))}\n/* Material Tailwind Radio Button and Checkbox Colors */\n.mt-radio-blue-gray-500:checked + label span, .mt-radio-blue-gray-500 + label span::before, .mt-checkbox-blue-gray-500:checked + label span, .mt-checkbox-blue-gray-500 + label span::before{--tw-border-opacity:1;border-color:rgba(96, 125, 139, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(96, 125, 139, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-gray-500:checked + label span, .mt-radio-gray-500 + label span::before, .mt-checkbox-gray-500:checked + label span, .mt-checkbox-gray-500 + label span::before{--tw-border-opacity:1;border-color:rgba(158, 158, 158, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(158, 158, 158, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-orange-500:checked + label span, .mt-radio-orange-500 + label span::before, .mt-checkbox-orange-500:checked + label span, .mt-checkbox-orange-500 + label span::before{--tw-border-opacity:1;border-color:rgba(255, 152, 0, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(255, 152, 0, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-deep-orange-500:checked + label span, .mt-radio-deep-orange-500 + label span::before, .mt-checkbox-deep-orange-500:checked + label span, .mt-checkbox-deep-orange-500 + label span::before{--tw-border-opacity:1;border-color:rgba(255, 87, 34, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(255, 87, 34, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-brown-500:checked + label span, .mt-radio-brown-500 + label span::before, .mt-checkbox-brown-500:checked + label span, .mt-checkbox-brown-500 + label span::before{--tw-border-opacity:1;border-color:rgba(121, 85, 72, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(121, 85, 72, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-amber-500:checked + label span, .mt-radio-amber-500 + label span::before, .mt-checkbox-amber-500:checked + label span, .mt-checkbox-amber-500 + label span::before{--tw-border-opacity:1;border-color:rgba(255, 193, 7, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(255, 193, 7, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-yellow-600:checked + label span, .mt-radio-yellow-600 + label span::before, .mt-checkbox-yellow-600:checked + label span, .mt-checkbox-yellow-600 + label span::before{--tw-border-opacity:1;border-color:rgba(253, 216, 53, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(253, 216, 53, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-lime-500:checked + label span, .mt-radio-lime-500 + label span::before, .mt-checkbox-lime-500:checked + label span, .mt-checkbox-lime-500 + label span::before{--tw-border-opacity:1;border-color:rgba(205, 220, 57, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(205, 220, 57, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-light-green-500:checked + label span, .mt-radio-light-green-500 + label span::before, .mt-checkbox-light-green-500:checked + label span, .mt-checkbox-light-green-500 + label span::before{--tw-border-opacity:1;border-color:rgba(139, 195, 74, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(139, 195, 74, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-green-500:checked + label span, .mt-radio-green-500 + label span::before, .mt-checkbox-green-500:checked + label span, .mt-checkbox-green-500 + label span::before{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(76, 175, 80, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-teal-500:checked + label span, .mt-radio-teal-500 + label span::before, .mt-checkbox-teal-500:checked + label span, .mt-checkbox-teal-500 + label span::before{--tw-border-opacity:1;border-color:rgba(0, 150, 136, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(0, 150, 136, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-cyan-500:checked + label span, .mt-radio-cyan-500 + label span::before, .mt-checkbox-cyan-500:checked + label span, .mt-checkbox-cyan-500 + label span::before{--tw-border-opacity:1;border-color:rgba(0, 188, 212, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(0, 188, 212, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-light-blue-500:checked + label span, .mt-radio-light-blue-500 + label span::before, .mt-checkbox-light-blue-500:checked + label span, .mt-checkbox-light-blue-500 + label span::before{--tw-border-opacity:1;border-color:rgba(3, 169, 244, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(3, 169, 244, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-blue-500:checked + label span, .mt-radio-blue-500 + label span::before, .mt-checkbox-blue-500:checked + label span, .mt-checkbox-blue-500 + label span::before{--tw-border-opacity:1;border-color:rgba(33, 150, 243, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(33, 150, 243, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-indigo-500:checked + label span, .mt-radio-indigo-500 + label span::before, .mt-checkbox-indigo-500:checked + label span, .mt-checkbox-indigo-500 + label span::before{--tw-border-opacity:1;border-color:rgba(63, 81, 181, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(63, 81, 181, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-purple-500:checked + label span, .mt-radio-purple-500 + label span::before, .mt-checkbox-purple-500:checked + label span, .mt-checkbox-purple-500 + label span::before{--tw-border-opacity:1;border-color:rgba(156, 39, 176, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(156, 39, 176, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-deep-purple-500:checked + label span, .mt-radio-deep-purple-500 + label span::before, .mt-checkbox-deep-purple-500:checked + label span, .mt-checkbox-deep-purple-500 + label span::before{--tw-border-opacity:1;border-color:rgba(103, 58, 183, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(103, 58, 183, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-pink-500:checked + label span, .mt-radio-pink-500 + label span::before, .mt-checkbox-pink-500:checked + label span, .mt-checkbox-pink-500 + label span::before{--tw-border-opacity:1;border-color:rgba(233, 30, 99, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(233, 30, 99, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n.mt-radio-red-500:checked + label span, .mt-radio-red-500 + label span::before, .mt-checkbox-red-500:checked + label span, .mt-checkbox-red-500 + label span::before{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(244, 67, 54, var(--tw-bg-opacity));--tw-bg-opacity:0.2}\n/* Tippy Boxx */\n.tippy-box:focus {\n    outline: none;\n}\n/* Tippy Animation */\n.tippy-box[data-animation='scale'] {\n    transform-origin: top left !important;\n}\n/* Tippy Arrow */\n.arrow-light .tippy-svg-arrow {\n    fill: #fff;\n}\n.arrow-dark .tippy-svg-arrow {\n    fill: rgba(0, 0, 0, 0.8);\n}\n/* Material Tailwind Radio Button Ripple Effect Animation */\n@-webkit-keyframes radio-ripple {\n    from {\n        opacity: 0;\n        transform: scale3d(1, 1, 1);\n    }\n    50% {\n        opacity: 1;\n        transform: scale3d(2, 2, 1);\n    }\n    to {\n        opacity: 0;\n        transform: scale3d(3, 3, 1);\n    }\n}\n@keyframes radio-ripple {\n    from {\n        opacity: 0;\n        transform: scale3d(1, 1, 1);\n    }\n    50% {\n        opacity: 1;\n        transform: scale3d(2, 2, 1);\n    }\n    to {\n        opacity: 0;\n        transform: scale3d(3, 3, 1);\n    }\n}\n.last\\:mr-0:last-child{margin-right:0px}\n.hover\\:border-blue-gray-700:hover{--tw-border-opacity:1;border-color:rgba(69, 90, 100, var(--tw-border-opacity))}\n.hover\\:border-gray-700:hover{--tw-border-opacity:1;border-color:rgba(97, 97, 97, var(--tw-border-opacity))}\n.hover\\:border-brown-700:hover{--tw-border-opacity:1;border-color:rgba(93, 64, 55, var(--tw-border-opacity))}\n.hover\\:border-deep-orange-700:hover{--tw-border-opacity:1;border-color:rgba(230, 74, 25, var(--tw-border-opacity))}\n.hover\\:border-orange-700:hover{--tw-border-opacity:1;border-color:rgba(245, 124, 0, var(--tw-border-opacity))}\n.hover\\:border-amber-700:hover{--tw-border-opacity:1;border-color:rgba(255, 160, 0, var(--tw-border-opacity))}\n.hover\\:border-yellow-700:hover{--tw-border-opacity:1;border-color:rgba(251, 192, 45, var(--tw-border-opacity))}\n.hover\\:border-lime-700:hover{--tw-border-opacity:1;border-color:rgba(175, 180, 43, var(--tw-border-opacity))}\n.hover\\:border-light-green-700:hover{--tw-border-opacity:1;border-color:rgba(104, 159, 56, var(--tw-border-opacity))}\n.hover\\:border-green-700:hover{--tw-border-opacity:1;border-color:rgba(56, 142, 60, var(--tw-border-opacity))}\n.hover\\:border-teal-700:hover{--tw-border-opacity:1;border-color:rgba(0, 121, 107, var(--tw-border-opacity))}\n.hover\\:border-cyan-700:hover{--tw-border-opacity:1;border-color:rgba(0, 151, 167, var(--tw-border-opacity))}\n.hover\\:border-light-blue-700:hover{--tw-border-opacity:1;border-color:rgba(2, 136, 209, var(--tw-border-opacity))}\n.hover\\:border-blue-700:hover{--tw-border-opacity:1;border-color:rgba(25, 118, 210, var(--tw-border-opacity))}\n.hover\\:border-indigo-700:hover{--tw-border-opacity:1;border-color:rgba(48, 63, 159, var(--tw-border-opacity))}\n.hover\\:border-deep-purple-700:hover{--tw-border-opacity:1;border-color:rgba(81, 45, 168, var(--tw-border-opacity))}\n.hover\\:border-purple-700:hover{--tw-border-opacity:1;border-color:rgba(123, 31, 162, var(--tw-border-opacity))}\n.hover\\:border-pink-700:hover{--tw-border-opacity:1;border-color:rgba(194, 24, 91, var(--tw-border-opacity))}\n.hover\\:border-red-700:hover{--tw-border-opacity:1;border-color:rgba(211, 47, 47, var(--tw-border-opacity))}\n.hover\\:bg-blue-gray-700:hover{--tw-bg-opacity:1;background-color:rgba(69, 90, 100, var(--tw-bg-opacity))}\n.hover\\:bg-gray-700:hover{--tw-bg-opacity:1;background-color:rgba(97, 97, 97, var(--tw-bg-opacity))}\n.hover\\:bg-brown-700:hover{--tw-bg-opacity:1;background-color:rgba(93, 64, 55, var(--tw-bg-opacity))}\n.hover\\:bg-deep-orange-700:hover{--tw-bg-opacity:1;background-color:rgba(230, 74, 25, var(--tw-bg-opacity))}\n.hover\\:bg-orange-700:hover{--tw-bg-opacity:1;background-color:rgba(245, 124, 0, var(--tw-bg-opacity))}\n.hover\\:bg-amber-700:hover{--tw-bg-opacity:1;background-color:rgba(255, 160, 0, var(--tw-bg-opacity))}\n.hover\\:bg-yellow-700:hover{--tw-bg-opacity:1;background-color:rgba(251, 192, 45, var(--tw-bg-opacity))}\n.hover\\:bg-lime-700:hover{--tw-bg-opacity:1;background-color:rgba(175, 180, 43, var(--tw-bg-opacity))}\n.hover\\:bg-light-green-700:hover{--tw-bg-opacity:1;background-color:rgba(104, 159, 56, var(--tw-bg-opacity))}\n.hover\\:bg-green-700:hover{--tw-bg-opacity:1;background-color:rgba(56, 142, 60, var(--tw-bg-opacity))}\n.hover\\:bg-teal-700:hover{--tw-bg-opacity:1;background-color:rgba(0, 121, 107, var(--tw-bg-opacity))}\n.hover\\:bg-cyan-700:hover{--tw-bg-opacity:1;background-color:rgba(0, 151, 167, var(--tw-bg-opacity))}\n.hover\\:bg-light-blue-700:hover{--tw-bg-opacity:1;background-color:rgba(2, 136, 209, var(--tw-bg-opacity))}\n.hover\\:bg-blue-700:hover{--tw-bg-opacity:1;background-color:rgba(25, 118, 210, var(--tw-bg-opacity))}\n.hover\\:bg-indigo-700:hover{--tw-bg-opacity:1;background-color:rgba(48, 63, 159, var(--tw-bg-opacity))}\n.hover\\:bg-deep-purple-700:hover{--tw-bg-opacity:1;background-color:rgba(81, 45, 168, var(--tw-bg-opacity))}\n.hover\\:bg-purple-700:hover{--tw-bg-opacity:1;background-color:rgba(123, 31, 162, var(--tw-bg-opacity))}\n.hover\\:bg-pink-700:hover{--tw-bg-opacity:1;background-color:rgba(194, 24, 91, var(--tw-bg-opacity))}\n.hover\\:bg-red-700:hover{--tw-bg-opacity:1;background-color:rgba(211, 47, 47, var(--tw-bg-opacity))}\n.hover\\:bg-blue-gray-50:hover{--tw-bg-opacity:1;background-color:rgba(236, 239, 241, var(--tw-bg-opacity))}\n.hover\\:bg-gray-50:hover{--tw-bg-opacity:1;background-color:rgba(250, 250, 250, var(--tw-bg-opacity))}\n.hover\\:bg-brown-50:hover{--tw-bg-opacity:1;background-color:rgba(239, 235, 233, var(--tw-bg-opacity))}\n.hover\\:bg-deep-orange-50:hover{--tw-bg-opacity:1;background-color:rgba(251, 233, 231, var(--tw-bg-opacity))}\n.hover\\:bg-orange-50:hover{--tw-bg-opacity:1;background-color:rgba(255, 243, 224, var(--tw-bg-opacity))}\n.hover\\:bg-amber-50:hover{--tw-bg-opacity:1;background-color:rgba(255, 248, 225, var(--tw-bg-opacity))}\n.hover\\:bg-yellow-50:hover{--tw-bg-opacity:1;background-color:rgba(255, 253, 231, var(--tw-bg-opacity))}\n.hover\\:bg-lime-50:hover{--tw-bg-opacity:1;background-color:rgba(249, 251, 231, var(--tw-bg-opacity))}\n.hover\\:bg-light-green-50:hover{--tw-bg-opacity:1;background-color:rgba(241, 248, 233, var(--tw-bg-opacity))}\n.hover\\:bg-green-50:hover{--tw-bg-opacity:1;background-color:rgba(232, 245, 233, var(--tw-bg-opacity))}\n.hover\\:bg-teal-50:hover{--tw-bg-opacity:1;background-color:rgba(224, 242, 241, var(--tw-bg-opacity))}\n.hover\\:bg-cyan-50:hover{--tw-bg-opacity:1;background-color:rgba(224, 247, 250, var(--tw-bg-opacity))}\n.hover\\:bg-light-blue-50:hover{--tw-bg-opacity:1;background-color:rgba(225, 245, 254, var(--tw-bg-opacity))}\n.hover\\:bg-blue-50:hover{--tw-bg-opacity:1;background-color:rgba(227, 242, 253, var(--tw-bg-opacity))}\n.hover\\:bg-indigo-50:hover{--tw-bg-opacity:1;background-color:rgba(232, 234, 246, var(--tw-bg-opacity))}\n.hover\\:bg-deep-purple-50:hover{--tw-bg-opacity:1;background-color:rgba(237, 231, 246, var(--tw-bg-opacity))}\n.hover\\:bg-purple-50:hover{--tw-bg-opacity:1;background-color:rgba(243, 229, 245, var(--tw-bg-opacity))}\n.hover\\:bg-pink-50:hover{--tw-bg-opacity:1;background-color:rgba(252, 228, 236, var(--tw-bg-opacity))}\n.hover\\:bg-red-50:hover{--tw-bg-opacity:1;background-color:rgba(255, 235, 238, var(--tw-bg-opacity))}\n.hover\\:bg-blue-gray-500:hover{--tw-bg-opacity:1;background-color:rgba(96, 125, 139, var(--tw-bg-opacity))}\n.hover\\:bg-gray-500:hover{--tw-bg-opacity:1;background-color:rgba(158, 158, 158, var(--tw-bg-opacity))}\n.hover\\:bg-brown-500:hover{--tw-bg-opacity:1;background-color:rgba(121, 85, 72, var(--tw-bg-opacity))}\n.hover\\:bg-deep-orange-500:hover{--tw-bg-opacity:1;background-color:rgba(255, 87, 34, var(--tw-bg-opacity))}\n.hover\\:bg-orange-500:hover{--tw-bg-opacity:1;background-color:rgba(255, 152, 0, var(--tw-bg-opacity))}\n.hover\\:bg-amber-500:hover{--tw-bg-opacity:1;background-color:rgba(255, 193, 7, var(--tw-bg-opacity))}\n.hover\\:bg-yellow-600:hover{--tw-bg-opacity:1;background-color:rgba(253, 216, 53, var(--tw-bg-opacity))}\n.hover\\:bg-lime-500:hover{--tw-bg-opacity:1;background-color:rgba(205, 220, 57, var(--tw-bg-opacity))}\n.hover\\:bg-light-green-500:hover{--tw-bg-opacity:1;background-color:rgba(139, 195, 74, var(--tw-bg-opacity))}\n.hover\\:bg-green-500:hover{--tw-bg-opacity:1;background-color:rgba(76, 175, 80, var(--tw-bg-opacity))}\n.hover\\:bg-teal-500:hover{--tw-bg-opacity:1;background-color:rgba(0, 150, 136, var(--tw-bg-opacity))}\n.hover\\:bg-cyan-500:hover{--tw-bg-opacity:1;background-color:rgba(0, 188, 212, var(--tw-bg-opacity))}\n.hover\\:bg-light-blue-500:hover{--tw-bg-opacity:1;background-color:rgba(3, 169, 244, var(--tw-bg-opacity))}\n.hover\\:bg-blue-500:hover{--tw-bg-opacity:1;background-color:rgba(33, 150, 243, var(--tw-bg-opacity))}\n.hover\\:bg-indigo-500:hover{--tw-bg-opacity:1;background-color:rgba(63, 81, 181, var(--tw-bg-opacity))}\n.hover\\:bg-deep-purple-500:hover{--tw-bg-opacity:1;background-color:rgba(103, 58, 183, var(--tw-bg-opacity))}\n.hover\\:bg-purple-500:hover{--tw-bg-opacity:1;background-color:rgba(156, 39, 176, var(--tw-bg-opacity))}\n.hover\\:bg-pink-500:hover{--tw-bg-opacity:1;background-color:rgba(233, 30, 99, var(--tw-bg-opacity))}\n.hover\\:bg-red-500:hover{--tw-bg-opacity:1;background-color:rgba(244, 67, 54, var(--tw-bg-opacity))}\n.hover\\:bg-white:hover{--tw-bg-opacity:1;background-color:rgba(255, 255, 255, var(--tw-bg-opacity))}\n.hover\\:bg-opacity-20:hover{--tw-bg-opacity:0.2}\n.hover\\:text-gray-900:hover{--tw-text-opacity:1;color:rgba(33, 33, 33, var(--tw-text-opacity))}\n.hover\\:text-blue-gray-800:hover{--tw-text-opacity:1;color:rgba(55, 71, 79, var(--tw-text-opacity))}\n.hover\\:text-blue-gray-700:hover{--tw-text-opacity:1;color:rgba(69, 90, 100, var(--tw-text-opacity))}\n.hover\\:text-gray-700:hover{--tw-text-opacity:1;color:rgba(97, 97, 97, var(--tw-text-opacity))}\n.hover\\:text-brown-700:hover{--tw-text-opacity:1;color:rgba(93, 64, 55, var(--tw-text-opacity))}\n.hover\\:text-deep-orange-700:hover{--tw-text-opacity:1;color:rgba(230, 74, 25, var(--tw-text-opacity))}\n.hover\\:text-orange-700:hover{--tw-text-opacity:1;color:rgba(245, 124, 0, var(--tw-text-opacity))}\n.hover\\:text-amber-700:hover{--tw-text-opacity:1;color:rgba(255, 160, 0, var(--tw-text-opacity))}\n.hover\\:text-yellow-700:hover{--tw-text-opacity:1;color:rgba(251, 192, 45, var(--tw-text-opacity))}\n.hover\\:text-lime-700:hover{--tw-text-opacity:1;color:rgba(175, 180, 43, var(--tw-text-opacity))}\n.hover\\:text-light-green-700:hover{--tw-text-opacity:1;color:rgba(104, 159, 56, var(--tw-text-opacity))}\n.hover\\:text-green-700:hover{--tw-text-opacity:1;color:rgba(56, 142, 60, var(--tw-text-opacity))}\n.hover\\:text-teal-700:hover{--tw-text-opacity:1;color:rgba(0, 121, 107, var(--tw-text-opacity))}\n.hover\\:text-cyan-700:hover{--tw-text-opacity:1;color:rgba(0, 151, 167, var(--tw-text-opacity))}\n.hover\\:text-light-blue-700:hover{--tw-text-opacity:1;color:rgba(2, 136, 209, var(--tw-text-opacity))}\n.hover\\:text-blue-700:hover{--tw-text-opacity:1;color:rgba(25, 118, 210, var(--tw-text-opacity))}\n.hover\\:text-indigo-700:hover{--tw-text-opacity:1;color:rgba(48, 63, 159, var(--tw-text-opacity))}\n.hover\\:text-deep-purple-700:hover{--tw-text-opacity:1;color:rgba(81, 45, 168, var(--tw-text-opacity))}\n.hover\\:text-purple-700:hover{--tw-text-opacity:1;color:rgba(123, 31, 162, var(--tw-text-opacity))}\n.hover\\:text-pink-700:hover{--tw-text-opacity:1;color:rgba(194, 24, 91, var(--tw-text-opacity))}\n.hover\\:text-red-700:hover{--tw-text-opacity:1;color:rgba(211, 47, 47, var(--tw-text-opacity))}\n.hover\\:text-white:hover{--tw-text-opacity:1;color:rgba(255, 255, 255, var(--tw-text-opacity))}\n.hover\\:shadow-lg-blue-gray:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(69, 90, 100, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-gray:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(97, 97, 97, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-brown:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(93, 64, 55, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-deep-orange:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(230, 74, 25, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-orange:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(245, 122, 0, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-amber:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(255, 160, 0, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-yellow:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(251, 192, 45, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-lime:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(175, 180, 43, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-light-green:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(104, 159, 56, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-green:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(56, 142, 60, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-teal:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(0, 121, 107, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-cyan:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(0, 151, 167, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-light-blue:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(2, 136, 209, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-blue:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(25, 118, 210, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-indigo:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(48, 63, 159, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-deep-purple:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(81, 45, 168, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-purple:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(123, 31, 162, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-pink:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(194, 24, 91, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-lg-red:hover{--tw-shadow:0 12px 22px -5px rgba(0, 0, 0, 0.12), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 13px 24px -11px rgba(211, 47, 47, 0.6);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-blue-gray:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(96, 125, 139, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-gray:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(158, 158, 158, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-brown:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(121, 85, 72, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-deep-orange:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 87, 36, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-orange:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 152, 0, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-amber:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 193, 7, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-yellow:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(255, 235, 59, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-lime:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(205, 220, 57, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-light-green:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(139, 195, 74, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-green:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(76, 175, 80, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-teal:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(0, 150, 136, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-cyan:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(0, 188, 212, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-light-blue:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(3, 169, 244, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-blue:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(33, 150, 243, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-indigo:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(63, 81, 181, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-deep-purple:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(103, 58, 183, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-purple:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(156, 39, 176, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-pink:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(233, 30, 99, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.hover\\:shadow-md-red:hover{--tw-shadow:0 6px 12px -3px rgba(0, 0, 0, 0.1), 0 4px 5px -2px rgba(0, 0, 0, 0.05), 0 2px 5px 0 rgba(244, 67, 54, 0.2);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.focus\\:border-2:focus{border-width:2px}\n.focus\\:border-blue-gray-500:focus{--tw-border-opacity:1;border-color:rgba(96, 125, 139, var(--tw-border-opacity))}\n.focus\\:border-gray-500:focus{--tw-border-opacity:1;border-color:rgba(158, 158, 158, var(--tw-border-opacity))}\n.focus\\:border-brown-500:focus{--tw-border-opacity:1;border-color:rgba(121, 85, 72, var(--tw-border-opacity))}\n.focus\\:border-deep-orange-500:focus{--tw-border-opacity:1;border-color:rgba(255, 87, 34, var(--tw-border-opacity))}\n.focus\\:border-orange-500:focus{--tw-border-opacity:1;border-color:rgba(255, 152, 0, var(--tw-border-opacity))}\n.focus\\:border-amber-500:focus{--tw-border-opacity:1;border-color:rgba(255, 193, 7, var(--tw-border-opacity))}\n.focus\\:border-yellow-600:focus{--tw-border-opacity:1;border-color:rgba(253, 216, 53, var(--tw-border-opacity))}\n.focus\\:border-lime-500:focus{--tw-border-opacity:1;border-color:rgba(205, 220, 57, var(--tw-border-opacity))}\n.focus\\:border-light-green-500:focus{--tw-border-opacity:1;border-color:rgba(139, 195, 74, var(--tw-border-opacity))}\n.focus\\:border-green-500:focus{--tw-border-opacity:1;border-color:rgba(76, 175, 80, var(--tw-border-opacity))}\n.focus\\:border-teal-500:focus{--tw-border-opacity:1;border-color:rgba(0, 150, 136, var(--tw-border-opacity))}\n.focus\\:border-cyan-500:focus{--tw-border-opacity:1;border-color:rgba(0, 188, 212, var(--tw-border-opacity))}\n.focus\\:border-light-blue-500:focus{--tw-border-opacity:1;border-color:rgba(3, 169, 244, var(--tw-border-opacity))}\n.focus\\:border-blue-500:focus{--tw-border-opacity:1;border-color:rgba(33, 150, 243, var(--tw-border-opacity))}\n.focus\\:border-indigo-500:focus{--tw-border-opacity:1;border-color:rgba(63, 81, 181, var(--tw-border-opacity))}\n.focus\\:border-deep-purple-500:focus{--tw-border-opacity:1;border-color:rgba(103, 58, 183, var(--tw-border-opacity))}\n.focus\\:border-purple-500:focus{--tw-border-opacity:1;border-color:rgba(156, 39, 176, var(--tw-border-opacity))}\n.focus\\:border-pink-500:focus{--tw-border-opacity:1;border-color:rgba(233, 30, 99, var(--tw-border-opacity))}\n.focus\\:border-red-500:focus{--tw-border-opacity:1;border-color:rgba(244, 67, 54, var(--tw-border-opacity))}\n.focus\\:bg-blue-gray-400:focus{--tw-bg-opacity:1;background-color:rgba(120, 144, 156, var(--tw-bg-opacity))}\n.focus\\:bg-gray-400:focus{--tw-bg-opacity:1;background-color:rgba(189, 189, 189, var(--tw-bg-opacity))}\n.focus\\:bg-brown-400:focus{--tw-bg-opacity:1;background-color:rgba(141, 110, 99, var(--tw-bg-opacity))}\n.focus\\:bg-deep-orange-400:focus{--tw-bg-opacity:1;background-color:rgba(255, 112, 67, var(--tw-bg-opacity))}\n.focus\\:bg-orange-400:focus{--tw-bg-opacity:1;background-color:rgba(255, 167, 38, var(--tw-bg-opacity))}\n.focus\\:bg-amber-400:focus{--tw-bg-opacity:1;background-color:rgba(255, 202, 40, var(--tw-bg-opacity))}\n.focus\\:bg-yellow-500:focus{--tw-bg-opacity:1;background-color:rgba(255, 235, 59, var(--tw-bg-opacity))}\n.focus\\:bg-lime-400:focus{--tw-bg-opacity:1;background-color:rgba(212, 225, 87, var(--tw-bg-opacity))}\n.focus\\:bg-light-green-400:focus{--tw-bg-opacity:1;background-color:rgba(156, 204, 101, var(--tw-bg-opacity))}\n.focus\\:bg-green-400:focus{--tw-bg-opacity:1;background-color:rgba(102, 187, 106, var(--tw-bg-opacity))}\n.focus\\:bg-teal-400:focus{--tw-bg-opacity:1;background-color:rgba(38, 166, 154, var(--tw-bg-opacity))}\n.focus\\:bg-cyan-400:focus{--tw-bg-opacity:1;background-color:rgba(38, 198, 218, var(--tw-bg-opacity))}\n.focus\\:bg-light-blue-400:focus{--tw-bg-opacity:1;background-color:rgba(41, 182, 246, var(--tw-bg-opacity))}\n.focus\\:bg-blue-400:focus{--tw-bg-opacity:1;background-color:rgba(66, 165, 245, var(--tw-bg-opacity))}\n.focus\\:bg-indigo-400:focus{--tw-bg-opacity:1;background-color:rgba(92, 107, 192, var(--tw-bg-opacity))}\n.focus\\:bg-deep-purple-400:focus{--tw-bg-opacity:1;background-color:rgba(126, 87, 194, var(--tw-bg-opacity))}\n.focus\\:bg-purple-400:focus{--tw-bg-opacity:1;background-color:rgba(171, 71, 188, var(--tw-bg-opacity))}\n.focus\\:bg-pink-400:focus{--tw-bg-opacity:1;background-color:rgba(236, 64, 122, var(--tw-bg-opacity))}\n.focus\\:bg-red-400:focus{--tw-bg-opacity:1;background-color:rgba(239, 83, 80, var(--tw-bg-opacity))}\n.focus\\:bg-gray-500:focus{--tw-bg-opacity:1;background-color:rgba(158, 158, 158, var(--tw-bg-opacity))}\n.focus\\:bg-opacity-20:focus{--tw-bg-opacity:0.2}\n.focus\\:text-gray-800:focus{--tw-text-opacity:1;color:rgba(66, 66, 66, var(--tw-text-opacity))}\n.focus\\:shadow-none:focus{--tw-shadow:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}\n.focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}\n.focus\\:ring-0:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)}\n.active\\:bg-blue-gray-800:active{--tw-bg-opacity:1;background-color:rgba(55, 71, 79, var(--tw-bg-opacity))}\n.active\\:bg-gray-800:active{--tw-bg-opacity:1;background-color:rgba(66, 66, 66, var(--tw-bg-opacity))}\n.active\\:bg-brown-800:active{--tw-bg-opacity:1;background-color:rgba(78, 52, 46, var(--tw-bg-opacity))}\n.active\\:bg-deep-orange-800:active{--tw-bg-opacity:1;background-color:rgba(216, 67, 21, var(--tw-bg-opacity))}\n.active\\:bg-orange-800:active{--tw-bg-opacity:1;background-color:rgba(239, 108, 0, var(--tw-bg-opacity))}\n.active\\:bg-amber-800:active{--tw-bg-opacity:1;background-color:rgba(255, 143, 0, var(--tw-bg-opacity))}\n.active\\:bg-yellow-800:active{--tw-bg-opacity:1;background-color:rgba(249, 168, 37, var(--tw-bg-opacity))}\n.active\\:bg-lime-800:active{--tw-bg-opacity:1;background-color:rgba(158, 157, 36, var(--tw-bg-opacity))}\n.active\\:bg-light-green-800:active{--tw-bg-opacity:1;background-color:rgba(85, 139, 47, var(--tw-bg-opacity))}\n.active\\:bg-green-800:active{--tw-bg-opacity:1;background-color:rgba(46, 125, 50, var(--tw-bg-opacity))}\n.active\\:bg-teal-800:active{--tw-bg-opacity:1;background-color:rgba(0, 105, 92, var(--tw-bg-opacity))}\n.active\\:bg-cyan-800:active{--tw-bg-opacity:1;background-color:rgba(0, 131, 143, var(--tw-bg-opacity))}\n.active\\:bg-light-blue-800:active{--tw-bg-opacity:1;background-color:rgba(2, 119, 189, var(--tw-bg-opacity))}\n.active\\:bg-blue-800:active{--tw-bg-opacity:1;background-color:rgba(21, 101, 192, var(--tw-bg-opacity))}\n.active\\:bg-indigo-800:active{--tw-bg-opacity:1;background-color:rgba(40, 53, 147, var(--tw-bg-opacity))}\n.active\\:bg-deep-purple-800:active{--tw-bg-opacity:1;background-color:rgba(69, 39, 160, var(--tw-bg-opacity))}\n.active\\:bg-purple-800:active{--tw-bg-opacity:1;background-color:rgba(106, 27, 154, var(--tw-bg-opacity))}\n.active\\:bg-pink-800:active{--tw-bg-opacity:1;background-color:rgba(173, 20, 87, var(--tw-bg-opacity))}\n.active\\:bg-red-800:active{--tw-bg-opacity:1;background-color:rgba(198, 40, 40, var(--tw-bg-opacity))}\n.active\\:bg-blue-gray-100:active{--tw-bg-opacity:1;background-color:rgba(207, 216, 220, var(--tw-bg-opacity))}\n.active\\:bg-gray-100:active{--tw-bg-opacity:1;background-color:rgba(245, 245, 245, var(--tw-bg-opacity))}\n.active\\:bg-brown-100:active{--tw-bg-opacity:1;background-color:rgba(215, 204, 200, var(--tw-bg-opacity))}\n.active\\:bg-deep-orange-100:active{--tw-bg-opacity:1;background-color:rgba(255, 204, 188, var(--tw-bg-opacity))}\n.active\\:bg-orange-100:active{--tw-bg-opacity:1;background-color:rgba(255, 224, 178, var(--tw-bg-opacity))}\n.active\\:bg-amber-100:active{--tw-bg-opacity:1;background-color:rgba(255, 236, 179, var(--tw-bg-opacity))}\n.active\\:bg-yellow-100:active{--tw-bg-opacity:1;background-color:rgba(255, 249, 196, var(--tw-bg-opacity))}\n.active\\:bg-lime-100:active{--tw-bg-opacity:1;background-color:rgba(240, 244, 195, var(--tw-bg-opacity))}\n.active\\:bg-light-green-100:active{--tw-bg-opacity:1;background-color:rgba(220, 237, 200, var(--tw-bg-opacity))}\n.active\\:bg-green-100:active{--tw-bg-opacity:1;background-color:rgba(200, 230, 201, var(--tw-bg-opacity))}\n.active\\:bg-teal-100:active{--tw-bg-opacity:1;background-color:rgba(178, 223, 219, var(--tw-bg-opacity))}\n.active\\:bg-cyan-100:active{--tw-bg-opacity:1;background-color:rgba(178, 235, 242, var(--tw-bg-opacity))}\n.active\\:bg-light-blue-100:active{--tw-bg-opacity:1;background-color:rgba(179, 229, 252, var(--tw-bg-opacity))}\n.active\\:bg-blue-100:active{--tw-bg-opacity:1;background-color:rgba(187, 222, 251, var(--tw-bg-opacity))}\n.active\\:bg-indigo-100:active{--tw-bg-opacity:1;background-color:rgba(197, 202, 233, var(--tw-bg-opacity))}\n.active\\:bg-deep-purple-100:active{--tw-bg-opacity:1;background-color:rgba(209, 196, 233, var(--tw-bg-opacity))}\n.active\\:bg-purple-100:active{--tw-bg-opacity:1;background-color:rgba(225, 190, 231, var(--tw-bg-opacity))}\n.active\\:bg-pink-100:active{--tw-bg-opacity:1;background-color:rgba(248, 187, 208, var(--tw-bg-opacity))}\n.active\\:bg-red-100:active{--tw-bg-opacity:1;background-color:rgba(255, 205, 210, var(--tw-bg-opacity))}\n.active\\:bg-gray-500:active{--tw-bg-opacity:1;background-color:rgba(158, 158, 158, var(--tw-bg-opacity))}\n.active\\:bg-opacity-40:active{--tw-bg-opacity:0.4}\n@media (min-width: 640px){\n.sm\\:left-auto{left:auto}\n.sm\\:w-full{width:100%}}\n@media (min-width: 768px){\n.md\\:mt-40{margin-top:10rem}\n.md\\:mt-0{margin-top:0px}\n.md\\:mt-64{margin-top:16rem}\n.md\\:mb-0{margin-bottom:0px}\n.md\\:w-9\\/12{width:75%}\n.md\\:w-48{width:12rem}\n.md\\:w-6\\/12{width:50%}\n.md\\:w-4\\/12{width:33.333333%}\n.md\\:w-5\\/12{width:41.666667%}\n.md\\:w-8\\/12{width:66.666667%}\n.md\\:flex-row{flex-direction:row}\n.md\\:justify-start{justify-content:flex-start}\n.md\\:justify-between{justify-content:space-between}\n.md\\:gap-6{gap:1.5rem}\n.md\\:px-8{padding-left:2rem;padding-right:2rem}\n.md\\:px-4{padding-left:1rem;padding-right:1rem}\n.md\\:pr-12{padding-right:3rem}\n.md\\:pt-0{padding-top:0px}}\n@media (min-width: 1024px){\n.lg\\:static{position:static}\n.lg\\:mr-5{margin-right:1.25rem}\n.lg\\:ml-5{margin-left:1.25rem}\n.lg\\:mt-16{margin-top:4rem}\n.lg\\:block{display:block}\n.lg\\:flex{display:flex}\n.lg\\:hidden{display:none}\n.lg\\:w-4\\/12{width:33.333333%}\n.lg\\:w-6\\/12{width:50%}\n.lg\\:w-8\\/12{width:66.666667%}\n.lg\\:w-60{width:15rem}\n.lg\\:w-auto{width:auto}\n.lg\\:flex-row{flex-direction:row}\n.lg\\:items-center{align-items:center}\n.lg\\:justify-between{justify-content:space-between}\n.lg\\:justify-start{justify-content:flex-start}\n.lg\\:px-36{padding-left:9rem;padding-right:9rem}\n.lg\\:text-left{text-align:left}}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[2]!./styles/globals.css":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[6].use[2]!./styles/globals.css ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/next/dist/compiled/css-loader/api.js */ "./node_modules/next/dist/compiled/css-loader/api.js");
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "html,\nbody {\n  padding: 0;\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\n    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n}\n\na {\n  color: inherit;\n  text-decoration: none;\n}\n\n* {\n  box-sizing: border-box;\n}\n\n/*! tailwindcss v2.2.7 | MIT License | https://tailwindcss.com */\n\n/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */\n\n/*\nDocument\n========\n*/\n\n/**\nUse a better box model (opinionated).\n*/\n\n*,\n::before,\n::after {\n\tbox-sizing: border-box;\n}\n\n/**\nUse a more readable tab size (opinionated).\n*/\n\nhtml {\n\t-moz-tab-size: 4;\n\t-o-tab-size: 4;\n\t   tab-size: 4;\n}\n\n/**\n1. Correct the line height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n*/\n\nhtml {\n\tline-height: 1.15; /* 1 */\n\t-webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/*\nSections\n========\n*/\n\n/**\nRemove the margin in all browsers.\n*/\n\nbody {\n\tmargin: 0;\n}\n\n/**\nImprove consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n*/\n\nbody {\n\tfont-family:\n\t\tsystem-ui,\n\t\t-apple-system, /* Firefox supports this but not yet `system-ui` */\n\t\t'Segoe UI',\n\t\tRoboto,\n\t\tHelvetica,\n\t\tArial,\n\t\tsans-serif,\n\t\t'Apple Color Emoji',\n\t\t'Segoe UI Emoji';\n}\n\n/*\nGrouping content\n================\n*/\n\n/**\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n*/\n\nhr {\n\theight: 0; /* 1 */\n\tcolor: inherit; /* 2 */\n}\n\n/*\nText-level semantics\n====================\n*/\n\n/**\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\nabbr[title] {\n\t-webkit-text-decoration: underline dotted;\n\t        text-decoration: underline dotted;\n}\n\n/**\nAdd the correct font weight in Edge and Safari.\n*/\n\nb,\nstrong {\n\tfont-weight: bolder;\n}\n\n/**\n1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n2. Correct the odd 'em' font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n\tfont-family:\n\t\tui-monospace,\n\t\tSFMono-Regular,\n\t\tConsolas,\n\t\t'Liberation Mono',\n\t\tMenlo,\n\t\tmonospace; /* 1 */\n\tfont-size: 1em; /* 2 */\n}\n\n/**\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n\tfont-size: 80%;\n}\n\n/**\nPrevent 'sub' and 'sup' elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n\tfont-size: 75%;\n\tline-height: 0;\n\tposition: relative;\n\tvertical-align: baseline;\n}\n\nsub {\n\tbottom: -0.25em;\n}\n\nsup {\n\ttop: -0.5em;\n}\n\n/*\nTabular data\n============\n*/\n\n/**\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n*/\n\ntable {\n\ttext-indent: 0; /* 1 */\n\tborder-color: inherit; /* 2 */\n}\n\n/*\nForms\n=====\n*/\n\n/**\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n\tfont-family: inherit; /* 1 */\n\tfont-size: 100%; /* 1 */\n\tline-height: 1.15; /* 1 */\n\tmargin: 0; /* 2 */\n}\n\n/**\nRemove the inheritance of text transform in Edge and Firefox.\n1. Remove the inheritance of text transform in Firefox.\n*/\n\nbutton,\nselect { /* 1 */\n\ttext-transform: none;\n}\n\n/**\nCorrect the inability to style clickable types in iOS and Safari.\n*/\n\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n\t-webkit-appearance: button;\n}\n\n/**\nRemove the inner border and padding in Firefox.\n*/\n\n::-moz-focus-inner {\n\tborder-style: none;\n\tpadding: 0;\n}\n\n/**\nRestore the focus styles unset by the previous rule.\n*/\n\n:-moz-focusring {\n\toutline: 1px dotted ButtonText;\n}\n\n/**\nRemove the additional ':invalid' styles in Firefox.\nSee: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737\n*/\n\n:-moz-ui-invalid {\n\tbox-shadow: none;\n}\n\n/**\nRemove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.\n*/\n\nlegend {\n\tpadding: 0;\n}\n\n/**\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n\tvertical-align: baseline;\n}\n\n/**\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n\theight: auto;\n}\n\n/**\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type='search'] {\n\t-webkit-appearance: textfield; /* 1 */\n\toutline-offset: -2px; /* 2 */\n}\n\n/**\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n\t-webkit-appearance: none;\n}\n\n/**\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to 'inherit' in Safari.\n*/\n\n::-webkit-file-upload-button {\n\t-webkit-appearance: button; /* 1 */\n\tfont: inherit; /* 2 */\n}\n\n/*\nInteractive\n===========\n*/\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n\tdisplay: list-item;\n}\n\n/**\n * Manually forked from SUIT CSS Base: https://github.com/suitcss/base\n * A thin layer on top of normalize.css that provides a starting point more\n * suitable for web applications.\n */\n\n/**\n * Removes the default spacing and border for appropriate elements.\n */\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nbutton {\n  background-color: transparent;\n  background-image: none;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nol,\nul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/**\n * Tailwind custom reset styles\n */\n\n/**\n * 1. Use the user's configured `sans` font-family (with Tailwind's default\n *    sans-serif font stack as a fallback) as a sane default.\n * 2. Use Tailwind's default \"normal\" line-height so the user isn't forced\n *    to override it to ensure consistency even when using the default theme.\n */\n\nhtml {\n  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"; /* 1 */\n  line-height: 1.5; /* 2 */\n}\n\n/**\n * Inherit font-family and line-height from `html` so users can set them as\n * a class directly on the `html` element.\n */\n\nbody {\n  font-family: inherit;\n  line-height: inherit;\n}\n\n/**\n * 1. Prevent padding and border from affecting element width.\n *\n *    We used to set this in the html element and inherit from\n *    the parent element for everything else. This caused issues\n *    in shadow-dom-enhanced elements like <details> where the content\n *    is wrapped by a div with box-sizing set to `content-box`.\n *\n *    https://github.com/mozdevs/cssremedy/issues/4\n *\n *\n * 2. Allow adding a border to an element by just adding a border-width.\n *\n *    By default, the way the browser specifies that an element should have no\n *    border is by setting it's border-style to `none` in the user-agent\n *    stylesheet.\n *\n *    In order to easily add borders to elements by just setting the `border-width`\n *    property, we change the default border-style for all elements to `solid`, and\n *    use border-width to hide them instead. This way our `border` utilities only\n *    need to set the `border-width` property instead of the entire `border`\n *    shorthand, making our border utilities much more straightforward to compose.\n *\n *    https://github.com/tailwindcss/tailwindcss/pull/116\n */\n\n*,\n::before,\n::after {\n  box-sizing: border-box; /* 1 */\n  border-width: 0; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: currentColor; /* 2 */\n}\n\n/*\n * Ensure horizontal rules are visible by default\n */\n\nhr {\n  border-top-width: 1px;\n}\n\n/**\n * Undo the `border-style: none` reset that Normalize applies to images so that\n * our `border-{width}` utilities have the expected effect.\n *\n * The Normalize reset is unnecessary for us since we default the border-width\n * to 0 on all elements.\n *\n * https://github.com/tailwindcss/tailwindcss/issues/362\n */\n\nimg {\n  border-style: solid;\n}\n\ntextarea {\n  resize: vertical;\n}\n\ninput::-moz-placeholder, textarea::-moz-placeholder {\n  opacity: 1;\n  color: #9ca3af;\n}\n\ninput:-ms-input-placeholder, textarea:-ms-input-placeholder {\n  opacity: 1;\n  color: #9ca3af;\n}\n\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1;\n  color: #9ca3af;\n}\n\nbutton,\n[role=\"button\"] {\n  cursor: pointer;\n}\n\ntable {\n  border-collapse: collapse;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/**\n * Reset links to optimize for opt-in styling instead of\n * opt-out.\n */\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\n/**\n * Reset form element properties that are easy to forget to\n * style explicitly so you don't inadvertently introduce\n * styles that deviate from your design system. These styles\n * supplement a partial reset that is already applied by\n * normalize.css.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  padding: 0;\n  line-height: inherit;\n  color: inherit;\n}\n\n/**\n * Use the configured 'mono' font family for elements that\n * are expected to be rendered with a monospace font, falling\n * back to the system monospace stack if there is no configured\n * 'mono' font family.\n */\n\npre,\ncode,\nkbd,\nsamp {\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n}\n\n/**\n * 1. Make replaced elements `display: block` by default as that's\n *    the behavior you want almost all of the time. Inspired by\n *    CSS Remedy, with `svg` added as well.\n *\n *    https://github.com/mozdevs/cssremedy/issues/14\n * \n * 2. Add `vertical-align: middle` to align replaced elements more\n *    sensibly by default when overriding `display` by adding a\n *    utility like `inline`.\n *\n *    This can trigger a poorly considered linting error in some\n *    tools but is included by design.\n * \n *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210\n */\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block; /* 1 */\n  vertical-align: middle; /* 2 */\n}\n\n/**\n * Constrain images and videos to the parent width and preserve\n * their intrinsic aspect ratio.\n *\n * https://github.com/mozdevs/cssremedy/issues/14\n */\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\n/**\n * Ensure the default browser behavior of the `hidden` attribute.\n */\n\n[hidden] {\n  display: none;\n}\n\n*, ::before, ::after {\n  --tw-translate-x: 0;\n  --tw-translate-y: 0;\n  --tw-rotate: 0;\n  --tw-skew-x: 0;\n  --tw-skew-y: 0;\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  --tw-transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n}\n.absolute {\n  position: absolute;\n}\n.top-4 {\n  top: 1rem;\n}\n.right-4 {\n  right: 1rem;\n}\n.left-8 {\n  left: 2rem;\n}\n.top-\\[52px\\] {\n  top: 52px;\n}\n.left-\\[10px\\] {\n  left: 10px;\n}\n.z-10 {\n  z-index: 10;\n}\n.mr-4 {\n  margin-right: 1rem;\n}\n.mt-4 {\n  margin-top: 1rem;\n}\n.mb-8 {\n  margin-bottom: 2rem;\n}\n.block {\n  display: block;\n}\n.flex {\n  display: flex;\n}\n.h-screen {\n  height: 100vh;\n}\n.h-\\[50px\\] {\n  height: 50px;\n}\n.h-\\[300px\\] {\n  height: 300px;\n}\n.w-full {\n  width: 100%;\n}\n.w-\\[300px\\] {\n  width: 300px;\n}\n.w-\\[290px\\] {\n  width: 290px;\n}\n.w-\\[240px\\] {\n  width: 240px;\n}\n.w-\\[80\\%\\] {\n  width: 80%;\n}\n.w-\\[400px\\] {\n  width: 400px;\n}\n.scale-75 {\n  --tw-scale-x: .75;\n  --tw-scale-y: .75;\n  transform: var(--tw-transform);\n}\n.cursor-pointer {\n  cursor: pointer;\n}\n.flex-col {\n  flex-direction: column;\n}\n.items-center {\n  align-items: center;\n}\n.justify-center {\n  justify-content: center;\n}\n.justify-between {\n  justify-content: space-between;\n}\n.space-x-4 > :not([hidden]) ~ :not([hidden]) {\n  --tw-space-x-reverse: 0;\n  margin-right: calc(1rem * var(--tw-space-x-reverse));\n  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));\n}\n.space-y-5 > :not([hidden]) ~ :not([hidden]) {\n  --tw-space-y-reverse: 0;\n  margin-top: calc(1.25rem * calc(1 - var(--tw-space-y-reverse)));\n  margin-bottom: calc(1.25rem * var(--tw-space-y-reverse));\n}\n.rounded {\n  border-radius: 0.25rem;\n}\n.bg-gray-300 {\n  --tw-bg-opacity: 1;\n  background-color: rgba(209, 213, 219, var(--tw-bg-opacity));\n}\n.bg-pink-400 {\n  --tw-bg-opacity: 1;\n  background-color: rgba(244, 114, 182, var(--tw-bg-opacity));\n}\n.bg-white {\n  --tw-bg-opacity: 1;\n  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));\n}\n.bg-blue-400 {\n  --tw-bg-opacity: 1;\n  background-color: rgba(96, 165, 250, var(--tw-bg-opacity));\n}\n.p-4 {\n  padding: 1rem;\n}\n.p-2 {\n  padding: 0.5rem;\n}\n.px-4 {\n  padding-left: 1rem;\n  padding-right: 1rem;\n}\n.text-3xl {\n  font-size: 1.875rem;\n  line-height: 2.25rem;\n}\n.text-blue-400 {\n  --tw-text-opacity: 1;\n  color: rgba(96, 165, 250, var(--tw-text-opacity));\n}\n.text-gray-700 {\n  --tw-text-opacity: 1;\n  color: rgba(55, 65, 81, var(--tw-text-opacity));\n}\n.hover\\:scale-100:hover {\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  transform: var(--tw-transform);\n}\n.hover\\:bg-blue-300:hover {\n  --tw-bg-opacity: 1;\n  background-color: rgba(147, 197, 253, var(--tw-bg-opacity));\n}\n", "",{"version":3,"sources":["webpack://styles/globals.css","webpack://styles/%3Cinput%20css%2019cnqm%3E","webpack://styles/%3Cinput%20css%20eDOyZN%3E","<no source>"],"names":[],"mappings":"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","sourcesContent":["html,\nbody {\n  padding: 0;\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\n    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n}\n\na {\n  color: inherit;\n  text-decoration: none;\n}\n\n* {\n  box-sizing: border-box;\n}\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n","/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */\n\n/*\nDocument\n========\n*/\n\n/**\nUse a better box model (opinionated).\n*/\n\n*,\n::before,\n::after {\n\tbox-sizing: border-box;\n}\n\n/**\nUse a more readable tab size (opinionated).\n*/\n\nhtml {\n\t-moz-tab-size: 4;\n\ttab-size: 4;\n}\n\n/**\n1. Correct the line height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n*/\n\nhtml {\n\tline-height: 1.15; /* 1 */\n\t-webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/*\nSections\n========\n*/\n\n/**\nRemove the margin in all browsers.\n*/\n\nbody {\n\tmargin: 0;\n}\n\n/**\nImprove consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n*/\n\nbody {\n\tfont-family:\n\t\tsystem-ui,\n\t\t-apple-system, /* Firefox supports this but not yet `system-ui` */\n\t\t'Segoe UI',\n\t\tRoboto,\n\t\tHelvetica,\n\t\tArial,\n\t\tsans-serif,\n\t\t'Apple Color Emoji',\n\t\t'Segoe UI Emoji';\n}\n\n/*\nGrouping content\n================\n*/\n\n/**\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n*/\n\nhr {\n\theight: 0; /* 1 */\n\tcolor: inherit; /* 2 */\n}\n\n/*\nText-level semantics\n====================\n*/\n\n/**\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\nabbr[title] {\n\ttext-decoration: underline dotted;\n}\n\n/**\nAdd the correct font weight in Edge and Safari.\n*/\n\nb,\nstrong {\n\tfont-weight: bolder;\n}\n\n/**\n1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n2. Correct the odd 'em' font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n\tfont-family:\n\t\tui-monospace,\n\t\tSFMono-Regular,\n\t\tConsolas,\n\t\t'Liberation Mono',\n\t\tMenlo,\n\t\tmonospace; /* 1 */\n\tfont-size: 1em; /* 2 */\n}\n\n/**\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n\tfont-size: 80%;\n}\n\n/**\nPrevent 'sub' and 'sup' elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n\tfont-size: 75%;\n\tline-height: 0;\n\tposition: relative;\n\tvertical-align: baseline;\n}\n\nsub {\n\tbottom: -0.25em;\n}\n\nsup {\n\ttop: -0.5em;\n}\n\n/*\nTabular data\n============\n*/\n\n/**\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n*/\n\ntable {\n\ttext-indent: 0; /* 1 */\n\tborder-color: inherit; /* 2 */\n}\n\n/*\nForms\n=====\n*/\n\n/**\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n\tfont-family: inherit; /* 1 */\n\tfont-size: 100%; /* 1 */\n\tline-height: 1.15; /* 1 */\n\tmargin: 0; /* 2 */\n}\n\n/**\nRemove the inheritance of text transform in Edge and Firefox.\n1. Remove the inheritance of text transform in Firefox.\n*/\n\nbutton,\nselect { /* 1 */\n\ttext-transform: none;\n}\n\n/**\nCorrect the inability to style clickable types in iOS and Safari.\n*/\n\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n\t-webkit-appearance: button;\n}\n\n/**\nRemove the inner border and padding in Firefox.\n*/\n\n::-moz-focus-inner {\n\tborder-style: none;\n\tpadding: 0;\n}\n\n/**\nRestore the focus styles unset by the previous rule.\n*/\n\n:-moz-focusring {\n\toutline: 1px dotted ButtonText;\n}\n\n/**\nRemove the additional ':invalid' styles in Firefox.\nSee: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737\n*/\n\n:-moz-ui-invalid {\n\tbox-shadow: none;\n}\n\n/**\nRemove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.\n*/\n\nlegend {\n\tpadding: 0;\n}\n\n/**\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n\tvertical-align: baseline;\n}\n\n/**\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n\theight: auto;\n}\n\n/**\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type='search'] {\n\t-webkit-appearance: textfield; /* 1 */\n\toutline-offset: -2px; /* 2 */\n}\n\n/**\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n\t-webkit-appearance: none;\n}\n\n/**\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to 'inherit' in Safari.\n*/\n\n::-webkit-file-upload-button {\n\t-webkit-appearance: button; /* 1 */\n\tfont: inherit; /* 2 */\n}\n\n/*\nInteractive\n===========\n*/\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n\tdisplay: list-item;\n}\n","/**\n * Manually forked from SUIT CSS Base: https://github.com/suitcss/base\n * A thin layer on top of normalize.css that provides a starting point more\n * suitable for web applications.\n */\n\n/**\n * Removes the default spacing and border for appropriate elements.\n */\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nbutton {\n  background-color: transparent;\n  background-image: none;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nol,\nul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/**\n * Tailwind custom reset styles\n */\n\n/**\n * 1. Use the user's configured `sans` font-family (with Tailwind's default\n *    sans-serif font stack as a fallback) as a sane default.\n * 2. Use Tailwind's default \"normal\" line-height so the user isn't forced\n *    to override it to ensure consistency even when using the default theme.\n */\n\nhtml {\n  font-family: theme('fontFamily.sans', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"); /* 1 */\n  line-height: 1.5; /* 2 */\n}\n\n\n/**\n * Inherit font-family and line-height from `html` so users can set them as\n * a class directly on the `html` element.\n */\n\nbody {\n  font-family: inherit;\n  line-height: inherit;\n}\n\n/**\n * 1. Prevent padding and border from affecting element width.\n *\n *    We used to set this in the html element and inherit from\n *    the parent element for everything else. This caused issues\n *    in shadow-dom-enhanced elements like <details> where the content\n *    is wrapped by a div with box-sizing set to `content-box`.\n *\n *    https://github.com/mozdevs/cssremedy/issues/4\n *\n *\n * 2. Allow adding a border to an element by just adding a border-width.\n *\n *    By default, the way the browser specifies that an element should have no\n *    border is by setting it's border-style to `none` in the user-agent\n *    stylesheet.\n *\n *    In order to easily add borders to elements by just setting the `border-width`\n *    property, we change the default border-style for all elements to `solid`, and\n *    use border-width to hide them instead. This way our `border` utilities only\n *    need to set the `border-width` property instead of the entire `border`\n *    shorthand, making our border utilities much more straightforward to compose.\n *\n *    https://github.com/tailwindcss/tailwindcss/pull/116\n */\n\n*,\n::before,\n::after {\n  box-sizing: border-box; /* 1 */\n  border-width: 0; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: currentColor; /* 2 */\n}\n\n/*\n * Ensure horizontal rules are visible by default\n */\n\nhr {\n  border-top-width: 1px;\n}\n\n/**\n * Undo the `border-style: none` reset that Normalize applies to images so that\n * our `border-{width}` utilities have the expected effect.\n *\n * The Normalize reset is unnecessary for us since we default the border-width\n * to 0 on all elements.\n *\n * https://github.com/tailwindcss/tailwindcss/issues/362\n */\n\nimg {\n  border-style: solid;\n}\n\ntextarea {\n  resize: vertical;\n}\n\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1;\n  color: theme('colors.gray.400', #a1a1aa);\n}\n\nbutton,\n[role=\"button\"] {\n  cursor: pointer;\n}\n\ntable {\n  border-collapse: collapse;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/**\n * Reset links to optimize for opt-in styling instead of\n * opt-out.\n */\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\n/**\n * Reset form element properties that are easy to forget to\n * style explicitly so you don't inadvertently introduce\n * styles that deviate from your design system. These styles\n * supplement a partial reset that is already applied by\n * normalize.css.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  padding: 0;\n  line-height: inherit;\n  color: inherit;\n}\n\n/**\n * Use the configured 'mono' font family for elements that\n * are expected to be rendered with a monospace font, falling\n * back to the system monospace stack if there is no configured\n * 'mono' font family.\n */\n\npre,\ncode,\nkbd,\nsamp {\n  font-family: theme('fontFamily.mono', ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace);\n}\n\n/**\n * 1. Make replaced elements `display: block` by default as that's\n *    the behavior you want almost all of the time. Inspired by\n *    CSS Remedy, with `svg` added as well.\n *\n *    https://github.com/mozdevs/cssremedy/issues/14\n * \n * 2. Add `vertical-align: middle` to align replaced elements more\n *    sensibly by default when overriding `display` by adding a\n *    utility like `inline`.\n *\n *    This can trigger a poorly considered linting error in some\n *    tools but is included by design.\n * \n *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210\n */\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block; /* 1 */\n  vertical-align: middle; /* 2 */\n}\n\n/**\n * Constrain images and videos to the parent width and preserve\n * their intrinsic aspect ratio.\n *\n * https://github.com/mozdevs/cssremedy/issues/14\n */\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\n/**\n * Ensure the default browser behavior of the `hidden` attribute.\n */\n\n[hidden] {\n  display: none;\n}\n",null],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _arrayLikeToArray; }
/* harmony export */ });
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _arrayWithoutHoles; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/arrayLikeToArray */ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js");

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return (0,_babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__.default)(arr);
}

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _asyncToGenerator; }
/* harmony export */ });
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _defineProperty; }
/* harmony export */ });
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/iterableToArray.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/esm/iterableToArray.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _iterableToArray; }
/* harmony export */ });
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _nonIterableSpread; }
/* harmony export */ });
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _toConsumableArray; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_arrayWithoutHoles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/arrayWithoutHoles */ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js");
/* harmony import */ var _babel_runtime_helpers_esm_iterableToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/iterableToArray */ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/iterableToArray.js");
/* harmony import */ var _babel_runtime_helpers_esm_unsupportedIterableToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/unsupportedIterableToArray */ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js");
/* harmony import */ var _babel_runtime_helpers_esm_nonIterableSpread__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/nonIterableSpread */ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js");




function _toConsumableArray(arr) {
  return (0,_babel_runtime_helpers_esm_arrayWithoutHoles__WEBPACK_IMPORTED_MODULE_0__.default)(arr) || (0,_babel_runtime_helpers_esm_iterableToArray__WEBPACK_IMPORTED_MODULE_1__.default)(arr) || (0,_babel_runtime_helpers_esm_unsupportedIterableToArray__WEBPACK_IMPORTED_MODULE_2__.default)(arr) || (0,_babel_runtime_helpers_esm_nonIterableSpread__WEBPACK_IMPORTED_MODULE_3__.default)();
}

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ _unsupportedIterableToArray; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/arrayLikeToArray */ "./node_modules/next/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js");

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return (0,_babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__.default)(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0,_babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__.default)(o, minLen);
}

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/***/ (function(module) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning = function() {};

if (true) {
  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");
  var loggedTypeFailures = {};
  var has = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (true) {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
  if (true) {
    loggedTypeFailures = {};
  }
}

module.exports = checkPropTypes;


/***/ }),

/***/ "./node_modules/prop-types/factoryWithTypeCheckers.js":
/*!************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");
var assign = __webpack_require__(/*! object-assign */ "./node_modules/next/dist/build/polyfills/object-assign.js");

var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");
var checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js");

var has = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning = function() {};

if (true) {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (true) {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if ( true && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (true) {
        if (arguments.length > 1) {
          printWarning(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),

/***/ "./node_modules/prop-types/index.js":
/*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (true) {
  var ReactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ "./node_modules/prop-types/factoryWithTypeCheckers.js")(ReactIs.isElement, throwOnDirectAccess);
} else {}


/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/***/ (function(module) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),

/***/ "./node_modules/react-cookie/es6/Cookies.js":
/*!**************************************************!*\
  !*** ./node_modules/react-cookie/es6/Cookies.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var universal_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! universal-cookie */ "./node_modules/universal-cookie/es6/index.js");

/* harmony default export */ __webpack_exports__["default"] = (universal_cookie__WEBPACK_IMPORTED_MODULE_0__.default);


/***/ }),

/***/ "./node_modules/react-cookie/es6/CookiesContext.js":
/*!*********************************************************!*\
  !*** ./node_modules/react-cookie/es6/CookiesContext.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Provider": function() { return /* binding */ Provider; },
/* harmony export */   "Consumer": function() { return /* binding */ Consumer; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Cookies__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Cookies */ "./node_modules/react-cookie/es6/Cookies.js");


var CookiesContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(new _Cookies__WEBPACK_IMPORTED_MODULE_1__.default());
var Provider = CookiesContext.Provider, Consumer = CookiesContext.Consumer;
/* harmony default export */ __webpack_exports__["default"] = (CookiesContext);


/***/ }),

/***/ "./node_modules/react-cookie/es6/CookiesProvider.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-cookie/es6/CookiesProvider.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var universal_cookie__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! universal-cookie */ "./node_modules/universal-cookie/es6/index.js");
/* harmony import */ var _CookiesContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CookiesContext */ "./node_modules/react-cookie/es6/CookiesContext.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



var CookiesProvider = /** @class */ (function (_super) {
    __extends(CookiesProvider, _super);
    function CookiesProvider(props) {
        var _this = _super.call(this, props) || this;
        if (props.cookies) {
            _this.cookies = props.cookies;
        }
        else {
            _this.cookies = new universal_cookie__WEBPACK_IMPORTED_MODULE_1__.default();
        }
        return _this;
    }
    CookiesProvider.prototype.render = function () {
        return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CookiesContext__WEBPACK_IMPORTED_MODULE_2__.Provider, { value: this.cookies }, this.props.children);
    };
    return CookiesProvider;
}(react__WEBPACK_IMPORTED_MODULE_0__.Component));
/* harmony default export */ __webpack_exports__["default"] = (CookiesProvider);


/***/ }),

/***/ "./node_modules/react-cookie/es6/index.js":
/*!************************************************!*\
  !*** ./node_modules/react-cookie/es6/index.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Cookies": function() { return /* reexport safe */ _Cookies__WEBPACK_IMPORTED_MODULE_0__.default; },
/* harmony export */   "CookiesProvider": function() { return /* reexport safe */ _CookiesProvider__WEBPACK_IMPORTED_MODULE_1__.default; },
/* harmony export */   "withCookies": function() { return /* reexport safe */ _withCookies__WEBPACK_IMPORTED_MODULE_2__.default; },
/* harmony export */   "useCookies": function() { return /* reexport safe */ _useCookies__WEBPACK_IMPORTED_MODULE_3__.default; }
/* harmony export */ });
/* harmony import */ var _Cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Cookies */ "./node_modules/react-cookie/es6/Cookies.js");
/* harmony import */ var _CookiesProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CookiesProvider */ "./node_modules/react-cookie/es6/CookiesProvider.js");
/* harmony import */ var _withCookies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./withCookies */ "./node_modules/react-cookie/es6/withCookies.js");
/* harmony import */ var _useCookies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./useCookies */ "./node_modules/react-cookie/es6/useCookies.js");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types */ "./node_modules/react-cookie/es6/types.js");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_types__WEBPACK_IMPORTED_MODULE_4__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _types__WEBPACK_IMPORTED_MODULE_4__) if(["default","Cookies","CookiesProvider","withCookies","useCookies"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _types__WEBPACK_IMPORTED_MODULE_4__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);







/***/ }),

/***/ "./node_modules/react-cookie/es6/types.js":
/*!************************************************!*\
  !*** ./node_modules/react-cookie/es6/types.js ***!
  \************************************************/
/***/ (function() {



/***/ }),

/***/ "./node_modules/react-cookie/es6/useCookies.js":
/*!*****************************************************!*\
  !*** ./node_modules/react-cookie/es6/useCookies.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ useCookies; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _CookiesContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CookiesContext */ "./node_modules/react-cookie/es6/CookiesContext.js");


function useCookies(dependencies) {
    var cookies = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_CookiesContext__WEBPACK_IMPORTED_MODULE_1__.default);
    if (!cookies) {
        throw new Error('Missing <CookiesProvider>');
    }
    var initialCookies = cookies.getAll();
    var _a = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialCookies), allCookies = _a[0], setCookies = _a[1];
    var previousCookiesRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(allCookies);
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(function () {
        function onChange() {
            var newCookies = cookies.getAll();
            if (shouldUpdate(dependencies || null, newCookies, previousCookiesRef.current)) {
                setCookies(newCookies);
            }
            previousCookiesRef.current = newCookies;
        }
        cookies.addChangeListener(onChange);
        return function () {
            cookies.removeChangeListener(onChange);
        };
    }, [cookies]);
    var setCookie = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () { return cookies.set.bind(cookies); }, [cookies]);
    var removeCookie = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () { return cookies.remove.bind(cookies); }, [cookies]);
    return [allCookies, setCookie, removeCookie];
}
function shouldUpdate(dependencies, newCookies, oldCookies) {
    if (!dependencies) {
        return true;
    }
    for (var _i = 0, dependencies_1 = dependencies; _i < dependencies_1.length; _i++) {
        var dependency = dependencies_1[_i];
        if (newCookies[dependency] !== oldCookies[dependency]) {
            return true;
        }
    }
    return false;
}


/***/ }),

/***/ "./node_modules/react-cookie/es6/withCookies.js":
/*!******************************************************!*\
  !*** ./node_modules/react-cookie/es6/withCookies.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ withCookies; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hoist-non-react-statics */ "./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js");
/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _CookiesContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CookiesContext */ "./node_modules/react-cookie/es6/CookiesContext.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};



function withCookies(WrappedComponent) {
    // @ts-ignore
    var name = WrappedComponent.displayName || WrappedComponent.name;
    var CookieWrapper = /** @class */ (function (_super) {
        __extends(CookieWrapper, _super);
        function CookieWrapper() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.onChange = function () {
                // Make sure to update children with new values
                _this.forceUpdate();
            };
            return _this;
        }
        CookieWrapper.prototype.listen = function () {
            this.props.cookies.addChangeListener(this.onChange);
        };
        CookieWrapper.prototype.unlisten = function (cookies) {
            (cookies || this.props.cookies).removeChangeListener(this.onChange);
        };
        CookieWrapper.prototype.componentDidMount = function () {
            this.listen();
        };
        CookieWrapper.prototype.componentDidUpdate = function (prevProps) {
            if (prevProps.cookies !== this.props.cookies) {
                this.unlisten(prevProps.cookies);
                this.listen();
            }
        };
        CookieWrapper.prototype.componentWillUnmount = function () {
            this.unlisten();
        };
        CookieWrapper.prototype.render = function () {
            var _a = this.props, forwardedRef = _a.forwardedRef, cookies = _a.cookies, restProps = __rest(_a, ["forwardedRef", "cookies"]);
            var allCookies = cookies.getAll();
            return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(WrappedComponent, __assign({}, restProps, { ref: forwardedRef, cookies: cookies, allCookies: allCookies })));
        };
        CookieWrapper.displayName = "withCookies(" + name + ")";
        CookieWrapper.WrappedComponent = WrappedComponent;
        return CookieWrapper;
    }(react__WEBPACK_IMPORTED_MODULE_0__.Component));
    var ForwardedComponent = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function (props, ref) {
        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CookiesContext__WEBPACK_IMPORTED_MODULE_2__.Consumer, null, function (cookies) { return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(CookieWrapper, __assign({ cookies: cookies }, props, { forwardedRef: ref }))); }));
    });
    ForwardedComponent.displayName = CookieWrapper.displayName;
    ForwardedComponent.WrappedComponent = CookieWrapper.WrappedComponent;
    return hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_1__(ForwardedComponent, WrappedComponent);
}


/***/ }),

/***/ "./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
exports.isValidElementType = isValidElementType;
exports.typeOf = typeOf;
  })();
}


/***/ }),

/***/ "./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ "./node_modules/react-is/cjs/react-is.development.js");
}


/***/ }),

/***/ "./node_modules/react-redux/es/components/Context.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-redux/es/components/Context.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ReactReduxContext": function() { return /* binding */ ReactReduxContext; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

var ReactReduxContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);

if (true) {
  ReactReduxContext.displayName = 'ReactRedux';
}

/* harmony default export */ __webpack_exports__["default"] = (ReactReduxContext);

/***/ }),

/***/ "./node_modules/react-redux/es/components/Provider.js":
/*!************************************************************!*\
  !*** ./node_modules/react-redux/es/components/Provider.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Context */ "./node_modules/react-redux/es/components/Context.js");
/* harmony import */ var _utils_Subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Subscription */ "./node_modules/react-redux/es/utils/Subscription.js");
/* harmony import */ var _utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/useIsomorphicLayoutEffect */ "./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js");






function Provider(_ref) {
  var store = _ref.store,
      context = _ref.context,
      children = _ref.children;
  var contextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {
    var subscription = new _utils_Subscription__WEBPACK_IMPORTED_MODULE_3__.default(store);
    subscription.onStateChange = subscription.notifyNestedSubs;
    return {
      store: store,
      subscription: subscription
    };
  }, [store]);
  var previousState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {
    return store.getState();
  }, [store]);
  (0,_utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_4__.useIsomorphicLayoutEffect)(function () {
    var subscription = contextValue.subscription;
    subscription.trySubscribe();

    if (previousState !== store.getState()) {
      subscription.notifyNestedSubs();
    }

    return function () {
      subscription.tryUnsubscribe();
      subscription.onStateChange = null;
    };
  }, [contextValue, previousState]);
  var Context = context || _Context__WEBPACK_IMPORTED_MODULE_2__.ReactReduxContext;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Context.Provider, {
    value: contextValue
  }, children);
}

if (true) {
  Provider.propTypes = {
    store: prop_types__WEBPACK_IMPORTED_MODULE_1___default().shape({
      subscribe: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().func.isRequired),
      dispatch: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().func.isRequired),
      getState: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().func.isRequired)
    }),
    context: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().object),
    children: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().any)
  };
}

/* harmony default export */ __webpack_exports__["default"] = (Provider);

/***/ }),

/***/ "./node_modules/react-redux/es/components/connectAdvanced.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-redux/es/components/connectAdvanced.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ connectAdvanced; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hoist-non-react-statics */ "./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js");
/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");
/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_is__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _utils_Subscription__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Subscription */ "./node_modules/react-redux/es/utils/Subscription.js");
/* harmony import */ var _utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/useIsomorphicLayoutEffect */ "./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js");
/* harmony import */ var _Context__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Context */ "./node_modules/react-redux/es/components/Context.js");







 // Define some constant arrays just to avoid re-creating these

var EMPTY_ARRAY = [];
var NO_SUBSCRIPTION_ARRAY = [null, null];

var stringifyComponent = function stringifyComponent(Comp) {
  try {
    return JSON.stringify(Comp);
  } catch (err) {
    return String(Comp);
  }
};

function storeStateUpdatesReducer(state, action) {
  var updateCount = state[1];
  return [action.payload, updateCount + 1];
}

function useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {
  (0,_utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_6__.useIsomorphicLayoutEffect)(function () {
    return effectFunc.apply(void 0, effectArgs);
  }, dependencies);
}

function captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, actualChildProps, childPropsFromStoreUpdate, notifyNestedSubs) {
  // We want to capture the wrapper props and child props we used for later comparisons
  lastWrapperProps.current = wrapperProps;
  lastChildProps.current = actualChildProps;
  renderIsScheduled.current = false; // If the render was from a store update, clear out that reference and cascade the subscriber update

  if (childPropsFromStoreUpdate.current) {
    childPropsFromStoreUpdate.current = null;
    notifyNestedSubs();
  }
}

function subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, childPropsFromStoreUpdate, notifyNestedSubs, forceComponentUpdateDispatch) {
  // If we're not subscribed to the store, nothing to do here
  if (!shouldHandleStateChanges) return; // Capture values for checking if and when this component unmounts

  var didUnsubscribe = false;
  var lastThrownError = null; // We'll run this callback every time a store subscription update propagates to this component

  var checkForUpdates = function checkForUpdates() {
    if (didUnsubscribe) {
      // Don't run stale listeners.
      // Redux doesn't guarantee unsubscriptions happen until next dispatch.
      return;
    }

    var latestStoreState = store.getState();
    var newChildProps, error;

    try {
      // Actually run the selector with the most recent store state and wrapper props
      // to determine what the child props should be
      newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);
    } catch (e) {
      error = e;
      lastThrownError = e;
    }

    if (!error) {
      lastThrownError = null;
    } // If the child props haven't changed, nothing to do here - cascade the subscription update


    if (newChildProps === lastChildProps.current) {
      if (!renderIsScheduled.current) {
        notifyNestedSubs();
      }
    } else {
      // Save references to the new child props.  Note that we track the "child props from store update"
      // as a ref instead of a useState/useReducer because we need a way to determine if that value has
      // been processed.  If this went into useState/useReducer, we couldn't clear out the value without
      // forcing another re-render, which we don't want.
      lastChildProps.current = newChildProps;
      childPropsFromStoreUpdate.current = newChildProps;
      renderIsScheduled.current = true; // If the child props _did_ change (or we caught an error), this wrapper component needs to re-render

      forceComponentUpdateDispatch({
        type: 'STORE_UPDATED',
        payload: {
          error: error
        }
      });
    }
  }; // Actually subscribe to the nearest connected ancestor (or store)


  subscription.onStateChange = checkForUpdates;
  subscription.trySubscribe(); // Pull data from the store after first render in case the store has
  // changed since we began.

  checkForUpdates();

  var unsubscribeWrapper = function unsubscribeWrapper() {
    didUnsubscribe = true;
    subscription.tryUnsubscribe();
    subscription.onStateChange = null;

    if (lastThrownError) {
      // It's possible that we caught an error due to a bad mapState function, but the
      // parent re-rendered without this component and we're about to unmount.
      // This shouldn't happen as long as we do top-down subscriptions correctly, but
      // if we ever do those wrong, this throw will surface the error in our tests.
      // In that case, throw the error from here so it doesn't get lost.
      throw lastThrownError;
    }
  };

  return unsubscribeWrapper;
}

var initStateUpdates = function initStateUpdates() {
  return [null, 0];
};

function connectAdvanced(
/*
  selectorFactory is a func that is responsible for returning the selector function used to
  compute new props from state, props, and dispatch. For example:
      export default connectAdvanced((dispatch, options) => (state, props) => ({
      thing: state.things[props.thingId],
      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
    }))(YourComponent)
    Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
    Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
  props. Do not use connectAdvanced directly without memoizing results between calls to your
  selector, otherwise the Connect component will re-render on every state or props change.
*/
selectorFactory, // options object:
_ref) {
  if (_ref === void 0) {
    _ref = {};
  }

  var _ref2 = _ref,
      _ref2$getDisplayName = _ref2.getDisplayName,
      getDisplayName = _ref2$getDisplayName === void 0 ? function (name) {
    return "ConnectAdvanced(" + name + ")";
  } : _ref2$getDisplayName,
      _ref2$methodName = _ref2.methodName,
      methodName = _ref2$methodName === void 0 ? 'connectAdvanced' : _ref2$methodName,
      _ref2$renderCountProp = _ref2.renderCountProp,
      renderCountProp = _ref2$renderCountProp === void 0 ? undefined : _ref2$renderCountProp,
      _ref2$shouldHandleSta = _ref2.shouldHandleStateChanges,
      shouldHandleStateChanges = _ref2$shouldHandleSta === void 0 ? true : _ref2$shouldHandleSta,
      _ref2$storeKey = _ref2.storeKey,
      storeKey = _ref2$storeKey === void 0 ? 'store' : _ref2$storeKey,
      _ref2$withRef = _ref2.withRef,
      withRef = _ref2$withRef === void 0 ? false : _ref2$withRef,
      _ref2$forwardRef = _ref2.forwardRef,
      forwardRef = _ref2$forwardRef === void 0 ? false : _ref2$forwardRef,
      _ref2$context = _ref2.context,
      context = _ref2$context === void 0 ? _Context__WEBPACK_IMPORTED_MODULE_7__.ReactReduxContext : _ref2$context,
      connectOptions = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(_ref2, ["getDisplayName", "methodName", "renderCountProp", "shouldHandleStateChanges", "storeKey", "withRef", "forwardRef", "context"]);

  if (true) {
    if (renderCountProp !== undefined) {
      throw new Error("renderCountProp is removed. render counting is built into the latest React Dev Tools profiling extension");
    }

    if (withRef) {
      throw new Error('withRef is removed. To access the wrapped instance, use a ref on the connected component');
    }

    var customStoreWarningMessage = 'To use a custom Redux store for specific components, create a custom React context with ' + "React.createContext(), and pass the context object to React Redux's Provider and specific components" + ' like: <Provider context={MyContext}><ConnectedComponent context={MyContext} /></Provider>. ' + 'You may also pass a {context : MyContext} option to connect';

    if (storeKey !== 'store') {
      throw new Error('storeKey has been removed and does not do anything. ' + customStoreWarningMessage);
    }
  }

  var Context = context;
  return function wrapWithConnect(WrappedComponent) {
    if ( true && !(0,react_is__WEBPACK_IMPORTED_MODULE_4__.isValidElementType)(WrappedComponent)) {
      throw new Error("You must pass a component to the function returned by " + (methodName + ". Instead received " + stringifyComponent(WrappedComponent)));
    }

    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';
    var displayName = getDisplayName(wrappedComponentName);

    var selectorFactoryOptions = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, connectOptions, {
      getDisplayName: getDisplayName,
      methodName: methodName,
      renderCountProp: renderCountProp,
      shouldHandleStateChanges: shouldHandleStateChanges,
      storeKey: storeKey,
      displayName: displayName,
      wrappedComponentName: wrappedComponentName,
      WrappedComponent: WrappedComponent
    });

    var pure = connectOptions.pure;

    function createChildSelector(store) {
      return selectorFactory(store.dispatch, selectorFactoryOptions);
    } // If we aren't running in "pure" mode, we don't want to memoize values.
    // To avoid conditionally calling hooks, we fall back to a tiny wrapper
    // that just executes the given callback immediately.


    var usePureOnlyMemo = pure ? react__WEBPACK_IMPORTED_MODULE_3__.useMemo : function (callback) {
      return callback();
    };

    function ConnectFunction(props) {
      var _useMemo = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(function () {
        // Distinguish between actual "data" props that were passed to the wrapper component,
        // and values needed to control behavior (forwarded refs, alternate context instances).
        // To maintain the wrapperProps object reference, memoize this destructuring.
        var reactReduxForwardedRef = props.reactReduxForwardedRef,
            wrapperProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(props, ["reactReduxForwardedRef"]);

        return [props.context, reactReduxForwardedRef, wrapperProps];
      }, [props]),
          propsContext = _useMemo[0],
          reactReduxForwardedRef = _useMemo[1],
          wrapperProps = _useMemo[2];

      var ContextToUse = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(function () {
        // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.
        // Memoize the check that determines which context instance we should use.
        return propsContext && propsContext.Consumer && (0,react_is__WEBPACK_IMPORTED_MODULE_4__.isContextConsumer)( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(propsContext.Consumer, null)) ? propsContext : Context;
      }, [propsContext, Context]); // Retrieve the store and ancestor subscription via context, if available

      var contextValue = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(ContextToUse); // The store _must_ exist as either a prop or in context.
      // We'll check to see if it _looks_ like a Redux store first.
      // This allows us to pass through a `store` prop that is just a plain value.

      var didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);
      var didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);

      if ( true && !didStoreComeFromProps && !didStoreComeFromContext) {
        throw new Error("Could not find \"store\" in the context of " + ("\"" + displayName + "\". Either wrap the root component in a <Provider>, ") + "or pass a custom React context provider to <Provider> and the corresponding " + ("React context consumer to " + displayName + " in connect options."));
      } // Based on the previous check, one of these must be true


      var store = didStoreComeFromProps ? props.store : contextValue.store;
      var childPropsSelector = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(function () {
        // The child props selector needs the store reference as an input.
        // Re-create this selector whenever the store changes.
        return createChildSelector(store);
      }, [store]);

      var _useMemo2 = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(function () {
        if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY; // This Subscription's source should match where store came from: props vs. context. A component
        // connected to the store via props shouldn't use subscription from context, or vice versa.

        var subscription = new _utils_Subscription__WEBPACK_IMPORTED_MODULE_5__.default(store, didStoreComeFromProps ? null : contextValue.subscription); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in
        // the middle of the notification loop, where `subscription` will then be null. This can
        // probably be avoided if Subscription's listeners logic is changed to not call listeners
        // that have been unsubscribed in the  middle of the notification loop.

        var notifyNestedSubs = subscription.notifyNestedSubs.bind(subscription);
        return [subscription, notifyNestedSubs];
      }, [store, didStoreComeFromProps, contextValue]),
          subscription = _useMemo2[0],
          notifyNestedSubs = _useMemo2[1]; // Determine what {store, subscription} value should be put into nested context, if necessary,
      // and memoize that value to avoid unnecessary context updates.


      var overriddenContextValue = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(function () {
        if (didStoreComeFromProps) {
          // This component is directly subscribed to a store from props.
          // We don't want descendants reading from this store - pass down whatever
          // the existing context value is from the nearest connected ancestor.
          return contextValue;
        } // Otherwise, put this component's subscription instance into context, so that
        // connected descendants won't update until after this component is done


        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, contextValue, {
          subscription: subscription
        });
      }, [didStoreComeFromProps, contextValue, subscription]); // We need to force this wrapper component to re-render whenever a Redux store update
      // causes a change to the calculated child component props (or we caught an error in mapState)

      var _useReducer = (0,react__WEBPACK_IMPORTED_MODULE_3__.useReducer)(storeStateUpdatesReducer, EMPTY_ARRAY, initStateUpdates),
          _useReducer$ = _useReducer[0],
          previousStateUpdateResult = _useReducer$[0],
          forceComponentUpdateDispatch = _useReducer[1]; // Propagate any mapState/mapDispatch errors upwards


      if (previousStateUpdateResult && previousStateUpdateResult.error) {
        throw previousStateUpdateResult.error;
      } // Set up refs to coordinate values between the subscription effect and the render logic


      var lastChildProps = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)();
      var lastWrapperProps = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(wrapperProps);
      var childPropsFromStoreUpdate = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)();
      var renderIsScheduled = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(false);
      var actualChildProps = usePureOnlyMemo(function () {
        // Tricky logic here:
        // - This render may have been triggered by a Redux store update that produced new child props
        // - However, we may have gotten new wrapper props after that
        // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.
        // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.
        // So, we'll use the child props from store update only if the wrapper props are the same as last time.
        if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {
          return childPropsFromStoreUpdate.current;
        } // TODO We're reading the store directly in render() here. Bad idea?
        // This will likely cause Bad Things (TM) to happen in Concurrent Mode.
        // Note that we do this because on renders _not_ caused by store updates, we need the latest store state
        // to determine what the child props should be.


        return childPropsSelector(store.getState(), wrapperProps);
      }, [store, previousStateUpdateResult, wrapperProps]); // We need this to execute synchronously every time we re-render. However, React warns
      // about useLayoutEffect in SSR, so we try to detect environment and fall back to
      // just useEffect instead to avoid the warning, since neither will run anyway.

      useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, actualChildProps, childPropsFromStoreUpdate, notifyNestedSubs]); // Our re-subscribe logic only runs when the store/subscription setup changes

      useIsomorphicLayoutEffectWithArgs(subscribeUpdates, [shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, childPropsFromStoreUpdate, notifyNestedSubs, forceComponentUpdateDispatch], [store, subscription, childPropsSelector]); // Now that all that's done, we can finally try to actually render the child component.
      // We memoize the elements for the rendered child component as an optimization.

      var renderedWrappedComponent = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(function () {
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(WrappedComponent, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, actualChildProps, {
          ref: reactReduxForwardedRef
        }));
      }, [reactReduxForwardedRef, WrappedComponent, actualChildProps]); // If React sees the exact same element reference as last time, it bails out of re-rendering
      // that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.

      var renderedChild = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(function () {
        if (shouldHandleStateChanges) {
          // If this component is subscribed to store updates, we need to pass its own
          // subscription instance down to our descendants. That means rendering the same
          // Context instance, and putting a different value into the context.
          return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(ContextToUse.Provider, {
            value: overriddenContextValue
          }, renderedWrappedComponent);
        }

        return renderedWrappedComponent;
      }, [ContextToUse, renderedWrappedComponent, overriddenContextValue]);
      return renderedChild;
    } // If we're in "pure" mode, ensure our wrapper component only re-renders when incoming props have changed.


    var Connect = pure ? react__WEBPACK_IMPORTED_MODULE_3___default().memo(ConnectFunction) : ConnectFunction;
    Connect.WrappedComponent = WrappedComponent;
    Connect.displayName = ConnectFunction.displayName = displayName;

    if (forwardRef) {
      var forwarded = react__WEBPACK_IMPORTED_MODULE_3___default().forwardRef(function forwardConnectRef(props, ref) {
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default().createElement(Connect, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, props, {
          reactReduxForwardedRef: ref
        }));
      });
      forwarded.displayName = displayName;
      forwarded.WrappedComponent = WrappedComponent;
      return hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2___default()(forwarded, WrappedComponent);
    }

    return hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2___default()(Connect, WrappedComponent);
  };
}

/***/ }),

/***/ "./node_modules/react-redux/es/connect/connect.js":
/*!********************************************************!*\
  !*** ./node_modules/react-redux/es/connect/connect.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createConnect": function() { return /* binding */ createConnect; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _components_connectAdvanced__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/connectAdvanced */ "./node_modules/react-redux/es/components/connectAdvanced.js");
/* harmony import */ var _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/shallowEqual */ "./node_modules/react-redux/es/utils/shallowEqual.js");
/* harmony import */ var _mapDispatchToProps__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mapDispatchToProps */ "./node_modules/react-redux/es/connect/mapDispatchToProps.js");
/* harmony import */ var _mapStateToProps__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mapStateToProps */ "./node_modules/react-redux/es/connect/mapStateToProps.js");
/* harmony import */ var _mergeProps__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./mergeProps */ "./node_modules/react-redux/es/connect/mergeProps.js");
/* harmony import */ var _selectorFactory__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./selectorFactory */ "./node_modules/react-redux/es/connect/selectorFactory.js");








/*
  connect is a facade over connectAdvanced. It turns its args into a compatible
  selectorFactory, which has the signature:

    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
  
  connect passes its args to connectAdvanced as options, which will in turn pass them to
  selectorFactory each time a Connect component instance is instantiated or hot reloaded.

  selectorFactory returns a final props selector from its mapStateToProps,
  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
  mergePropsFactories, and pure args.

  The resulting final props selector is called by the Connect component instance whenever
  it receives new props or store state.
 */

function match(arg, factories, name) {
  for (var i = factories.length - 1; i >= 0; i--) {
    var result = factories[i](arg);
    if (result) return result;
  }

  return function (dispatch, options) {
    throw new Error("Invalid value of type " + typeof arg + " for " + name + " argument when connecting component " + options.wrappedComponentName + ".");
  };
}

function strictEqual(a, b) {
  return a === b;
} // createConnect with default args builds the 'official' connect behavior. Calling it with
// different options opens up some testing and extensibility scenarios


function createConnect(_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      _ref$connectHOC = _ref.connectHOC,
      connectHOC = _ref$connectHOC === void 0 ? _components_connectAdvanced__WEBPACK_IMPORTED_MODULE_2__.default : _ref$connectHOC,
      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
      mapStateToPropsFactories = _ref$mapStateToPropsF === void 0 ? _mapStateToProps__WEBPACK_IMPORTED_MODULE_5__.default : _ref$mapStateToPropsF,
      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
      mapDispatchToPropsFactories = _ref$mapDispatchToPro === void 0 ? _mapDispatchToProps__WEBPACK_IMPORTED_MODULE_4__.default : _ref$mapDispatchToPro,
      _ref$mergePropsFactor = _ref.mergePropsFactories,
      mergePropsFactories = _ref$mergePropsFactor === void 0 ? _mergeProps__WEBPACK_IMPORTED_MODULE_6__.default : _ref$mergePropsFactor,
      _ref$selectorFactory = _ref.selectorFactory,
      selectorFactory = _ref$selectorFactory === void 0 ? _selectorFactory__WEBPACK_IMPORTED_MODULE_7__.default : _ref$selectorFactory;

  return function connect(mapStateToProps, mapDispatchToProps, mergeProps, _ref2) {
    if (_ref2 === void 0) {
      _ref2 = {};
    }

    var _ref3 = _ref2,
        _ref3$pure = _ref3.pure,
        pure = _ref3$pure === void 0 ? true : _ref3$pure,
        _ref3$areStatesEqual = _ref3.areStatesEqual,
        areStatesEqual = _ref3$areStatesEqual === void 0 ? strictEqual : _ref3$areStatesEqual,
        _ref3$areOwnPropsEqua = _ref3.areOwnPropsEqual,
        areOwnPropsEqual = _ref3$areOwnPropsEqua === void 0 ? _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_3__.default : _ref3$areOwnPropsEqua,
        _ref3$areStatePropsEq = _ref3.areStatePropsEqual,
        areStatePropsEqual = _ref3$areStatePropsEq === void 0 ? _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_3__.default : _ref3$areStatePropsEq,
        _ref3$areMergedPropsE = _ref3.areMergedPropsEqual,
        areMergedPropsEqual = _ref3$areMergedPropsE === void 0 ? _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_3__.default : _ref3$areMergedPropsE,
        extraOptions = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__.default)(_ref3, ["pure", "areStatesEqual", "areOwnPropsEqual", "areStatePropsEqual", "areMergedPropsEqual"]);

    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');
    return connectHOC(selectorFactory, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({
      // used in error messages
      methodName: 'connect',
      // used to compute Connect's displayName from the wrapped component's displayName.
      getDisplayName: function getDisplayName(name) {
        return "Connect(" + name + ")";
      },
      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
      shouldHandleStateChanges: Boolean(mapStateToProps),
      // passed through to selectorFactory
      initMapStateToProps: initMapStateToProps,
      initMapDispatchToProps: initMapDispatchToProps,
      initMergeProps: initMergeProps,
      pure: pure,
      areStatesEqual: areStatesEqual,
      areOwnPropsEqual: areOwnPropsEqual,
      areStatePropsEqual: areStatePropsEqual,
      areMergedPropsEqual: areMergedPropsEqual
    }, extraOptions));
  };
}
/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/createConnect());

/***/ }),

/***/ "./node_modules/react-redux/es/connect/mapDispatchToProps.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/mapDispatchToProps.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "whenMapDispatchToPropsIsFunction": function() { return /* binding */ whenMapDispatchToPropsIsFunction; },
/* harmony export */   "whenMapDispatchToPropsIsMissing": function() { return /* binding */ whenMapDispatchToPropsIsMissing; },
/* harmony export */   "whenMapDispatchToPropsIsObject": function() { return /* binding */ whenMapDispatchToPropsIsObject; }
/* harmony export */ });
/* harmony import */ var _utils_bindActionCreators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/bindActionCreators */ "./node_modules/react-redux/es/utils/bindActionCreators.js");
/* harmony import */ var _wrapMapToProps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wrapMapToProps */ "./node_modules/react-redux/es/connect/wrapMapToProps.js");


function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
  return typeof mapDispatchToProps === 'function' ? (0,_wrapMapToProps__WEBPACK_IMPORTED_MODULE_1__.wrapMapToPropsFunc)(mapDispatchToProps, 'mapDispatchToProps') : undefined;
}
function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
  return !mapDispatchToProps ? (0,_wrapMapToProps__WEBPACK_IMPORTED_MODULE_1__.wrapMapToPropsConstant)(function (dispatch) {
    return {
      dispatch: dispatch
    };
  }) : undefined;
}
function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? (0,_wrapMapToProps__WEBPACK_IMPORTED_MODULE_1__.wrapMapToPropsConstant)(function (dispatch) {
    return (0,_utils_bindActionCreators__WEBPACK_IMPORTED_MODULE_0__.default)(mapDispatchToProps, dispatch);
  }) : undefined;
}
/* harmony default export */ __webpack_exports__["default"] = ([whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject]);

/***/ }),

/***/ "./node_modules/react-redux/es/connect/mapStateToProps.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/mapStateToProps.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "whenMapStateToPropsIsFunction": function() { return /* binding */ whenMapStateToPropsIsFunction; },
/* harmony export */   "whenMapStateToPropsIsMissing": function() { return /* binding */ whenMapStateToPropsIsMissing; }
/* harmony export */ });
/* harmony import */ var _wrapMapToProps__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wrapMapToProps */ "./node_modules/react-redux/es/connect/wrapMapToProps.js");

function whenMapStateToPropsIsFunction(mapStateToProps) {
  return typeof mapStateToProps === 'function' ? (0,_wrapMapToProps__WEBPACK_IMPORTED_MODULE_0__.wrapMapToPropsFunc)(mapStateToProps, 'mapStateToProps') : undefined;
}
function whenMapStateToPropsIsMissing(mapStateToProps) {
  return !mapStateToProps ? (0,_wrapMapToProps__WEBPACK_IMPORTED_MODULE_0__.wrapMapToPropsConstant)(function () {
    return {};
  }) : undefined;
}
/* harmony default export */ __webpack_exports__["default"] = ([whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing]);

/***/ }),

/***/ "./node_modules/react-redux/es/connect/mergeProps.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-redux/es/connect/mergeProps.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "defaultMergeProps": function() { return /* binding */ defaultMergeProps; },
/* harmony export */   "wrapMergePropsFunc": function() { return /* binding */ wrapMergePropsFunc; },
/* harmony export */   "whenMergePropsIsFunction": function() { return /* binding */ whenMergePropsIsFunction; },
/* harmony export */   "whenMergePropsIsOmitted": function() { return /* binding */ whenMergePropsIsOmitted; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _utils_verifyPlainObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/verifyPlainObject */ "./node_modules/react-redux/es/utils/verifyPlainObject.js");


function defaultMergeProps(stateProps, dispatchProps, ownProps) {
  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, ownProps, stateProps, dispatchProps);
}
function wrapMergePropsFunc(mergeProps) {
  return function initMergePropsProxy(dispatch, _ref) {
    var displayName = _ref.displayName,
        pure = _ref.pure,
        areMergedPropsEqual = _ref.areMergedPropsEqual;
    var hasRunOnce = false;
    var mergedProps;
    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);

      if (hasRunOnce) {
        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
      } else {
        hasRunOnce = true;
        mergedProps = nextMergedProps;
        if (true) (0,_utils_verifyPlainObject__WEBPACK_IMPORTED_MODULE_1__.default)(mergedProps, displayName, 'mergeProps');
      }

      return mergedProps;
    };
  };
}
function whenMergePropsIsFunction(mergeProps) {
  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
}
function whenMergePropsIsOmitted(mergeProps) {
  return !mergeProps ? function () {
    return defaultMergeProps;
  } : undefined;
}
/* harmony default export */ __webpack_exports__["default"] = ([whenMergePropsIsFunction, whenMergePropsIsOmitted]);

/***/ }),

/***/ "./node_modules/react-redux/es/connect/selectorFactory.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/selectorFactory.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "impureFinalPropsSelectorFactory": function() { return /* binding */ impureFinalPropsSelectorFactory; },
/* harmony export */   "pureFinalPropsSelectorFactory": function() { return /* binding */ pureFinalPropsSelectorFactory; },
/* harmony export */   "default": function() { return /* binding */ finalPropsSelectorFactory; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _verifySubselectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./verifySubselectors */ "./node_modules/react-redux/es/connect/verifySubselectors.js");


function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
  return function impureFinalPropsSelector(state, ownProps) {
    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
  };
}
function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
  var areStatesEqual = _ref.areStatesEqual,
      areOwnPropsEqual = _ref.areOwnPropsEqual,
      areStatePropsEqual = _ref.areStatePropsEqual;
  var hasRunAtLeastOnce = false;
  var state;
  var ownProps;
  var stateProps;
  var dispatchProps;
  var mergedProps;

  function handleFirstCall(firstState, firstOwnProps) {
    state = firstState;
    ownProps = firstOwnProps;
    stateProps = mapStateToProps(state, ownProps);
    dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    hasRunAtLeastOnce = true;
    return mergedProps;
  }

  function handleNewPropsAndNewState() {
    stateProps = mapStateToProps(state, ownProps);
    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewProps() {
    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);
    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewState() {
    var nextStateProps = mapStateToProps(state, ownProps);
    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
    stateProps = nextStateProps;
    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleSubsequentCalls(nextState, nextOwnProps) {
    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
    var stateChanged = !areStatesEqual(nextState, state);
    state = nextState;
    ownProps = nextOwnProps;
    if (propsChanged && stateChanged) return handleNewPropsAndNewState();
    if (propsChanged) return handleNewProps();
    if (stateChanged) return handleNewState();
    return mergedProps;
  }

  return function pureFinalPropsSelector(nextState, nextOwnProps) {
    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
  };
} // TODO: Add more comments
// If pure is true, the selector returned by selectorFactory will memoize its results,
// allowing connectAdvanced's shouldComponentUpdate to return false if final
// props have not changed. If false, the selector will always return a new
// object and shouldComponentUpdate will always return true.

function finalPropsSelectorFactory(dispatch, _ref2) {
  var initMapStateToProps = _ref2.initMapStateToProps,
      initMapDispatchToProps = _ref2.initMapDispatchToProps,
      initMergeProps = _ref2.initMergeProps,
      options = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__.default)(_ref2, ["initMapStateToProps", "initMapDispatchToProps", "initMergeProps"]);

  var mapStateToProps = initMapStateToProps(dispatch, options);
  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
  var mergeProps = initMergeProps(dispatch, options);

  if (true) {
    (0,_verifySubselectors__WEBPACK_IMPORTED_MODULE_1__.default)(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
  }

  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;
  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
}

/***/ }),

/***/ "./node_modules/react-redux/es/connect/verifySubselectors.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/verifySubselectors.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ verifySubselectors; }
/* harmony export */ });
/* harmony import */ var _utils_warning__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/warning */ "./node_modules/react-redux/es/utils/warning.js");


function verify(selector, methodName, displayName) {
  if (!selector) {
    throw new Error("Unexpected value for " + methodName + " in " + displayName + ".");
  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
    if (!Object.prototype.hasOwnProperty.call(selector, 'dependsOnOwnProps')) {
      (0,_utils_warning__WEBPACK_IMPORTED_MODULE_0__.default)("The selector for " + methodName + " of " + displayName + " did not specify a value for dependsOnOwnProps.");
    }
  }
}

function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
  verify(mapStateToProps, 'mapStateToProps', displayName);
  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
  verify(mergeProps, 'mergeProps', displayName);
}

/***/ }),

/***/ "./node_modules/react-redux/es/connect/wrapMapToProps.js":
/*!***************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/wrapMapToProps.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "wrapMapToPropsConstant": function() { return /* binding */ wrapMapToPropsConstant; },
/* harmony export */   "getDependsOnOwnProps": function() { return /* binding */ getDependsOnOwnProps; },
/* harmony export */   "wrapMapToPropsFunc": function() { return /* binding */ wrapMapToPropsFunc; }
/* harmony export */ });
/* harmony import */ var _utils_verifyPlainObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/verifyPlainObject */ "./node_modules/react-redux/es/utils/verifyPlainObject.js");

function wrapMapToPropsConstant(getConstant) {
  return function initConstantSelector(dispatch, options) {
    var constant = getConstant(dispatch, options);

    function constantSelector() {
      return constant;
    }

    constantSelector.dependsOnOwnProps = false;
    return constantSelector;
  };
} // dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
// whether mapToProps needs to be invoked when props have changed.
//
// A length of one signals that mapToProps does not depend on props from the parent component.
// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
// therefore not reporting its length accurately..

function getDependsOnOwnProps(mapToProps) {
  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
} // Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
// this function wraps mapToProps in a proxy function which does several things:
//
//  * Detects whether the mapToProps function being called depends on props, which
//    is used by selectorFactory to decide if it should reinvoke on props changes.
//
//  * On first call, handles mapToProps if returns another function, and treats that
//    new function as the true mapToProps for subsequent calls.
//
//  * On first call, verifies the first result is a plain object, in order to warn
//    the developer that their mapToProps function is not returning a valid result.
//

function wrapMapToPropsFunc(mapToProps, methodName) {
  return function initProxySelector(dispatch, _ref) {
    var displayName = _ref.displayName;

    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
    }; // allow detectFactoryAndVerify to get ownProps


    proxy.dependsOnOwnProps = true;

    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
      proxy.mapToProps = mapToProps;
      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
      var props = proxy(stateOrDispatch, ownProps);

      if (typeof props === 'function') {
        proxy.mapToProps = props;
        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
        props = proxy(stateOrDispatch, ownProps);
      }

      if (true) (0,_utils_verifyPlainObject__WEBPACK_IMPORTED_MODULE_0__.default)(props, displayName, methodName);
      return props;
    };

    return proxy;
  };
}

/***/ }),

/***/ "./node_modules/react-redux/es/hooks/useDispatch.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-redux/es/hooks/useDispatch.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createDispatchHook": function() { return /* binding */ createDispatchHook; },
/* harmony export */   "useDispatch": function() { return /* binding */ useDispatch; }
/* harmony export */ });
/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/Context */ "./node_modules/react-redux/es/components/Context.js");
/* harmony import */ var _useStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useStore */ "./node_modules/react-redux/es/hooks/useStore.js");


/**
 * Hook factory, which creates a `useDispatch` hook bound to a given context.
 *
 * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useDispatch` hook bound to the specified context.
 */

function createDispatchHook(context) {
  if (context === void 0) {
    context = _components_Context__WEBPACK_IMPORTED_MODULE_0__.ReactReduxContext;
  }

  var useStore = context === _components_Context__WEBPACK_IMPORTED_MODULE_0__.ReactReduxContext ? _useStore__WEBPACK_IMPORTED_MODULE_1__.useStore : (0,_useStore__WEBPACK_IMPORTED_MODULE_1__.createStoreHook)(context);
  return function useDispatch() {
    var store = useStore();
    return store.dispatch;
  };
}
/**
 * A hook to access the redux `dispatch` function.
 *
 * @returns {any|function} redux store's `dispatch` function
 *
 * @example
 *
 * import React, { useCallback } from 'react'
 * import { useDispatch } from 'react-redux'
 *
 * export const CounterComponent = ({ value }) => {
 *   const dispatch = useDispatch()
 *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])
 *   return (
 *     <div>
 *       <span>{value}</span>
 *       <button onClick={increaseCounter}>Increase counter</button>
 *     </div>
 *   )
 * }
 */

var useDispatch = /*#__PURE__*/createDispatchHook();

/***/ }),

/***/ "./node_modules/react-redux/es/hooks/useReduxContext.js":
/*!**************************************************************!*\
  !*** ./node_modules/react-redux/es/hooks/useReduxContext.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useReduxContext": function() { return /* binding */ useReduxContext; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/Context */ "./node_modules/react-redux/es/components/Context.js");


/**
 * A hook to access the value of the `ReactReduxContext`. This is a low-level
 * hook that you should usually not need to call directly.
 *
 * @returns {any} the value of the `ReactReduxContext`
 *
 * @example
 *
 * import React from 'react'
 * import { useReduxContext } from 'react-redux'
 *
 * export const CounterComponent = ({ value }) => {
 *   const { store } = useReduxContext()
 *   return <div>{store.getState()}</div>
 * }
 */

function useReduxContext() {
  var contextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_components_Context__WEBPACK_IMPORTED_MODULE_1__.ReactReduxContext);

  if ( true && !contextValue) {
    throw new Error('could not find react-redux context value; please ensure the component is wrapped in a <Provider>');
  }

  return contextValue;
}

/***/ }),

/***/ "./node_modules/react-redux/es/hooks/useSelector.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-redux/es/hooks/useSelector.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createSelectorHook": function() { return /* binding */ createSelectorHook; },
/* harmony export */   "useSelector": function() { return /* binding */ useSelector; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _useReduxContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useReduxContext */ "./node_modules/react-redux/es/hooks/useReduxContext.js");
/* harmony import */ var _utils_Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Subscription */ "./node_modules/react-redux/es/utils/Subscription.js");
/* harmony import */ var _utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/useIsomorphicLayoutEffect */ "./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js");
/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/Context */ "./node_modules/react-redux/es/components/Context.js");






var refEquality = function refEquality(a, b) {
  return a === b;
};

function useSelectorWithStoreAndSubscription(selector, equalityFn, store, contextSub) {
  var _useReducer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(function (s) {
    return s + 1;
  }, 0),
      forceRender = _useReducer[1];

  var subscription = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {
    return new _utils_Subscription__WEBPACK_IMPORTED_MODULE_2__.default(store, contextSub);
  }, [store, contextSub]);
  var latestSubscriptionCallbackError = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();
  var latestSelector = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();
  var latestStoreState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();
  var latestSelectedState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();
  var storeState = store.getState();
  var selectedState;

  try {
    if (selector !== latestSelector.current || storeState !== latestStoreState.current || latestSubscriptionCallbackError.current) {
      var newSelectedState = selector(storeState); // ensure latest selected state is reused so that a custom equality function can result in identical references

      if (latestSelectedState.current === undefined || !equalityFn(newSelectedState, latestSelectedState.current)) {
        selectedState = newSelectedState;
      } else {
        selectedState = latestSelectedState.current;
      }
    } else {
      selectedState = latestSelectedState.current;
    }
  } catch (err) {
    if (latestSubscriptionCallbackError.current) {
      err.message += "\nThe error may be correlated with this previous error:\n" + latestSubscriptionCallbackError.current.stack + "\n\n";
    }

    throw err;
  }

  (0,_utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect)(function () {
    latestSelector.current = selector;
    latestStoreState.current = storeState;
    latestSelectedState.current = selectedState;
    latestSubscriptionCallbackError.current = undefined;
  });
  (0,_utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect)(function () {
    function checkForUpdates() {
      try {
        var newStoreState = store.getState();

        var _newSelectedState = latestSelector.current(newStoreState);

        if (equalityFn(_newSelectedState, latestSelectedState.current)) {
          return;
        }

        latestSelectedState.current = _newSelectedState;
        latestStoreState.current = newStoreState;
      } catch (err) {
        // we ignore all errors here, since when the component
        // is re-rendered, the selectors are called again, and
        // will throw again, if neither props nor store state
        // changed
        latestSubscriptionCallbackError.current = err;
      }

      forceRender();
    }

    subscription.onStateChange = checkForUpdates;
    subscription.trySubscribe();
    checkForUpdates();
    return function () {
      return subscription.tryUnsubscribe();
    };
  }, [store, subscription]);
  return selectedState;
}
/**
 * Hook factory, which creates a `useSelector` hook bound to a given context.
 *
 * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useSelector` hook bound to the specified context.
 */


function createSelectorHook(context) {
  if (context === void 0) {
    context = _components_Context__WEBPACK_IMPORTED_MODULE_4__.ReactReduxContext;
  }

  var useReduxContext = context === _components_Context__WEBPACK_IMPORTED_MODULE_4__.ReactReduxContext ? _useReduxContext__WEBPACK_IMPORTED_MODULE_1__.useReduxContext : function () {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(context);
  };
  return function useSelector(selector, equalityFn) {
    if (equalityFn === void 0) {
      equalityFn = refEquality;
    }

    if (true) {
      if (!selector) {
        throw new Error("You must pass a selector to useSelector");
      }

      if (typeof selector !== 'function') {
        throw new Error("You must pass a function as a selector to useSelector");
      }

      if (typeof equalityFn !== 'function') {
        throw new Error("You must pass a function as an equality function to useSelector");
      }
    }

    var _useReduxContext = useReduxContext(),
        store = _useReduxContext.store,
        contextSub = _useReduxContext.subscription;

    var selectedState = useSelectorWithStoreAndSubscription(selector, equalityFn, store, contextSub);
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(selectedState);
    return selectedState;
  };
}
/**
 * A hook to access the redux store's state. This hook takes a selector function
 * as an argument. The selector is called with the store state.
 *
 * This hook takes an optional equality comparison function as the second parameter
 * that allows you to customize the way the selected state is compared to determine
 * whether the component needs to be re-rendered.
 *
 * @param {Function} selector the selector function
 * @param {Function=} equalityFn the function that will be used to determine equality
 *
 * @returns {any} the selected state
 *
 * @example
 *
 * import React from 'react'
 * import { useSelector } from 'react-redux'
 *
 * export const CounterComponent = () => {
 *   const counter = useSelector(state => state.counter)
 *   return <div>{counter}</div>
 * }
 */

var useSelector = /*#__PURE__*/createSelectorHook();

/***/ }),

/***/ "./node_modules/react-redux/es/hooks/useStore.js":
/*!*******************************************************!*\
  !*** ./node_modules/react-redux/es/hooks/useStore.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createStoreHook": function() { return /* binding */ createStoreHook; },
/* harmony export */   "useStore": function() { return /* binding */ useStore; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/Context */ "./node_modules/react-redux/es/components/Context.js");
/* harmony import */ var _useReduxContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useReduxContext */ "./node_modules/react-redux/es/hooks/useReduxContext.js");



/**
 * Hook factory, which creates a `useStore` hook bound to a given context.
 *
 * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.
 * @returns {Function} A `useStore` hook bound to the specified context.
 */

function createStoreHook(context) {
  if (context === void 0) {
    context = _components_Context__WEBPACK_IMPORTED_MODULE_1__.ReactReduxContext;
  }

  var useReduxContext = context === _components_Context__WEBPACK_IMPORTED_MODULE_1__.ReactReduxContext ? _useReduxContext__WEBPACK_IMPORTED_MODULE_2__.useReduxContext : function () {
    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(context);
  };
  return function useStore() {
    var _useReduxContext = useReduxContext(),
        store = _useReduxContext.store;

    return store;
  };
}
/**
 * A hook to access the redux store.
 *
 * @returns {any} the redux store
 *
 * @example
 *
 * import React from 'react'
 * import { useStore } from 'react-redux'
 *
 * export const ExampleComponent = () => {
 *   const store = useStore()
 *   return <div>{store.getState()}</div>
 * }
 */

var useStore = /*#__PURE__*/createStoreHook();

/***/ }),

/***/ "./node_modules/react-redux/es/index.js":
/*!**********************************************!*\
  !*** ./node_modules/react-redux/es/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Provider": function() { return /* reexport safe */ _components_Provider__WEBPACK_IMPORTED_MODULE_0__.default; },
/* harmony export */   "connectAdvanced": function() { return /* reexport safe */ _components_connectAdvanced__WEBPACK_IMPORTED_MODULE_1__.default; },
/* harmony export */   "ReactReduxContext": function() { return /* reexport safe */ _components_Context__WEBPACK_IMPORTED_MODULE_2__.ReactReduxContext; },
/* harmony export */   "connect": function() { return /* reexport safe */ _connect_connect__WEBPACK_IMPORTED_MODULE_3__.default; },
/* harmony export */   "batch": function() { return /* reexport safe */ _utils_reactBatchedUpdates__WEBPACK_IMPORTED_MODULE_8__.unstable_batchedUpdates; },
/* harmony export */   "useDispatch": function() { return /* reexport safe */ _hooks_useDispatch__WEBPACK_IMPORTED_MODULE_4__.useDispatch; },
/* harmony export */   "createDispatchHook": function() { return /* reexport safe */ _hooks_useDispatch__WEBPACK_IMPORTED_MODULE_4__.createDispatchHook; },
/* harmony export */   "useSelector": function() { return /* reexport safe */ _hooks_useSelector__WEBPACK_IMPORTED_MODULE_5__.useSelector; },
/* harmony export */   "createSelectorHook": function() { return /* reexport safe */ _hooks_useSelector__WEBPACK_IMPORTED_MODULE_5__.createSelectorHook; },
/* harmony export */   "useStore": function() { return /* reexport safe */ _hooks_useStore__WEBPACK_IMPORTED_MODULE_6__.useStore; },
/* harmony export */   "createStoreHook": function() { return /* reexport safe */ _hooks_useStore__WEBPACK_IMPORTED_MODULE_6__.createStoreHook; },
/* harmony export */   "shallowEqual": function() { return /* reexport safe */ _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_9__.default; }
/* harmony export */ });
/* harmony import */ var _components_Provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/Provider */ "./node_modules/react-redux/es/components/Provider.js");
/* harmony import */ var _components_connectAdvanced__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/connectAdvanced */ "./node_modules/react-redux/es/components/connectAdvanced.js");
/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/Context */ "./node_modules/react-redux/es/components/Context.js");
/* harmony import */ var _connect_connect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./connect/connect */ "./node_modules/react-redux/es/connect/connect.js");
/* harmony import */ var _hooks_useDispatch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hooks/useDispatch */ "./node_modules/react-redux/es/hooks/useDispatch.js");
/* harmony import */ var _hooks_useSelector__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hooks/useSelector */ "./node_modules/react-redux/es/hooks/useSelector.js");
/* harmony import */ var _hooks_useStore__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./hooks/useStore */ "./node_modules/react-redux/es/hooks/useStore.js");
/* harmony import */ var _utils_batch__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/batch */ "./node_modules/react-redux/es/utils/batch.js");
/* harmony import */ var _utils_reactBatchedUpdates__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/reactBatchedUpdates */ "./node_modules/react-redux/es/utils/reactBatchedUpdates.js");
/* harmony import */ var _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/shallowEqual */ "./node_modules/react-redux/es/utils/shallowEqual.js");










(0,_utils_batch__WEBPACK_IMPORTED_MODULE_7__.setBatch)(_utils_reactBatchedUpdates__WEBPACK_IMPORTED_MODULE_8__.unstable_batchedUpdates);


/***/ }),

/***/ "./node_modules/react-redux/es/utils/Subscription.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-redux/es/utils/Subscription.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ Subscription; }
/* harmony export */ });
/* harmony import */ var _batch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./batch */ "./node_modules/react-redux/es/utils/batch.js");
 // encapsulates the subscription logic for connecting a component to the redux store, as
// well as nesting subscriptions of descendant components, so that we can ensure the
// ancestor components re-render before descendants

var nullListeners = {
  notify: function notify() {}
};

function createListenerCollection() {
  var batch = (0,_batch__WEBPACK_IMPORTED_MODULE_0__.getBatch)();
  var first = null;
  var last = null;
  return {
    clear: function clear() {
      first = null;
      last = null;
    },
    notify: function notify() {
      batch(function () {
        var listener = first;

        while (listener) {
          listener.callback();
          listener = listener.next;
        }
      });
    },
    get: function get() {
      var listeners = [];
      var listener = first;

      while (listener) {
        listeners.push(listener);
        listener = listener.next;
      }

      return listeners;
    },
    subscribe: function subscribe(callback) {
      var isSubscribed = true;
      var listener = last = {
        callback: callback,
        next: null,
        prev: last
      };

      if (listener.prev) {
        listener.prev.next = listener;
      } else {
        first = listener;
      }

      return function unsubscribe() {
        if (!isSubscribed || first === null) return;
        isSubscribed = false;

        if (listener.next) {
          listener.next.prev = listener.prev;
        } else {
          last = listener.prev;
        }

        if (listener.prev) {
          listener.prev.next = listener.next;
        } else {
          first = listener.next;
        }
      };
    }
  };
}

var Subscription = /*#__PURE__*/function () {
  function Subscription(store, parentSub) {
    this.store = store;
    this.parentSub = parentSub;
    this.unsubscribe = null;
    this.listeners = nullListeners;
    this.handleChangeWrapper = this.handleChangeWrapper.bind(this);
  }

  var _proto = Subscription.prototype;

  _proto.addNestedSub = function addNestedSub(listener) {
    this.trySubscribe();
    return this.listeners.subscribe(listener);
  };

  _proto.notifyNestedSubs = function notifyNestedSubs() {
    this.listeners.notify();
  };

  _proto.handleChangeWrapper = function handleChangeWrapper() {
    if (this.onStateChange) {
      this.onStateChange();
    }
  };

  _proto.isSubscribed = function isSubscribed() {
    return Boolean(this.unsubscribe);
  };

  _proto.trySubscribe = function trySubscribe() {
    if (!this.unsubscribe) {
      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.handleChangeWrapper) : this.store.subscribe(this.handleChangeWrapper);
      this.listeners = createListenerCollection();
    }
  };

  _proto.tryUnsubscribe = function tryUnsubscribe() {
    if (this.unsubscribe) {
      this.unsubscribe();
      this.unsubscribe = null;
      this.listeners.clear();
      this.listeners = nullListeners;
    }
  };

  return Subscription;
}();



/***/ }),

/***/ "./node_modules/react-redux/es/utils/batch.js":
/*!****************************************************!*\
  !*** ./node_modules/react-redux/es/utils/batch.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setBatch": function() { return /* binding */ setBatch; },
/* harmony export */   "getBatch": function() { return /* binding */ getBatch; }
/* harmony export */ });
// Default to a dummy "batch" implementation that just runs the callback
function defaultNoopBatch(callback) {
  callback();
}

var batch = defaultNoopBatch; // Allow injecting another batching function later

var setBatch = function setBatch(newBatch) {
  return batch = newBatch;
}; // Supply a getter just to skip dealing with ESM bindings

var getBatch = function getBatch() {
  return batch;
};

/***/ }),

/***/ "./node_modules/react-redux/es/utils/bindActionCreators.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/bindActionCreators.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ bindActionCreators; }
/* harmony export */ });
function bindActionCreators(actionCreators, dispatch) {
  var boundActionCreators = {};

  var _loop = function _loop(key) {
    var actionCreator = actionCreators[key];

    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = function () {
        return dispatch(actionCreator.apply(void 0, arguments));
      };
    }
  };

  for (var key in actionCreators) {
    _loop(key);
  }

  return boundActionCreators;
}

/***/ }),

/***/ "./node_modules/react-redux/es/utils/isPlainObject.js":
/*!************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/isPlainObject.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ isPlainObject; }
/* harmony export */ });
/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */
function isPlainObject(obj) {
  if (typeof obj !== 'object' || obj === null) return false;
  var proto = Object.getPrototypeOf(obj);
  if (proto === null) return true;
  var baseProto = proto;

  while (Object.getPrototypeOf(baseProto) !== null) {
    baseProto = Object.getPrototypeOf(baseProto);
  }

  return proto === baseProto;
}

/***/ }),

/***/ "./node_modules/react-redux/es/utils/reactBatchedUpdates.js":
/*!******************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/reactBatchedUpdates.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "unstable_batchedUpdates": function() { return /* reexport safe */ react_dom__WEBPACK_IMPORTED_MODULE_0__.unstable_batchedUpdates; }
/* harmony export */ });
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_0__);
/* eslint-disable import/no-unresolved */


/***/ }),

/***/ "./node_modules/react-redux/es/utils/shallowEqual.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-redux/es/utils/shallowEqual.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ shallowEqual; }
/* harmony export */ });
function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual(objA, objB) {
  if (is(objA, objB)) return true;

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);
  if (keysA.length !== keysB.length) return false;

  for (var i = 0; i < keysA.length; i++) {
    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

/***/ }),

/***/ "./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js":
/*!************************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useIsomorphicLayoutEffect": function() { return /* binding */ useIsomorphicLayoutEffect; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
 // React currently throws a warning when using useLayoutEffect on the server.
// To get around it, we can conditionally useEffect on the server (no-op) and
// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store
// subscription callback always has the selector from the latest render commit
// available, otherwise a store update may happen between render and the effect,
// which may cause missed updates; we also must ensure the store subscription
// is created synchronously, otherwise a store update may occur before the
// subscription is created and an inconsistent state may be observed

var useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;

/***/ }),

/***/ "./node_modules/react-redux/es/utils/verifyPlainObject.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/verifyPlainObject.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ verifyPlainObject; }
/* harmony export */ });
/* harmony import */ var _isPlainObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isPlainObject */ "./node_modules/react-redux/es/utils/isPlainObject.js");
/* harmony import */ var _warning__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./warning */ "./node_modules/react-redux/es/utils/warning.js");


function verifyPlainObject(value, displayName, methodName) {
  if (!(0,_isPlainObject__WEBPACK_IMPORTED_MODULE_0__.default)(value)) {
    (0,_warning__WEBPACK_IMPORTED_MODULE_1__.default)(methodName + "() in " + displayName + " must return a plain object. Instead received " + value + ".");
  }
}

/***/ }),

/***/ "./node_modules/react-redux/es/utils/warning.js":
/*!******************************************************!*\
  !*** ./node_modules/react-redux/es/utils/warning.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ warning; }
/* harmony export */ });
/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function warning(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */


  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
    /* eslint-disable no-empty */
  } catch (e) {}
  /* eslint-enable no-empty */

}

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
/** @license React v17.0.2
 * react-jsx-dev-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (true) {
  (function() {
'use strict';

var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _assign = __webpack_require__(/*! object-assign */ "./node_modules/next/dist/build/polyfills/object-assign.js");

// ATTENTION
// When adding new symbols to this file,
// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var REACT_ELEMENT_TYPE = 0xeac7;
var REACT_PORTAL_TYPE = 0xeaca;
exports.Fragment = 0xeacb;
var REACT_STRICT_MODE_TYPE = 0xeacc;
var REACT_PROFILER_TYPE = 0xead2;
var REACT_PROVIDER_TYPE = 0xeacd;
var REACT_CONTEXT_TYPE = 0xeace;
var REACT_FORWARD_REF_TYPE = 0xead0;
var REACT_SUSPENSE_TYPE = 0xead1;
var REACT_SUSPENSE_LIST_TYPE = 0xead8;
var REACT_MEMO_TYPE = 0xead3;
var REACT_LAZY_TYPE = 0xead4;
var REACT_BLOCK_TYPE = 0xead9;
var REACT_SERVER_BLOCK_TYPE = 0xeada;
var REACT_FUNDAMENTAL_TYPE = 0xead5;
var REACT_SCOPE_TYPE = 0xead7;
var REACT_OPAQUE_ID_TYPE = 0xeae0;
var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
var REACT_OFFSCREEN_TYPE = 0xeae2;
var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;

if (typeof Symbol === 'function' && Symbol.for) {
  var symbolFor = Symbol.for;
  REACT_ELEMENT_TYPE = symbolFor('react.element');
  REACT_PORTAL_TYPE = symbolFor('react.portal');
  exports.Fragment = symbolFor('react.fragment');
  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');
  REACT_PROFILER_TYPE = symbolFor('react.profiler');
  REACT_PROVIDER_TYPE = symbolFor('react.provider');
  REACT_CONTEXT_TYPE = symbolFor('react.context');
  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');
  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
  REACT_MEMO_TYPE = symbolFor('react.memo');
  REACT_LAZY_TYPE = symbolFor('react.lazy');
  REACT_BLOCK_TYPE = symbolFor('react.block');
  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
  REACT_SCOPE_TYPE = symbolFor('react.scope');
  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');
  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
}

var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

function error(format) {
  {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }

    printWarning('error', format, args);
  }
}

function printWarning(level, format, args) {
  // When changing this logic, you might want to also
  // update consoleWithStackDev.www.js as well.
  {
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();

    if (stack !== '') {
      format += '%s';
      args = args.concat([stack]);
    }

    var argsWithFormat = args.map(function (item) {
      return '' + item;
    }); // Careful: RN currently depends on this prefix

    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
    // breaks IE9: https://github.com/facebook/react/issues/13610
    // eslint-disable-next-line react-internal/no-production-logging

    Function.prototype.apply.call(console[level], console, argsWithFormat);
  }
}

// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.

var enableScopeAPI = false; // Experimental Create Event Handle API.

function isValidElementType(type) {
  if (typeof type === 'string' || typeof type === 'function') {
    return true;
  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).


  if (type === exports.Fragment || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {
    return true;
  }

  if (typeof type === 'object' && type !== null) {
    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {
      return true;
    }
  }

  return false;
}

function getWrappedName(outerType, innerType, wrapperName) {
  var functionName = innerType.displayName || innerType.name || '';
  return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
}

function getContextName(type) {
  return type.displayName || 'Context';
}

function getComponentName(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case exports.Fragment:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return 'Profiler';

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        var context = type;
        return getContextName(context) + '.Consumer';

      case REACT_PROVIDER_TYPE:
        var provider = type;
        return getContextName(provider._context) + '.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_BLOCK_TYPE:
        return getComponentName(type._render);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            return getComponentName(init(payload));
          } catch (x) {
            return null;
          }
        }
    }
  }

  return null;
}

// Helpers to patch console.logs to avoid logging during side-effect free
// replaying on render function. This currently only patches the object
// lazily which won't cover if the log function was extracted eagerly.
// We could also eagerly patch the method.
var disabledDepth = 0;
var prevLog;
var prevInfo;
var prevWarn;
var prevError;
var prevGroup;
var prevGroupCollapsed;
var prevGroupEnd;

function disabledLog() {}

disabledLog.__reactDisabledLog = true;
function disableLogs() {
  {
    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      prevLog = console.log;
      prevInfo = console.info;
      prevWarn = console.warn;
      prevError = console.error;
      prevGroup = console.group;
      prevGroupCollapsed = console.groupCollapsed;
      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

      var props = {
        configurable: true,
        enumerable: true,
        value: disabledLog,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        info: props,
        log: props,
        warn: props,
        error: props,
        group: props,
        groupCollapsed: props,
        groupEnd: props
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    disabledDepth++;
  }
}
function reenableLogs() {
  {
    disabledDepth--;

    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      var props = {
        configurable: true,
        enumerable: true,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        log: _assign({}, props, {
          value: prevLog
        }),
        info: _assign({}, props, {
          value: prevInfo
        }),
        warn: _assign({}, props, {
          value: prevWarn
        }),
        error: _assign({}, props, {
          value: prevError
        }),
        group: _assign({}, props, {
          value: prevGroup
        }),
        groupCollapsed: _assign({}, props, {
          value: prevGroupCollapsed
        }),
        groupEnd: _assign({}, props, {
          value: prevGroupEnd
        })
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    if (disabledDepth < 0) {
      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
    }
  }
}

var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
var prefix;
function describeBuiltInComponentFrame(name, source, ownerFn) {
  {
    if (prefix === undefined) {
      // Extract the VM specific prefix used by each line.
      try {
        throw Error();
      } catch (x) {
        var match = x.stack.trim().match(/\n( *(at )?)/);
        prefix = match && match[1] || '';
      }
    } // We use the prefix to ensure our stacks line up with native stack frames.


    return '\n' + prefix + name;
  }
}
var reentry = false;
var componentFrameCache;

{
  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
  componentFrameCache = new PossiblyWeakMap();
}

function describeNativeComponentFrame(fn, construct) {
  // If something asked for a stack inside a fake render, it should get ignored.
  if (!fn || reentry) {
    return '';
  }

  {
    var frame = componentFrameCache.get(fn);

    if (frame !== undefined) {
      return frame;
    }
  }

  var control;
  reentry = true;
  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

  Error.prepareStackTrace = undefined;
  var previousDispatcher;

  {
    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
    // for warnings.

    ReactCurrentDispatcher.current = null;
    disableLogs();
  }

  try {
    // This should throw.
    if (construct) {
      // Something should be setting the props in the constructor.
      var Fake = function () {
        throw Error();
      }; // $FlowFixMe


      Object.defineProperty(Fake.prototype, 'props', {
        set: function () {
          // We use a throwing setter instead of frozen or non-writable props
          // because that won't throw in a non-strict mode function.
          throw Error();
        }
      });

      if (typeof Reflect === 'object' && Reflect.construct) {
        // We construct a different control for this case to include any extra
        // frames added by the construct call.
        try {
          Reflect.construct(Fake, []);
        } catch (x) {
          control = x;
        }

        Reflect.construct(fn, [], Fake);
      } else {
        try {
          Fake.call();
        } catch (x) {
          control = x;
        }

        fn.call(Fake.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (x) {
        control = x;
      }

      fn();
    }
  } catch (sample) {
    // This is inlined manually because closure doesn't do it for us.
    if (sample && control && typeof sample.stack === 'string') {
      // This extracts the first frame from the sample that isn't also in the control.
      // Skipping one frame that we assume is the frame that calls the two.
      var sampleLines = sample.stack.split('\n');
      var controlLines = control.stack.split('\n');
      var s = sampleLines.length - 1;
      var c = controlLines.length - 1;

      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
        // We expect at least one stack frame to be shared.
        // Typically this will be the root most one. However, stack frames may be
        // cut off due to maximum stack limits. In this case, one maybe cut off
        // earlier than the other. We assume that the sample is longer or the same
        // and there for cut off earlier. So we should find the root most frame in
        // the sample somewhere in the control.
        c--;
      }

      for (; s >= 1 && c >= 0; s--, c--) {
        // Next we find the first one that isn't the same which should be the
        // frame that called our sample function and the control.
        if (sampleLines[s] !== controlLines[c]) {
          // In V8, the first line is describing the message but other VMs don't.
          // If we're about to return the first line, and the control is also on the same
          // line, that's a pretty good indicator that our sample threw at same line as
          // the control. I.e. before we entered the sample frame. So we ignore this result.
          // This can happen if you passed a class to function component, or non-function.
          if (s !== 1 || c !== 1) {
            do {
              s--;
              c--; // We may still have similar intermediate frames from the construct call.
              // The next one that isn't the same should be our match though.

              if (c < 0 || sampleLines[s] !== controlLines[c]) {
                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at ');

                {
                  if (typeof fn === 'function') {
                    componentFrameCache.set(fn, _frame);
                  }
                } // Return the line we found.


                return _frame;
              }
            } while (s >= 1 && c >= 0);
          }

          break;
        }
      }
    }
  } finally {
    reentry = false;

    {
      ReactCurrentDispatcher.current = previousDispatcher;
      reenableLogs();
    }

    Error.prepareStackTrace = previousPrepareStackTrace;
  } // Fallback to just using the name if we couldn't make it throw.


  var name = fn ? fn.displayName || fn.name : '';
  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';

  {
    if (typeof fn === 'function') {
      componentFrameCache.set(fn, syntheticFrame);
    }
  }

  return syntheticFrame;
}
function describeFunctionComponentFrame(fn, source, ownerFn) {
  {
    return describeNativeComponentFrame(fn, false);
  }
}

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {

  if (type == null) {
    return '';
  }

  if (typeof type === 'function') {
    {
      return describeNativeComponentFrame(type, shouldConstruct(type));
    }
  }

  if (typeof type === 'string') {
    return describeBuiltInComponentFrame(type);
  }

  switch (type) {
    case REACT_SUSPENSE_TYPE:
      return describeBuiltInComponentFrame('Suspense');

    case REACT_SUSPENSE_LIST_TYPE:
      return describeBuiltInComponentFrame('SuspenseList');
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        return describeFunctionComponentFrame(type.render);

      case REACT_MEMO_TYPE:
        // Memo may contain any component type so we recursively resolve it.
        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

      case REACT_BLOCK_TYPE:
        return describeFunctionComponentFrame(type._render);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            // Lazy may contain any component type so we recursively resolve it.
            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
          } catch (x) {}
        }
    }
  }

  return '';
}

var loggedTypeFailures = {};
var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame.setExtraStackFrame(null);
    }
  }
}

function checkPropTypes(typeSpecs, values, location, componentName, element) {
  {
    // $FlowFixMe This is okay but Flow doesn't know it.
    var has = Function.call.bind(Object.prototype.hasOwnProperty);

    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.

        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
        } catch (ex) {
          error$1 = ex;
        }

        if (error$1 && !(error$1 instanceof Error)) {
          setCurrentlyValidatingElement(element);

          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);

          setCurrentlyValidatingElement(null);
        }

        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error$1.message] = true;
          setCurrentlyValidatingElement(element);

          error('Failed %s type: %s', location, error$1.message);

          setCurrentlyValidatingElement(null);
        }
      }
    }
  }
}

var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};
var specialPropKeyWarningShown;
var specialPropRefWarningShown;
var didWarnAboutStringRefs;

{
  didWarnAboutStringRefs = {};
}

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.key !== undefined;
}

function warnIfStringRefCannotBeAutoConverted(config, self) {
  {
    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
      var componentName = getComponentName(ReactCurrentOwner.current.type);

      if (!didWarnAboutStringRefs[componentName]) {
        error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);

        didWarnAboutStringRefs[componentName] = true;
      }
    }
  }
}

function defineKeyPropWarningGetter(props, displayName) {
  {
    var warnAboutAccessingKey = function () {
      if (!specialPropKeyWarningShown) {
        specialPropKeyWarningShown = true;

        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    };

    warnAboutAccessingKey.isReactWarning = true;
    Object.defineProperty(props, 'key', {
      get: warnAboutAccessingKey,
      configurable: true
    });
  }
}

function defineRefPropWarningGetter(props, displayName) {
  {
    var warnAboutAccessingRef = function () {
      if (!specialPropRefWarningShown) {
        specialPropRefWarningShown = true;

        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    };

    warnAboutAccessingRef.isReactWarning = true;
    Object.defineProperty(props, 'ref', {
      get: warnAboutAccessingRef,
      configurable: true
    });
  }
}
/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */


var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,
    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,
    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.

    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    }); // self and source are DEV only properties.

    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    }); // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.

    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });

    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};
/**
 * https://github.com/reactjs/rfcs/pull/107
 * @param {*} type
 * @param {object} props
 * @param {string} key
 */

function jsxDEV(type, config, maybeKey, source, self) {
  {
    var propName; // Reserved names are extracted

    var props = {};
    var key = null;
    var ref = null; // Currently, key can be spread in as a prop. This causes a potential
    // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
    // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
    // but as an intermediary step, we will use jsxDEV for everything except
    // <div {...props} key="Hi" />, because we aren't currently able to tell if
    // key is explicitly declared to be undefined or not.

    if (maybeKey !== undefined) {
      key = '' + maybeKey;
    }

    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    if (hasValidRef(config)) {
      ref = config.ref;
      warnIfStringRefCannotBeAutoConverted(config, self);
    } // Remaining properties are added to a new props object


    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    } // Resolve default props


    if (type && type.defaultProps) {
      var defaultProps = type.defaultProps;

      for (propName in defaultProps) {
        if (props[propName] === undefined) {
          props[propName] = defaultProps[propName];
        }
      }
    }

    if (key || ref) {
      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

      if (key) {
        defineKeyPropWarningGetter(props, displayName);
      }

      if (ref) {
        defineRefPropWarningGetter(props, displayName);
      }
    }

    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
  }
}

var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement$1(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
  }
}

var propTypesMisspellWarningShown;

{
  propTypesMisspellWarningShown = false;
}
/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */

function isValidElement(object) {
  {
    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
  }
}

function getDeclarationErrorAddendum() {
  {
    if (ReactCurrentOwner$1.current) {
      var name = getComponentName(ReactCurrentOwner$1.current.type);

      if (name) {
        return '\n\nCheck the render method of `' + name + '`.';
      }
    }

    return '';
  }
}

function getSourceInfoErrorAddendum(source) {
  {
    if (source !== undefined) {
      var fileName = source.fileName.replace(/^.*[\\\/]/, '');
      var lineNumber = source.lineNumber;
      return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
    }

    return '';
  }
}
/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */


var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  {
    var info = getDeclarationErrorAddendum();

    if (!info) {
      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

      if (parentName) {
        info = "\n\nCheck the top-level render call using <" + parentName + ">.";
      }
    }

    return info;
  }
}
/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */


function validateExplicitKey(element, parentType) {
  {
    if (!element._store || element._store.validated || element.key != null) {
      return;
    }

    element._store.validated = true;
    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
      return;
    }

    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
    // property, it may be the creator of the child that's responsible for
    // assigning it a key.

    var childOwner = '';

    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
      // Give the component that originally created this child.
      childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
    }

    setCurrentlyValidatingElement$1(element);

    error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);

    setCurrentlyValidatingElement$1(null);
  }
}
/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */


function validateChildKeys(node, parentType) {
  {
    if (typeof node !== 'object') {
      return;
    }

    if (Array.isArray(node)) {
      for (var i = 0; i < node.length; i++) {
        var child = node[i];

        if (isValidElement(child)) {
          validateExplicitKey(child, parentType);
        }
      }
    } else if (isValidElement(node)) {
      // This element was passed in a valid location.
      if (node._store) {
        node._store.validated = true;
      }
    } else if (node) {
      var iteratorFn = getIteratorFn(node);

      if (typeof iteratorFn === 'function') {
        // Entry iterators used to provide implicit keys,
        // but now we print a separate warning for them later.
        if (iteratorFn !== node.entries) {
          var iterator = iteratorFn.call(node);
          var step;

          while (!(step = iterator.next()).done) {
            if (isValidElement(step.value)) {
              validateExplicitKey(step.value, parentType);
            }
          }
        }
      }
    }
  }
}
/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */


function validatePropTypes(element) {
  {
    var type = element.type;

    if (type === null || type === undefined || typeof type === 'string') {
      return;
    }

    var propTypes;

    if (typeof type === 'function') {
      propTypes = type.propTypes;
    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
    // Inner props are checked in the reconciler.
    type.$$typeof === REACT_MEMO_TYPE)) {
      propTypes = type.propTypes;
    } else {
      return;
    }

    if (propTypes) {
      // Intentionally inside to avoid triggering lazy initializers:
      var name = getComponentName(type);
      checkPropTypes(propTypes, element.props, 'prop', name, element);
    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:

      var _name = getComponentName(type);

      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
    }

    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
    }
  }
}
/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */


function validateFragmentProps(fragment) {
  {
    var keys = Object.keys(fragment.props);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];

      if (key !== 'children' && key !== 'key') {
        setCurrentlyValidatingElement$1(fragment);

        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);

        setCurrentlyValidatingElement$1(null);
        break;
      }
    }

    if (fragment.ref !== null) {
      setCurrentlyValidatingElement$1(fragment);

      error('Invalid attribute `ref` supplied to `React.Fragment`.');

      setCurrentlyValidatingElement$1(null);
    }
  }
}

function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
  {
    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.

    if (!validType) {
      var info = '';

      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
        info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
      }

      var sourceInfo = getSourceInfoErrorAddendum(source);

      if (sourceInfo) {
        info += sourceInfo;
      } else {
        info += getDeclarationErrorAddendum();
      }

      var typeString;

      if (type === null) {
        typeString = 'null';
      } else if (Array.isArray(type)) {
        typeString = 'array';
      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
        typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
        info = ' Did you accidentally export a JSX literal instead of a component?';
      } else {
        typeString = typeof type;
      }

      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
    }

    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.

    if (element == null) {
      return element;
    } // Skip key warning if the type isn't valid since our key validation logic
    // doesn't expect a non-string/function type and can throw confusing errors.
    // We don't want exception behavior to differ between dev and prod.
    // (Rendering will throw with a helpful message and as soon as the type is
    // fixed, the key warnings will appear.)


    if (validType) {
      var children = props.children;

      if (children !== undefined) {
        if (isStaticChildren) {
          if (Array.isArray(children)) {
            for (var i = 0; i < children.length; i++) {
              validateChildKeys(children[i], type);
            }

            if (Object.freeze) {
              Object.freeze(children);
            }
          } else {
            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');
          }
        } else {
          validateChildKeys(children, type);
        }
      }
    }

    if (type === exports.Fragment) {
      validateFragmentProps(element);
    } else {
      validatePropTypes(element);
    }

    return element;
  }
} // These two functions exist to still get child warnings in dev

var jsxDEV$1 =  jsxWithValidation ;

exports.jsxDEV = jsxDEV$1;
  })();
}


/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js");
}


/***/ }),

/***/ "./node_modules/redux-thunk/es/index.js":
/*!**********************************************!*\
  !*** ./node_modules/redux-thunk/es/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function createThunkMiddleware(extraArgument) {
  return function (_ref) {
    var dispatch = _ref.dispatch,
        getState = _ref.getState;
    return function (next) {
      return function (action) {
        if (typeof action === 'function') {
          return action(dispatch, getState, extraArgument);
        }

        return next(action);
      };
    };
  };
}

var thunk = createThunkMiddleware();
thunk.withExtraArgument = createThunkMiddleware;

/* harmony default export */ __webpack_exports__["default"] = (thunk);

/***/ }),

/***/ "./node_modules/redux/es/redux.js":
/*!****************************************!*\
  !*** ./node_modules/redux/es/redux.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__DO_NOT_USE__ActionTypes": function() { return /* binding */ ActionTypes; },
/* harmony export */   "applyMiddleware": function() { return /* binding */ applyMiddleware; },
/* harmony export */   "bindActionCreators": function() { return /* binding */ bindActionCreators; },
/* harmony export */   "combineReducers": function() { return /* binding */ combineReducers; },
/* harmony export */   "compose": function() { return /* binding */ compose; },
/* harmony export */   "createStore": function() { return /* binding */ createStore; }
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectSpread2 */ "./node_modules/@babel/runtime/helpers/esm/objectSpread2.js");


/**
 * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js
 *
 * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes
 * during build.
 * @param {number} code
 */
function formatProdErrorMessage(code) {
  return "Minified Redux error #" + code + "; visit https://redux.js.org/Errors?code=" + code + " for the full message or " + 'use the non-minified dev environment for full errors. ';
}

// Inlined version of the `symbol-observable` polyfill
var $$observable = (function () {
  return typeof Symbol === 'function' && Symbol.observable || '@@observable';
})();

/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */
var randomString = function randomString() {
  return Math.random().toString(36).substring(7).split('').join('.');
};

var ActionTypes = {
  INIT: "@@redux/INIT" + randomString(),
  REPLACE: "@@redux/REPLACE" + randomString(),
  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
  }
};

/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */
function isPlainObject(obj) {
  if (typeof obj !== 'object' || obj === null) return false;
  var proto = obj;

  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }

  return Object.getPrototypeOf(obj) === proto;
}

// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of
function miniKindOf(val) {
  if (val === void 0) return 'undefined';
  if (val === null) return 'null';
  var type = typeof val;

  switch (type) {
    case 'boolean':
    case 'string':
    case 'number':
    case 'symbol':
    case 'function':
      {
        return type;
      }
  }

  if (Array.isArray(val)) return 'array';
  if (isDate(val)) return 'date';
  if (isError(val)) return 'error';
  var constructorName = ctorName(val);

  switch (constructorName) {
    case 'Symbol':
    case 'Promise':
    case 'WeakMap':
    case 'WeakSet':
    case 'Map':
    case 'Set':
      return constructorName;
  } // other


  return type.slice(8, -1).toLowerCase().replace(/\s/g, '');
}

function ctorName(val) {
  return typeof val.constructor === 'function' ? val.constructor.name : null;
}

function isError(val) {
  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';
}

function isDate(val) {
  if (val instanceof Date) return true;
  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';
}

function kindOf(val) {
  var typeOfVal = typeof val;

  if (true) {
    typeOfVal = miniKindOf(val);
  }

  return typeOfVal;
}

/**
 * Creates a Redux store that holds the state tree.
 * The only way to change the data in the store is to call `dispatch()` on it.
 *
 * There should only be a single store in your app. To specify how different
 * parts of the state tree respond to actions, you may combine several reducers
 * into a single reducer function by using `combineReducers`.
 *
 * @param {Function} reducer A function that returns the next state tree, given
 * the current state tree and the action to handle.
 *
 * @param {any} [preloadedState] The initial state. You may optionally specify it
 * to hydrate the state from the server in universal apps, or to restore a
 * previously serialized user session.
 * If you use `combineReducers` to produce the root reducer function, this must be
 * an object with the same shape as `combineReducers` keys.
 *
 * @param {Function} [enhancer] The store enhancer. You may optionally specify it
 * to enhance the store with third-party capabilities such as middleware,
 * time travel, persistence, etc. The only store enhancer that ships with Redux
 * is `applyMiddleware()`.
 *
 * @returns {Store} A Redux store that lets you read the state, dispatch actions
 * and subscribe to changes.
 */

function createStore(reducer, preloadedState, enhancer) {
  var _ref2;

  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {
    throw new Error( false ? 0 : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');
  }

  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
    enhancer = preloadedState;
    preloadedState = undefined;
  }

  if (typeof enhancer !== 'undefined') {
    if (typeof enhancer !== 'function') {
      throw new Error( false ? 0 : "Expected the enhancer to be a function. Instead, received: '" + kindOf(enhancer) + "'");
    }

    return enhancer(createStore)(reducer, preloadedState);
  }

  if (typeof reducer !== 'function') {
    throw new Error( false ? 0 : "Expected the root reducer to be a function. Instead, received: '" + kindOf(reducer) + "'");
  }

  var currentReducer = reducer;
  var currentState = preloadedState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;
  /**
   * This makes a shallow copy of currentListeners so we can use
   * nextListeners as a temporary list while dispatching.
   *
   * This prevents any bugs around consumers calling
   * subscribe/unsubscribe in the middle of a dispatch.
   */

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }
  /**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */


  function getState() {
    if (isDispatching) {
      throw new Error( false ? 0 : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');
    }

    return currentState;
  }
  /**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */


  function subscribe(listener) {
    if (typeof listener !== 'function') {
      throw new Error( false ? 0 : "Expected the listener to be a function. Instead, received: '" + kindOf(listener) + "'");
    }

    if (isDispatching) {
      throw new Error( false ? 0 : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');
    }

    var isSubscribed = true;
    ensureCanMutateNextListeners();
    nextListeners.push(listener);
    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }

      if (isDispatching) {
        throw new Error( false ? 0 : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');
      }

      isSubscribed = false;
      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
      currentListeners = null;
    };
  }
  /**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */


  function dispatch(action) {
    if (!isPlainObject(action)) {
      throw new Error( false ? 0 : "Actions must be plain objects. Instead, the actual type was: '" + kindOf(action) + "'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.");
    }

    if (typeof action.type === 'undefined') {
      throw new Error( false ? 0 : 'Actions may not have an undefined "type" property. You may have misspelled an action type string constant.');
    }

    if (isDispatching) {
      throw new Error( false ? 0 : 'Reducers may not dispatch actions.');
    }

    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action);
    } finally {
      isDispatching = false;
    }

    var listeners = currentListeners = nextListeners;

    for (var i = 0; i < listeners.length; i++) {
      var listener = listeners[i];
      listener();
    }

    return action;
  }
  /**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */


  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== 'function') {
      throw new Error( false ? 0 : "Expected the nextReducer to be a function. Instead, received: '" + kindOf(nextReducer));
    }

    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.
    // Any reducers that existed in both the new and old rootReducer
    // will receive the previous state. This effectively populates
    // the new state tree with any relevant data from the old one.

    dispatch({
      type: ActionTypes.REPLACE
    });
  }
  /**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/tc39/proposal-observable
   */


  function observable() {
    var _ref;

    var outerSubscribe = subscribe;
    return _ref = {
      /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */
      subscribe: function subscribe(observer) {
        if (typeof observer !== 'object' || observer === null) {
          throw new Error( false ? 0 : "Expected the observer to be an object. Instead, received: '" + kindOf(observer) + "'");
        }

        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }

        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return {
          unsubscribe: unsubscribe
        };
      }
    }, _ref[$$observable] = function () {
      return this;
    }, _ref;
  } // When a store is created, an "INIT" action is dispatched so that every
  // reducer returns their initial state. This effectively populates
  // the initial state tree.


  dispatch({
    type: ActionTypes.INIT
  });
  return _ref2 = {
    dispatch: dispatch,
    subscribe: subscribe,
    getState: getState,
    replaceReducer: replaceReducer
  }, _ref2[$$observable] = observable, _ref2;
}

/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function warning(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */


  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
  } catch (e) {} // eslint-disable-line no-empty

}

function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
  var reducerKeys = Object.keys(reducers);
  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

  if (reducerKeys.length === 0) {
    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
  }

  if (!isPlainObject(inputState)) {
    return "The " + argumentName + " has unexpected type of \"" + kindOf(inputState) + "\". Expected argument to be an object with the following " + ("keys: \"" + reducerKeys.join('", "') + "\"");
  }

  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
  });
  unexpectedKeys.forEach(function (key) {
    unexpectedKeyCache[key] = true;
  });
  if (action && action.type === ActionTypes.REPLACE) return;

  if (unexpectedKeys.length > 0) {
    return "Unexpected " + (unexpectedKeys.length > 1 ? 'keys' : 'key') + " " + ("\"" + unexpectedKeys.join('", "') + "\" found in " + argumentName + ". ") + "Expected to find one of the known reducer keys instead: " + ("\"" + reducerKeys.join('", "') + "\". Unexpected keys will be ignored.");
  }
}

function assertReducerShape(reducers) {
  Object.keys(reducers).forEach(function (key) {
    var reducer = reducers[key];
    var initialState = reducer(undefined, {
      type: ActionTypes.INIT
    });

    if (typeof initialState === 'undefined') {
      throw new Error( false ? 0 : "The slice reducer for key \"" + key + "\" returned undefined during initialization. " + "If the state passed to the reducer is undefined, you must " + "explicitly return the initial state. The initial state may " + "not be undefined. If you don't want to set a value for this reducer, " + "you can use null instead of undefined.");
    }

    if (typeof reducer(undefined, {
      type: ActionTypes.PROBE_UNKNOWN_ACTION()
    }) === 'undefined') {
      throw new Error( false ? 0 : "The slice reducer for key \"" + key + "\" returned undefined when probed with a random type. " + ("Don't try to handle '" + ActionTypes.INIT + "' or other actions in \"redux/*\" ") + "namespace. They are considered private. Instead, you must return the " + "current state for any unknown actions, unless it is undefined, " + "in which case you must return the initial state, regardless of the " + "action type. The initial state may not be undefined, but can be null.");
    }
  });
}
/**
 * Turns an object whose values are different reducer functions, into a single
 * reducer function. It will call every child reducer, and gather their results
 * into a single state object, whose keys correspond to the keys of the passed
 * reducer functions.
 *
 * @param {Object} reducers An object whose values correspond to different
 * reducer functions that need to be combined into one. One handy way to obtain
 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
 * undefined for any action. Instead, they should return their initial state
 * if the state passed to them was undefined, and the current state for any
 * unrecognized action.
 *
 * @returns {Function} A reducer function that invokes every reducer inside the
 * passed object, and builds a state object with the same shape.
 */


function combineReducers(reducers) {
  var reducerKeys = Object.keys(reducers);
  var finalReducers = {};

  for (var i = 0; i < reducerKeys.length; i++) {
    var key = reducerKeys[i];

    if (true) {
      if (typeof reducers[key] === 'undefined') {
        warning("No reducer provided for key \"" + key + "\"");
      }
    }

    if (typeof reducers[key] === 'function') {
      finalReducers[key] = reducers[key];
    }
  }

  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same
  // keys multiple times.

  var unexpectedKeyCache;

  if (true) {
    unexpectedKeyCache = {};
  }

  var shapeAssertionError;

  try {
    assertReducerShape(finalReducers);
  } catch (e) {
    shapeAssertionError = e;
  }

  return function combination(state, action) {
    if (state === void 0) {
      state = {};
    }

    if (shapeAssertionError) {
      throw shapeAssertionError;
    }

    if (true) {
      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);

      if (warningMessage) {
        warning(warningMessage);
      }
    }

    var hasChanged = false;
    var nextState = {};

    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
      var _key = finalReducerKeys[_i];
      var reducer = finalReducers[_key];
      var previousStateForKey = state[_key];
      var nextStateForKey = reducer(previousStateForKey, action);

      if (typeof nextStateForKey === 'undefined') {
        var actionType = action && action.type;
        throw new Error( false ? 0 : "When called with an action of type " + (actionType ? "\"" + String(actionType) + "\"" : '(unknown type)') + ", the slice reducer for key \"" + _key + "\" returned undefined. " + "To ignore an action, you must explicitly return the previous state. " + "If you want this reducer to hold no value, you can return null instead of undefined.");
      }

      nextState[_key] = nextStateForKey;
      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
    }

    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;
    return hasChanged ? nextState : state;
  };
}

function bindActionCreator(actionCreator, dispatch) {
  return function () {
    return dispatch(actionCreator.apply(this, arguments));
  };
}
/**
 * Turns an object whose values are action creators, into an object with the
 * same keys, but with every function wrapped into a `dispatch` call so they
 * may be invoked directly. This is just a convenience method, as you can call
 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
 *
 * For convenience, you can also pass an action creator as the first argument,
 * and get a dispatch wrapped function in return.
 *
 * @param {Function|Object} actionCreators An object whose values are action
 * creator functions. One handy way to obtain it is to use ES6 `import * as`
 * syntax. You may also pass a single function.
 *
 * @param {Function} dispatch The `dispatch` function available on your Redux
 * store.
 *
 * @returns {Function|Object} The object mimicking the original object, but with
 * every action creator wrapped into the `dispatch` call. If you passed a
 * function as `actionCreators`, the return value will also be a single
 * function.
 */


function bindActionCreators(actionCreators, dispatch) {
  if (typeof actionCreators === 'function') {
    return bindActionCreator(actionCreators, dispatch);
  }

  if (typeof actionCreators !== 'object' || actionCreators === null) {
    throw new Error( false ? 0 : "bindActionCreators expected an object or a function, but instead received: '" + kindOf(actionCreators) + "'. " + "Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?");
  }

  var boundActionCreators = {};

  for (var key in actionCreators) {
    var actionCreator = actionCreators[key];

    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
  }

  return boundActionCreators;
}

/**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */
function compose() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  }

  if (funcs.length === 1) {
    return funcs[0];
  }

  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(void 0, arguments));
    };
  });
}

/**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */

function applyMiddleware() {
  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }

  return function (createStore) {
    return function () {
      var store = createStore.apply(void 0, arguments);

      var _dispatch = function dispatch() {
        throw new Error( false ? 0 : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');
      };

      var middlewareAPI = {
        getState: store.getState,
        dispatch: function dispatch() {
          return _dispatch.apply(void 0, arguments);
        }
      };
      var chain = middlewares.map(function (middleware) {
        return middleware(middlewareAPI);
      });
      _dispatch = compose.apply(void 0, chain)(store.dispatch);
      return (0,_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.default)((0,_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__.default)({}, store), {}, {
        dispatch: _dispatch
      });
    };
  };
}

/*
 * This is a dummy function to check if the function name has been altered by minification.
 * If the function has been minified and NODE_ENV !== 'production', warn the user.
 */

function isCrushed() {}

if ( true && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {
  warning('You are currently using minified code outside of NODE_ENV === "production". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');
}




/***/ }),

/***/ "./node_modules/reselect/es/index.js":
/*!*******************************************!*\
  !*** ./node_modules/reselect/es/index.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "defaultMemoize": function() { return /* binding */ defaultMemoize; },
/* harmony export */   "createSelectorCreator": function() { return /* binding */ createSelectorCreator; },
/* harmony export */   "createSelector": function() { return /* binding */ createSelector; },
/* harmony export */   "createStructuredSelector": function() { return /* binding */ createStructuredSelector; }
/* harmony export */ });
function defaultEqualityCheck(a, b) {
  return a === b;
}

function areArgumentsShallowlyEqual(equalityCheck, prev, next) {
  if (prev === null || next === null || prev.length !== next.length) {
    return false;
  }

  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.
  var length = prev.length;
  for (var i = 0; i < length; i++) {
    if (!equalityCheck(prev[i], next[i])) {
      return false;
    }
  }

  return true;
}

function defaultMemoize(func) {
  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;

  var lastArgs = null;
  var lastResult = null;
  // we reference arguments instead of spreading them for performance reasons
  return function () {
    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {
      // apply arguments instead of spreading for performance.
      lastResult = func.apply(null, arguments);
    }

    lastArgs = arguments;
    return lastResult;
  };
}

function getDependencies(funcs) {
  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;

  if (!dependencies.every(function (dep) {
    return typeof dep === 'function';
  })) {
    var dependencyTypes = dependencies.map(function (dep) {
      return typeof dep;
    }).join(', ');
    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));
  }

  return dependencies;
}

function createSelectorCreator(memoize) {
  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    memoizeOptions[_key - 1] = arguments[_key];
  }

  return function () {
    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      funcs[_key2] = arguments[_key2];
    }

    var recomputations = 0;
    var resultFunc = funcs.pop();
    var dependencies = getDependencies(funcs);

    var memoizedResultFunc = memoize.apply(undefined, [function () {
      recomputations++;
      // apply arguments instead of spreading for performance.
      return resultFunc.apply(null, arguments);
    }].concat(memoizeOptions));

    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.
    var selector = memoize(function () {
      var params = [];
      var length = dependencies.length;

      for (var i = 0; i < length; i++) {
        // apply arguments instead of spreading and mutate a local list of params for performance.
        params.push(dependencies[i].apply(null, arguments));
      }

      // apply arguments instead of spreading for performance.
      return memoizedResultFunc.apply(null, params);
    });

    selector.resultFunc = resultFunc;
    selector.dependencies = dependencies;
    selector.recomputations = function () {
      return recomputations;
    };
    selector.resetRecomputations = function () {
      return recomputations = 0;
    };
    return selector;
  };
}

var createSelector = createSelectorCreator(defaultMemoize);

function createStructuredSelector(selectors) {
  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;

  if (typeof selectors !== 'object') {
    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));
  }
  var objectKeys = Object.keys(selectors);
  return selectorCreator(objectKeys.map(function (key) {
    return selectors[key];
  }), function () {
    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      values[_key3] = arguments[_key3];
    }

    return values.reduce(function (composition, value, index) {
      composition[objectKeys[index]] = value;
      return composition;
    }, {});
  });
}

/***/ }),

/***/ "./node_modules/universal-cookie/es6/Cookies.js":
/*!******************************************************!*\
  !*** ./node_modules/universal-cookie/es6/Cookies.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cookie */ "./node_modules/cookie/index.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ "./node_modules/universal-cookie/es6/utils.js");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};


var Cookies = /** @class */ (function () {
    function Cookies(cookies, options) {
        var _this = this;
        this.changeListeners = [];
        this.HAS_DOCUMENT_COOKIE = false;
        this.cookies = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.parseCookies)(cookies, options);
        new Promise(function () {
            _this.HAS_DOCUMENT_COOKIE = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.hasDocumentCookie)();
        }).catch(function () { });
    }
    Cookies.prototype._updateBrowserValues = function (parseOptions) {
        if (!this.HAS_DOCUMENT_COOKIE) {
            return;
        }
        this.cookies = cookie__WEBPACK_IMPORTED_MODULE_0__.parse(document.cookie, parseOptions);
    };
    Cookies.prototype._emitChange = function (params) {
        for (var i = 0; i < this.changeListeners.length; ++i) {
            this.changeListeners[i](params);
        }
    };
    Cookies.prototype.get = function (name, options, parseOptions) {
        if (options === void 0) { options = {}; }
        this._updateBrowserValues(parseOptions);
        return (0,_utils__WEBPACK_IMPORTED_MODULE_1__.readCookie)(this.cookies[name], options);
    };
    Cookies.prototype.getAll = function (options, parseOptions) {
        if (options === void 0) { options = {}; }
        this._updateBrowserValues(parseOptions);
        var result = {};
        for (var name_1 in this.cookies) {
            result[name_1] = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.readCookie)(this.cookies[name_1], options);
        }
        return result;
    };
    Cookies.prototype.set = function (name, value, options) {
        var _a;
        if (typeof value === 'object') {
            value = JSON.stringify(value);
        }
        this.cookies = __assign(__assign({}, this.cookies), (_a = {}, _a[name] = value, _a));
        if (this.HAS_DOCUMENT_COOKIE) {
            document.cookie = cookie__WEBPACK_IMPORTED_MODULE_0__.serialize(name, value, options);
        }
        this._emitChange({ name: name, value: value, options: options });
    };
    Cookies.prototype.remove = function (name, options) {
        var finalOptions = (options = __assign(__assign({}, options), { expires: new Date(1970, 1, 1, 0, 0, 1), maxAge: 0 }));
        this.cookies = __assign({}, this.cookies);
        delete this.cookies[name];
        if (this.HAS_DOCUMENT_COOKIE) {
            document.cookie = cookie__WEBPACK_IMPORTED_MODULE_0__.serialize(name, '', finalOptions);
        }
        this._emitChange({ name: name, value: undefined, options: options });
    };
    Cookies.prototype.addChangeListener = function (callback) {
        this.changeListeners.push(callback);
    };
    Cookies.prototype.removeChangeListener = function (callback) {
        var idx = this.changeListeners.indexOf(callback);
        if (idx >= 0) {
            this.changeListeners.splice(idx, 1);
        }
    };
    return Cookies;
}());
/* harmony default export */ __webpack_exports__["default"] = (Cookies);


/***/ }),

/***/ "./node_modules/universal-cookie/es6/index.js":
/*!****************************************************!*\
  !*** ./node_modules/universal-cookie/es6/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Cookies */ "./node_modules/universal-cookie/es6/Cookies.js");

/* harmony default export */ __webpack_exports__["default"] = (_Cookies__WEBPACK_IMPORTED_MODULE_0__.default);


/***/ }),

/***/ "./node_modules/universal-cookie/es6/utils.js":
/*!****************************************************!*\
  !*** ./node_modules/universal-cookie/es6/utils.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hasDocumentCookie": function() { return /* binding */ hasDocumentCookie; },
/* harmony export */   "cleanCookies": function() { return /* binding */ cleanCookies; },
/* harmony export */   "parseCookies": function() { return /* binding */ parseCookies; },
/* harmony export */   "isParsingCookie": function() { return /* binding */ isParsingCookie; },
/* harmony export */   "readCookie": function() { return /* binding */ readCookie; }
/* harmony export */ });
/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cookie */ "./node_modules/cookie/index.js");

function hasDocumentCookie() {
    // Can we get/set cookies on document.cookie?
    return typeof document === 'object' && typeof document.cookie === 'string';
}
function cleanCookies() {
    document.cookie.split(';').forEach(function (c) {
        document.cookie = c
            .replace(/^ +/, '')
            .replace(/=.*/, '=;expires=' + new Date().toUTCString() + ';path=/');
    });
}
function parseCookies(cookies, options) {
    if (typeof cookies === 'string') {
        return cookie__WEBPACK_IMPORTED_MODULE_0__.parse(cookies, options);
    }
    else if (typeof cookies === 'object' && cookies !== null) {
        return cookies;
    }
    else {
        return {};
    }
}
function isParsingCookie(value, doNotParse) {
    if (typeof doNotParse === 'undefined') {
        // We guess if the cookie start with { or [, it has been serialized
        doNotParse =
            !value || (value[0] !== '{' && value[0] !== '[' && value[0] !== '"');
    }
    return !doNotParse;
}
function readCookie(value, options) {
    if (options === void 0) { options = {}; }
    var cleanValue = cleanupCookieValue(value);
    if (isParsingCookie(cleanValue, options.doNotParse)) {
        try {
            return JSON.parse(cleanValue);
        }
        catch (e) {
            // At least we tried
        }
    }
    // Ignore clean value if we failed the deserialization
    // It is not relevant anymore to trim those values
    return value;
}
function cleanupCookieValue(value) {
    // express prepend j: before serializing a cookie
    if (value && value[0] === 'j' && value[1] === ':') {
        return value.substr(2);
    }
    return value;
}


/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ // runtime can't be in strict mode because a global variable is assign and maybe created.
/******/ 
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js!"), __webpack_exec__("./node_modules/next/dist/client/router.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,